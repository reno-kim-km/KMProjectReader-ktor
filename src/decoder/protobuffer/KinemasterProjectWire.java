// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kinemaster_project_wire.proto

package decoder.protobuffer;

public final class KinemasterProjectWire {
  private KinemasterProjectWire() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface KMProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:KMProto)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code KMProto}
   */
  public static final class KMProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:KMProto)
      KMProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use KMProto.newBuilder() to construct.
    private KMProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KMProto() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new KMProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private KMProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              decoder.protobuffer.KinemasterProjectWire.KMProto.class, decoder.protobuffer.KinemasterProjectWire.KMProto.Builder.class);
    }

    /**
     * Protobuf enum {@code KMProto.Platform}
     */
    public enum Platform
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PLATFORM_IOS = 1;</code>
       */
      PLATFORM_IOS(1),
      /**
       * <code>PLATFORM_ANDROID = 2;</code>
       */
      PLATFORM_ANDROID(2),
      ;

      /**
       * <code>PLATFORM_IOS = 1;</code>
       */
      public static final int PLATFORM_IOS_VALUE = 1;
      /**
       * <code>PLATFORM_ANDROID = 2;</code>
       */
      public static final int PLATFORM_ANDROID_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Platform valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Platform forNumber(int value) {
        switch (value) {
          case 1: return PLATFORM_IOS;
          case 2: return PLATFORM_ANDROID;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Platform>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Platform> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Platform>() {
              public Platform findValueByNumber(int number) {
                return Platform.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return decoder.protobuffer.KinemasterProjectWire.KMProto.getDescriptor().getEnumTypes().get(0);
      }

      private static final Platform[] VALUES = values();

      public static Platform valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Platform(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:KMProto.Platform)
    }

    public interface KMProjectOrBuilder extends
        // @@protoc_insertion_point(interface_extends:KMProto.KMProject)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 timeline_format_version = 100;</code>
       * @return Whether the timelineFormatVersion field is set.
       */
      boolean hasTimelineFormatVersion();
      /**
       * <code>optional int32 timeline_format_version = 100;</code>
       * @return The timelineFormatVersion.
       */
      int getTimelineFormatVersion();

      /**
       * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
       */
      java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem> 
          getPrimaryItemsList();
      /**
       * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
       */
      decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem getPrimaryItems(int index);
      /**
       * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
       */
      int getPrimaryItemsCount();
      /**
       * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
       */
      java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder> 
          getPrimaryItemsOrBuilderList();
      /**
       * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
       */
      decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder getPrimaryItemsOrBuilder(
          int index);

      /**
       * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
       */
      java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem> 
          getSecondaryItemsList();
      /**
       * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
       */
      decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem getSecondaryItems(int index);
      /**
       * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
       */
      int getSecondaryItemsCount();
      /**
       * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
       */
      java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder> 
          getSecondaryItemsOrBuilderList();
      /**
       * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
       */
      decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder getSecondaryItemsOrBuilder(
          int index);

      /**
       * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
       */
      java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track> 
          getTracksList();
      /**
       * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
       */
      decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track getTracks(int index);
      /**
       * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
       */
      int getTracksCount();
      /**
       * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
       */
      java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TrackOrBuilder> 
          getTracksOrBuilderList();
      /**
       * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
       */
      decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TrackOrBuilder getTracksOrBuilder(
          int index);

      /**
       * <code>repeated uint32 bookmarks = 103 [packed = true];</code>
       * @return A list containing the bookmarks.
       */
      java.util.List<java.lang.Integer> getBookmarksList();
      /**
       * <code>repeated uint32 bookmarks = 103 [packed = true];</code>
       * @return The count of bookmarks.
       */
      int getBookmarksCount();
      /**
       * <code>repeated uint32 bookmarks = 103 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The bookmarks at the given index.
       */
      int getBookmarks(int index);

      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional int32 recent_scroll_time = 109;</code>
       * @return Whether the recentScrollTime field is set.
       */
      boolean hasRecentScrollTime();
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional int32 recent_scroll_time = 109;</code>
       * @return The recentScrollTime.
       */
      int getRecentScrollTime();

      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional .KMProto.KMProject.AspectRatio project_ratio = 111;</code>
       * @return Whether the projectRatio field is set.
       */
      boolean hasProjectRatio();
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional .KMProto.KMProject.AspectRatio project_ratio = 111;</code>
       * @return The projectRatio.
       */
      decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AspectRatio getProjectRatio();

      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional float project_audio_fade_in_time = 112;</code>
       * @return Whether the projectAudioFadeInTime field is set.
       */
      boolean hasProjectAudioFadeInTime();
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional float project_audio_fade_in_time = 112;</code>
       * @return The projectAudioFadeInTime.
       */
      float getProjectAudioFadeInTime();

      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional float project_audio_fade_out_time = 113;</code>
       * @return Whether the projectAudioFadeOutTime field is set.
       */
      boolean hasProjectAudioFadeOutTime();
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional float project_audio_fade_out_time = 113;</code>
       * @return The projectAudioFadeOutTime.
       */
      float getProjectAudioFadeOutTime();

      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional bool is_project_audio_fade_in_on = 114;</code>
       * @return Whether the isProjectAudioFadeInOn field is set.
       */
      boolean hasIsProjectAudioFadeInOn();
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional bool is_project_audio_fade_in_on = 114;</code>
       * @return The isProjectAudioFadeInOn.
       */
      boolean getIsProjectAudioFadeInOn();

      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional bool is_project_audio_fade_out_on = 115;</code>
       * @return Whether the isProjectAudioFadeOutOn field is set.
       */
      boolean hasIsProjectAudioFadeOutOn();
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional bool is_project_audio_fade_out_on = 115;</code>
       * @return The isProjectAudioFadeOutOn.
       */
      boolean getIsProjectAudioFadeOutOn();

      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional float project_video_fade_in_time = 120;</code>
       * @return Whether the projectVideoFadeInTime field is set.
       */
      boolean hasProjectVideoFadeInTime();
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional float project_video_fade_in_time = 120;</code>
       * @return The projectVideoFadeInTime.
       */
      float getProjectVideoFadeInTime();

      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional float project_video_fade_out_time = 121;</code>
       * @return Whether the projectVideoFadeOutTime field is set.
       */
      boolean hasProjectVideoFadeOutTime();
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional float project_video_fade_out_time = 121;</code>
       * @return The projectVideoFadeOutTime.
       */
      float getProjectVideoFadeOutTime();

      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional bool is_project_video_fade_in_on = 122;</code>
       * @return Whether the isProjectVideoFadeInOn field is set.
       */
      boolean hasIsProjectVideoFadeInOn();
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional bool is_project_video_fade_in_on = 122;</code>
       * @return The isProjectVideoFadeInOn.
       */
      boolean getIsProjectVideoFadeInOn();

      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional bool is_project_video_fade_out_on = 123;</code>
       * @return Whether the isProjectVideoFadeOutOn field is set.
       */
      boolean hasIsProjectVideoFadeOutOn();
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional bool is_project_video_fade_out_on = 123;</code>
       * @return The isProjectVideoFadeOutOn.
       */
      boolean getIsProjectVideoFadeOutOn();

      /**
       * <code>optional int32 project_default_img_duration = 124;</code>
       * @return Whether the projectDefaultImgDuration field is set.
       */
      boolean hasProjectDefaultImgDuration();
      /**
       * <code>optional int32 project_default_img_duration = 124;</code>
       * @return The projectDefaultImgDuration.
       */
      int getProjectDefaultImgDuration();

      /**
       * <code>optional int32 project_default_layer_duration = 125;</code>
       * @return Whether the projectDefaultLayerDuration field is set.
       */
      boolean hasProjectDefaultLayerDuration();
      /**
       * <code>optional int32 project_default_layer_duration = 125;</code>
       * @return The projectDefaultLayerDuration.
       */
      int getProjectDefaultLayerDuration();

      /**
       * <code>optional string project_default_img_crop_mode = 126;</code>
       * @return Whether the projectDefaultImgCropMode field is set.
       */
      boolean hasProjectDefaultImgCropMode();
      /**
       * <code>optional string project_default_img_crop_mode = 126;</code>
       * @return The projectDefaultImgCropMode.
       */
      java.lang.String getProjectDefaultImgCropMode();
      /**
       * <code>optional string project_default_img_crop_mode = 126;</code>
       * @return The bytes for projectDefaultImgCropMode.
       */
      com.google.protobuf.ByteString
          getProjectDefaultImgCropModeBytes();

      /**
       * <code>optional bool project_auto_master = 127;</code>
       * @return Whether the projectAutoMaster field is set.
       */
      boolean hasProjectAutoMaster();
      /**
       * <code>optional bool project_auto_master = 127;</code>
       * @return The projectAutoMaster.
       */
      boolean getProjectAutoMaster();

      /**
       * <code>optional int32 project_master_volume = 128;</code>
       * @return Whether the projectMasterVolume field is set.
       */
      boolean hasProjectMasterVolume();
      /**
       * <code>optional int32 project_master_volume = 128;</code>
       * @return The projectMasterVolume.
       */
      int getProjectMasterVolume();

      /**
       * <code>optional int32 project_resolution_setting = 129;</code>
       * @return Whether the projectResolutionSetting field is set.
       */
      boolean hasProjectResolutionSetting();
      /**
       * <code>optional int32 project_resolution_setting = 129;</code>
       * @return The projectResolutionSetting.
       */
      int getProjectResolutionSetting();

      /**
       * <code>optional int32 project_frame_rate = 130;</code>
       * @return Whether the projectFrameRate field is set.
       */
      boolean hasProjectFrameRate();
      /**
       * <code>optional int32 project_frame_rate = 130;</code>
       * @return The projectFrameRate.
       */
      int getProjectFrameRate();

      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional int32 project_default_img_crop_mode_ios = 131;</code>
       * @return Whether the projectDefaultImgCropModeIos field is set.
       */
      boolean hasProjectDefaultImgCropModeIos();
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional int32 project_default_img_crop_mode_ios = 131;</code>
       * @return The projectDefaultImgCropModeIos.
       */
      int getProjectDefaultImgCropModeIos();

      /**
       * <code>optional int32 project_capability_mode = 132;</code>
       * @return Whether the projectCapabilityMode field is set.
       */
      boolean hasProjectCapabilityMode();
      /**
       * <code>optional int32 project_capability_mode = 132;</code>
       * @return The projectCapabilityMode.
       */
      int getProjectCapabilityMode();

      /**
       * <code>optional int32 aspect_ratio_width = 133;</code>
       * @return Whether the aspectRatioWidth field is set.
       */
      boolean hasAspectRatioWidth();
      /**
       * <code>optional int32 aspect_ratio_width = 133;</code>
       * @return The aspectRatioWidth.
       */
      int getAspectRatioWidth();

      /**
       * <code>optional int32 aspect_ratio_height = 134;</code>
       * @return Whether the aspectRatioHeight field is set.
       */
      boolean hasAspectRatioHeight();
      /**
       * <code>optional int32 aspect_ratio_height = 134;</code>
       * @return The aspectRatioHeight.
       */
      int getAspectRatioHeight();

      /**
       * <pre>
       * new for project share
       * </pre>
       *
       * <code>optional .KMProto.KMProject.Fade audio_fade = 135;</code>
       * @return Whether the audioFade field is set.
       */
      boolean hasAudioFade();
      /**
       * <pre>
       * new for project share
       * </pre>
       *
       * <code>optional .KMProto.KMProject.Fade audio_fade = 135;</code>
       * @return The audioFade.
       */
      decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade getAudioFade();
      /**
       * <pre>
       * new for project share
       * </pre>
       *
       * <code>optional .KMProto.KMProject.Fade audio_fade = 135;</code>
       */
      decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.FadeOrBuilder getAudioFadeOrBuilder();

      /**
       * <code>optional .KMProto.KMProject.Fade video_fade = 136;</code>
       * @return Whether the videoFade field is set.
       */
      boolean hasVideoFade();
      /**
       * <code>optional .KMProto.KMProject.Fade video_fade = 136;</code>
       * @return The videoFade.
       */
      decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade getVideoFade();
      /**
       * <code>optional .KMProto.KMProject.Fade video_fade = 136;</code>
       */
      decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.FadeOrBuilder getVideoFadeOrBuilder();

      /**
       * <code>optional int32 project_default_transition_duration = 137;</code>
       * @return Whether the projectDefaultTransitionDuration field is set.
       */
      boolean hasProjectDefaultTransitionDuration();
      /**
       * <code>optional int32 project_default_transition_duration = 137;</code>
       * @return The projectDefaultTransitionDuration.
       */
      int getProjectDefaultTransitionDuration();
    }
    /**
     * Protobuf type {@code KMProto.KMProject}
     */
    public static final class KMProject extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:KMProto.KMProject)
        KMProjectOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use KMProject.newBuilder() to construct.
      private KMProject(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private KMProject() {
        primaryItems_ = java.util.Collections.emptyList();
        secondaryItems_ = java.util.Collections.emptyList();
        tracks_ = java.util.Collections.emptyList();
        bookmarks_ = emptyIntList();
        projectRatio_ = 1;
        projectDefaultImgCropMode_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new KMProject();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private KMProject(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                  primaryItems_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem>();
                  mutable_bitField0_ |= 0x00000002;
                }
                primaryItems_.add(
                    input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.PARSER, extensionRegistry));
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                  secondaryItems_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem>();
                  mutable_bitField0_ |= 0x00000004;
                }
                secondaryItems_.add(
                    input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.PARSER, extensionRegistry));
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                  tracks_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track>();
                  mutable_bitField0_ |= 0x00000008;
                }
                tracks_.add(
                    input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track.PARSER, extensionRegistry));
                break;
              }
              case 800: {
                bitField0_ |= 0x00000001;
                timelineFormatVersion_ = input.readInt32();
                break;
              }
              case 824: {
                if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                  bookmarks_ = newIntList();
                  mutable_bitField0_ |= 0x00000010;
                }
                bookmarks_.addInt(input.readUInt32());
                break;
              }
              case 826: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000010) != 0) && input.getBytesUntilLimit() > 0) {
                  bookmarks_ = newIntList();
                  mutable_bitField0_ |= 0x00000010;
                }
                while (input.getBytesUntilLimit() > 0) {
                  bookmarks_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 872: {
                bitField0_ |= 0x00000002;
                recentScrollTime_ = input.readInt32();
                break;
              }
              case 888: {
                int rawValue = input.readEnum();
                  @SuppressWarnings("deprecation")
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AspectRatio value = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AspectRatio.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(111, rawValue);
                } else {
                  bitField0_ |= 0x00000004;
                  projectRatio_ = rawValue;
                }
                break;
              }
              case 901: {
                bitField0_ |= 0x00000008;
                projectAudioFadeInTime_ = input.readFloat();
                break;
              }
              case 909: {
                bitField0_ |= 0x00000010;
                projectAudioFadeOutTime_ = input.readFloat();
                break;
              }
              case 912: {
                bitField0_ |= 0x00000020;
                isProjectAudioFadeInOn_ = input.readBool();
                break;
              }
              case 920: {
                bitField0_ |= 0x00000040;
                isProjectAudioFadeOutOn_ = input.readBool();
                break;
              }
              case 965: {
                bitField0_ |= 0x00000080;
                projectVideoFadeInTime_ = input.readFloat();
                break;
              }
              case 973: {
                bitField0_ |= 0x00000100;
                projectVideoFadeOutTime_ = input.readFloat();
                break;
              }
              case 976: {
                bitField0_ |= 0x00000200;
                isProjectVideoFadeInOn_ = input.readBool();
                break;
              }
              case 984: {
                bitField0_ |= 0x00000400;
                isProjectVideoFadeOutOn_ = input.readBool();
                break;
              }
              case 992: {
                bitField0_ |= 0x00000800;
                projectDefaultImgDuration_ = input.readInt32();
                break;
              }
              case 1000: {
                bitField0_ |= 0x00001000;
                projectDefaultLayerDuration_ = input.readInt32();
                break;
              }
              case 1010: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00002000;
                projectDefaultImgCropMode_ = bs;
                break;
              }
              case 1016: {
                bitField0_ |= 0x00004000;
                projectAutoMaster_ = input.readBool();
                break;
              }
              case 1024: {
                bitField0_ |= 0x00008000;
                projectMasterVolume_ = input.readInt32();
                break;
              }
              case 1032: {
                bitField0_ |= 0x00010000;
                projectResolutionSetting_ = input.readInt32();
                break;
              }
              case 1040: {
                bitField0_ |= 0x00020000;
                projectFrameRate_ = input.readInt32();
                break;
              }
              case 1048: {
                bitField0_ |= 0x00040000;
                projectDefaultImgCropModeIos_ = input.readInt32();
                break;
              }
              case 1056: {
                bitField0_ |= 0x00080000;
                projectCapabilityMode_ = input.readInt32();
                break;
              }
              case 1064: {
                bitField0_ |= 0x00100000;
                aspectRatioWidth_ = input.readInt32();
                break;
              }
              case 1072: {
                bitField0_ |= 0x00200000;
                aspectRatioHeight_ = input.readInt32();
                break;
              }
              case 1082: {
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.Builder subBuilder = null;
                if (((bitField0_ & 0x00400000) != 0)) {
                  subBuilder = audioFade_.toBuilder();
                }
                audioFade_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(audioFade_);
                  audioFade_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00400000;
                break;
              }
              case 1090: {
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.Builder subBuilder = null;
                if (((bitField0_ & 0x00800000) != 0)) {
                  subBuilder = videoFade_.toBuilder();
                }
                videoFade_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(videoFade_);
                  videoFade_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00800000;
                break;
              }
              case 1096: {
                bitField0_ |= 0x01000000;
                projectDefaultTransitionDuration_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) != 0)) {
            primaryItems_ = java.util.Collections.unmodifiableList(primaryItems_);
          }
          if (((mutable_bitField0_ & 0x00000004) != 0)) {
            secondaryItems_ = java.util.Collections.unmodifiableList(secondaryItems_);
          }
          if (((mutable_bitField0_ & 0x00000008) != 0)) {
            tracks_ = java.util.Collections.unmodifiableList(tracks_);
          }
          if (((mutable_bitField0_ & 0x00000010) != 0)) {
            bookmarks_.makeImmutable(); // C
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Builder.class);
      }

      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * Protobuf enum {@code KMProto.KMProject.AspectRatio}
       */
      public enum AspectRatio
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>ASPECT_R_16_9 = 1;</code>
         */
        ASPECT_R_16_9(1),
        /**
         * <code>ASPECT_SQUARE = 2;</code>
         */
        ASPECT_SQUARE(2),
        /**
         * <code>ASPECT_R_9_16 = 3;</code>
         */
        ASPECT_R_9_16(3),
        ;

        /**
         * <code>ASPECT_R_16_9 = 1;</code>
         */
        public static final int ASPECT_R_16_9_VALUE = 1;
        /**
         * <code>ASPECT_SQUARE = 2;</code>
         */
        public static final int ASPECT_SQUARE_VALUE = 2;
        /**
         * <code>ASPECT_R_9_16 = 3;</code>
         */
        public static final int ASPECT_R_9_16_VALUE = 3;


        public final int getNumber() {
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static AspectRatio valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static AspectRatio forNumber(int value) {
          switch (value) {
            case 1: return ASPECT_R_16_9;
            case 2: return ASPECT_SQUARE;
            case 3: return ASPECT_R_9_16;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<AspectRatio>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            AspectRatio> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<AspectRatio>() {
                public AspectRatio findValueByNumber(int number) {
                  return AspectRatio.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.getDescriptor().getEnumTypes().get(0);
        }

        private static final AspectRatio[] VALUES = values();

        public static AspectRatio valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private AspectRatio(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:KMProto.KMProject.AspectRatio)
      }

      /**
       * Protobuf enum {@code KMProto.KMProject.ClipType}
       */
      public enum ClipType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>VISUAL_CLIP = 1;</code>
         */
        VISUAL_CLIP(1),
        /**
         * <code>TRANSITION = 2;</code>
         */
        TRANSITION(2),
        /**
         * <code>AUDIO_CLIP = 3;</code>
         */
        AUDIO_CLIP(3),
        /**
         * <code>LAYER_TEXT = 4;</code>
         */
        LAYER_TEXT(4),
        /**
         * <code>LAYER_STICKER = 5;</code>
         */
        LAYER_STICKER(5),
        /**
         * <code>LAYER_HANDWRITING = 6;</code>
         */
        LAYER_HANDWRITING(6),
        /**
         * <code>LAYER_IMAGE = 7;</code>
         */
        LAYER_IMAGE(7),
        /**
         * <code>LAYER_VIDEO = 8;</code>
         */
        LAYER_VIDEO(8),
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>LAYER_EFFECT = 9;</code>
         */
        LAYER_EFFECT(9),
        /**
         * <code>LAYER_ASSET = 10;</code>
         */
        LAYER_ASSET(10),
        /**
         * <code>LAYER_GROUP = 11;</code>
         */
        LAYER_GROUP(11),
        ;

        /**
         * <code>VISUAL_CLIP = 1;</code>
         */
        public static final int VISUAL_CLIP_VALUE = 1;
        /**
         * <code>TRANSITION = 2;</code>
         */
        public static final int TRANSITION_VALUE = 2;
        /**
         * <code>AUDIO_CLIP = 3;</code>
         */
        public static final int AUDIO_CLIP_VALUE = 3;
        /**
         * <code>LAYER_TEXT = 4;</code>
         */
        public static final int LAYER_TEXT_VALUE = 4;
        /**
         * <code>LAYER_STICKER = 5;</code>
         */
        public static final int LAYER_STICKER_VALUE = 5;
        /**
         * <code>LAYER_HANDWRITING = 6;</code>
         */
        public static final int LAYER_HANDWRITING_VALUE = 6;
        /**
         * <code>LAYER_IMAGE = 7;</code>
         */
        public static final int LAYER_IMAGE_VALUE = 7;
        /**
         * <code>LAYER_VIDEO = 8;</code>
         */
        public static final int LAYER_VIDEO_VALUE = 8;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>LAYER_EFFECT = 9;</code>
         */
        public static final int LAYER_EFFECT_VALUE = 9;
        /**
         * <code>LAYER_ASSET = 10;</code>
         */
        public static final int LAYER_ASSET_VALUE = 10;
        /**
         * <code>LAYER_GROUP = 11;</code>
         */
        public static final int LAYER_GROUP_VALUE = 11;


        public final int getNumber() {
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static ClipType valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static ClipType forNumber(int value) {
          switch (value) {
            case 1: return VISUAL_CLIP;
            case 2: return TRANSITION;
            case 3: return AUDIO_CLIP;
            case 4: return LAYER_TEXT;
            case 5: return LAYER_STICKER;
            case 6: return LAYER_HANDWRITING;
            case 7: return LAYER_IMAGE;
            case 8: return LAYER_VIDEO;
            case 9: return LAYER_EFFECT;
            case 10: return LAYER_ASSET;
            case 11: return LAYER_GROUP;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<ClipType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            ClipType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<ClipType>() {
                public ClipType findValueByNumber(int number) {
                  return ClipType.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.getDescriptor().getEnumTypes().get(1);
        }

        private static final ClipType[] VALUES = values();

        public static ClipType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private ClipType(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:KMProto.KMProject.ClipType)
      }

      /**
       * Protobuf enum {@code KMProto.KMProject.ClipState}
       */
      public enum ClipState
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>BUSY = 1;</code>
         */
        BUSY(1),
        /**
         * <code>TEMPORARY_FAILURE = 2;</code>
         */
        TEMPORARY_FAILURE(2),
        /**
         * <code>PERMANENT_FAILURE = 3;</code>
         */
        PERMANENT_FAILURE(3),
        /**
         * <code>READY_TO_PLAY = 4;</code>
         */
        READY_TO_PLAY(4),
        ;

        /**
         * <code>BUSY = 1;</code>
         */
        public static final int BUSY_VALUE = 1;
        /**
         * <code>TEMPORARY_FAILURE = 2;</code>
         */
        public static final int TEMPORARY_FAILURE_VALUE = 2;
        /**
         * <code>PERMANENT_FAILURE = 3;</code>
         */
        public static final int PERMANENT_FAILURE_VALUE = 3;
        /**
         * <code>READY_TO_PLAY = 4;</code>
         */
        public static final int READY_TO_PLAY_VALUE = 4;


        public final int getNumber() {
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static ClipState valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static ClipState forNumber(int value) {
          switch (value) {
            case 1: return BUSY;
            case 2: return TEMPORARY_FAILURE;
            case 3: return PERMANENT_FAILURE;
            case 4: return READY_TO_PLAY;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<ClipState>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            ClipState> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<ClipState>() {
                public ClipState findValueByNumber(int number) {
                  return ClipState.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.getDescriptor().getEnumTypes().get(2);
        }

        private static final ClipState[] VALUES = values();

        public static ClipState valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private ClipState(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:KMProto.KMProject.ClipState)
      }

      /**
       * Protobuf enum {@code KMProto.KMProject.EffectOptionItemType}
       */
      public enum EffectOptionItemType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>EFFECT_OPTION_TEXT = 0;</code>
         */
        EFFECT_OPTION_TEXT(0),
        /**
         * <code>EFFECT_OPTION_RGB = 1;</code>
         */
        EFFECT_OPTION_RGB(1),
        /**
         * <code>EFFECT_OPTION_RGBA = 2;</code>
         */
        EFFECT_OPTION_RGBA(2),
        /**
         * <pre>
         * use in the future
         * </pre>
         *
         * <code>EFFECT_OPTION_XY = 3;</code>
         */
        EFFECT_OPTION_XY(3),
        /**
         * <pre>
         * use in the future
         * </pre>
         *
         * <code>EFFECT_OPTION_XYZ = 4;</code>
         */
        EFFECT_OPTION_XYZ(4),
        /**
         * <pre>
         * use in the future
         * </pre>
         *
         * <code>EFFECT_OPTION_RECT = 5;</code>
         */
        EFFECT_OPTION_RECT(5),
        /**
         * <code>EFFECT_OPTION_RANGE = 6;</code>
         */
        EFFECT_OPTION_RANGE(6),
        /**
         * <code>EFFECT_OPTION_CHOICE = 7;</code>
         */
        EFFECT_OPTION_CHOICE(7),
        /**
         * <pre>
         * use in the future
         * </pre>
         *
         * <code>EFFECT_OPTION_IMAGE = 8;</code>
         */
        EFFECT_OPTION_IMAGE(8),
        /**
         * <code>EFFECT_OPTION_SWITCH = 9;</code>
         */
        EFFECT_OPTION_SWITCH(9),
        ;

        /**
         * <code>EFFECT_OPTION_TEXT = 0;</code>
         */
        public static final int EFFECT_OPTION_TEXT_VALUE = 0;
        /**
         * <code>EFFECT_OPTION_RGB = 1;</code>
         */
        public static final int EFFECT_OPTION_RGB_VALUE = 1;
        /**
         * <code>EFFECT_OPTION_RGBA = 2;</code>
         */
        public static final int EFFECT_OPTION_RGBA_VALUE = 2;
        /**
         * <pre>
         * use in the future
         * </pre>
         *
         * <code>EFFECT_OPTION_XY = 3;</code>
         */
        public static final int EFFECT_OPTION_XY_VALUE = 3;
        /**
         * <pre>
         * use in the future
         * </pre>
         *
         * <code>EFFECT_OPTION_XYZ = 4;</code>
         */
        public static final int EFFECT_OPTION_XYZ_VALUE = 4;
        /**
         * <pre>
         * use in the future
         * </pre>
         *
         * <code>EFFECT_OPTION_RECT = 5;</code>
         */
        public static final int EFFECT_OPTION_RECT_VALUE = 5;
        /**
         * <code>EFFECT_OPTION_RANGE = 6;</code>
         */
        public static final int EFFECT_OPTION_RANGE_VALUE = 6;
        /**
         * <code>EFFECT_OPTION_CHOICE = 7;</code>
         */
        public static final int EFFECT_OPTION_CHOICE_VALUE = 7;
        /**
         * <pre>
         * use in the future
         * </pre>
         *
         * <code>EFFECT_OPTION_IMAGE = 8;</code>
         */
        public static final int EFFECT_OPTION_IMAGE_VALUE = 8;
        /**
         * <code>EFFECT_OPTION_SWITCH = 9;</code>
         */
        public static final int EFFECT_OPTION_SWITCH_VALUE = 9;


        public final int getNumber() {
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static EffectOptionItemType valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static EffectOptionItemType forNumber(int value) {
          switch (value) {
            case 0: return EFFECT_OPTION_TEXT;
            case 1: return EFFECT_OPTION_RGB;
            case 2: return EFFECT_OPTION_RGBA;
            case 3: return EFFECT_OPTION_XY;
            case 4: return EFFECT_OPTION_XYZ;
            case 5: return EFFECT_OPTION_RECT;
            case 6: return EFFECT_OPTION_RANGE;
            case 7: return EFFECT_OPTION_CHOICE;
            case 8: return EFFECT_OPTION_IMAGE;
            case 9: return EFFECT_OPTION_SWITCH;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<EffectOptionItemType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            EffectOptionItemType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<EffectOptionItemType>() {
                public EffectOptionItemType findValueByNumber(int number) {
                  return EffectOptionItemType.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.getDescriptor().getEnumTypes().get(3);
        }

        private static final EffectOptionItemType[] VALUES = values();

        public static EffectOptionItemType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private EffectOptionItemType(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:KMProto.KMProject.EffectOptionItemType)
      }

      /**
       * Protobuf enum {@code KMProto.KMProject.SplitScreenType}
       */
      public enum SplitScreenType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>OFF = 0;</code>
         */
        OFF(0),
        /**
         * <code>FULL = 1;</code>
         */
        FULL(1),
        /**
         * <code>BOTTOM = 2;</code>
         */
        BOTTOM(2),
        /**
         * <code>TOP = 3;</code>
         */
        TOP(3),
        /**
         * <code>LEFT = 4;</code>
         */
        LEFT(4),
        /**
         * <code>RIGHT = 5;</code>
         */
        RIGHT(5),
        ;

        /**
         * <code>OFF = 0;</code>
         */
        public static final int OFF_VALUE = 0;
        /**
         * <code>FULL = 1;</code>
         */
        public static final int FULL_VALUE = 1;
        /**
         * <code>BOTTOM = 2;</code>
         */
        public static final int BOTTOM_VALUE = 2;
        /**
         * <code>TOP = 3;</code>
         */
        public static final int TOP_VALUE = 3;
        /**
         * <code>LEFT = 4;</code>
         */
        public static final int LEFT_VALUE = 4;
        /**
         * <code>RIGHT = 5;</code>
         */
        public static final int RIGHT_VALUE = 5;


        public final int getNumber() {
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static SplitScreenType valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static SplitScreenType forNumber(int value) {
          switch (value) {
            case 0: return OFF;
            case 1: return FULL;
            case 2: return BOTTOM;
            case 3: return TOP;
            case 4: return LEFT;
            case 5: return RIGHT;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<SplitScreenType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            SplitScreenType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<SplitScreenType>() {
                public SplitScreenType findValueByNumber(int number) {
                  return SplitScreenType.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.getDescriptor().getEnumTypes().get(4);
        }

        private static final SplitScreenType[] VALUES = values();

        public static SplitScreenType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private SplitScreenType(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:KMProto.KMProject.SplitScreenType)
      }

      /**
       * Protobuf enum {@code KMProto.KMProject.DrawingType}
       */
      public enum DrawingType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>BRUSH_ERASER_ALL = 1;</code>
         */
        BRUSH_ERASER_ALL(1),
        /**
         * <code>BRUSH_ERASER = 2;</code>
         */
        BRUSH_ERASER(2),
        /**
         * <code>BRUSH_PEN = 3;</code>
         */
        BRUSH_PEN(3),
        /**
         * <code>BRUSH_BRUSH = 4;</code>
         */
        BRUSH_BRUSH(4),
        /**
         * <code>SHAPE_RECT = 5;</code>
         */
        SHAPE_RECT(5),
        /**
         * <code>STROKE_RECT = 6;</code>
         */
        STROKE_RECT(6),
        /**
         * <code>SHAPE_CIRCLE = 7;</code>
         */
        SHAPE_CIRCLE(7),
        /**
         * <code>STROKE_CIRCLE = 8;</code>
         */
        STROKE_CIRCLE(8),
        /**
         * <code>SHAPE_CROSS = 9;</code>
         */
        SHAPE_CROSS(9),
        /**
         * <code>LINE_NORMAL = 10;</code>
         */
        LINE_NORMAL(10),
        /**
         * <code>LINE_SINGLE_ARROW = 11;</code>
         */
        LINE_SINGLE_ARROW(11),
        /**
         * <code>LINE_DOUBLE_ARROW = 12;</code>
         */
        LINE_DOUBLE_ARROW(12),
        ;

        /**
         * <code>BRUSH_ERASER_ALL = 1;</code>
         */
        public static final int BRUSH_ERASER_ALL_VALUE = 1;
        /**
         * <code>BRUSH_ERASER = 2;</code>
         */
        public static final int BRUSH_ERASER_VALUE = 2;
        /**
         * <code>BRUSH_PEN = 3;</code>
         */
        public static final int BRUSH_PEN_VALUE = 3;
        /**
         * <code>BRUSH_BRUSH = 4;</code>
         */
        public static final int BRUSH_BRUSH_VALUE = 4;
        /**
         * <code>SHAPE_RECT = 5;</code>
         */
        public static final int SHAPE_RECT_VALUE = 5;
        /**
         * <code>STROKE_RECT = 6;</code>
         */
        public static final int STROKE_RECT_VALUE = 6;
        /**
         * <code>SHAPE_CIRCLE = 7;</code>
         */
        public static final int SHAPE_CIRCLE_VALUE = 7;
        /**
         * <code>STROKE_CIRCLE = 8;</code>
         */
        public static final int STROKE_CIRCLE_VALUE = 8;
        /**
         * <code>SHAPE_CROSS = 9;</code>
         */
        public static final int SHAPE_CROSS_VALUE = 9;
        /**
         * <code>LINE_NORMAL = 10;</code>
         */
        public static final int LINE_NORMAL_VALUE = 10;
        /**
         * <code>LINE_SINGLE_ARROW = 11;</code>
         */
        public static final int LINE_SINGLE_ARROW_VALUE = 11;
        /**
         * <code>LINE_DOUBLE_ARROW = 12;</code>
         */
        public static final int LINE_DOUBLE_ARROW_VALUE = 12;


        public final int getNumber() {
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static DrawingType valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static DrawingType forNumber(int value) {
          switch (value) {
            case 1: return BRUSH_ERASER_ALL;
            case 2: return BRUSH_ERASER;
            case 3: return BRUSH_PEN;
            case 4: return BRUSH_BRUSH;
            case 5: return SHAPE_RECT;
            case 6: return STROKE_RECT;
            case 7: return SHAPE_CIRCLE;
            case 8: return STROKE_CIRCLE;
            case 9: return SHAPE_CROSS;
            case 10: return LINE_NORMAL;
            case 11: return LINE_SINGLE_ARROW;
            case 12: return LINE_DOUBLE_ARROW;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<DrawingType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            DrawingType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<DrawingType>() {
                public DrawingType findValueByNumber(int number) {
                  return DrawingType.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.getDescriptor().getEnumTypes().get(5);
        }

        private static final DrawingType[] VALUES = values();

        public static DrawingType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private DrawingType(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:KMProto.KMProject.DrawingType)
      }

      /**
       * Protobuf enum {@code KMProto.KMProject.PathStyle}
       */
      public enum PathStyle
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>SMOOTH = 1;</code>
         */
        SMOOTH(1),
        /**
         * <code>SHARP = 2;</code>
         */
        SHARP(2),
        /**
         * <code>RECT = 3;</code>
         */
        RECT(3),
        /**
         * <code>ROUND_RECT = 4;</code>
         */
        ROUND_RECT(4),
        /**
         * <code>ELLIPSE = 5;</code>
         */
        ELLIPSE(5),
        /**
         * <code>XSHAPE = 6;</code>
         */
        XSHAPE(6),
        /**
         * <code>FILL_RECT = 7;</code>
         */
        FILL_RECT(7),
        /**
         * <code>FILL_ROUND_RECT = 8;</code>
         */
        FILL_ROUND_RECT(8),
        /**
         * <code>FILL_ELLIPSE = 9;</code>
         */
        FILL_ELLIPSE(9),
        ;

        /**
         * <code>SMOOTH = 1;</code>
         */
        public static final int SMOOTH_VALUE = 1;
        /**
         * <code>SHARP = 2;</code>
         */
        public static final int SHARP_VALUE = 2;
        /**
         * <code>RECT = 3;</code>
         */
        public static final int RECT_VALUE = 3;
        /**
         * <code>ROUND_RECT = 4;</code>
         */
        public static final int ROUND_RECT_VALUE = 4;
        /**
         * <code>ELLIPSE = 5;</code>
         */
        public static final int ELLIPSE_VALUE = 5;
        /**
         * <code>XSHAPE = 6;</code>
         */
        public static final int XSHAPE_VALUE = 6;
        /**
         * <code>FILL_RECT = 7;</code>
         */
        public static final int FILL_RECT_VALUE = 7;
        /**
         * <code>FILL_ROUND_RECT = 8;</code>
         */
        public static final int FILL_ROUND_RECT_VALUE = 8;
        /**
         * <code>FILL_ELLIPSE = 9;</code>
         */
        public static final int FILL_ELLIPSE_VALUE = 9;


        public final int getNumber() {
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static PathStyle valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static PathStyle forNumber(int value) {
          switch (value) {
            case 1: return SMOOTH;
            case 2: return SHARP;
            case 3: return RECT;
            case 4: return ROUND_RECT;
            case 5: return ELLIPSE;
            case 6: return XSHAPE;
            case 7: return FILL_RECT;
            case 8: return FILL_ROUND_RECT;
            case 9: return FILL_ELLIPSE;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<PathStyle>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            PathStyle> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<PathStyle>() {
                public PathStyle findValueByNumber(int number) {
                  return PathStyle.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.getDescriptor().getEnumTypes().get(6);
        }

        private static final PathStyle[] VALUES = values();

        public static PathStyle valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private PathStyle(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:KMProto.KMProject.PathStyle)
      }

      /**
       * Protobuf enum {@code KMProto.KMProject.CapDecorationStyle}
       */
      public enum CapDecorationStyle
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>NONE = 1;</code>
         */
        NONE(1),
        /**
         * <code>ROUND = 2;</code>
         */
        ROUND(2),
        /**
         * <code>SOLID_ARROW = 3;</code>
         */
        SOLID_ARROW(3),
        /**
         * <code>HOLLOW_ARROW = 4;</code>
         */
        HOLLOW_ARROW(4),
        ;

        /**
         * <code>NONE = 1;</code>
         */
        public static final int NONE_VALUE = 1;
        /**
         * <code>ROUND = 2;</code>
         */
        public static final int ROUND_VALUE = 2;
        /**
         * <code>SOLID_ARROW = 3;</code>
         */
        public static final int SOLID_ARROW_VALUE = 3;
        /**
         * <code>HOLLOW_ARROW = 4;</code>
         */
        public static final int HOLLOW_ARROW_VALUE = 4;


        public final int getNumber() {
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static CapDecorationStyle valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static CapDecorationStyle forNumber(int value) {
          switch (value) {
            case 1: return NONE;
            case 2: return ROUND;
            case 3: return SOLID_ARROW;
            case 4: return HOLLOW_ARROW;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<CapDecorationStyle>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            CapDecorationStyle> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<CapDecorationStyle>() {
                public CapDecorationStyle findValueByNumber(int number) {
                  return CapDecorationStyle.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.getDescriptor().getEnumTypes().get(7);
        }

        private static final CapDecorationStyle[] VALUES = values();

        public static CapDecorationStyle valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private CapDecorationStyle(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:KMProto.KMProject.CapDecorationStyle)
      }

      /**
       * Protobuf enum {@code KMProto.KMProject.DrawingActionType}
       */
      public enum DrawingActionType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>STROKE = 1;</code>
         */
        STROKE(1),
        /**
         * <code>ERASE_ALL = 2;</code>
         */
        ERASE_ALL(2),
        ;

        /**
         * <code>STROKE = 1;</code>
         */
        public static final int STROKE_VALUE = 1;
        /**
         * <code>ERASE_ALL = 2;</code>
         */
        public static final int ERASE_ALL_VALUE = 2;


        public final int getNumber() {
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static DrawingActionType valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static DrawingActionType forNumber(int value) {
          switch (value) {
            case 1: return STROKE;
            case 2: return ERASE_ALL;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<DrawingActionType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            DrawingActionType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<DrawingActionType>() {
                public DrawingActionType findValueByNumber(int number) {
                  return DrawingActionType.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.getDescriptor().getEnumTypes().get(8);
        }

        private static final DrawingActionType[] VALUES = values();

        public static DrawingActionType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private DrawingActionType(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:KMProto.KMProject.DrawingActionType)
      }

      /**
       * Protobuf enum {@code KMProto.KMProject.TitleStyle}
       */
      public enum TitleStyle
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>TITLE_STYLE_NONE = 0;</code>
         */
        TITLE_STYLE_NONE(0),
        /**
         * <code>TITLE_STYLE_HEADLINE = 1;</code>
         */
        TITLE_STYLE_HEADLINE(1),
        /**
         * <code>TITLE_STYLE_OPENING = 2;</code>
         */
        TITLE_STYLE_OPENING(2),
        /**
         * <code>TITLE_STYLE_PLAYING = 3;</code>
         */
        TITLE_STYLE_PLAYING(3),
        /**
         * <code>TITLE_STYLE_ENDING = 4;</code>
         */
        TITLE_STYLE_ENDING(4),
        ;

        /**
         * <code>TITLE_STYLE_NONE = 0;</code>
         */
        public static final int TITLE_STYLE_NONE_VALUE = 0;
        /**
         * <code>TITLE_STYLE_HEADLINE = 1;</code>
         */
        public static final int TITLE_STYLE_HEADLINE_VALUE = 1;
        /**
         * <code>TITLE_STYLE_OPENING = 2;</code>
         */
        public static final int TITLE_STYLE_OPENING_VALUE = 2;
        /**
         * <code>TITLE_STYLE_PLAYING = 3;</code>
         */
        public static final int TITLE_STYLE_PLAYING_VALUE = 3;
        /**
         * <code>TITLE_STYLE_ENDING = 4;</code>
         */
        public static final int TITLE_STYLE_ENDING_VALUE = 4;


        public final int getNumber() {
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static TitleStyle valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static TitleStyle forNumber(int value) {
          switch (value) {
            case 0: return TITLE_STYLE_NONE;
            case 1: return TITLE_STYLE_HEADLINE;
            case 2: return TITLE_STYLE_OPENING;
            case 3: return TITLE_STYLE_PLAYING;
            case 4: return TITLE_STYLE_ENDING;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<TitleStyle>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            TitleStyle> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<TitleStyle>() {
                public TitleStyle findValueByNumber(int number) {
                  return TitleStyle.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.getDescriptor().getEnumTypes().get(9);
        }

        private static final TitleStyle[] VALUES = values();

        public static TitleStyle valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private TitleStyle(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:KMProto.KMProject.TitleStyle)
      }

      /**
       * Protobuf enum {@code KMProto.KMProject.ThemeEffectType}
       */
      public enum ThemeEffectType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>THEME_EFFECT_TYPE_OPENING = 1;</code>
         */
        THEME_EFFECT_TYPE_OPENING(1),
        /**
         * <code>THEME_EFFECT_TYPE_MIDDLE = 2;</code>
         */
        THEME_EFFECT_TYPE_MIDDLE(2),
        /**
         * <code>THEME_EFFECT_TYPE_ENDING = 3;</code>
         */
        THEME_EFFECT_TYPE_ENDING(3),
        /**
         * <code>THEME_EFFECT_TYPE_ACCENT = 4;</code>
         */
        THEME_EFFECT_TYPE_ACCENT(4),
        /**
         * <code>THEME_EFFECT_TYPE_TRANSITION = 5;</code>
         */
        THEME_EFFECT_TYPE_TRANSITION(5),
        /**
         * <code>THEME_EFFECT_TYPE_CLIP = 6;</code>
         */
        THEME_EFFECT_TYPE_CLIP(6),
        ;

        /**
         * <code>THEME_EFFECT_TYPE_OPENING = 1;</code>
         */
        public static final int THEME_EFFECT_TYPE_OPENING_VALUE = 1;
        /**
         * <code>THEME_EFFECT_TYPE_MIDDLE = 2;</code>
         */
        public static final int THEME_EFFECT_TYPE_MIDDLE_VALUE = 2;
        /**
         * <code>THEME_EFFECT_TYPE_ENDING = 3;</code>
         */
        public static final int THEME_EFFECT_TYPE_ENDING_VALUE = 3;
        /**
         * <code>THEME_EFFECT_TYPE_ACCENT = 4;</code>
         */
        public static final int THEME_EFFECT_TYPE_ACCENT_VALUE = 4;
        /**
         * <code>THEME_EFFECT_TYPE_TRANSITION = 5;</code>
         */
        public static final int THEME_EFFECT_TYPE_TRANSITION_VALUE = 5;
        /**
         * <code>THEME_EFFECT_TYPE_CLIP = 6;</code>
         */
        public static final int THEME_EFFECT_TYPE_CLIP_VALUE = 6;


        public final int getNumber() {
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static ThemeEffectType valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static ThemeEffectType forNumber(int value) {
          switch (value) {
            case 1: return THEME_EFFECT_TYPE_OPENING;
            case 2: return THEME_EFFECT_TYPE_MIDDLE;
            case 3: return THEME_EFFECT_TYPE_ENDING;
            case 4: return THEME_EFFECT_TYPE_ACCENT;
            case 5: return THEME_EFFECT_TYPE_TRANSITION;
            case 6: return THEME_EFFECT_TYPE_CLIP;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<ThemeEffectType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            ThemeEffectType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<ThemeEffectType>() {
                public ThemeEffectType findValueByNumber(int number) {
                  return ThemeEffectType.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.getDescriptor().getEnumTypes().get(10);
        }

        private static final ThemeEffectType[] VALUES = values();

        public static ThemeEffectType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private ThemeEffectType(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:KMProto.KMProject.ThemeEffectType)
      }

      /**
       * Protobuf enum {@code KMProto.KMProject.LayerBlendModeType}
       */
      public enum LayerBlendModeType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>LAYER_BLEND_NONE = 0;</code>
         */
        LAYER_BLEND_NONE(0),
        /**
         * <code>LAYER_BLEND_ADD = 1;</code>
         */
        LAYER_BLEND_ADD(1),
        /**
         * <code>LAYER_BLEND_AVERAGE = 2;</code>
         */
        LAYER_BLEND_AVERAGE(2),
        /**
         * <code>LAYER_BLEND_COLOR_BURN = 3;</code>
         */
        LAYER_BLEND_COLOR_BURN(3),
        /**
         * <code>LAYER_BLEND_COLOR_DODGE = 4;</code>
         */
        LAYER_BLEND_COLOR_DODGE(4),
        /**
         * <code>LAYER_BLEND_DARKEN = 5;</code>
         */
        LAYER_BLEND_DARKEN(5),
        /**
         * <code>LAYER_BLEND_DIFFERENCE = 6;</code>
         */
        LAYER_BLEND_DIFFERENCE(6),
        /**
         * <code>LAYER_BLEND_EXCLUSION = 7;</code>
         */
        LAYER_BLEND_EXCLUSION(7),
        /**
         * <code>LAYER_BLEND_GLOW = 8;</code>
         */
        LAYER_BLEND_GLOW(8),
        /**
         * <code>LAYER_BLEND_HARD_LIGHT = 9;</code>
         */
        LAYER_BLEND_HARD_LIGHT(9),
        /**
         * <code>LAYER_BLEND_HARD_MIX = 10;</code>
         */
        LAYER_BLEND_HARD_MIX(10),
        /**
         * <code>LAYER_BLEND_LIGHTEN = 11;</code>
         */
        LAYER_BLEND_LIGHTEN(11),
        /**
         * <code>LAYER_BLEND_LINEAR_BURN = 12;</code>
         */
        LAYER_BLEND_LINEAR_BURN(12),
        /**
         * <code>LAYER_BLEND_LINEAR_DODGE = 13;</code>
         */
        LAYER_BLEND_LINEAR_DODGE(13),
        /**
         * <code>LAYER_BLEND_LINEAR_LIGHT = 14;</code>
         */
        LAYER_BLEND_LINEAR_LIGHT(14),
        /**
         * <code>LAYER_BLEND_MULTIPLY = 15;</code>
         */
        LAYER_BLEND_MULTIPLY(15),
        /**
         * <code>LAYER_BLEND_NEGATION = 16;</code>
         */
        LAYER_BLEND_NEGATION(16),
        /**
         * <code>LAYER_BLEND_NORMAL = 17;</code>
         */
        LAYER_BLEND_NORMAL(17),
        /**
         * <code>LAYER_BLEND_OVERLAY = 18;</code>
         */
        LAYER_BLEND_OVERLAY(18),
        /**
         * <code>LAYER_BLEND_PHOENIX = 19;</code>
         */
        LAYER_BLEND_PHOENIX(19),
        /**
         * <code>LAYER_BLEND_PIN_LIGHT = 20;</code>
         */
        LAYER_BLEND_PIN_LIGHT(20),
        /**
         * <code>LAYER_BLEND_REFLECT = 21;</code>
         */
        LAYER_BLEND_REFLECT(21),
        /**
         * <code>LAYER_BLEND_SCREEN = 22;</code>
         */
        LAYER_BLEND_SCREEN(22),
        /**
         * <code>LAYER_BLEND_SOFT_LIGHT = 23;</code>
         */
        LAYER_BLEND_SOFT_LIGHT(23),
        /**
         * <code>LAYER_BLEND_SUBTRACT = 24;</code>
         */
        LAYER_BLEND_SUBTRACT(24),
        /**
         * <code>LAYER_BLEND_VIVID_LIGHT = 25;</code>
         */
        LAYER_BLEND_VIVID_LIGHT(25),
        ;

        /**
         * <code>LAYER_BLEND_NONE = 0;</code>
         */
        public static final int LAYER_BLEND_NONE_VALUE = 0;
        /**
         * <code>LAYER_BLEND_ADD = 1;</code>
         */
        public static final int LAYER_BLEND_ADD_VALUE = 1;
        /**
         * <code>LAYER_BLEND_AVERAGE = 2;</code>
         */
        public static final int LAYER_BLEND_AVERAGE_VALUE = 2;
        /**
         * <code>LAYER_BLEND_COLOR_BURN = 3;</code>
         */
        public static final int LAYER_BLEND_COLOR_BURN_VALUE = 3;
        /**
         * <code>LAYER_BLEND_COLOR_DODGE = 4;</code>
         */
        public static final int LAYER_BLEND_COLOR_DODGE_VALUE = 4;
        /**
         * <code>LAYER_BLEND_DARKEN = 5;</code>
         */
        public static final int LAYER_BLEND_DARKEN_VALUE = 5;
        /**
         * <code>LAYER_BLEND_DIFFERENCE = 6;</code>
         */
        public static final int LAYER_BLEND_DIFFERENCE_VALUE = 6;
        /**
         * <code>LAYER_BLEND_EXCLUSION = 7;</code>
         */
        public static final int LAYER_BLEND_EXCLUSION_VALUE = 7;
        /**
         * <code>LAYER_BLEND_GLOW = 8;</code>
         */
        public static final int LAYER_BLEND_GLOW_VALUE = 8;
        /**
         * <code>LAYER_BLEND_HARD_LIGHT = 9;</code>
         */
        public static final int LAYER_BLEND_HARD_LIGHT_VALUE = 9;
        /**
         * <code>LAYER_BLEND_HARD_MIX = 10;</code>
         */
        public static final int LAYER_BLEND_HARD_MIX_VALUE = 10;
        /**
         * <code>LAYER_BLEND_LIGHTEN = 11;</code>
         */
        public static final int LAYER_BLEND_LIGHTEN_VALUE = 11;
        /**
         * <code>LAYER_BLEND_LINEAR_BURN = 12;</code>
         */
        public static final int LAYER_BLEND_LINEAR_BURN_VALUE = 12;
        /**
         * <code>LAYER_BLEND_LINEAR_DODGE = 13;</code>
         */
        public static final int LAYER_BLEND_LINEAR_DODGE_VALUE = 13;
        /**
         * <code>LAYER_BLEND_LINEAR_LIGHT = 14;</code>
         */
        public static final int LAYER_BLEND_LINEAR_LIGHT_VALUE = 14;
        /**
         * <code>LAYER_BLEND_MULTIPLY = 15;</code>
         */
        public static final int LAYER_BLEND_MULTIPLY_VALUE = 15;
        /**
         * <code>LAYER_BLEND_NEGATION = 16;</code>
         */
        public static final int LAYER_BLEND_NEGATION_VALUE = 16;
        /**
         * <code>LAYER_BLEND_NORMAL = 17;</code>
         */
        public static final int LAYER_BLEND_NORMAL_VALUE = 17;
        /**
         * <code>LAYER_BLEND_OVERLAY = 18;</code>
         */
        public static final int LAYER_BLEND_OVERLAY_VALUE = 18;
        /**
         * <code>LAYER_BLEND_PHOENIX = 19;</code>
         */
        public static final int LAYER_BLEND_PHOENIX_VALUE = 19;
        /**
         * <code>LAYER_BLEND_PIN_LIGHT = 20;</code>
         */
        public static final int LAYER_BLEND_PIN_LIGHT_VALUE = 20;
        /**
         * <code>LAYER_BLEND_REFLECT = 21;</code>
         */
        public static final int LAYER_BLEND_REFLECT_VALUE = 21;
        /**
         * <code>LAYER_BLEND_SCREEN = 22;</code>
         */
        public static final int LAYER_BLEND_SCREEN_VALUE = 22;
        /**
         * <code>LAYER_BLEND_SOFT_LIGHT = 23;</code>
         */
        public static final int LAYER_BLEND_SOFT_LIGHT_VALUE = 23;
        /**
         * <code>LAYER_BLEND_SUBTRACT = 24;</code>
         */
        public static final int LAYER_BLEND_SUBTRACT_VALUE = 24;
        /**
         * <code>LAYER_BLEND_VIVID_LIGHT = 25;</code>
         */
        public static final int LAYER_BLEND_VIVID_LIGHT_VALUE = 25;


        public final int getNumber() {
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static LayerBlendModeType valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static LayerBlendModeType forNumber(int value) {
          switch (value) {
            case 0: return LAYER_BLEND_NONE;
            case 1: return LAYER_BLEND_ADD;
            case 2: return LAYER_BLEND_AVERAGE;
            case 3: return LAYER_BLEND_COLOR_BURN;
            case 4: return LAYER_BLEND_COLOR_DODGE;
            case 5: return LAYER_BLEND_DARKEN;
            case 6: return LAYER_BLEND_DIFFERENCE;
            case 7: return LAYER_BLEND_EXCLUSION;
            case 8: return LAYER_BLEND_GLOW;
            case 9: return LAYER_BLEND_HARD_LIGHT;
            case 10: return LAYER_BLEND_HARD_MIX;
            case 11: return LAYER_BLEND_LIGHTEN;
            case 12: return LAYER_BLEND_LINEAR_BURN;
            case 13: return LAYER_BLEND_LINEAR_DODGE;
            case 14: return LAYER_BLEND_LINEAR_LIGHT;
            case 15: return LAYER_BLEND_MULTIPLY;
            case 16: return LAYER_BLEND_NEGATION;
            case 17: return LAYER_BLEND_NORMAL;
            case 18: return LAYER_BLEND_OVERLAY;
            case 19: return LAYER_BLEND_PHOENIX;
            case 20: return LAYER_BLEND_PIN_LIGHT;
            case 21: return LAYER_BLEND_REFLECT;
            case 22: return LAYER_BLEND_SCREEN;
            case 23: return LAYER_BLEND_SOFT_LIGHT;
            case 24: return LAYER_BLEND_SUBTRACT;
            case 25: return LAYER_BLEND_VIVID_LIGHT;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<LayerBlendModeType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            LayerBlendModeType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<LayerBlendModeType>() {
                public LayerBlendModeType findValueByNumber(int number) {
                  return LayerBlendModeType.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.getDescriptor().getEnumTypes().get(11);
        }

        private static final LayerBlendModeType[] VALUES = values();

        public static LayerBlendModeType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private LayerBlendModeType(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:KMProto.KMProject.LayerBlendModeType)
      }

      public interface FadeOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.Fade)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional bool in_on = 1;</code>
         * @return Whether the inOn field is set.
         */
        boolean hasInOn();
        /**
         * <code>optional bool in_on = 1;</code>
         * @return The inOn.
         */
        boolean getInOn();

        /**
         * <pre>
         * Off if unset
         * </pre>
         *
         * <code>optional float in_seconds = 2;</code>
         * @return Whether the inSeconds field is set.
         */
        boolean hasInSeconds();
        /**
         * <pre>
         * Off if unset
         * </pre>
         *
         * <code>optional float in_seconds = 2;</code>
         * @return The inSeconds.
         */
        float getInSeconds();

        /**
         * <code>optional bool out_on = 3;</code>
         * @return Whether the outOn field is set.
         */
        boolean hasOutOn();
        /**
         * <code>optional bool out_on = 3;</code>
         * @return The outOn.
         */
        boolean getOutOn();

        /**
         * <code>optional float out_seconds = 4;</code>
         * @return Whether the outSeconds field is set.
         */
        boolean hasOutSeconds();
        /**
         * <code>optional float out_seconds = 4;</code>
         * @return The outSeconds.
         */
        float getOutSeconds();
      }
      /**
       * Protobuf type {@code KMProto.KMProject.Fade}
       */
      public static final class Fade extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.Fade)
          FadeOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Fade.newBuilder() to construct.
        private Fade(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Fade() {
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new Fade();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private Fade(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  bitField0_ |= 0x00000001;
                  inOn_ = input.readBool();
                  break;
                }
                case 21: {
                  bitField0_ |= 0x00000002;
                  inSeconds_ = input.readFloat();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  outOn_ = input.readBool();
                  break;
                }
                case 37: {
                  bitField0_ |= 0x00000008;
                  outSeconds_ = input.readFloat();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_Fade_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_Fade_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.Builder.class);
        }

        private int bitField0_;
        public static final int IN_ON_FIELD_NUMBER = 1;
        private boolean inOn_;
        /**
         * <code>optional bool in_on = 1;</code>
         * @return Whether the inOn field is set.
         */
        @java.lang.Override
        public boolean hasInOn() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional bool in_on = 1;</code>
         * @return The inOn.
         */
        @java.lang.Override
        public boolean getInOn() {
          return inOn_;
        }

        public static final int IN_SECONDS_FIELD_NUMBER = 2;
        private float inSeconds_;
        /**
         * <pre>
         * Off if unset
         * </pre>
         *
         * <code>optional float in_seconds = 2;</code>
         * @return Whether the inSeconds field is set.
         */
        @java.lang.Override
        public boolean hasInSeconds() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Off if unset
         * </pre>
         *
         * <code>optional float in_seconds = 2;</code>
         * @return The inSeconds.
         */
        @java.lang.Override
        public float getInSeconds() {
          return inSeconds_;
        }

        public static final int OUT_ON_FIELD_NUMBER = 3;
        private boolean outOn_;
        /**
         * <code>optional bool out_on = 3;</code>
         * @return Whether the outOn field is set.
         */
        @java.lang.Override
        public boolean hasOutOn() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional bool out_on = 3;</code>
         * @return The outOn.
         */
        @java.lang.Override
        public boolean getOutOn() {
          return outOn_;
        }

        public static final int OUT_SECONDS_FIELD_NUMBER = 4;
        private float outSeconds_;
        /**
         * <code>optional float out_seconds = 4;</code>
         * @return Whether the outSeconds field is set.
         */
        @java.lang.Override
        public boolean hasOutSeconds() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional float out_seconds = 4;</code>
         * @return The outSeconds.
         */
        @java.lang.Override
        public float getOutSeconds() {
          return outSeconds_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeBool(1, inOn_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeFloat(2, inSeconds_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeBool(3, outOn_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeFloat(4, outSeconds_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(1, inOn_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(2, inSeconds_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(3, outOn_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(4, outSeconds_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade) obj;

          if (hasInOn() != other.hasInOn()) return false;
          if (hasInOn()) {
            if (getInOn()
                != other.getInOn()) return false;
          }
          if (hasInSeconds() != other.hasInSeconds()) return false;
          if (hasInSeconds()) {
            if (java.lang.Float.floatToIntBits(getInSeconds())
                != java.lang.Float.floatToIntBits(
                    other.getInSeconds())) return false;
          }
          if (hasOutOn() != other.hasOutOn()) return false;
          if (hasOutOn()) {
            if (getOutOn()
                != other.getOutOn()) return false;
          }
          if (hasOutSeconds() != other.hasOutSeconds()) return false;
          if (hasOutSeconds()) {
            if (java.lang.Float.floatToIntBits(getOutSeconds())
                != java.lang.Float.floatToIntBits(
                    other.getOutSeconds())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasInOn()) {
            hash = (37 * hash) + IN_ON_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getInOn());
          }
          if (hasInSeconds()) {
            hash = (37 * hash) + IN_SECONDS_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getInSeconds());
          }
          if (hasOutOn()) {
            hash = (37 * hash) + OUT_ON_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getOutOn());
          }
          if (hasOutSeconds()) {
            hash = (37 * hash) + OUT_SECONDS_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getOutSeconds());
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code KMProto.KMProject.Fade}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.Fade)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.FadeOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_Fade_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_Fade_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            inOn_ = false;
            bitField0_ = (bitField0_ & ~0x00000001);
            inSeconds_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000002);
            outOn_ = false;
            bitField0_ = (bitField0_ & ~0x00000004);
            outSeconds_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000008);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_Fade_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.inOn_ = inOn_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.inSeconds_ = inSeconds_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.outOn_ = outOn_;
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.outSeconds_ = outSeconds_;
              to_bitField0_ |= 0x00000008;
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.getDefaultInstance()) return this;
            if (other.hasInOn()) {
              setInOn(other.getInOn());
            }
            if (other.hasInSeconds()) {
              setInSeconds(other.getInSeconds());
            }
            if (other.hasOutOn()) {
              setOutOn(other.getOutOn());
            }
            if (other.hasOutSeconds()) {
              setOutSeconds(other.getOutSeconds());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private boolean inOn_ ;
          /**
           * <code>optional bool in_on = 1;</code>
           * @return Whether the inOn field is set.
           */
          @java.lang.Override
          public boolean hasInOn() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional bool in_on = 1;</code>
           * @return The inOn.
           */
          @java.lang.Override
          public boolean getInOn() {
            return inOn_;
          }
          /**
           * <code>optional bool in_on = 1;</code>
           * @param value The inOn to set.
           * @return This builder for chaining.
           */
          public Builder setInOn(boolean value) {
            bitField0_ |= 0x00000001;
            inOn_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool in_on = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearInOn() {
            bitField0_ = (bitField0_ & ~0x00000001);
            inOn_ = false;
            onChanged();
            return this;
          }

          private float inSeconds_ ;
          /**
           * <pre>
           * Off if unset
           * </pre>
           *
           * <code>optional float in_seconds = 2;</code>
           * @return Whether the inSeconds field is set.
           */
          @java.lang.Override
          public boolean hasInSeconds() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <pre>
           * Off if unset
           * </pre>
           *
           * <code>optional float in_seconds = 2;</code>
           * @return The inSeconds.
           */
          @java.lang.Override
          public float getInSeconds() {
            return inSeconds_;
          }
          /**
           * <pre>
           * Off if unset
           * </pre>
           *
           * <code>optional float in_seconds = 2;</code>
           * @param value The inSeconds to set.
           * @return This builder for chaining.
           */
          public Builder setInSeconds(float value) {
            bitField0_ |= 0x00000002;
            inSeconds_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Off if unset
           * </pre>
           *
           * <code>optional float in_seconds = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearInSeconds() {
            bitField0_ = (bitField0_ & ~0x00000002);
            inSeconds_ = 0F;
            onChanged();
            return this;
          }

          private boolean outOn_ ;
          /**
           * <code>optional bool out_on = 3;</code>
           * @return Whether the outOn field is set.
           */
          @java.lang.Override
          public boolean hasOutOn() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <code>optional bool out_on = 3;</code>
           * @return The outOn.
           */
          @java.lang.Override
          public boolean getOutOn() {
            return outOn_;
          }
          /**
           * <code>optional bool out_on = 3;</code>
           * @param value The outOn to set.
           * @return This builder for chaining.
           */
          public Builder setOutOn(boolean value) {
            bitField0_ |= 0x00000004;
            outOn_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool out_on = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearOutOn() {
            bitField0_ = (bitField0_ & ~0x00000004);
            outOn_ = false;
            onChanged();
            return this;
          }

          private float outSeconds_ ;
          /**
           * <code>optional float out_seconds = 4;</code>
           * @return Whether the outSeconds field is set.
           */
          @java.lang.Override
          public boolean hasOutSeconds() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <code>optional float out_seconds = 4;</code>
           * @return The outSeconds.
           */
          @java.lang.Override
          public float getOutSeconds() {
            return outSeconds_;
          }
          /**
           * <code>optional float out_seconds = 4;</code>
           * @param value The outSeconds to set.
           * @return This builder for chaining.
           */
          public Builder setOutSeconds(float value) {
            bitField0_ |= 0x00000008;
            outSeconds_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float out_seconds = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearOutSeconds() {
            bitField0_ = (bitField0_ & ~0x00000008);
            outSeconds_ = 0F;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.Fade)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.Fade)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<Fade>
            PARSER = new com.google.protobuf.AbstractParser<Fade>() {
          @java.lang.Override
          public Fade parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Fade(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<Fade> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Fade> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface TrackOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.Track)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional int32 track_id = 1;</code>
         * @return Whether the trackId field is set.
         */
        boolean hasTrackId();
        /**
         * <code>optional int32 track_id = 1;</code>
         * @return The trackId.
         */
        int getTrackId();

        /**
         * <pre>
         * Default: True
         * </pre>
         *
         * <code>optional bool visible = 100;</code>
         * @return Whether the visible field is set.
         */
        boolean hasVisible();
        /**
         * <pre>
         * Default: True
         * </pre>
         *
         * <code>optional bool visible = 100;</code>
         * @return The visible.
         */
        boolean getVisible();

        /**
         * <pre>
         * Volume
         * </pre>
         *
         * <code>optional bool mute_audio = 101;</code>
         * @return Whether the muteAudio field is set.
         */
        boolean hasMuteAudio();
        /**
         * <pre>
         * Volume
         * </pre>
         *
         * <code>optional bool mute_audio = 101;</code>
         * @return The muteAudio.
         */
        boolean getMuteAudio();

        /**
         * <code>optional int32 clip_volume = 102;</code>
         * @return Whether the clipVolume field is set.
         */
        boolean hasClipVolume();
        /**
         * <code>optional int32 clip_volume = 102;</code>
         * @return The clipVolume.
         */
        int getClipVolume();

        /**
         * <pre>
         * 0: off, 4: on (default: 0)
         * </pre>
         *
         * <code>optional int32 compressor = 103;</code>
         * @return Whether the compressor field is set.
         */
        boolean hasCompressor();
        /**
         * <pre>
         * 0: off, 4: on (default: 0)
         * </pre>
         *
         * <code>optional int32 compressor = 103;</code>
         * @return The compressor.
         */
        int getCompressor();

        /**
         * <code>optional int32 pan_left = 104;</code>
         * @return Whether the panLeft field is set.
         */
        boolean hasPanLeft();
        /**
         * <code>optional int32 pan_left = 104;</code>
         * @return The panLeft.
         */
        int getPanLeft();

        /**
         * <code>optional int32 pan_right = 105;</code>
         * @return Whether the panRight field is set.
         */
        boolean hasPanRight();
        /**
         * <code>optional int32 pan_right = 105;</code>
         * @return The panRight.
         */
        int getPanRight();

        /**
         * <code>optional int32 pitch_factor = 106;</code>
         * @return Whether the pitchFactor field is set.
         */
        boolean hasPitchFactor();
        /**
         * <code>optional int32 pitch_factor = 106;</code>
         * @return The pitchFactor.
         */
        int getPitchFactor();

        /**
         * <pre>
         * Alpha Adjustment
         * </pre>
         *
         * <code>optional int32 overall_alpha = 107;</code>
         * @return Whether the overallAlpha field is set.
         */
        boolean hasOverallAlpha();
        /**
         * <pre>
         * Alpha Adjustment
         * </pre>
         *
         * <code>optional int32 overall_alpha = 107;</code>
         * @return The overallAlpha.
         */
        int getOverallAlpha();

        /**
         * <pre>
         * Text Styles
         * </pre>
         *
         * <code>optional bool override_text_style = 110;</code>
         * @return Whether the overrideTextStyle field is set.
         */
        boolean hasOverrideTextStyle();
        /**
         * <pre>
         * Text Styles
         * </pre>
         *
         * <code>optional bool override_text_style = 110;</code>
         * @return The overrideTextStyle.
         */
        boolean getOverrideTextStyle();

        /**
         * <code>optional string text_font_id = 111;</code>
         * @return Whether the textFontId field is set.
         */
        boolean hasTextFontId();
        /**
         * <code>optional string text_font_id = 111;</code>
         * @return The textFontId.
         */
        java.lang.String getTextFontId();
        /**
         * <code>optional string text_font_id = 111;</code>
         * @return The bytes for textFontId.
         */
        com.google.protobuf.ByteString
            getTextFontIdBytes();

        /**
         * <code>optional int32 text_color = 112;</code>
         * @return Whether the textColor field is set.
         */
        boolean hasTextColor();
        /**
         * <code>optional int32 text_color = 112;</code>
         * @return The textColor.
         */
        int getTextColor();

        /**
         * <code>optional bool text_shadow = 113;</code>
         * @return Whether the textShadow field is set.
         */
        boolean hasTextShadow();
        /**
         * <code>optional bool text_shadow = 113;</code>
         * @return The textShadow.
         */
        boolean getTextShadow();

        /**
         * <code>optional int32 text_shadow_color = 114;</code>
         * @return Whether the textShadowColor field is set.
         */
        boolean hasTextShadowColor();
        /**
         * <code>optional int32 text_shadow_color = 114;</code>
         * @return The textShadowColor.
         */
        int getTextShadowColor();

        /**
         * <code>optional bool text_glow = 115;</code>
         * @return Whether the textGlow field is set.
         */
        boolean hasTextGlow();
        /**
         * <code>optional bool text_glow = 115;</code>
         * @return The textGlow.
         */
        boolean getTextGlow();

        /**
         * <code>optional int32 text_glow_color = 116;</code>
         * @return Whether the textGlowColor field is set.
         */
        boolean hasTextGlowColor();
        /**
         * <code>optional int32 text_glow_color = 116;</code>
         * @return The textGlowColor.
         */
        int getTextGlowColor();

        /**
         * <code>optional bool text_outline = 117;</code>
         * @return Whether the textOutline field is set.
         */
        boolean hasTextOutline();
        /**
         * <code>optional bool text_outline = 117;</code>
         * @return The textOutline.
         */
        boolean getTextOutline();

        /**
         * <code>optional int32 text_outline_color = 118;</code>
         * @return Whether the textOutlineColor field is set.
         */
        boolean hasTextOutlineColor();
        /**
         * <code>optional int32 text_outline_color = 118;</code>
         * @return The textOutlineColor.
         */
        int getTextOutlineColor();
      }
      /**
       * Protobuf type {@code KMProto.KMProject.Track}
       */
      public static final class Track extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.Track)
          TrackOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Track.newBuilder() to construct.
        private Track(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Track() {
          textFontId_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new Track();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private Track(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  bitField0_ |= 0x00000001;
                  trackId_ = input.readInt32();
                  break;
                }
                case 800: {
                  bitField0_ |= 0x00000002;
                  visible_ = input.readBool();
                  break;
                }
                case 808: {
                  bitField0_ |= 0x00000004;
                  muteAudio_ = input.readBool();
                  break;
                }
                case 816: {
                  bitField0_ |= 0x00000008;
                  clipVolume_ = input.readInt32();
                  break;
                }
                case 824: {
                  bitField0_ |= 0x00000010;
                  compressor_ = input.readInt32();
                  break;
                }
                case 832: {
                  bitField0_ |= 0x00000020;
                  panLeft_ = input.readInt32();
                  break;
                }
                case 840: {
                  bitField0_ |= 0x00000040;
                  panRight_ = input.readInt32();
                  break;
                }
                case 848: {
                  bitField0_ |= 0x00000080;
                  pitchFactor_ = input.readInt32();
                  break;
                }
                case 856: {
                  bitField0_ |= 0x00000100;
                  overallAlpha_ = input.readInt32();
                  break;
                }
                case 880: {
                  bitField0_ |= 0x00000200;
                  overrideTextStyle_ = input.readBool();
                  break;
                }
                case 890: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000400;
                  textFontId_ = bs;
                  break;
                }
                case 896: {
                  bitField0_ |= 0x00000800;
                  textColor_ = input.readInt32();
                  break;
                }
                case 904: {
                  bitField0_ |= 0x00001000;
                  textShadow_ = input.readBool();
                  break;
                }
                case 912: {
                  bitField0_ |= 0x00002000;
                  textShadowColor_ = input.readInt32();
                  break;
                }
                case 920: {
                  bitField0_ |= 0x00004000;
                  textGlow_ = input.readBool();
                  break;
                }
                case 928: {
                  bitField0_ |= 0x00008000;
                  textGlowColor_ = input.readInt32();
                  break;
                }
                case 936: {
                  bitField0_ |= 0x00010000;
                  textOutline_ = input.readBool();
                  break;
                }
                case 944: {
                  bitField0_ |= 0x00020000;
                  textOutlineColor_ = input.readInt32();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_Track_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_Track_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track.Builder.class);
        }

        private int bitField0_;
        public static final int TRACK_ID_FIELD_NUMBER = 1;
        private int trackId_;
        /**
         * <code>optional int32 track_id = 1;</code>
         * @return Whether the trackId field is set.
         */
        @java.lang.Override
        public boolean hasTrackId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional int32 track_id = 1;</code>
         * @return The trackId.
         */
        @java.lang.Override
        public int getTrackId() {
          return trackId_;
        }

        public static final int VISIBLE_FIELD_NUMBER = 100;
        private boolean visible_;
        /**
         * <pre>
         * Default: True
         * </pre>
         *
         * <code>optional bool visible = 100;</code>
         * @return Whether the visible field is set.
         */
        @java.lang.Override
        public boolean hasVisible() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Default: True
         * </pre>
         *
         * <code>optional bool visible = 100;</code>
         * @return The visible.
         */
        @java.lang.Override
        public boolean getVisible() {
          return visible_;
        }

        public static final int MUTE_AUDIO_FIELD_NUMBER = 101;
        private boolean muteAudio_;
        /**
         * <pre>
         * Volume
         * </pre>
         *
         * <code>optional bool mute_audio = 101;</code>
         * @return Whether the muteAudio field is set.
         */
        @java.lang.Override
        public boolean hasMuteAudio() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Volume
         * </pre>
         *
         * <code>optional bool mute_audio = 101;</code>
         * @return The muteAudio.
         */
        @java.lang.Override
        public boolean getMuteAudio() {
          return muteAudio_;
        }

        public static final int CLIP_VOLUME_FIELD_NUMBER = 102;
        private int clipVolume_;
        /**
         * <code>optional int32 clip_volume = 102;</code>
         * @return Whether the clipVolume field is set.
         */
        @java.lang.Override
        public boolean hasClipVolume() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional int32 clip_volume = 102;</code>
         * @return The clipVolume.
         */
        @java.lang.Override
        public int getClipVolume() {
          return clipVolume_;
        }

        public static final int COMPRESSOR_FIELD_NUMBER = 103;
        private int compressor_;
        /**
         * <pre>
         * 0: off, 4: on (default: 0)
         * </pre>
         *
         * <code>optional int32 compressor = 103;</code>
         * @return Whether the compressor field is set.
         */
        @java.lang.Override
        public boolean hasCompressor() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * 0: off, 4: on (default: 0)
         * </pre>
         *
         * <code>optional int32 compressor = 103;</code>
         * @return The compressor.
         */
        @java.lang.Override
        public int getCompressor() {
          return compressor_;
        }

        public static final int PAN_LEFT_FIELD_NUMBER = 104;
        private int panLeft_;
        /**
         * <code>optional int32 pan_left = 104;</code>
         * @return Whether the panLeft field is set.
         */
        @java.lang.Override
        public boolean hasPanLeft() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional int32 pan_left = 104;</code>
         * @return The panLeft.
         */
        @java.lang.Override
        public int getPanLeft() {
          return panLeft_;
        }

        public static final int PAN_RIGHT_FIELD_NUMBER = 105;
        private int panRight_;
        /**
         * <code>optional int32 pan_right = 105;</code>
         * @return Whether the panRight field is set.
         */
        @java.lang.Override
        public boolean hasPanRight() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <code>optional int32 pan_right = 105;</code>
         * @return The panRight.
         */
        @java.lang.Override
        public int getPanRight() {
          return panRight_;
        }

        public static final int PITCH_FACTOR_FIELD_NUMBER = 106;
        private int pitchFactor_;
        /**
         * <code>optional int32 pitch_factor = 106;</code>
         * @return Whether the pitchFactor field is set.
         */
        @java.lang.Override
        public boolean hasPitchFactor() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <code>optional int32 pitch_factor = 106;</code>
         * @return The pitchFactor.
         */
        @java.lang.Override
        public int getPitchFactor() {
          return pitchFactor_;
        }

        public static final int OVERALL_ALPHA_FIELD_NUMBER = 107;
        private int overallAlpha_;
        /**
         * <pre>
         * Alpha Adjustment
         * </pre>
         *
         * <code>optional int32 overall_alpha = 107;</code>
         * @return Whether the overallAlpha field is set.
         */
        @java.lang.Override
        public boolean hasOverallAlpha() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <pre>
         * Alpha Adjustment
         * </pre>
         *
         * <code>optional int32 overall_alpha = 107;</code>
         * @return The overallAlpha.
         */
        @java.lang.Override
        public int getOverallAlpha() {
          return overallAlpha_;
        }

        public static final int OVERRIDE_TEXT_STYLE_FIELD_NUMBER = 110;
        private boolean overrideTextStyle_;
        /**
         * <pre>
         * Text Styles
         * </pre>
         *
         * <code>optional bool override_text_style = 110;</code>
         * @return Whether the overrideTextStyle field is set.
         */
        @java.lang.Override
        public boolean hasOverrideTextStyle() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <pre>
         * Text Styles
         * </pre>
         *
         * <code>optional bool override_text_style = 110;</code>
         * @return The overrideTextStyle.
         */
        @java.lang.Override
        public boolean getOverrideTextStyle() {
          return overrideTextStyle_;
        }

        public static final int TEXT_FONT_ID_FIELD_NUMBER = 111;
        private volatile java.lang.Object textFontId_;
        /**
         * <code>optional string text_font_id = 111;</code>
         * @return Whether the textFontId field is set.
         */
        @java.lang.Override
        public boolean hasTextFontId() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <code>optional string text_font_id = 111;</code>
         * @return The textFontId.
         */
        @java.lang.Override
        public java.lang.String getTextFontId() {
          java.lang.Object ref = textFontId_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              textFontId_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string text_font_id = 111;</code>
         * @return The bytes for textFontId.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getTextFontIdBytes() {
          java.lang.Object ref = textFontId_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            textFontId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int TEXT_COLOR_FIELD_NUMBER = 112;
        private int textColor_;
        /**
         * <code>optional int32 text_color = 112;</code>
         * @return Whether the textColor field is set.
         */
        @java.lang.Override
        public boolean hasTextColor() {
          return ((bitField0_ & 0x00000800) != 0);
        }
        /**
         * <code>optional int32 text_color = 112;</code>
         * @return The textColor.
         */
        @java.lang.Override
        public int getTextColor() {
          return textColor_;
        }

        public static final int TEXT_SHADOW_FIELD_NUMBER = 113;
        private boolean textShadow_;
        /**
         * <code>optional bool text_shadow = 113;</code>
         * @return Whether the textShadow field is set.
         */
        @java.lang.Override
        public boolean hasTextShadow() {
          return ((bitField0_ & 0x00001000) != 0);
        }
        /**
         * <code>optional bool text_shadow = 113;</code>
         * @return The textShadow.
         */
        @java.lang.Override
        public boolean getTextShadow() {
          return textShadow_;
        }

        public static final int TEXT_SHADOW_COLOR_FIELD_NUMBER = 114;
        private int textShadowColor_;
        /**
         * <code>optional int32 text_shadow_color = 114;</code>
         * @return Whether the textShadowColor field is set.
         */
        @java.lang.Override
        public boolean hasTextShadowColor() {
          return ((bitField0_ & 0x00002000) != 0);
        }
        /**
         * <code>optional int32 text_shadow_color = 114;</code>
         * @return The textShadowColor.
         */
        @java.lang.Override
        public int getTextShadowColor() {
          return textShadowColor_;
        }

        public static final int TEXT_GLOW_FIELD_NUMBER = 115;
        private boolean textGlow_;
        /**
         * <code>optional bool text_glow = 115;</code>
         * @return Whether the textGlow field is set.
         */
        @java.lang.Override
        public boolean hasTextGlow() {
          return ((bitField0_ & 0x00004000) != 0);
        }
        /**
         * <code>optional bool text_glow = 115;</code>
         * @return The textGlow.
         */
        @java.lang.Override
        public boolean getTextGlow() {
          return textGlow_;
        }

        public static final int TEXT_GLOW_COLOR_FIELD_NUMBER = 116;
        private int textGlowColor_;
        /**
         * <code>optional int32 text_glow_color = 116;</code>
         * @return Whether the textGlowColor field is set.
         */
        @java.lang.Override
        public boolean hasTextGlowColor() {
          return ((bitField0_ & 0x00008000) != 0);
        }
        /**
         * <code>optional int32 text_glow_color = 116;</code>
         * @return The textGlowColor.
         */
        @java.lang.Override
        public int getTextGlowColor() {
          return textGlowColor_;
        }

        public static final int TEXT_OUTLINE_FIELD_NUMBER = 117;
        private boolean textOutline_;
        /**
         * <code>optional bool text_outline = 117;</code>
         * @return Whether the textOutline field is set.
         */
        @java.lang.Override
        public boolean hasTextOutline() {
          return ((bitField0_ & 0x00010000) != 0);
        }
        /**
         * <code>optional bool text_outline = 117;</code>
         * @return The textOutline.
         */
        @java.lang.Override
        public boolean getTextOutline() {
          return textOutline_;
        }

        public static final int TEXT_OUTLINE_COLOR_FIELD_NUMBER = 118;
        private int textOutlineColor_;
        /**
         * <code>optional int32 text_outline_color = 118;</code>
         * @return Whether the textOutlineColor field is set.
         */
        @java.lang.Override
        public boolean hasTextOutlineColor() {
          return ((bitField0_ & 0x00020000) != 0);
        }
        /**
         * <code>optional int32 text_outline_color = 118;</code>
         * @return The textOutlineColor.
         */
        @java.lang.Override
        public int getTextOutlineColor() {
          return textOutlineColor_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeInt32(1, trackId_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeBool(100, visible_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeBool(101, muteAudio_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeInt32(102, clipVolume_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            output.writeInt32(103, compressor_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            output.writeInt32(104, panLeft_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            output.writeInt32(105, panRight_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            output.writeInt32(106, pitchFactor_);
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            output.writeInt32(107, overallAlpha_);
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            output.writeBool(110, overrideTextStyle_);
          }
          if (((bitField0_ & 0x00000400) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 111, textFontId_);
          }
          if (((bitField0_ & 0x00000800) != 0)) {
            output.writeInt32(112, textColor_);
          }
          if (((bitField0_ & 0x00001000) != 0)) {
            output.writeBool(113, textShadow_);
          }
          if (((bitField0_ & 0x00002000) != 0)) {
            output.writeInt32(114, textShadowColor_);
          }
          if (((bitField0_ & 0x00004000) != 0)) {
            output.writeBool(115, textGlow_);
          }
          if (((bitField0_ & 0x00008000) != 0)) {
            output.writeInt32(116, textGlowColor_);
          }
          if (((bitField0_ & 0x00010000) != 0)) {
            output.writeBool(117, textOutline_);
          }
          if (((bitField0_ & 0x00020000) != 0)) {
            output.writeInt32(118, textOutlineColor_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(1, trackId_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(100, visible_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(101, muteAudio_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(102, clipVolume_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(103, compressor_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(104, panLeft_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(105, panRight_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(106, pitchFactor_);
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(107, overallAlpha_);
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(110, overrideTextStyle_);
          }
          if (((bitField0_ & 0x00000400) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(111, textFontId_);
          }
          if (((bitField0_ & 0x00000800) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(112, textColor_);
          }
          if (((bitField0_ & 0x00001000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(113, textShadow_);
          }
          if (((bitField0_ & 0x00002000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(114, textShadowColor_);
          }
          if (((bitField0_ & 0x00004000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(115, textGlow_);
          }
          if (((bitField0_ & 0x00008000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(116, textGlowColor_);
          }
          if (((bitField0_ & 0x00010000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(117, textOutline_);
          }
          if (((bitField0_ & 0x00020000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(118, textOutlineColor_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track) obj;

          if (hasTrackId() != other.hasTrackId()) return false;
          if (hasTrackId()) {
            if (getTrackId()
                != other.getTrackId()) return false;
          }
          if (hasVisible() != other.hasVisible()) return false;
          if (hasVisible()) {
            if (getVisible()
                != other.getVisible()) return false;
          }
          if (hasMuteAudio() != other.hasMuteAudio()) return false;
          if (hasMuteAudio()) {
            if (getMuteAudio()
                != other.getMuteAudio()) return false;
          }
          if (hasClipVolume() != other.hasClipVolume()) return false;
          if (hasClipVolume()) {
            if (getClipVolume()
                != other.getClipVolume()) return false;
          }
          if (hasCompressor() != other.hasCompressor()) return false;
          if (hasCompressor()) {
            if (getCompressor()
                != other.getCompressor()) return false;
          }
          if (hasPanLeft() != other.hasPanLeft()) return false;
          if (hasPanLeft()) {
            if (getPanLeft()
                != other.getPanLeft()) return false;
          }
          if (hasPanRight() != other.hasPanRight()) return false;
          if (hasPanRight()) {
            if (getPanRight()
                != other.getPanRight()) return false;
          }
          if (hasPitchFactor() != other.hasPitchFactor()) return false;
          if (hasPitchFactor()) {
            if (getPitchFactor()
                != other.getPitchFactor()) return false;
          }
          if (hasOverallAlpha() != other.hasOverallAlpha()) return false;
          if (hasOverallAlpha()) {
            if (getOverallAlpha()
                != other.getOverallAlpha()) return false;
          }
          if (hasOverrideTextStyle() != other.hasOverrideTextStyle()) return false;
          if (hasOverrideTextStyle()) {
            if (getOverrideTextStyle()
                != other.getOverrideTextStyle()) return false;
          }
          if (hasTextFontId() != other.hasTextFontId()) return false;
          if (hasTextFontId()) {
            if (!getTextFontId()
                .equals(other.getTextFontId())) return false;
          }
          if (hasTextColor() != other.hasTextColor()) return false;
          if (hasTextColor()) {
            if (getTextColor()
                != other.getTextColor()) return false;
          }
          if (hasTextShadow() != other.hasTextShadow()) return false;
          if (hasTextShadow()) {
            if (getTextShadow()
                != other.getTextShadow()) return false;
          }
          if (hasTextShadowColor() != other.hasTextShadowColor()) return false;
          if (hasTextShadowColor()) {
            if (getTextShadowColor()
                != other.getTextShadowColor()) return false;
          }
          if (hasTextGlow() != other.hasTextGlow()) return false;
          if (hasTextGlow()) {
            if (getTextGlow()
                != other.getTextGlow()) return false;
          }
          if (hasTextGlowColor() != other.hasTextGlowColor()) return false;
          if (hasTextGlowColor()) {
            if (getTextGlowColor()
                != other.getTextGlowColor()) return false;
          }
          if (hasTextOutline() != other.hasTextOutline()) return false;
          if (hasTextOutline()) {
            if (getTextOutline()
                != other.getTextOutline()) return false;
          }
          if (hasTextOutlineColor() != other.hasTextOutlineColor()) return false;
          if (hasTextOutlineColor()) {
            if (getTextOutlineColor()
                != other.getTextOutlineColor()) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasTrackId()) {
            hash = (37 * hash) + TRACK_ID_FIELD_NUMBER;
            hash = (53 * hash) + getTrackId();
          }
          if (hasVisible()) {
            hash = (37 * hash) + VISIBLE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getVisible());
          }
          if (hasMuteAudio()) {
            hash = (37 * hash) + MUTE_AUDIO_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getMuteAudio());
          }
          if (hasClipVolume()) {
            hash = (37 * hash) + CLIP_VOLUME_FIELD_NUMBER;
            hash = (53 * hash) + getClipVolume();
          }
          if (hasCompressor()) {
            hash = (37 * hash) + COMPRESSOR_FIELD_NUMBER;
            hash = (53 * hash) + getCompressor();
          }
          if (hasPanLeft()) {
            hash = (37 * hash) + PAN_LEFT_FIELD_NUMBER;
            hash = (53 * hash) + getPanLeft();
          }
          if (hasPanRight()) {
            hash = (37 * hash) + PAN_RIGHT_FIELD_NUMBER;
            hash = (53 * hash) + getPanRight();
          }
          if (hasPitchFactor()) {
            hash = (37 * hash) + PITCH_FACTOR_FIELD_NUMBER;
            hash = (53 * hash) + getPitchFactor();
          }
          if (hasOverallAlpha()) {
            hash = (37 * hash) + OVERALL_ALPHA_FIELD_NUMBER;
            hash = (53 * hash) + getOverallAlpha();
          }
          if (hasOverrideTextStyle()) {
            hash = (37 * hash) + OVERRIDE_TEXT_STYLE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getOverrideTextStyle());
          }
          if (hasTextFontId()) {
            hash = (37 * hash) + TEXT_FONT_ID_FIELD_NUMBER;
            hash = (53 * hash) + getTextFontId().hashCode();
          }
          if (hasTextColor()) {
            hash = (37 * hash) + TEXT_COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getTextColor();
          }
          if (hasTextShadow()) {
            hash = (37 * hash) + TEXT_SHADOW_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getTextShadow());
          }
          if (hasTextShadowColor()) {
            hash = (37 * hash) + TEXT_SHADOW_COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getTextShadowColor();
          }
          if (hasTextGlow()) {
            hash = (37 * hash) + TEXT_GLOW_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getTextGlow());
          }
          if (hasTextGlowColor()) {
            hash = (37 * hash) + TEXT_GLOW_COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getTextGlowColor();
          }
          if (hasTextOutline()) {
            hash = (37 * hash) + TEXT_OUTLINE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getTextOutline());
          }
          if (hasTextOutlineColor()) {
            hash = (37 * hash) + TEXT_OUTLINE_COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getTextOutlineColor();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code KMProto.KMProject.Track}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.Track)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TrackOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_Track_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_Track_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            trackId_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            visible_ = false;
            bitField0_ = (bitField0_ & ~0x00000002);
            muteAudio_ = false;
            bitField0_ = (bitField0_ & ~0x00000004);
            clipVolume_ = 0;
            bitField0_ = (bitField0_ & ~0x00000008);
            compressor_ = 0;
            bitField0_ = (bitField0_ & ~0x00000010);
            panLeft_ = 0;
            bitField0_ = (bitField0_ & ~0x00000020);
            panRight_ = 0;
            bitField0_ = (bitField0_ & ~0x00000040);
            pitchFactor_ = 0;
            bitField0_ = (bitField0_ & ~0x00000080);
            overallAlpha_ = 0;
            bitField0_ = (bitField0_ & ~0x00000100);
            overrideTextStyle_ = false;
            bitField0_ = (bitField0_ & ~0x00000200);
            textFontId_ = "";
            bitField0_ = (bitField0_ & ~0x00000400);
            textColor_ = 0;
            bitField0_ = (bitField0_ & ~0x00000800);
            textShadow_ = false;
            bitField0_ = (bitField0_ & ~0x00001000);
            textShadowColor_ = 0;
            bitField0_ = (bitField0_ & ~0x00002000);
            textGlow_ = false;
            bitField0_ = (bitField0_ & ~0x00004000);
            textGlowColor_ = 0;
            bitField0_ = (bitField0_ & ~0x00008000);
            textOutline_ = false;
            bitField0_ = (bitField0_ & ~0x00010000);
            textOutlineColor_ = 0;
            bitField0_ = (bitField0_ & ~0x00020000);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_Track_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.trackId_ = trackId_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.visible_ = visible_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.muteAudio_ = muteAudio_;
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.clipVolume_ = clipVolume_;
              to_bitField0_ |= 0x00000008;
            }
            if (((from_bitField0_ & 0x00000010) != 0)) {
              result.compressor_ = compressor_;
              to_bitField0_ |= 0x00000010;
            }
            if (((from_bitField0_ & 0x00000020) != 0)) {
              result.panLeft_ = panLeft_;
              to_bitField0_ |= 0x00000020;
            }
            if (((from_bitField0_ & 0x00000040) != 0)) {
              result.panRight_ = panRight_;
              to_bitField0_ |= 0x00000040;
            }
            if (((from_bitField0_ & 0x00000080) != 0)) {
              result.pitchFactor_ = pitchFactor_;
              to_bitField0_ |= 0x00000080;
            }
            if (((from_bitField0_ & 0x00000100) != 0)) {
              result.overallAlpha_ = overallAlpha_;
              to_bitField0_ |= 0x00000100;
            }
            if (((from_bitField0_ & 0x00000200) != 0)) {
              result.overrideTextStyle_ = overrideTextStyle_;
              to_bitField0_ |= 0x00000200;
            }
            if (((from_bitField0_ & 0x00000400) != 0)) {
              to_bitField0_ |= 0x00000400;
            }
            result.textFontId_ = textFontId_;
            if (((from_bitField0_ & 0x00000800) != 0)) {
              result.textColor_ = textColor_;
              to_bitField0_ |= 0x00000800;
            }
            if (((from_bitField0_ & 0x00001000) != 0)) {
              result.textShadow_ = textShadow_;
              to_bitField0_ |= 0x00001000;
            }
            if (((from_bitField0_ & 0x00002000) != 0)) {
              result.textShadowColor_ = textShadowColor_;
              to_bitField0_ |= 0x00002000;
            }
            if (((from_bitField0_ & 0x00004000) != 0)) {
              result.textGlow_ = textGlow_;
              to_bitField0_ |= 0x00004000;
            }
            if (((from_bitField0_ & 0x00008000) != 0)) {
              result.textGlowColor_ = textGlowColor_;
              to_bitField0_ |= 0x00008000;
            }
            if (((from_bitField0_ & 0x00010000) != 0)) {
              result.textOutline_ = textOutline_;
              to_bitField0_ |= 0x00010000;
            }
            if (((from_bitField0_ & 0x00020000) != 0)) {
              result.textOutlineColor_ = textOutlineColor_;
              to_bitField0_ |= 0x00020000;
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track.getDefaultInstance()) return this;
            if (other.hasTrackId()) {
              setTrackId(other.getTrackId());
            }
            if (other.hasVisible()) {
              setVisible(other.getVisible());
            }
            if (other.hasMuteAudio()) {
              setMuteAudio(other.getMuteAudio());
            }
            if (other.hasClipVolume()) {
              setClipVolume(other.getClipVolume());
            }
            if (other.hasCompressor()) {
              setCompressor(other.getCompressor());
            }
            if (other.hasPanLeft()) {
              setPanLeft(other.getPanLeft());
            }
            if (other.hasPanRight()) {
              setPanRight(other.getPanRight());
            }
            if (other.hasPitchFactor()) {
              setPitchFactor(other.getPitchFactor());
            }
            if (other.hasOverallAlpha()) {
              setOverallAlpha(other.getOverallAlpha());
            }
            if (other.hasOverrideTextStyle()) {
              setOverrideTextStyle(other.getOverrideTextStyle());
            }
            if (other.hasTextFontId()) {
              bitField0_ |= 0x00000400;
              textFontId_ = other.textFontId_;
              onChanged();
            }
            if (other.hasTextColor()) {
              setTextColor(other.getTextColor());
            }
            if (other.hasTextShadow()) {
              setTextShadow(other.getTextShadow());
            }
            if (other.hasTextShadowColor()) {
              setTextShadowColor(other.getTextShadowColor());
            }
            if (other.hasTextGlow()) {
              setTextGlow(other.getTextGlow());
            }
            if (other.hasTextGlowColor()) {
              setTextGlowColor(other.getTextGlowColor());
            }
            if (other.hasTextOutline()) {
              setTextOutline(other.getTextOutline());
            }
            if (other.hasTextOutlineColor()) {
              setTextOutlineColor(other.getTextOutlineColor());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int trackId_ ;
          /**
           * <code>optional int32 track_id = 1;</code>
           * @return Whether the trackId field is set.
           */
          @java.lang.Override
          public boolean hasTrackId() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional int32 track_id = 1;</code>
           * @return The trackId.
           */
          @java.lang.Override
          public int getTrackId() {
            return trackId_;
          }
          /**
           * <code>optional int32 track_id = 1;</code>
           * @param value The trackId to set.
           * @return This builder for chaining.
           */
          public Builder setTrackId(int value) {
            bitField0_ |= 0x00000001;
            trackId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 track_id = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearTrackId() {
            bitField0_ = (bitField0_ & ~0x00000001);
            trackId_ = 0;
            onChanged();
            return this;
          }

          private boolean visible_ ;
          /**
           * <pre>
           * Default: True
           * </pre>
           *
           * <code>optional bool visible = 100;</code>
           * @return Whether the visible field is set.
           */
          @java.lang.Override
          public boolean hasVisible() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <pre>
           * Default: True
           * </pre>
           *
           * <code>optional bool visible = 100;</code>
           * @return The visible.
           */
          @java.lang.Override
          public boolean getVisible() {
            return visible_;
          }
          /**
           * <pre>
           * Default: True
           * </pre>
           *
           * <code>optional bool visible = 100;</code>
           * @param value The visible to set.
           * @return This builder for chaining.
           */
          public Builder setVisible(boolean value) {
            bitField0_ |= 0x00000002;
            visible_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Default: True
           * </pre>
           *
           * <code>optional bool visible = 100;</code>
           * @return This builder for chaining.
           */
          public Builder clearVisible() {
            bitField0_ = (bitField0_ & ~0x00000002);
            visible_ = false;
            onChanged();
            return this;
          }

          private boolean muteAudio_ ;
          /**
           * <pre>
           * Volume
           * </pre>
           *
           * <code>optional bool mute_audio = 101;</code>
           * @return Whether the muteAudio field is set.
           */
          @java.lang.Override
          public boolean hasMuteAudio() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           * Volume
           * </pre>
           *
           * <code>optional bool mute_audio = 101;</code>
           * @return The muteAudio.
           */
          @java.lang.Override
          public boolean getMuteAudio() {
            return muteAudio_;
          }
          /**
           * <pre>
           * Volume
           * </pre>
           *
           * <code>optional bool mute_audio = 101;</code>
           * @param value The muteAudio to set.
           * @return This builder for chaining.
           */
          public Builder setMuteAudio(boolean value) {
            bitField0_ |= 0x00000004;
            muteAudio_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Volume
           * </pre>
           *
           * <code>optional bool mute_audio = 101;</code>
           * @return This builder for chaining.
           */
          public Builder clearMuteAudio() {
            bitField0_ = (bitField0_ & ~0x00000004);
            muteAudio_ = false;
            onChanged();
            return this;
          }

          private int clipVolume_ ;
          /**
           * <code>optional int32 clip_volume = 102;</code>
           * @return Whether the clipVolume field is set.
           */
          @java.lang.Override
          public boolean hasClipVolume() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <code>optional int32 clip_volume = 102;</code>
           * @return The clipVolume.
           */
          @java.lang.Override
          public int getClipVolume() {
            return clipVolume_;
          }
          /**
           * <code>optional int32 clip_volume = 102;</code>
           * @param value The clipVolume to set.
           * @return This builder for chaining.
           */
          public Builder setClipVolume(int value) {
            bitField0_ |= 0x00000008;
            clipVolume_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 clip_volume = 102;</code>
           * @return This builder for chaining.
           */
          public Builder clearClipVolume() {
            bitField0_ = (bitField0_ & ~0x00000008);
            clipVolume_ = 0;
            onChanged();
            return this;
          }

          private int compressor_ ;
          /**
           * <pre>
           * 0: off, 4: on (default: 0)
           * </pre>
           *
           * <code>optional int32 compressor = 103;</code>
           * @return Whether the compressor field is set.
           */
          @java.lang.Override
          public boolean hasCompressor() {
            return ((bitField0_ & 0x00000010) != 0);
          }
          /**
           * <pre>
           * 0: off, 4: on (default: 0)
           * </pre>
           *
           * <code>optional int32 compressor = 103;</code>
           * @return The compressor.
           */
          @java.lang.Override
          public int getCompressor() {
            return compressor_;
          }
          /**
           * <pre>
           * 0: off, 4: on (default: 0)
           * </pre>
           *
           * <code>optional int32 compressor = 103;</code>
           * @param value The compressor to set.
           * @return This builder for chaining.
           */
          public Builder setCompressor(int value) {
            bitField0_ |= 0x00000010;
            compressor_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * 0: off, 4: on (default: 0)
           * </pre>
           *
           * <code>optional int32 compressor = 103;</code>
           * @return This builder for chaining.
           */
          public Builder clearCompressor() {
            bitField0_ = (bitField0_ & ~0x00000010);
            compressor_ = 0;
            onChanged();
            return this;
          }

          private int panLeft_ ;
          /**
           * <code>optional int32 pan_left = 104;</code>
           * @return Whether the panLeft field is set.
           */
          @java.lang.Override
          public boolean hasPanLeft() {
            return ((bitField0_ & 0x00000020) != 0);
          }
          /**
           * <code>optional int32 pan_left = 104;</code>
           * @return The panLeft.
           */
          @java.lang.Override
          public int getPanLeft() {
            return panLeft_;
          }
          /**
           * <code>optional int32 pan_left = 104;</code>
           * @param value The panLeft to set.
           * @return This builder for chaining.
           */
          public Builder setPanLeft(int value) {
            bitField0_ |= 0x00000020;
            panLeft_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 pan_left = 104;</code>
           * @return This builder for chaining.
           */
          public Builder clearPanLeft() {
            bitField0_ = (bitField0_ & ~0x00000020);
            panLeft_ = 0;
            onChanged();
            return this;
          }

          private int panRight_ ;
          /**
           * <code>optional int32 pan_right = 105;</code>
           * @return Whether the panRight field is set.
           */
          @java.lang.Override
          public boolean hasPanRight() {
            return ((bitField0_ & 0x00000040) != 0);
          }
          /**
           * <code>optional int32 pan_right = 105;</code>
           * @return The panRight.
           */
          @java.lang.Override
          public int getPanRight() {
            return panRight_;
          }
          /**
           * <code>optional int32 pan_right = 105;</code>
           * @param value The panRight to set.
           * @return This builder for chaining.
           */
          public Builder setPanRight(int value) {
            bitField0_ |= 0x00000040;
            panRight_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 pan_right = 105;</code>
           * @return This builder for chaining.
           */
          public Builder clearPanRight() {
            bitField0_ = (bitField0_ & ~0x00000040);
            panRight_ = 0;
            onChanged();
            return this;
          }

          private int pitchFactor_ ;
          /**
           * <code>optional int32 pitch_factor = 106;</code>
           * @return Whether the pitchFactor field is set.
           */
          @java.lang.Override
          public boolean hasPitchFactor() {
            return ((bitField0_ & 0x00000080) != 0);
          }
          /**
           * <code>optional int32 pitch_factor = 106;</code>
           * @return The pitchFactor.
           */
          @java.lang.Override
          public int getPitchFactor() {
            return pitchFactor_;
          }
          /**
           * <code>optional int32 pitch_factor = 106;</code>
           * @param value The pitchFactor to set.
           * @return This builder for chaining.
           */
          public Builder setPitchFactor(int value) {
            bitField0_ |= 0x00000080;
            pitchFactor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 pitch_factor = 106;</code>
           * @return This builder for chaining.
           */
          public Builder clearPitchFactor() {
            bitField0_ = (bitField0_ & ~0x00000080);
            pitchFactor_ = 0;
            onChanged();
            return this;
          }

          private int overallAlpha_ ;
          /**
           * <pre>
           * Alpha Adjustment
           * </pre>
           *
           * <code>optional int32 overall_alpha = 107;</code>
           * @return Whether the overallAlpha field is set.
           */
          @java.lang.Override
          public boolean hasOverallAlpha() {
            return ((bitField0_ & 0x00000100) != 0);
          }
          /**
           * <pre>
           * Alpha Adjustment
           * </pre>
           *
           * <code>optional int32 overall_alpha = 107;</code>
           * @return The overallAlpha.
           */
          @java.lang.Override
          public int getOverallAlpha() {
            return overallAlpha_;
          }
          /**
           * <pre>
           * Alpha Adjustment
           * </pre>
           *
           * <code>optional int32 overall_alpha = 107;</code>
           * @param value The overallAlpha to set.
           * @return This builder for chaining.
           */
          public Builder setOverallAlpha(int value) {
            bitField0_ |= 0x00000100;
            overallAlpha_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Alpha Adjustment
           * </pre>
           *
           * <code>optional int32 overall_alpha = 107;</code>
           * @return This builder for chaining.
           */
          public Builder clearOverallAlpha() {
            bitField0_ = (bitField0_ & ~0x00000100);
            overallAlpha_ = 0;
            onChanged();
            return this;
          }

          private boolean overrideTextStyle_ ;
          /**
           * <pre>
           * Text Styles
           * </pre>
           *
           * <code>optional bool override_text_style = 110;</code>
           * @return Whether the overrideTextStyle field is set.
           */
          @java.lang.Override
          public boolean hasOverrideTextStyle() {
            return ((bitField0_ & 0x00000200) != 0);
          }
          /**
           * <pre>
           * Text Styles
           * </pre>
           *
           * <code>optional bool override_text_style = 110;</code>
           * @return The overrideTextStyle.
           */
          @java.lang.Override
          public boolean getOverrideTextStyle() {
            return overrideTextStyle_;
          }
          /**
           * <pre>
           * Text Styles
           * </pre>
           *
           * <code>optional bool override_text_style = 110;</code>
           * @param value The overrideTextStyle to set.
           * @return This builder for chaining.
           */
          public Builder setOverrideTextStyle(boolean value) {
            bitField0_ |= 0x00000200;
            overrideTextStyle_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Text Styles
           * </pre>
           *
           * <code>optional bool override_text_style = 110;</code>
           * @return This builder for chaining.
           */
          public Builder clearOverrideTextStyle() {
            bitField0_ = (bitField0_ & ~0x00000200);
            overrideTextStyle_ = false;
            onChanged();
            return this;
          }

          private java.lang.Object textFontId_ = "";
          /**
           * <code>optional string text_font_id = 111;</code>
           * @return Whether the textFontId field is set.
           */
          public boolean hasTextFontId() {
            return ((bitField0_ & 0x00000400) != 0);
          }
          /**
           * <code>optional string text_font_id = 111;</code>
           * @return The textFontId.
           */
          public java.lang.String getTextFontId() {
            java.lang.Object ref = textFontId_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                textFontId_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string text_font_id = 111;</code>
           * @return The bytes for textFontId.
           */
          public com.google.protobuf.ByteString
              getTextFontIdBytes() {
            java.lang.Object ref = textFontId_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              textFontId_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string text_font_id = 111;</code>
           * @param value The textFontId to set.
           * @return This builder for chaining.
           */
          public Builder setTextFontId(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
            textFontId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string text_font_id = 111;</code>
           * @return This builder for chaining.
           */
          public Builder clearTextFontId() {
            bitField0_ = (bitField0_ & ~0x00000400);
            textFontId_ = getDefaultInstance().getTextFontId();
            onChanged();
            return this;
          }
          /**
           * <code>optional string text_font_id = 111;</code>
           * @param value The bytes for textFontId to set.
           * @return This builder for chaining.
           */
          public Builder setTextFontIdBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
            textFontId_ = value;
            onChanged();
            return this;
          }

          private int textColor_ ;
          /**
           * <code>optional int32 text_color = 112;</code>
           * @return Whether the textColor field is set.
           */
          @java.lang.Override
          public boolean hasTextColor() {
            return ((bitField0_ & 0x00000800) != 0);
          }
          /**
           * <code>optional int32 text_color = 112;</code>
           * @return The textColor.
           */
          @java.lang.Override
          public int getTextColor() {
            return textColor_;
          }
          /**
           * <code>optional int32 text_color = 112;</code>
           * @param value The textColor to set.
           * @return This builder for chaining.
           */
          public Builder setTextColor(int value) {
            bitField0_ |= 0x00000800;
            textColor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 text_color = 112;</code>
           * @return This builder for chaining.
           */
          public Builder clearTextColor() {
            bitField0_ = (bitField0_ & ~0x00000800);
            textColor_ = 0;
            onChanged();
            return this;
          }

          private boolean textShadow_ ;
          /**
           * <code>optional bool text_shadow = 113;</code>
           * @return Whether the textShadow field is set.
           */
          @java.lang.Override
          public boolean hasTextShadow() {
            return ((bitField0_ & 0x00001000) != 0);
          }
          /**
           * <code>optional bool text_shadow = 113;</code>
           * @return The textShadow.
           */
          @java.lang.Override
          public boolean getTextShadow() {
            return textShadow_;
          }
          /**
           * <code>optional bool text_shadow = 113;</code>
           * @param value The textShadow to set.
           * @return This builder for chaining.
           */
          public Builder setTextShadow(boolean value) {
            bitField0_ |= 0x00001000;
            textShadow_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool text_shadow = 113;</code>
           * @return This builder for chaining.
           */
          public Builder clearTextShadow() {
            bitField0_ = (bitField0_ & ~0x00001000);
            textShadow_ = false;
            onChanged();
            return this;
          }

          private int textShadowColor_ ;
          /**
           * <code>optional int32 text_shadow_color = 114;</code>
           * @return Whether the textShadowColor field is set.
           */
          @java.lang.Override
          public boolean hasTextShadowColor() {
            return ((bitField0_ & 0x00002000) != 0);
          }
          /**
           * <code>optional int32 text_shadow_color = 114;</code>
           * @return The textShadowColor.
           */
          @java.lang.Override
          public int getTextShadowColor() {
            return textShadowColor_;
          }
          /**
           * <code>optional int32 text_shadow_color = 114;</code>
           * @param value The textShadowColor to set.
           * @return This builder for chaining.
           */
          public Builder setTextShadowColor(int value) {
            bitField0_ |= 0x00002000;
            textShadowColor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 text_shadow_color = 114;</code>
           * @return This builder for chaining.
           */
          public Builder clearTextShadowColor() {
            bitField0_ = (bitField0_ & ~0x00002000);
            textShadowColor_ = 0;
            onChanged();
            return this;
          }

          private boolean textGlow_ ;
          /**
           * <code>optional bool text_glow = 115;</code>
           * @return Whether the textGlow field is set.
           */
          @java.lang.Override
          public boolean hasTextGlow() {
            return ((bitField0_ & 0x00004000) != 0);
          }
          /**
           * <code>optional bool text_glow = 115;</code>
           * @return The textGlow.
           */
          @java.lang.Override
          public boolean getTextGlow() {
            return textGlow_;
          }
          /**
           * <code>optional bool text_glow = 115;</code>
           * @param value The textGlow to set.
           * @return This builder for chaining.
           */
          public Builder setTextGlow(boolean value) {
            bitField0_ |= 0x00004000;
            textGlow_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool text_glow = 115;</code>
           * @return This builder for chaining.
           */
          public Builder clearTextGlow() {
            bitField0_ = (bitField0_ & ~0x00004000);
            textGlow_ = false;
            onChanged();
            return this;
          }

          private int textGlowColor_ ;
          /**
           * <code>optional int32 text_glow_color = 116;</code>
           * @return Whether the textGlowColor field is set.
           */
          @java.lang.Override
          public boolean hasTextGlowColor() {
            return ((bitField0_ & 0x00008000) != 0);
          }
          /**
           * <code>optional int32 text_glow_color = 116;</code>
           * @return The textGlowColor.
           */
          @java.lang.Override
          public int getTextGlowColor() {
            return textGlowColor_;
          }
          /**
           * <code>optional int32 text_glow_color = 116;</code>
           * @param value The textGlowColor to set.
           * @return This builder for chaining.
           */
          public Builder setTextGlowColor(int value) {
            bitField0_ |= 0x00008000;
            textGlowColor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 text_glow_color = 116;</code>
           * @return This builder for chaining.
           */
          public Builder clearTextGlowColor() {
            bitField0_ = (bitField0_ & ~0x00008000);
            textGlowColor_ = 0;
            onChanged();
            return this;
          }

          private boolean textOutline_ ;
          /**
           * <code>optional bool text_outline = 117;</code>
           * @return Whether the textOutline field is set.
           */
          @java.lang.Override
          public boolean hasTextOutline() {
            return ((bitField0_ & 0x00010000) != 0);
          }
          /**
           * <code>optional bool text_outline = 117;</code>
           * @return The textOutline.
           */
          @java.lang.Override
          public boolean getTextOutline() {
            return textOutline_;
          }
          /**
           * <code>optional bool text_outline = 117;</code>
           * @param value The textOutline to set.
           * @return This builder for chaining.
           */
          public Builder setTextOutline(boolean value) {
            bitField0_ |= 0x00010000;
            textOutline_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool text_outline = 117;</code>
           * @return This builder for chaining.
           */
          public Builder clearTextOutline() {
            bitField0_ = (bitField0_ & ~0x00010000);
            textOutline_ = false;
            onChanged();
            return this;
          }

          private int textOutlineColor_ ;
          /**
           * <code>optional int32 text_outline_color = 118;</code>
           * @return Whether the textOutlineColor field is set.
           */
          @java.lang.Override
          public boolean hasTextOutlineColor() {
            return ((bitField0_ & 0x00020000) != 0);
          }
          /**
           * <code>optional int32 text_outline_color = 118;</code>
           * @return The textOutlineColor.
           */
          @java.lang.Override
          public int getTextOutlineColor() {
            return textOutlineColor_;
          }
          /**
           * <code>optional int32 text_outline_color = 118;</code>
           * @param value The textOutlineColor to set.
           * @return This builder for chaining.
           */
          public Builder setTextOutlineColor(int value) {
            bitField0_ |= 0x00020000;
            textOutlineColor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 text_outline_color = 118;</code>
           * @return This builder for chaining.
           */
          public Builder clearTextOutlineColor() {
            bitField0_ = (bitField0_ & ~0x00020000);
            textOutlineColor_ = 0;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.Track)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.Track)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<Track>
            PARSER = new com.google.protobuf.AbstractParser<Track>() {
          @java.lang.Override
          public Track parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Track(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<Track> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Track> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface TimelineItemOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.TimelineItem)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Defines an individual primary or secondary timeline item.
         * </pre>
         *
         * <code>optional uint64 unique_id_lsb = 1;</code>
         * @return Whether the uniqueIdLsb field is set.
         */
        boolean hasUniqueIdLsb();
        /**
         * <pre>
         * Defines an individual primary or secondary timeline item.
         * </pre>
         *
         * <code>optional uint64 unique_id_lsb = 1;</code>
         * @return The uniqueIdLsb.
         */
        long getUniqueIdLsb();

        /**
         * <pre>
         * Most significant 64 bits of the timeline item 128-bit UUID
         * </pre>
         *
         * <code>optional uint64 unique_id_msb = 2;</code>
         * @return Whether the uniqueIdMsb field is set.
         */
        boolean hasUniqueIdMsb();
        /**
         * <pre>
         * Most significant 64 bits of the timeline item 128-bit UUID
         * </pre>
         *
         * <code>optional uint64 unique_id_msb = 2;</code>
         * @return The uniqueIdMsb.
         */
        long getUniqueIdMsb();

        /**
         * <pre>
         * The type of this item (see ClipType enum)
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ClipType clip_type = 3;</code>
         * @return Whether the clipType field is set.
         */
        boolean hasClipType();
        /**
         * <pre>
         * The type of this item (see ClipType enum)
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ClipType clip_type = 3;</code>
         * @return The clipType.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipType getClipType();

        /**
         * <pre>
         * Track ID; 0 for none (primary items must be 0)
         * </pre>
         *
         * <code>optional int32 track_id = 14;</code>
         * @return Whether the trackId field is set.
         */
        boolean hasTrackId();
        /**
         * <pre>
         * Track ID; 0 for none (primary items must be 0)
         * </pre>
         *
         * <code>optional int32 track_id = 14;</code>
         * @return The trackId.
         */
        int getTrackId();

        /**
         * <pre>
         * Only one of the following is used depending on clip_type
         * </pre>
         *
         * <code>optional .KMProto.KMProject.VisualClip visual_clip = 4;</code>
         * @return Whether the visualClip field is set.
         */
        boolean hasVisualClip();
        /**
         * <pre>
         * Only one of the following is used depending on clip_type
         * </pre>
         *
         * <code>optional .KMProto.KMProject.VisualClip visual_clip = 4;</code>
         * @return The visualClip.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip getVisualClip();
        /**
         * <pre>
         * Only one of the following is used depending on clip_type
         * </pre>
         *
         * <code>optional .KMProto.KMProject.VisualClip visual_clip = 4;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClipOrBuilder getVisualClipOrBuilder();

        /**
         * <pre>
         * A transition on the primary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Transition transition = 5;</code>
         * @return Whether the transition field is set.
         */
        boolean hasTransition();
        /**
         * <pre>
         * A transition on the primary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Transition transition = 5;</code>
         * @return The transition.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition getTransition();
        /**
         * <pre>
         * A transition on the primary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Transition transition = 5;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TransitionOrBuilder getTransitionOrBuilder();

        /**
         * <pre>
         * An audio clip on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.AudioClip audio_clip = 6;</code>
         * @return Whether the audioClip field is set.
         */
        boolean hasAudioClip();
        /**
         * <pre>
         * An audio clip on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.AudioClip audio_clip = 6;</code>
         * @return The audioClip.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip getAudioClip();
        /**
         * <pre>
         * An audio clip on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.AudioClip audio_clip = 6;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClipOrBuilder getAudioClipOrBuilder();

        /**
         * <pre>
         * A text layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.TextLayer text_layer = 7;</code>
         * @return Whether the textLayer field is set.
         */
        boolean hasTextLayer();
        /**
         * <pre>
         * A text layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.TextLayer text_layer = 7;</code>
         * @return The textLayer.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer getTextLayer();
        /**
         * <pre>
         * A text layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.TextLayer text_layer = 7;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayerOrBuilder getTextLayerOrBuilder();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.StickerLayer sticker_layer = 8;</code>
         * @return Whether the stickerLayer field is set.
         */
        boolean hasStickerLayer();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.StickerLayer sticker_layer = 8;</code>
         * @return The stickerLayer.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer getStickerLayer();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.StickerLayer sticker_layer = 8;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayerOrBuilder getStickerLayerOrBuilder();

        /**
         * <pre>
         * An image layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ImageLayer image_layer = 9;</code>
         * @return Whether the imageLayer field is set.
         */
        boolean hasImageLayer();
        /**
         * <pre>
         * An image layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ImageLayer image_layer = 9;</code>
         * @return The imageLayer.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer getImageLayer();
        /**
         * <pre>
         * An image layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ImageLayer image_layer = 9;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayerOrBuilder getImageLayerOrBuilder();

        /**
         * <pre>
         * A handwriting layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.HandwritingLayer handwriting_layer = 10;</code>
         * @return Whether the handwritingLayer field is set.
         */
        boolean hasHandwritingLayer();
        /**
         * <pre>
         * A handwriting layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.HandwritingLayer handwriting_layer = 10;</code>
         * @return The handwritingLayer.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer getHandwritingLayer();
        /**
         * <pre>
         * A handwriting layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.HandwritingLayer handwriting_layer = 10;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayerOrBuilder getHandwritingLayerOrBuilder();

        /**
         * <pre>
         * A video layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.VideoLayer video_layer = 11;</code>
         * @return Whether the videoLayer field is set.
         */
        boolean hasVideoLayer();
        /**
         * <pre>
         * A video layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.VideoLayer video_layer = 11;</code>
         * @return The videoLayer.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer getVideoLayer();
        /**
         * <pre>
         * A video layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.VideoLayer video_layer = 11;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayerOrBuilder getVideoLayerOrBuilder();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.EffectLayer effect_layer = 12;</code>
         * @return Whether the effectLayer field is set.
         */
        boolean hasEffectLayer();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.EffectLayer effect_layer = 12;</code>
         * @return The effectLayer.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer getEffectLayer();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.EffectLayer effect_layer = 12;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayerOrBuilder getEffectLayerOrBuilder();

        /**
         * <pre>
         * An asset layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.AssetLayer asset_layer = 13;</code>
         * @return Whether the assetLayer field is set.
         */
        boolean hasAssetLayer();
        /**
         * <pre>
         * An asset layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.AssetLayer asset_layer = 13;</code>
         * @return The assetLayer.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer getAssetLayer();
        /**
         * <pre>
         * An asset layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.AssetLayer asset_layer = 13;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayerOrBuilder getAssetLayerOrBuilder();

        /**
         * <pre>
         * An asset layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.GroupLayer group_layer = 15;</code>
         * @return Whether the groupLayer field is set.
         */
        boolean hasGroupLayer();
        /**
         * <pre>
         * An asset layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.GroupLayer group_layer = 15;</code>
         * @return The groupLayer.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer getGroupLayer();
        /**
         * <pre>
         * An asset layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.GroupLayer group_layer = 15;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayerOrBuilder getGroupLayerOrBuilder();
      }
      /**
       * Protobuf type {@code KMProto.KMProject.TimelineItem}
       */
      public static final class TimelineItem extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.TimelineItem)
          TimelineItemOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use TimelineItem.newBuilder() to construct.
        private TimelineItem(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private TimelineItem() {
          clipType_ = 1;
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new TimelineItem();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private TimelineItem(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  bitField0_ |= 0x00000001;
                  uniqueIdLsb_ = input.readUInt64();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  uniqueIdMsb_ = input.readUInt64();
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();
                    @SuppressWarnings("deprecation")
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipType value = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipType.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(3, rawValue);
                  } else {
                    bitField0_ |= 0x00000004;
                    clipType_ = rawValue;
                  }
                  break;
                }
                case 34: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000010) != 0)) {
                    subBuilder = visualClip_.toBuilder();
                  }
                  visualClip_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(visualClip_);
                    visualClip_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000010;
                  break;
                }
                case 42: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000020) != 0)) {
                    subBuilder = transition_.toBuilder();
                  }
                  transition_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(transition_);
                    transition_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000020;
                  break;
                }
                case 50: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000040) != 0)) {
                    subBuilder = audioClip_.toBuilder();
                  }
                  audioClip_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(audioClip_);
                    audioClip_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000040;
                  break;
                }
                case 58: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000080) != 0)) {
                    subBuilder = textLayer_.toBuilder();
                  }
                  textLayer_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(textLayer_);
                    textLayer_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000080;
                  break;
                }
                case 66: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000100) != 0)) {
                    subBuilder = stickerLayer_.toBuilder();
                  }
                  stickerLayer_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(stickerLayer_);
                    stickerLayer_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000100;
                  break;
                }
                case 74: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000200) != 0)) {
                    subBuilder = imageLayer_.toBuilder();
                  }
                  imageLayer_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(imageLayer_);
                    imageLayer_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000200;
                  break;
                }
                case 82: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000400) != 0)) {
                    subBuilder = handwritingLayer_.toBuilder();
                  }
                  handwritingLayer_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(handwritingLayer_);
                    handwritingLayer_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000400;
                  break;
                }
                case 90: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000800) != 0)) {
                    subBuilder = videoLayer_.toBuilder();
                  }
                  videoLayer_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(videoLayer_);
                    videoLayer_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000800;
                  break;
                }
                case 98: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer.Builder subBuilder = null;
                  if (((bitField0_ & 0x00001000) != 0)) {
                    subBuilder = effectLayer_.toBuilder();
                  }
                  effectLayer_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(effectLayer_);
                    effectLayer_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00001000;
                  break;
                }
                case 106: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.Builder subBuilder = null;
                  if (((bitField0_ & 0x00002000) != 0)) {
                    subBuilder = assetLayer_.toBuilder();
                  }
                  assetLayer_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(assetLayer_);
                    assetLayer_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00002000;
                  break;
                }
                case 112: {
                  bitField0_ |= 0x00000008;
                  trackId_ = input.readInt32();
                  break;
                }
                case 122: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer.Builder subBuilder = null;
                  if (((bitField0_ & 0x00004000) != 0)) {
                    subBuilder = groupLayer_.toBuilder();
                  }
                  groupLayer_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(groupLayer_);
                    groupLayer_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00004000;
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_TimelineItem_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_TimelineItem_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder.class);
        }

        private int bitField0_;
        public static final int UNIQUE_ID_LSB_FIELD_NUMBER = 1;
        private long uniqueIdLsb_;
        /**
         * <pre>
         * Defines an individual primary or secondary timeline item.
         * </pre>
         *
         * <code>optional uint64 unique_id_lsb = 1;</code>
         * @return Whether the uniqueIdLsb field is set.
         */
        @java.lang.Override
        public boolean hasUniqueIdLsb() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Defines an individual primary or secondary timeline item.
         * </pre>
         *
         * <code>optional uint64 unique_id_lsb = 1;</code>
         * @return The uniqueIdLsb.
         */
        @java.lang.Override
        public long getUniqueIdLsb() {
          return uniqueIdLsb_;
        }

        public static final int UNIQUE_ID_MSB_FIELD_NUMBER = 2;
        private long uniqueIdMsb_;
        /**
         * <pre>
         * Most significant 64 bits of the timeline item 128-bit UUID
         * </pre>
         *
         * <code>optional uint64 unique_id_msb = 2;</code>
         * @return Whether the uniqueIdMsb field is set.
         */
        @java.lang.Override
        public boolean hasUniqueIdMsb() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Most significant 64 bits of the timeline item 128-bit UUID
         * </pre>
         *
         * <code>optional uint64 unique_id_msb = 2;</code>
         * @return The uniqueIdMsb.
         */
        @java.lang.Override
        public long getUniqueIdMsb() {
          return uniqueIdMsb_;
        }

        public static final int CLIP_TYPE_FIELD_NUMBER = 3;
        private int clipType_;
        /**
         * <pre>
         * The type of this item (see ClipType enum)
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ClipType clip_type = 3;</code>
         * @return Whether the clipType field is set.
         */
        @java.lang.Override public boolean hasClipType() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * The type of this item (see ClipType enum)
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ClipType clip_type = 3;</code>
         * @return The clipType.
         */
        @java.lang.Override public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipType getClipType() {
          @SuppressWarnings("deprecation")
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipType result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipType.valueOf(clipType_);
          return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipType.VISUAL_CLIP : result;
        }

        public static final int TRACK_ID_FIELD_NUMBER = 14;
        private int trackId_;
        /**
         * <pre>
         * Track ID; 0 for none (primary items must be 0)
         * </pre>
         *
         * <code>optional int32 track_id = 14;</code>
         * @return Whether the trackId field is set.
         */
        @java.lang.Override
        public boolean hasTrackId() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * Track ID; 0 for none (primary items must be 0)
         * </pre>
         *
         * <code>optional int32 track_id = 14;</code>
         * @return The trackId.
         */
        @java.lang.Override
        public int getTrackId() {
          return trackId_;
        }

        public static final int VISUAL_CLIP_FIELD_NUMBER = 4;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip visualClip_;
        /**
         * <pre>
         * Only one of the following is used depending on clip_type
         * </pre>
         *
         * <code>optional .KMProto.KMProject.VisualClip visual_clip = 4;</code>
         * @return Whether the visualClip field is set.
         */
        @java.lang.Override
        public boolean hasVisualClip() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * Only one of the following is used depending on clip_type
         * </pre>
         *
         * <code>optional .KMProto.KMProject.VisualClip visual_clip = 4;</code>
         * @return The visualClip.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip getVisualClip() {
          return visualClip_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip.getDefaultInstance() : visualClip_;
        }
        /**
         * <pre>
         * Only one of the following is used depending on clip_type
         * </pre>
         *
         * <code>optional .KMProto.KMProject.VisualClip visual_clip = 4;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClipOrBuilder getVisualClipOrBuilder() {
          return visualClip_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip.getDefaultInstance() : visualClip_;
        }

        public static final int TRANSITION_FIELD_NUMBER = 5;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition transition_;
        /**
         * <pre>
         * A transition on the primary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Transition transition = 5;</code>
         * @return Whether the transition field is set.
         */
        @java.lang.Override
        public boolean hasTransition() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         * A transition on the primary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Transition transition = 5;</code>
         * @return The transition.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition getTransition() {
          return transition_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition.getDefaultInstance() : transition_;
        }
        /**
         * <pre>
         * A transition on the primary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Transition transition = 5;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TransitionOrBuilder getTransitionOrBuilder() {
          return transition_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition.getDefaultInstance() : transition_;
        }

        public static final int AUDIO_CLIP_FIELD_NUMBER = 6;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip audioClip_;
        /**
         * <pre>
         * An audio clip on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.AudioClip audio_clip = 6;</code>
         * @return Whether the audioClip field is set.
         */
        @java.lang.Override
        public boolean hasAudioClip() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         * An audio clip on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.AudioClip audio_clip = 6;</code>
         * @return The audioClip.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip getAudioClip() {
          return audioClip_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip.getDefaultInstance() : audioClip_;
        }
        /**
         * <pre>
         * An audio clip on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.AudioClip audio_clip = 6;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClipOrBuilder getAudioClipOrBuilder() {
          return audioClip_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip.getDefaultInstance() : audioClip_;
        }

        public static final int TEXT_LAYER_FIELD_NUMBER = 7;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer textLayer_;
        /**
         * <pre>
         * A text layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.TextLayer text_layer = 7;</code>
         * @return Whether the textLayer field is set.
         */
        @java.lang.Override
        public boolean hasTextLayer() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <pre>
         * A text layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.TextLayer text_layer = 7;</code>
         * @return The textLayer.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer getTextLayer() {
          return textLayer_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer.getDefaultInstance() : textLayer_;
        }
        /**
         * <pre>
         * A text layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.TextLayer text_layer = 7;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayerOrBuilder getTextLayerOrBuilder() {
          return textLayer_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer.getDefaultInstance() : textLayer_;
        }

        public static final int STICKER_LAYER_FIELD_NUMBER = 8;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer stickerLayer_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.StickerLayer sticker_layer = 8;</code>
         * @return Whether the stickerLayer field is set.
         */
        @java.lang.Override
        public boolean hasStickerLayer() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.StickerLayer sticker_layer = 8;</code>
         * @return The stickerLayer.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer getStickerLayer() {
          return stickerLayer_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer.getDefaultInstance() : stickerLayer_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.StickerLayer sticker_layer = 8;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayerOrBuilder getStickerLayerOrBuilder() {
          return stickerLayer_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer.getDefaultInstance() : stickerLayer_;
        }

        public static final int IMAGE_LAYER_FIELD_NUMBER = 9;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer imageLayer_;
        /**
         * <pre>
         * An image layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ImageLayer image_layer = 9;</code>
         * @return Whether the imageLayer field is set.
         */
        @java.lang.Override
        public boolean hasImageLayer() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <pre>
         * An image layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ImageLayer image_layer = 9;</code>
         * @return The imageLayer.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer getImageLayer() {
          return imageLayer_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer.getDefaultInstance() : imageLayer_;
        }
        /**
         * <pre>
         * An image layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ImageLayer image_layer = 9;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayerOrBuilder getImageLayerOrBuilder() {
          return imageLayer_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer.getDefaultInstance() : imageLayer_;
        }

        public static final int HANDWRITING_LAYER_FIELD_NUMBER = 10;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer handwritingLayer_;
        /**
         * <pre>
         * A handwriting layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.HandwritingLayer handwriting_layer = 10;</code>
         * @return Whether the handwritingLayer field is set.
         */
        @java.lang.Override
        public boolean hasHandwritingLayer() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <pre>
         * A handwriting layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.HandwritingLayer handwriting_layer = 10;</code>
         * @return The handwritingLayer.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer getHandwritingLayer() {
          return handwritingLayer_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer.getDefaultInstance() : handwritingLayer_;
        }
        /**
         * <pre>
         * A handwriting layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.HandwritingLayer handwriting_layer = 10;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayerOrBuilder getHandwritingLayerOrBuilder() {
          return handwritingLayer_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer.getDefaultInstance() : handwritingLayer_;
        }

        public static final int VIDEO_LAYER_FIELD_NUMBER = 11;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer videoLayer_;
        /**
         * <pre>
         * A video layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.VideoLayer video_layer = 11;</code>
         * @return Whether the videoLayer field is set.
         */
        @java.lang.Override
        public boolean hasVideoLayer() {
          return ((bitField0_ & 0x00000800) != 0);
        }
        /**
         * <pre>
         * A video layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.VideoLayer video_layer = 11;</code>
         * @return The videoLayer.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer getVideoLayer() {
          return videoLayer_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer.getDefaultInstance() : videoLayer_;
        }
        /**
         * <pre>
         * A video layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.VideoLayer video_layer = 11;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayerOrBuilder getVideoLayerOrBuilder() {
          return videoLayer_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer.getDefaultInstance() : videoLayer_;
        }

        public static final int EFFECT_LAYER_FIELD_NUMBER = 12;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer effectLayer_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.EffectLayer effect_layer = 12;</code>
         * @return Whether the effectLayer field is set.
         */
        @java.lang.Override
        public boolean hasEffectLayer() {
          return ((bitField0_ & 0x00001000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.EffectLayer effect_layer = 12;</code>
         * @return The effectLayer.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer getEffectLayer() {
          return effectLayer_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer.getDefaultInstance() : effectLayer_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.EffectLayer effect_layer = 12;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayerOrBuilder getEffectLayerOrBuilder() {
          return effectLayer_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer.getDefaultInstance() : effectLayer_;
        }

        public static final int ASSET_LAYER_FIELD_NUMBER = 13;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer assetLayer_;
        /**
         * <pre>
         * An asset layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.AssetLayer asset_layer = 13;</code>
         * @return Whether the assetLayer field is set.
         */
        @java.lang.Override
        public boolean hasAssetLayer() {
          return ((bitField0_ & 0x00002000) != 0);
        }
        /**
         * <pre>
         * An asset layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.AssetLayer asset_layer = 13;</code>
         * @return The assetLayer.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer getAssetLayer() {
          return assetLayer_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.getDefaultInstance() : assetLayer_;
        }
        /**
         * <pre>
         * An asset layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.AssetLayer asset_layer = 13;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayerOrBuilder getAssetLayerOrBuilder() {
          return assetLayer_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.getDefaultInstance() : assetLayer_;
        }

        public static final int GROUP_LAYER_FIELD_NUMBER = 15;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer groupLayer_;
        /**
         * <pre>
         * An asset layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.GroupLayer group_layer = 15;</code>
         * @return Whether the groupLayer field is set.
         */
        @java.lang.Override
        public boolean hasGroupLayer() {
          return ((bitField0_ & 0x00004000) != 0);
        }
        /**
         * <pre>
         * An asset layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.GroupLayer group_layer = 15;</code>
         * @return The groupLayer.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer getGroupLayer() {
          return groupLayer_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer.getDefaultInstance() : groupLayer_;
        }
        /**
         * <pre>
         * An asset layer on the secondary timeline
         * </pre>
         *
         * <code>optional .KMProto.KMProject.GroupLayer group_layer = 15;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayerOrBuilder getGroupLayerOrBuilder() {
          return groupLayer_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer.getDefaultInstance() : groupLayer_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeUInt64(1, uniqueIdLsb_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeUInt64(2, uniqueIdMsb_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeEnum(3, clipType_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            output.writeMessage(4, getVisualClip());
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            output.writeMessage(5, getTransition());
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            output.writeMessage(6, getAudioClip());
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            output.writeMessage(7, getTextLayer());
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            output.writeMessage(8, getStickerLayer());
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            output.writeMessage(9, getImageLayer());
          }
          if (((bitField0_ & 0x00000400) != 0)) {
            output.writeMessage(10, getHandwritingLayer());
          }
          if (((bitField0_ & 0x00000800) != 0)) {
            output.writeMessage(11, getVideoLayer());
          }
          if (((bitField0_ & 0x00001000) != 0)) {
            output.writeMessage(12, getEffectLayer());
          }
          if (((bitField0_ & 0x00002000) != 0)) {
            output.writeMessage(13, getAssetLayer());
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeInt32(14, trackId_);
          }
          if (((bitField0_ & 0x00004000) != 0)) {
            output.writeMessage(15, getGroupLayer());
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(1, uniqueIdLsb_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(2, uniqueIdMsb_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(3, clipType_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(4, getVisualClip());
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(5, getTransition());
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(6, getAudioClip());
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(7, getTextLayer());
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(8, getStickerLayer());
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(9, getImageLayer());
          }
          if (((bitField0_ & 0x00000400) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(10, getHandwritingLayer());
          }
          if (((bitField0_ & 0x00000800) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(11, getVideoLayer());
          }
          if (((bitField0_ & 0x00001000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(12, getEffectLayer());
          }
          if (((bitField0_ & 0x00002000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(13, getAssetLayer());
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(14, trackId_);
          }
          if (((bitField0_ & 0x00004000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(15, getGroupLayer());
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem) obj;

          if (hasUniqueIdLsb() != other.hasUniqueIdLsb()) return false;
          if (hasUniqueIdLsb()) {
            if (getUniqueIdLsb()
                != other.getUniqueIdLsb()) return false;
          }
          if (hasUniqueIdMsb() != other.hasUniqueIdMsb()) return false;
          if (hasUniqueIdMsb()) {
            if (getUniqueIdMsb()
                != other.getUniqueIdMsb()) return false;
          }
          if (hasClipType() != other.hasClipType()) return false;
          if (hasClipType()) {
            if (clipType_ != other.clipType_) return false;
          }
          if (hasTrackId() != other.hasTrackId()) return false;
          if (hasTrackId()) {
            if (getTrackId()
                != other.getTrackId()) return false;
          }
          if (hasVisualClip() != other.hasVisualClip()) return false;
          if (hasVisualClip()) {
            if (!getVisualClip()
                .equals(other.getVisualClip())) return false;
          }
          if (hasTransition() != other.hasTransition()) return false;
          if (hasTransition()) {
            if (!getTransition()
                .equals(other.getTransition())) return false;
          }
          if (hasAudioClip() != other.hasAudioClip()) return false;
          if (hasAudioClip()) {
            if (!getAudioClip()
                .equals(other.getAudioClip())) return false;
          }
          if (hasTextLayer() != other.hasTextLayer()) return false;
          if (hasTextLayer()) {
            if (!getTextLayer()
                .equals(other.getTextLayer())) return false;
          }
          if (hasStickerLayer() != other.hasStickerLayer()) return false;
          if (hasStickerLayer()) {
            if (!getStickerLayer()
                .equals(other.getStickerLayer())) return false;
          }
          if (hasImageLayer() != other.hasImageLayer()) return false;
          if (hasImageLayer()) {
            if (!getImageLayer()
                .equals(other.getImageLayer())) return false;
          }
          if (hasHandwritingLayer() != other.hasHandwritingLayer()) return false;
          if (hasHandwritingLayer()) {
            if (!getHandwritingLayer()
                .equals(other.getHandwritingLayer())) return false;
          }
          if (hasVideoLayer() != other.hasVideoLayer()) return false;
          if (hasVideoLayer()) {
            if (!getVideoLayer()
                .equals(other.getVideoLayer())) return false;
          }
          if (hasEffectLayer() != other.hasEffectLayer()) return false;
          if (hasEffectLayer()) {
            if (!getEffectLayer()
                .equals(other.getEffectLayer())) return false;
          }
          if (hasAssetLayer() != other.hasAssetLayer()) return false;
          if (hasAssetLayer()) {
            if (!getAssetLayer()
                .equals(other.getAssetLayer())) return false;
          }
          if (hasGroupLayer() != other.hasGroupLayer()) return false;
          if (hasGroupLayer()) {
            if (!getGroupLayer()
                .equals(other.getGroupLayer())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasUniqueIdLsb()) {
            hash = (37 * hash) + UNIQUE_ID_LSB_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getUniqueIdLsb());
          }
          if (hasUniqueIdMsb()) {
            hash = (37 * hash) + UNIQUE_ID_MSB_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getUniqueIdMsb());
          }
          if (hasClipType()) {
            hash = (37 * hash) + CLIP_TYPE_FIELD_NUMBER;
            hash = (53 * hash) + clipType_;
          }
          if (hasTrackId()) {
            hash = (37 * hash) + TRACK_ID_FIELD_NUMBER;
            hash = (53 * hash) + getTrackId();
          }
          if (hasVisualClip()) {
            hash = (37 * hash) + VISUAL_CLIP_FIELD_NUMBER;
            hash = (53 * hash) + getVisualClip().hashCode();
          }
          if (hasTransition()) {
            hash = (37 * hash) + TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getTransition().hashCode();
          }
          if (hasAudioClip()) {
            hash = (37 * hash) + AUDIO_CLIP_FIELD_NUMBER;
            hash = (53 * hash) + getAudioClip().hashCode();
          }
          if (hasTextLayer()) {
            hash = (37 * hash) + TEXT_LAYER_FIELD_NUMBER;
            hash = (53 * hash) + getTextLayer().hashCode();
          }
          if (hasStickerLayer()) {
            hash = (37 * hash) + STICKER_LAYER_FIELD_NUMBER;
            hash = (53 * hash) + getStickerLayer().hashCode();
          }
          if (hasImageLayer()) {
            hash = (37 * hash) + IMAGE_LAYER_FIELD_NUMBER;
            hash = (53 * hash) + getImageLayer().hashCode();
          }
          if (hasHandwritingLayer()) {
            hash = (37 * hash) + HANDWRITING_LAYER_FIELD_NUMBER;
            hash = (53 * hash) + getHandwritingLayer().hashCode();
          }
          if (hasVideoLayer()) {
            hash = (37 * hash) + VIDEO_LAYER_FIELD_NUMBER;
            hash = (53 * hash) + getVideoLayer().hashCode();
          }
          if (hasEffectLayer()) {
            hash = (37 * hash) + EFFECT_LAYER_FIELD_NUMBER;
            hash = (53 * hash) + getEffectLayer().hashCode();
          }
          if (hasAssetLayer()) {
            hash = (37 * hash) + ASSET_LAYER_FIELD_NUMBER;
            hash = (53 * hash) + getAssetLayer().hashCode();
          }
          if (hasGroupLayer()) {
            hash = (37 * hash) + GROUP_LAYER_FIELD_NUMBER;
            hash = (53 * hash) + getGroupLayer().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code KMProto.KMProject.TimelineItem}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.TimelineItem)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_TimelineItem_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_TimelineItem_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
              getVisualClipFieldBuilder();
              getTransitionFieldBuilder();
              getAudioClipFieldBuilder();
              getTextLayerFieldBuilder();
              getStickerLayerFieldBuilder();
              getImageLayerFieldBuilder();
              getHandwritingLayerFieldBuilder();
              getVideoLayerFieldBuilder();
              getEffectLayerFieldBuilder();
              getAssetLayerFieldBuilder();
              getGroupLayerFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            uniqueIdLsb_ = 0L;
            bitField0_ = (bitField0_ & ~0x00000001);
            uniqueIdMsb_ = 0L;
            bitField0_ = (bitField0_ & ~0x00000002);
            clipType_ = 1;
            bitField0_ = (bitField0_ & ~0x00000004);
            trackId_ = 0;
            bitField0_ = (bitField0_ & ~0x00000008);
            if (visualClipBuilder_ == null) {
              visualClip_ = null;
            } else {
              visualClipBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000010);
            if (transitionBuilder_ == null) {
              transition_ = null;
            } else {
              transitionBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000020);
            if (audioClipBuilder_ == null) {
              audioClip_ = null;
            } else {
              audioClipBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000040);
            if (textLayerBuilder_ == null) {
              textLayer_ = null;
            } else {
              textLayerBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000080);
            if (stickerLayerBuilder_ == null) {
              stickerLayer_ = null;
            } else {
              stickerLayerBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000100);
            if (imageLayerBuilder_ == null) {
              imageLayer_ = null;
            } else {
              imageLayerBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000200);
            if (handwritingLayerBuilder_ == null) {
              handwritingLayer_ = null;
            } else {
              handwritingLayerBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000400);
            if (videoLayerBuilder_ == null) {
              videoLayer_ = null;
            } else {
              videoLayerBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000800);
            if (effectLayerBuilder_ == null) {
              effectLayer_ = null;
            } else {
              effectLayerBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00001000);
            if (assetLayerBuilder_ == null) {
              assetLayer_ = null;
            } else {
              assetLayerBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00002000);
            if (groupLayerBuilder_ == null) {
              groupLayer_ = null;
            } else {
              groupLayerBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00004000);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_TimelineItem_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.uniqueIdLsb_ = uniqueIdLsb_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.uniqueIdMsb_ = uniqueIdMsb_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              to_bitField0_ |= 0x00000004;
            }
            result.clipType_ = clipType_;
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.trackId_ = trackId_;
              to_bitField0_ |= 0x00000008;
            }
            if (((from_bitField0_ & 0x00000010) != 0)) {
              if (visualClipBuilder_ == null) {
                result.visualClip_ = visualClip_;
              } else {
                result.visualClip_ = visualClipBuilder_.build();
              }
              to_bitField0_ |= 0x00000010;
            }
            if (((from_bitField0_ & 0x00000020) != 0)) {
              if (transitionBuilder_ == null) {
                result.transition_ = transition_;
              } else {
                result.transition_ = transitionBuilder_.build();
              }
              to_bitField0_ |= 0x00000020;
            }
            if (((from_bitField0_ & 0x00000040) != 0)) {
              if (audioClipBuilder_ == null) {
                result.audioClip_ = audioClip_;
              } else {
                result.audioClip_ = audioClipBuilder_.build();
              }
              to_bitField0_ |= 0x00000040;
            }
            if (((from_bitField0_ & 0x00000080) != 0)) {
              if (textLayerBuilder_ == null) {
                result.textLayer_ = textLayer_;
              } else {
                result.textLayer_ = textLayerBuilder_.build();
              }
              to_bitField0_ |= 0x00000080;
            }
            if (((from_bitField0_ & 0x00000100) != 0)) {
              if (stickerLayerBuilder_ == null) {
                result.stickerLayer_ = stickerLayer_;
              } else {
                result.stickerLayer_ = stickerLayerBuilder_.build();
              }
              to_bitField0_ |= 0x00000100;
            }
            if (((from_bitField0_ & 0x00000200) != 0)) {
              if (imageLayerBuilder_ == null) {
                result.imageLayer_ = imageLayer_;
              } else {
                result.imageLayer_ = imageLayerBuilder_.build();
              }
              to_bitField0_ |= 0x00000200;
            }
            if (((from_bitField0_ & 0x00000400) != 0)) {
              if (handwritingLayerBuilder_ == null) {
                result.handwritingLayer_ = handwritingLayer_;
              } else {
                result.handwritingLayer_ = handwritingLayerBuilder_.build();
              }
              to_bitField0_ |= 0x00000400;
            }
            if (((from_bitField0_ & 0x00000800) != 0)) {
              if (videoLayerBuilder_ == null) {
                result.videoLayer_ = videoLayer_;
              } else {
                result.videoLayer_ = videoLayerBuilder_.build();
              }
              to_bitField0_ |= 0x00000800;
            }
            if (((from_bitField0_ & 0x00001000) != 0)) {
              if (effectLayerBuilder_ == null) {
                result.effectLayer_ = effectLayer_;
              } else {
                result.effectLayer_ = effectLayerBuilder_.build();
              }
              to_bitField0_ |= 0x00001000;
            }
            if (((from_bitField0_ & 0x00002000) != 0)) {
              if (assetLayerBuilder_ == null) {
                result.assetLayer_ = assetLayer_;
              } else {
                result.assetLayer_ = assetLayerBuilder_.build();
              }
              to_bitField0_ |= 0x00002000;
            }
            if (((from_bitField0_ & 0x00004000) != 0)) {
              if (groupLayerBuilder_ == null) {
                result.groupLayer_ = groupLayer_;
              } else {
                result.groupLayer_ = groupLayerBuilder_.build();
              }
              to_bitField0_ |= 0x00004000;
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.getDefaultInstance()) return this;
            if (other.hasUniqueIdLsb()) {
              setUniqueIdLsb(other.getUniqueIdLsb());
            }
            if (other.hasUniqueIdMsb()) {
              setUniqueIdMsb(other.getUniqueIdMsb());
            }
            if (other.hasClipType()) {
              setClipType(other.getClipType());
            }
            if (other.hasTrackId()) {
              setTrackId(other.getTrackId());
            }
            if (other.hasVisualClip()) {
              mergeVisualClip(other.getVisualClip());
            }
            if (other.hasTransition()) {
              mergeTransition(other.getTransition());
            }
            if (other.hasAudioClip()) {
              mergeAudioClip(other.getAudioClip());
            }
            if (other.hasTextLayer()) {
              mergeTextLayer(other.getTextLayer());
            }
            if (other.hasStickerLayer()) {
              mergeStickerLayer(other.getStickerLayer());
            }
            if (other.hasImageLayer()) {
              mergeImageLayer(other.getImageLayer());
            }
            if (other.hasHandwritingLayer()) {
              mergeHandwritingLayer(other.getHandwritingLayer());
            }
            if (other.hasVideoLayer()) {
              mergeVideoLayer(other.getVideoLayer());
            }
            if (other.hasEffectLayer()) {
              mergeEffectLayer(other.getEffectLayer());
            }
            if (other.hasAssetLayer()) {
              mergeAssetLayer(other.getAssetLayer());
            }
            if (other.hasGroupLayer()) {
              mergeGroupLayer(other.getGroupLayer());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private long uniqueIdLsb_ ;
          /**
           * <pre>
           * Defines an individual primary or secondary timeline item.
           * </pre>
           *
           * <code>optional uint64 unique_id_lsb = 1;</code>
           * @return Whether the uniqueIdLsb field is set.
           */
          @java.lang.Override
          public boolean hasUniqueIdLsb() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <pre>
           * Defines an individual primary or secondary timeline item.
           * </pre>
           *
           * <code>optional uint64 unique_id_lsb = 1;</code>
           * @return The uniqueIdLsb.
           */
          @java.lang.Override
          public long getUniqueIdLsb() {
            return uniqueIdLsb_;
          }
          /**
           * <pre>
           * Defines an individual primary or secondary timeline item.
           * </pre>
           *
           * <code>optional uint64 unique_id_lsb = 1;</code>
           * @param value The uniqueIdLsb to set.
           * @return This builder for chaining.
           */
          public Builder setUniqueIdLsb(long value) {
            bitField0_ |= 0x00000001;
            uniqueIdLsb_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Defines an individual primary or secondary timeline item.
           * </pre>
           *
           * <code>optional uint64 unique_id_lsb = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearUniqueIdLsb() {
            bitField0_ = (bitField0_ & ~0x00000001);
            uniqueIdLsb_ = 0L;
            onChanged();
            return this;
          }

          private long uniqueIdMsb_ ;
          /**
           * <pre>
           * Most significant 64 bits of the timeline item 128-bit UUID
           * </pre>
           *
           * <code>optional uint64 unique_id_msb = 2;</code>
           * @return Whether the uniqueIdMsb field is set.
           */
          @java.lang.Override
          public boolean hasUniqueIdMsb() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <pre>
           * Most significant 64 bits of the timeline item 128-bit UUID
           * </pre>
           *
           * <code>optional uint64 unique_id_msb = 2;</code>
           * @return The uniqueIdMsb.
           */
          @java.lang.Override
          public long getUniqueIdMsb() {
            return uniqueIdMsb_;
          }
          /**
           * <pre>
           * Most significant 64 bits of the timeline item 128-bit UUID
           * </pre>
           *
           * <code>optional uint64 unique_id_msb = 2;</code>
           * @param value The uniqueIdMsb to set.
           * @return This builder for chaining.
           */
          public Builder setUniqueIdMsb(long value) {
            bitField0_ |= 0x00000002;
            uniqueIdMsb_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Most significant 64 bits of the timeline item 128-bit UUID
           * </pre>
           *
           * <code>optional uint64 unique_id_msb = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearUniqueIdMsb() {
            bitField0_ = (bitField0_ & ~0x00000002);
            uniqueIdMsb_ = 0L;
            onChanged();
            return this;
          }

          private int clipType_ = 1;
          /**
           * <pre>
           * The type of this item (see ClipType enum)
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ClipType clip_type = 3;</code>
           * @return Whether the clipType field is set.
           */
          @java.lang.Override public boolean hasClipType() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           * The type of this item (see ClipType enum)
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ClipType clip_type = 3;</code>
           * @return The clipType.
           */
          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipType getClipType() {
            @SuppressWarnings("deprecation")
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipType result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipType.valueOf(clipType_);
            return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipType.VISUAL_CLIP : result;
          }
          /**
           * <pre>
           * The type of this item (see ClipType enum)
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ClipType clip_type = 3;</code>
           * @param value The clipType to set.
           * @return This builder for chaining.
           */
          public Builder setClipType(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipType value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000004;
            clipType_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The type of this item (see ClipType enum)
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ClipType clip_type = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearClipType() {
            bitField0_ = (bitField0_ & ~0x00000004);
            clipType_ = 1;
            onChanged();
            return this;
          }

          private int trackId_ ;
          /**
           * <pre>
           * Track ID; 0 for none (primary items must be 0)
           * </pre>
           *
           * <code>optional int32 track_id = 14;</code>
           * @return Whether the trackId field is set.
           */
          @java.lang.Override
          public boolean hasTrackId() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <pre>
           * Track ID; 0 for none (primary items must be 0)
           * </pre>
           *
           * <code>optional int32 track_id = 14;</code>
           * @return The trackId.
           */
          @java.lang.Override
          public int getTrackId() {
            return trackId_;
          }
          /**
           * <pre>
           * Track ID; 0 for none (primary items must be 0)
           * </pre>
           *
           * <code>optional int32 track_id = 14;</code>
           * @param value The trackId to set.
           * @return This builder for chaining.
           */
          public Builder setTrackId(int value) {
            bitField0_ |= 0x00000008;
            trackId_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Track ID; 0 for none (primary items must be 0)
           * </pre>
           *
           * <code>optional int32 track_id = 14;</code>
           * @return This builder for chaining.
           */
          public Builder clearTrackId() {
            bitField0_ = (bitField0_ & ~0x00000008);
            trackId_ = 0;
            onChanged();
            return this;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip visualClip_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClipOrBuilder> visualClipBuilder_;
          /**
           * <pre>
           * Only one of the following is used depending on clip_type
           * </pre>
           *
           * <code>optional .KMProto.KMProject.VisualClip visual_clip = 4;</code>
           * @return Whether the visualClip field is set.
           */
          public boolean hasVisualClip() {
            return ((bitField0_ & 0x00000010) != 0);
          }
          /**
           * <pre>
           * Only one of the following is used depending on clip_type
           * </pre>
           *
           * <code>optional .KMProto.KMProject.VisualClip visual_clip = 4;</code>
           * @return The visualClip.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip getVisualClip() {
            if (visualClipBuilder_ == null) {
              return visualClip_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip.getDefaultInstance() : visualClip_;
            } else {
              return visualClipBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Only one of the following is used depending on clip_type
           * </pre>
           *
           * <code>optional .KMProto.KMProject.VisualClip visual_clip = 4;</code>
           */
          public Builder setVisualClip(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip value) {
            if (visualClipBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              visualClip_ = value;
              onChanged();
            } else {
              visualClipBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000010;
            return this;
          }
          /**
           * <pre>
           * Only one of the following is used depending on clip_type
           * </pre>
           *
           * <code>optional .KMProto.KMProject.VisualClip visual_clip = 4;</code>
           */
          public Builder setVisualClip(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip.Builder builderForValue) {
            if (visualClipBuilder_ == null) {
              visualClip_ = builderForValue.build();
              onChanged();
            } else {
              visualClipBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000010;
            return this;
          }
          /**
           * <pre>
           * Only one of the following is used depending on clip_type
           * </pre>
           *
           * <code>optional .KMProto.KMProject.VisualClip visual_clip = 4;</code>
           */
          public Builder mergeVisualClip(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip value) {
            if (visualClipBuilder_ == null) {
              if (((bitField0_ & 0x00000010) != 0) &&
                  visualClip_ != null &&
                  visualClip_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip.getDefaultInstance()) {
                visualClip_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip.newBuilder(visualClip_).mergeFrom(value).buildPartial();
              } else {
                visualClip_ = value;
              }
              onChanged();
            } else {
              visualClipBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000010;
            return this;
          }
          /**
           * <pre>
           * Only one of the following is used depending on clip_type
           * </pre>
           *
           * <code>optional .KMProto.KMProject.VisualClip visual_clip = 4;</code>
           */
          public Builder clearVisualClip() {
            if (visualClipBuilder_ == null) {
              visualClip_ = null;
              onChanged();
            } else {
              visualClipBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000010);
            return this;
          }
          /**
           * <pre>
           * Only one of the following is used depending on clip_type
           * </pre>
           *
           * <code>optional .KMProto.KMProject.VisualClip visual_clip = 4;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip.Builder getVisualClipBuilder() {
            bitField0_ |= 0x00000010;
            onChanged();
            return getVisualClipFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Only one of the following is used depending on clip_type
           * </pre>
           *
           * <code>optional .KMProto.KMProject.VisualClip visual_clip = 4;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClipOrBuilder getVisualClipOrBuilder() {
            if (visualClipBuilder_ != null) {
              return visualClipBuilder_.getMessageOrBuilder();
            } else {
              return visualClip_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip.getDefaultInstance() : visualClip_;
            }
          }
          /**
           * <pre>
           * Only one of the following is used depending on clip_type
           * </pre>
           *
           * <code>optional .KMProto.KMProject.VisualClip visual_clip = 4;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClipOrBuilder> 
              getVisualClipFieldBuilder() {
            if (visualClipBuilder_ == null) {
              visualClipBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClipOrBuilder>(
                      getVisualClip(),
                      getParentForChildren(),
                      isClean());
              visualClip_ = null;
            }
            return visualClipBuilder_;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition transition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TransitionOrBuilder> transitionBuilder_;
          /**
           * <pre>
           * A transition on the primary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Transition transition = 5;</code>
           * @return Whether the transition field is set.
           */
          public boolean hasTransition() {
            return ((bitField0_ & 0x00000020) != 0);
          }
          /**
           * <pre>
           * A transition on the primary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Transition transition = 5;</code>
           * @return The transition.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition getTransition() {
            if (transitionBuilder_ == null) {
              return transition_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition.getDefaultInstance() : transition_;
            } else {
              return transitionBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * A transition on the primary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Transition transition = 5;</code>
           */
          public Builder setTransition(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition value) {
            if (transitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              transition_ = value;
              onChanged();
            } else {
              transitionBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000020;
            return this;
          }
          /**
           * <pre>
           * A transition on the primary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Transition transition = 5;</code>
           */
          public Builder setTransition(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition.Builder builderForValue) {
            if (transitionBuilder_ == null) {
              transition_ = builderForValue.build();
              onChanged();
            } else {
              transitionBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000020;
            return this;
          }
          /**
           * <pre>
           * A transition on the primary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Transition transition = 5;</code>
           */
          public Builder mergeTransition(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition value) {
            if (transitionBuilder_ == null) {
              if (((bitField0_ & 0x00000020) != 0) &&
                  transition_ != null &&
                  transition_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition.getDefaultInstance()) {
                transition_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition.newBuilder(transition_).mergeFrom(value).buildPartial();
              } else {
                transition_ = value;
              }
              onChanged();
            } else {
              transitionBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000020;
            return this;
          }
          /**
           * <pre>
           * A transition on the primary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Transition transition = 5;</code>
           */
          public Builder clearTransition() {
            if (transitionBuilder_ == null) {
              transition_ = null;
              onChanged();
            } else {
              transitionBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000020);
            return this;
          }
          /**
           * <pre>
           * A transition on the primary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Transition transition = 5;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition.Builder getTransitionBuilder() {
            bitField0_ |= 0x00000020;
            onChanged();
            return getTransitionFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * A transition on the primary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Transition transition = 5;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TransitionOrBuilder getTransitionOrBuilder() {
            if (transitionBuilder_ != null) {
              return transitionBuilder_.getMessageOrBuilder();
            } else {
              return transition_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition.getDefaultInstance() : transition_;
            }
          }
          /**
           * <pre>
           * A transition on the primary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Transition transition = 5;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TransitionOrBuilder> 
              getTransitionFieldBuilder() {
            if (transitionBuilder_ == null) {
              transitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TransitionOrBuilder>(
                      getTransition(),
                      getParentForChildren(),
                      isClean());
              transition_ = null;
            }
            return transitionBuilder_;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip audioClip_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClipOrBuilder> audioClipBuilder_;
          /**
           * <pre>
           * An audio clip on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.AudioClip audio_clip = 6;</code>
           * @return Whether the audioClip field is set.
           */
          public boolean hasAudioClip() {
            return ((bitField0_ & 0x00000040) != 0);
          }
          /**
           * <pre>
           * An audio clip on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.AudioClip audio_clip = 6;</code>
           * @return The audioClip.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip getAudioClip() {
            if (audioClipBuilder_ == null) {
              return audioClip_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip.getDefaultInstance() : audioClip_;
            } else {
              return audioClipBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * An audio clip on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.AudioClip audio_clip = 6;</code>
           */
          public Builder setAudioClip(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip value) {
            if (audioClipBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              audioClip_ = value;
              onChanged();
            } else {
              audioClipBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000040;
            return this;
          }
          /**
           * <pre>
           * An audio clip on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.AudioClip audio_clip = 6;</code>
           */
          public Builder setAudioClip(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip.Builder builderForValue) {
            if (audioClipBuilder_ == null) {
              audioClip_ = builderForValue.build();
              onChanged();
            } else {
              audioClipBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000040;
            return this;
          }
          /**
           * <pre>
           * An audio clip on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.AudioClip audio_clip = 6;</code>
           */
          public Builder mergeAudioClip(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip value) {
            if (audioClipBuilder_ == null) {
              if (((bitField0_ & 0x00000040) != 0) &&
                  audioClip_ != null &&
                  audioClip_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip.getDefaultInstance()) {
                audioClip_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip.newBuilder(audioClip_).mergeFrom(value).buildPartial();
              } else {
                audioClip_ = value;
              }
              onChanged();
            } else {
              audioClipBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000040;
            return this;
          }
          /**
           * <pre>
           * An audio clip on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.AudioClip audio_clip = 6;</code>
           */
          public Builder clearAudioClip() {
            if (audioClipBuilder_ == null) {
              audioClip_ = null;
              onChanged();
            } else {
              audioClipBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000040);
            return this;
          }
          /**
           * <pre>
           * An audio clip on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.AudioClip audio_clip = 6;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip.Builder getAudioClipBuilder() {
            bitField0_ |= 0x00000040;
            onChanged();
            return getAudioClipFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * An audio clip on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.AudioClip audio_clip = 6;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClipOrBuilder getAudioClipOrBuilder() {
            if (audioClipBuilder_ != null) {
              return audioClipBuilder_.getMessageOrBuilder();
            } else {
              return audioClip_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip.getDefaultInstance() : audioClip_;
            }
          }
          /**
           * <pre>
           * An audio clip on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.AudioClip audio_clip = 6;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClipOrBuilder> 
              getAudioClipFieldBuilder() {
            if (audioClipBuilder_ == null) {
              audioClipBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClipOrBuilder>(
                      getAudioClip(),
                      getParentForChildren(),
                      isClean());
              audioClip_ = null;
            }
            return audioClipBuilder_;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer textLayer_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayerOrBuilder> textLayerBuilder_;
          /**
           * <pre>
           * A text layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.TextLayer text_layer = 7;</code>
           * @return Whether the textLayer field is set.
           */
          public boolean hasTextLayer() {
            return ((bitField0_ & 0x00000080) != 0);
          }
          /**
           * <pre>
           * A text layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.TextLayer text_layer = 7;</code>
           * @return The textLayer.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer getTextLayer() {
            if (textLayerBuilder_ == null) {
              return textLayer_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer.getDefaultInstance() : textLayer_;
            } else {
              return textLayerBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * A text layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.TextLayer text_layer = 7;</code>
           */
          public Builder setTextLayer(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer value) {
            if (textLayerBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              textLayer_ = value;
              onChanged();
            } else {
              textLayerBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000080;
            return this;
          }
          /**
           * <pre>
           * A text layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.TextLayer text_layer = 7;</code>
           */
          public Builder setTextLayer(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer.Builder builderForValue) {
            if (textLayerBuilder_ == null) {
              textLayer_ = builderForValue.build();
              onChanged();
            } else {
              textLayerBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000080;
            return this;
          }
          /**
           * <pre>
           * A text layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.TextLayer text_layer = 7;</code>
           */
          public Builder mergeTextLayer(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer value) {
            if (textLayerBuilder_ == null) {
              if (((bitField0_ & 0x00000080) != 0) &&
                  textLayer_ != null &&
                  textLayer_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer.getDefaultInstance()) {
                textLayer_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer.newBuilder(textLayer_).mergeFrom(value).buildPartial();
              } else {
                textLayer_ = value;
              }
              onChanged();
            } else {
              textLayerBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000080;
            return this;
          }
          /**
           * <pre>
           * A text layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.TextLayer text_layer = 7;</code>
           */
          public Builder clearTextLayer() {
            if (textLayerBuilder_ == null) {
              textLayer_ = null;
              onChanged();
            } else {
              textLayerBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000080);
            return this;
          }
          /**
           * <pre>
           * A text layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.TextLayer text_layer = 7;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer.Builder getTextLayerBuilder() {
            bitField0_ |= 0x00000080;
            onChanged();
            return getTextLayerFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * A text layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.TextLayer text_layer = 7;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayerOrBuilder getTextLayerOrBuilder() {
            if (textLayerBuilder_ != null) {
              return textLayerBuilder_.getMessageOrBuilder();
            } else {
              return textLayer_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer.getDefaultInstance() : textLayer_;
            }
          }
          /**
           * <pre>
           * A text layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.TextLayer text_layer = 7;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayerOrBuilder> 
              getTextLayerFieldBuilder() {
            if (textLayerBuilder_ == null) {
              textLayerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayerOrBuilder>(
                      getTextLayer(),
                      getParentForChildren(),
                      isClean());
              textLayer_ = null;
            }
            return textLayerBuilder_;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer stickerLayer_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayerOrBuilder> stickerLayerBuilder_;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StickerLayer sticker_layer = 8;</code>
           * @return Whether the stickerLayer field is set.
           */
          public boolean hasStickerLayer() {
            return ((bitField0_ & 0x00000100) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StickerLayer sticker_layer = 8;</code>
           * @return The stickerLayer.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer getStickerLayer() {
            if (stickerLayerBuilder_ == null) {
              return stickerLayer_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer.getDefaultInstance() : stickerLayer_;
            } else {
              return stickerLayerBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StickerLayer sticker_layer = 8;</code>
           */
          public Builder setStickerLayer(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer value) {
            if (stickerLayerBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              stickerLayer_ = value;
              onChanged();
            } else {
              stickerLayerBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000100;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StickerLayer sticker_layer = 8;</code>
           */
          public Builder setStickerLayer(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer.Builder builderForValue) {
            if (stickerLayerBuilder_ == null) {
              stickerLayer_ = builderForValue.build();
              onChanged();
            } else {
              stickerLayerBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000100;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StickerLayer sticker_layer = 8;</code>
           */
          public Builder mergeStickerLayer(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer value) {
            if (stickerLayerBuilder_ == null) {
              if (((bitField0_ & 0x00000100) != 0) &&
                  stickerLayer_ != null &&
                  stickerLayer_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer.getDefaultInstance()) {
                stickerLayer_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer.newBuilder(stickerLayer_).mergeFrom(value).buildPartial();
              } else {
                stickerLayer_ = value;
              }
              onChanged();
            } else {
              stickerLayerBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000100;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StickerLayer sticker_layer = 8;</code>
           */
          public Builder clearStickerLayer() {
            if (stickerLayerBuilder_ == null) {
              stickerLayer_ = null;
              onChanged();
            } else {
              stickerLayerBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000100);
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StickerLayer sticker_layer = 8;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer.Builder getStickerLayerBuilder() {
            bitField0_ |= 0x00000100;
            onChanged();
            return getStickerLayerFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StickerLayer sticker_layer = 8;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayerOrBuilder getStickerLayerOrBuilder() {
            if (stickerLayerBuilder_ != null) {
              return stickerLayerBuilder_.getMessageOrBuilder();
            } else {
              return stickerLayer_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer.getDefaultInstance() : stickerLayer_;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StickerLayer sticker_layer = 8;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayerOrBuilder> 
              getStickerLayerFieldBuilder() {
            if (stickerLayerBuilder_ == null) {
              stickerLayerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayerOrBuilder>(
                      getStickerLayer(),
                      getParentForChildren(),
                      isClean());
              stickerLayer_ = null;
            }
            return stickerLayerBuilder_;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer imageLayer_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayerOrBuilder> imageLayerBuilder_;
          /**
           * <pre>
           * An image layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ImageLayer image_layer = 9;</code>
           * @return Whether the imageLayer field is set.
           */
          public boolean hasImageLayer() {
            return ((bitField0_ & 0x00000200) != 0);
          }
          /**
           * <pre>
           * An image layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ImageLayer image_layer = 9;</code>
           * @return The imageLayer.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer getImageLayer() {
            if (imageLayerBuilder_ == null) {
              return imageLayer_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer.getDefaultInstance() : imageLayer_;
            } else {
              return imageLayerBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * An image layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ImageLayer image_layer = 9;</code>
           */
          public Builder setImageLayer(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer value) {
            if (imageLayerBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              imageLayer_ = value;
              onChanged();
            } else {
              imageLayerBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000200;
            return this;
          }
          /**
           * <pre>
           * An image layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ImageLayer image_layer = 9;</code>
           */
          public Builder setImageLayer(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer.Builder builderForValue) {
            if (imageLayerBuilder_ == null) {
              imageLayer_ = builderForValue.build();
              onChanged();
            } else {
              imageLayerBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000200;
            return this;
          }
          /**
           * <pre>
           * An image layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ImageLayer image_layer = 9;</code>
           */
          public Builder mergeImageLayer(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer value) {
            if (imageLayerBuilder_ == null) {
              if (((bitField0_ & 0x00000200) != 0) &&
                  imageLayer_ != null &&
                  imageLayer_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer.getDefaultInstance()) {
                imageLayer_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer.newBuilder(imageLayer_).mergeFrom(value).buildPartial();
              } else {
                imageLayer_ = value;
              }
              onChanged();
            } else {
              imageLayerBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000200;
            return this;
          }
          /**
           * <pre>
           * An image layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ImageLayer image_layer = 9;</code>
           */
          public Builder clearImageLayer() {
            if (imageLayerBuilder_ == null) {
              imageLayer_ = null;
              onChanged();
            } else {
              imageLayerBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000200);
            return this;
          }
          /**
           * <pre>
           * An image layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ImageLayer image_layer = 9;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer.Builder getImageLayerBuilder() {
            bitField0_ |= 0x00000200;
            onChanged();
            return getImageLayerFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * An image layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ImageLayer image_layer = 9;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayerOrBuilder getImageLayerOrBuilder() {
            if (imageLayerBuilder_ != null) {
              return imageLayerBuilder_.getMessageOrBuilder();
            } else {
              return imageLayer_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer.getDefaultInstance() : imageLayer_;
            }
          }
          /**
           * <pre>
           * An image layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ImageLayer image_layer = 9;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayerOrBuilder> 
              getImageLayerFieldBuilder() {
            if (imageLayerBuilder_ == null) {
              imageLayerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayerOrBuilder>(
                      getImageLayer(),
                      getParentForChildren(),
                      isClean());
              imageLayer_ = null;
            }
            return imageLayerBuilder_;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer handwritingLayer_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayerOrBuilder> handwritingLayerBuilder_;
          /**
           * <pre>
           * A handwriting layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.HandwritingLayer handwriting_layer = 10;</code>
           * @return Whether the handwritingLayer field is set.
           */
          public boolean hasHandwritingLayer() {
            return ((bitField0_ & 0x00000400) != 0);
          }
          /**
           * <pre>
           * A handwriting layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.HandwritingLayer handwriting_layer = 10;</code>
           * @return The handwritingLayer.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer getHandwritingLayer() {
            if (handwritingLayerBuilder_ == null) {
              return handwritingLayer_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer.getDefaultInstance() : handwritingLayer_;
            } else {
              return handwritingLayerBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * A handwriting layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.HandwritingLayer handwriting_layer = 10;</code>
           */
          public Builder setHandwritingLayer(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer value) {
            if (handwritingLayerBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              handwritingLayer_ = value;
              onChanged();
            } else {
              handwritingLayerBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000400;
            return this;
          }
          /**
           * <pre>
           * A handwriting layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.HandwritingLayer handwriting_layer = 10;</code>
           */
          public Builder setHandwritingLayer(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer.Builder builderForValue) {
            if (handwritingLayerBuilder_ == null) {
              handwritingLayer_ = builderForValue.build();
              onChanged();
            } else {
              handwritingLayerBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000400;
            return this;
          }
          /**
           * <pre>
           * A handwriting layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.HandwritingLayer handwriting_layer = 10;</code>
           */
          public Builder mergeHandwritingLayer(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer value) {
            if (handwritingLayerBuilder_ == null) {
              if (((bitField0_ & 0x00000400) != 0) &&
                  handwritingLayer_ != null &&
                  handwritingLayer_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer.getDefaultInstance()) {
                handwritingLayer_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer.newBuilder(handwritingLayer_).mergeFrom(value).buildPartial();
              } else {
                handwritingLayer_ = value;
              }
              onChanged();
            } else {
              handwritingLayerBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000400;
            return this;
          }
          /**
           * <pre>
           * A handwriting layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.HandwritingLayer handwriting_layer = 10;</code>
           */
          public Builder clearHandwritingLayer() {
            if (handwritingLayerBuilder_ == null) {
              handwritingLayer_ = null;
              onChanged();
            } else {
              handwritingLayerBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000400);
            return this;
          }
          /**
           * <pre>
           * A handwriting layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.HandwritingLayer handwriting_layer = 10;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer.Builder getHandwritingLayerBuilder() {
            bitField0_ |= 0x00000400;
            onChanged();
            return getHandwritingLayerFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * A handwriting layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.HandwritingLayer handwriting_layer = 10;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayerOrBuilder getHandwritingLayerOrBuilder() {
            if (handwritingLayerBuilder_ != null) {
              return handwritingLayerBuilder_.getMessageOrBuilder();
            } else {
              return handwritingLayer_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer.getDefaultInstance() : handwritingLayer_;
            }
          }
          /**
           * <pre>
           * A handwriting layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.HandwritingLayer handwriting_layer = 10;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayerOrBuilder> 
              getHandwritingLayerFieldBuilder() {
            if (handwritingLayerBuilder_ == null) {
              handwritingLayerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayerOrBuilder>(
                      getHandwritingLayer(),
                      getParentForChildren(),
                      isClean());
              handwritingLayer_ = null;
            }
            return handwritingLayerBuilder_;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer videoLayer_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayerOrBuilder> videoLayerBuilder_;
          /**
           * <pre>
           * A video layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.VideoLayer video_layer = 11;</code>
           * @return Whether the videoLayer field is set.
           */
          public boolean hasVideoLayer() {
            return ((bitField0_ & 0x00000800) != 0);
          }
          /**
           * <pre>
           * A video layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.VideoLayer video_layer = 11;</code>
           * @return The videoLayer.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer getVideoLayer() {
            if (videoLayerBuilder_ == null) {
              return videoLayer_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer.getDefaultInstance() : videoLayer_;
            } else {
              return videoLayerBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * A video layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.VideoLayer video_layer = 11;</code>
           */
          public Builder setVideoLayer(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer value) {
            if (videoLayerBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              videoLayer_ = value;
              onChanged();
            } else {
              videoLayerBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000800;
            return this;
          }
          /**
           * <pre>
           * A video layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.VideoLayer video_layer = 11;</code>
           */
          public Builder setVideoLayer(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer.Builder builderForValue) {
            if (videoLayerBuilder_ == null) {
              videoLayer_ = builderForValue.build();
              onChanged();
            } else {
              videoLayerBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000800;
            return this;
          }
          /**
           * <pre>
           * A video layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.VideoLayer video_layer = 11;</code>
           */
          public Builder mergeVideoLayer(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer value) {
            if (videoLayerBuilder_ == null) {
              if (((bitField0_ & 0x00000800) != 0) &&
                  videoLayer_ != null &&
                  videoLayer_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer.getDefaultInstance()) {
                videoLayer_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer.newBuilder(videoLayer_).mergeFrom(value).buildPartial();
              } else {
                videoLayer_ = value;
              }
              onChanged();
            } else {
              videoLayerBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000800;
            return this;
          }
          /**
           * <pre>
           * A video layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.VideoLayer video_layer = 11;</code>
           */
          public Builder clearVideoLayer() {
            if (videoLayerBuilder_ == null) {
              videoLayer_ = null;
              onChanged();
            } else {
              videoLayerBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000800);
            return this;
          }
          /**
           * <pre>
           * A video layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.VideoLayer video_layer = 11;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer.Builder getVideoLayerBuilder() {
            bitField0_ |= 0x00000800;
            onChanged();
            return getVideoLayerFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * A video layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.VideoLayer video_layer = 11;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayerOrBuilder getVideoLayerOrBuilder() {
            if (videoLayerBuilder_ != null) {
              return videoLayerBuilder_.getMessageOrBuilder();
            } else {
              return videoLayer_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer.getDefaultInstance() : videoLayer_;
            }
          }
          /**
           * <pre>
           * A video layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.VideoLayer video_layer = 11;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayerOrBuilder> 
              getVideoLayerFieldBuilder() {
            if (videoLayerBuilder_ == null) {
              videoLayerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayerOrBuilder>(
                      getVideoLayer(),
                      getParentForChildren(),
                      isClean());
              videoLayer_ = null;
            }
            return videoLayerBuilder_;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer effectLayer_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayerOrBuilder> effectLayerBuilder_;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.EffectLayer effect_layer = 12;</code>
           * @return Whether the effectLayer field is set.
           */
          public boolean hasEffectLayer() {
            return ((bitField0_ & 0x00001000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.EffectLayer effect_layer = 12;</code>
           * @return The effectLayer.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer getEffectLayer() {
            if (effectLayerBuilder_ == null) {
              return effectLayer_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer.getDefaultInstance() : effectLayer_;
            } else {
              return effectLayerBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.EffectLayer effect_layer = 12;</code>
           */
          public Builder setEffectLayer(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer value) {
            if (effectLayerBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              effectLayer_ = value;
              onChanged();
            } else {
              effectLayerBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00001000;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.EffectLayer effect_layer = 12;</code>
           */
          public Builder setEffectLayer(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer.Builder builderForValue) {
            if (effectLayerBuilder_ == null) {
              effectLayer_ = builderForValue.build();
              onChanged();
            } else {
              effectLayerBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00001000;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.EffectLayer effect_layer = 12;</code>
           */
          public Builder mergeEffectLayer(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer value) {
            if (effectLayerBuilder_ == null) {
              if (((bitField0_ & 0x00001000) != 0) &&
                  effectLayer_ != null &&
                  effectLayer_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer.getDefaultInstance()) {
                effectLayer_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer.newBuilder(effectLayer_).mergeFrom(value).buildPartial();
              } else {
                effectLayer_ = value;
              }
              onChanged();
            } else {
              effectLayerBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00001000;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.EffectLayer effect_layer = 12;</code>
           */
          public Builder clearEffectLayer() {
            if (effectLayerBuilder_ == null) {
              effectLayer_ = null;
              onChanged();
            } else {
              effectLayerBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00001000);
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.EffectLayer effect_layer = 12;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer.Builder getEffectLayerBuilder() {
            bitField0_ |= 0x00001000;
            onChanged();
            return getEffectLayerFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.EffectLayer effect_layer = 12;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayerOrBuilder getEffectLayerOrBuilder() {
            if (effectLayerBuilder_ != null) {
              return effectLayerBuilder_.getMessageOrBuilder();
            } else {
              return effectLayer_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer.getDefaultInstance() : effectLayer_;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.EffectLayer effect_layer = 12;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayerOrBuilder> 
              getEffectLayerFieldBuilder() {
            if (effectLayerBuilder_ == null) {
              effectLayerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayerOrBuilder>(
                      getEffectLayer(),
                      getParentForChildren(),
                      isClean());
              effectLayer_ = null;
            }
            return effectLayerBuilder_;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer assetLayer_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayerOrBuilder> assetLayerBuilder_;
          /**
           * <pre>
           * An asset layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.AssetLayer asset_layer = 13;</code>
           * @return Whether the assetLayer field is set.
           */
          public boolean hasAssetLayer() {
            return ((bitField0_ & 0x00002000) != 0);
          }
          /**
           * <pre>
           * An asset layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.AssetLayer asset_layer = 13;</code>
           * @return The assetLayer.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer getAssetLayer() {
            if (assetLayerBuilder_ == null) {
              return assetLayer_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.getDefaultInstance() : assetLayer_;
            } else {
              return assetLayerBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * An asset layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.AssetLayer asset_layer = 13;</code>
           */
          public Builder setAssetLayer(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer value) {
            if (assetLayerBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              assetLayer_ = value;
              onChanged();
            } else {
              assetLayerBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00002000;
            return this;
          }
          /**
           * <pre>
           * An asset layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.AssetLayer asset_layer = 13;</code>
           */
          public Builder setAssetLayer(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.Builder builderForValue) {
            if (assetLayerBuilder_ == null) {
              assetLayer_ = builderForValue.build();
              onChanged();
            } else {
              assetLayerBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00002000;
            return this;
          }
          /**
           * <pre>
           * An asset layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.AssetLayer asset_layer = 13;</code>
           */
          public Builder mergeAssetLayer(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer value) {
            if (assetLayerBuilder_ == null) {
              if (((bitField0_ & 0x00002000) != 0) &&
                  assetLayer_ != null &&
                  assetLayer_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.getDefaultInstance()) {
                assetLayer_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.newBuilder(assetLayer_).mergeFrom(value).buildPartial();
              } else {
                assetLayer_ = value;
              }
              onChanged();
            } else {
              assetLayerBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00002000;
            return this;
          }
          /**
           * <pre>
           * An asset layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.AssetLayer asset_layer = 13;</code>
           */
          public Builder clearAssetLayer() {
            if (assetLayerBuilder_ == null) {
              assetLayer_ = null;
              onChanged();
            } else {
              assetLayerBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00002000);
            return this;
          }
          /**
           * <pre>
           * An asset layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.AssetLayer asset_layer = 13;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.Builder getAssetLayerBuilder() {
            bitField0_ |= 0x00002000;
            onChanged();
            return getAssetLayerFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * An asset layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.AssetLayer asset_layer = 13;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayerOrBuilder getAssetLayerOrBuilder() {
            if (assetLayerBuilder_ != null) {
              return assetLayerBuilder_.getMessageOrBuilder();
            } else {
              return assetLayer_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.getDefaultInstance() : assetLayer_;
            }
          }
          /**
           * <pre>
           * An asset layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.AssetLayer asset_layer = 13;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayerOrBuilder> 
              getAssetLayerFieldBuilder() {
            if (assetLayerBuilder_ == null) {
              assetLayerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayerOrBuilder>(
                      getAssetLayer(),
                      getParentForChildren(),
                      isClean());
              assetLayer_ = null;
            }
            return assetLayerBuilder_;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer groupLayer_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayerOrBuilder> groupLayerBuilder_;
          /**
           * <pre>
           * An asset layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.GroupLayer group_layer = 15;</code>
           * @return Whether the groupLayer field is set.
           */
          public boolean hasGroupLayer() {
            return ((bitField0_ & 0x00004000) != 0);
          }
          /**
           * <pre>
           * An asset layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.GroupLayer group_layer = 15;</code>
           * @return The groupLayer.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer getGroupLayer() {
            if (groupLayerBuilder_ == null) {
              return groupLayer_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer.getDefaultInstance() : groupLayer_;
            } else {
              return groupLayerBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * An asset layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.GroupLayer group_layer = 15;</code>
           */
          public Builder setGroupLayer(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer value) {
            if (groupLayerBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              groupLayer_ = value;
              onChanged();
            } else {
              groupLayerBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00004000;
            return this;
          }
          /**
           * <pre>
           * An asset layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.GroupLayer group_layer = 15;</code>
           */
          public Builder setGroupLayer(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer.Builder builderForValue) {
            if (groupLayerBuilder_ == null) {
              groupLayer_ = builderForValue.build();
              onChanged();
            } else {
              groupLayerBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00004000;
            return this;
          }
          /**
           * <pre>
           * An asset layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.GroupLayer group_layer = 15;</code>
           */
          public Builder mergeGroupLayer(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer value) {
            if (groupLayerBuilder_ == null) {
              if (((bitField0_ & 0x00004000) != 0) &&
                  groupLayer_ != null &&
                  groupLayer_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer.getDefaultInstance()) {
                groupLayer_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer.newBuilder(groupLayer_).mergeFrom(value).buildPartial();
              } else {
                groupLayer_ = value;
              }
              onChanged();
            } else {
              groupLayerBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00004000;
            return this;
          }
          /**
           * <pre>
           * An asset layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.GroupLayer group_layer = 15;</code>
           */
          public Builder clearGroupLayer() {
            if (groupLayerBuilder_ == null) {
              groupLayer_ = null;
              onChanged();
            } else {
              groupLayerBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00004000);
            return this;
          }
          /**
           * <pre>
           * An asset layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.GroupLayer group_layer = 15;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer.Builder getGroupLayerBuilder() {
            bitField0_ |= 0x00004000;
            onChanged();
            return getGroupLayerFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * An asset layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.GroupLayer group_layer = 15;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayerOrBuilder getGroupLayerOrBuilder() {
            if (groupLayerBuilder_ != null) {
              return groupLayerBuilder_.getMessageOrBuilder();
            } else {
              return groupLayer_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer.getDefaultInstance() : groupLayer_;
            }
          }
          /**
           * <pre>
           * An asset layer on the secondary timeline
           * </pre>
           *
           * <code>optional .KMProto.KMProject.GroupLayer group_layer = 15;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayerOrBuilder> 
              getGroupLayerFieldBuilder() {
            if (groupLayerBuilder_ == null) {
              groupLayerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayerOrBuilder>(
                      getGroupLayer(),
                      getParentForChildren(),
                      isClean());
              groupLayer_ = null;
            }
            return groupLayerBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.TimelineItem)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.TimelineItem)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<TimelineItem>
            PARSER = new com.google.protobuf.AbstractParser<TimelineItem>() {
          @java.lang.Override
          public TimelineItem parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new TimelineItem(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<TimelineItem> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<TimelineItem> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface VisualClipOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.VisualClip)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Path to the original file (image or video)
         * </pre>
         *
         * <code>optional string media_path = 153;</code>
         * @return Whether the mediaPath field is set.
         */
        boolean hasMediaPath();
        /**
         * <pre>
         * Path to the original file (image or video)
         * </pre>
         *
         * <code>optional string media_path = 153;</code>
         * @return The mediaPath.
         */
        java.lang.String getMediaPath();
        /**
         * <pre>
         * Path to the original file (image or video)
         * </pre>
         *
         * <code>optional string media_path = 153;</code>
         * @return The bytes for mediaPath.
         */
        com.google.protobuf.ByteString
            getMediaPathBytes();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float face_bounds_left = 100;</code>
         * @return Whether the faceBoundsLeft field is set.
         */
        boolean hasFaceBoundsLeft();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float face_bounds_left = 100;</code>
         * @return The faceBoundsLeft.
         */
        float getFaceBoundsLeft();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float face_bounds_top = 101;</code>
         * @return Whether the faceBoundsTop field is set.
         */
        boolean hasFaceBoundsTop();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float face_bounds_top = 101;</code>
         * @return The faceBoundsTop.
         */
        float getFaceBoundsTop();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float face_bounds_right = 102;</code>
         * @return Whether the faceBoundsRight field is set.
         */
        boolean hasFaceBoundsRight();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float face_bounds_right = 102;</code>
         * @return The faceBoundsRight.
         */
        float getFaceBoundsRight();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float face_bounds_bottom = 103;</code>
         * @return Whether the faceBoundsBottom field is set.
         */
        boolean hasFaceBoundsBottom();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float face_bounds_bottom = 103;</code>
         * @return The faceBoundsBottom.
         */
        float getFaceBoundsBottom();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool face_bounds_set = 104;</code>
         * @return Whether the faceBoundsSet field is set.
         */
        boolean hasFaceBoundsSet();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool face_bounds_set = 104;</code>
         * @return The faceBoundsSet.
         */
        boolean getFaceBoundsSet();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string capture_filename = 105;</code>
         * @return Whether the captureFilename field is set.
         */
        boolean hasCaptureFilename();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string capture_filename = 105;</code>
         * @return The captureFilename.
         */
        java.lang.String getCaptureFilename();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string capture_filename = 105;</code>
         * @return The bytes for captureFilename.
         */
        com.google.protobuf.ByteString
            getCaptureFilenameBytes();

        /**
         * <pre>
         * Unique identifier for this clip (within the project) used to identify
         * this clip to the NexEditor engine.
         * </pre>
         *
         * <code>optional int32 engine_clip_id = 106;</code>
         * @return Whether the engineClipId field is set.
         */
        boolean hasEngineClipId();
        /**
         * <pre>
         * Unique identifier for this clip (within the project) used to identify
         * this clip to the NexEditor engine.
         * </pre>
         *
         * <code>optional int32 engine_clip_id = 106;</code>
         * @return The engineClipId.
         */
        int getEngineClipId();

        /**
         * <pre>
         * ==== Cropping =============================================
         * Specifyies cropping of the video or image frame.
         * Sepearate start and end cropping can be set, which results
         * in an animated crop (for images, this is usually called the
         * "Ken Burns" effect; for video clips, the term "Digital Zoom"
         * is often used).
         * Because the width and height (and therefore aspect ratio) of
         * a clip are different when it is roated (except for perfectly
         * square images), for simplicity, rotated start and end positions
         * are stored separately and used when the clip is rotated at
         * 90-degree or 270-degree angles.
         * The start and end crop positions are stored in normalized
         * coordinates ("abstract" means normalized in this case).
         * Coordinates are normalized to the range 0,0 (top-left corner
         * of the image or video clip) through 100000 (bottom-right corner
         * of the image or video clip).  This means that if the crop area
         * extends outside the video (for example, black bars are shown)
         * at least some coordinates will be outside the 0~100000 range.
         * Note that for old projects, normalized cooridnates were not
         * used (this caused a problem when a JPEG was downsampled as
         * it was loaded, because the downsampler in the UI and engine
         * were different).  New projects always use normalized cooridnates.
         * Check abstract_crop to see if normalized  coordinates
         * are used.
         * </pre>
         *
         * <code>optional bool abstract_crop = 107;</code>
         * @return Whether the abstractCrop field is set.
         */
        boolean hasAbstractCrop();
        /**
         * <pre>
         * ==== Cropping =============================================
         * Specifyies cropping of the video or image frame.
         * Sepearate start and end cropping can be set, which results
         * in an animated crop (for images, this is usually called the
         * "Ken Burns" effect; for video clips, the term "Digital Zoom"
         * is often used).
         * Because the width and height (and therefore aspect ratio) of
         * a clip are different when it is roated (except for perfectly
         * square images), for simplicity, rotated start and end positions
         * are stored separately and used when the clip is rotated at
         * 90-degree or 270-degree angles.
         * The start and end crop positions are stored in normalized
         * coordinates ("abstract" means normalized in this case).
         * Coordinates are normalized to the range 0,0 (top-left corner
         * of the image or video clip) through 100000 (bottom-right corner
         * of the image or video clip).  This means that if the crop area
         * extends outside the video (for example, black bars are shown)
         * at least some coordinates will be outside the 0~100000 range.
         * Note that for old projects, normalized cooridnates were not
         * used (this caused a problem when a JPEG was downsampled as
         * it was loaded, because the downsampler in the UI and engine
         * were different).  New projects always use normalized cooridnates.
         * Check abstract_crop to see if normalized  coordinates
         * are used.
         * </pre>
         *
         * <code>optional bool abstract_crop = 107;</code>
         * @return The abstractCrop.
         */
        boolean getAbstractCrop();

        /**
         * <code>optional int32 start_position_left = 108;</code>
         * @return Whether the startPositionLeft field is set.
         */
        boolean hasStartPositionLeft();
        /**
         * <code>optional int32 start_position_left = 108;</code>
         * @return The startPositionLeft.
         */
        int getStartPositionLeft();

        /**
         * <code>optional int32 start_position_bottom = 109;</code>
         * @return Whether the startPositionBottom field is set.
         */
        boolean hasStartPositionBottom();
        /**
         * <code>optional int32 start_position_bottom = 109;</code>
         * @return The startPositionBottom.
         */
        int getStartPositionBottom();

        /**
         * <code>optional int32 start_position_right = 110;</code>
         * @return Whether the startPositionRight field is set.
         */
        boolean hasStartPositionRight();
        /**
         * <code>optional int32 start_position_right = 110;</code>
         * @return The startPositionRight.
         */
        int getStartPositionRight();

        /**
         * <code>optional int32 start_position_top = 111;</code>
         * @return Whether the startPositionTop field is set.
         */
        boolean hasStartPositionTop();
        /**
         * <code>optional int32 start_position_top = 111;</code>
         * @return The startPositionTop.
         */
        int getStartPositionTop();

        /**
         * <code>optional int32 end_position_left = 112;</code>
         * @return Whether the endPositionLeft field is set.
         */
        boolean hasEndPositionLeft();
        /**
         * <code>optional int32 end_position_left = 112;</code>
         * @return The endPositionLeft.
         */
        int getEndPositionLeft();

        /**
         * <code>optional int32 end_position_bottom = 113;</code>
         * @return Whether the endPositionBottom field is set.
         */
        boolean hasEndPositionBottom();
        /**
         * <code>optional int32 end_position_bottom = 113;</code>
         * @return The endPositionBottom.
         */
        int getEndPositionBottom();

        /**
         * <code>optional int32 end_position_right = 114;</code>
         * @return Whether the endPositionRight field is set.
         */
        boolean hasEndPositionRight();
        /**
         * <code>optional int32 end_position_right = 114;</code>
         * @return The endPositionRight.
         */
        int getEndPositionRight();

        /**
         * <code>optional int32 end_position_top = 115;</code>
         * @return Whether the endPositionTop field is set.
         */
        boolean hasEndPositionTop();
        /**
         * <code>optional int32 end_position_top = 115;</code>
         * @return The endPositionTop.
         */
        int getEndPositionTop();

        /**
         * <code>optional int32 rotated_start_position_left = 116;</code>
         * @return Whether the rotatedStartPositionLeft field is set.
         */
        boolean hasRotatedStartPositionLeft();
        /**
         * <code>optional int32 rotated_start_position_left = 116;</code>
         * @return The rotatedStartPositionLeft.
         */
        int getRotatedStartPositionLeft();

        /**
         * <code>optional int32 rotated_start_position_bottom = 117;</code>
         * @return Whether the rotatedStartPositionBottom field is set.
         */
        boolean hasRotatedStartPositionBottom();
        /**
         * <code>optional int32 rotated_start_position_bottom = 117;</code>
         * @return The rotatedStartPositionBottom.
         */
        int getRotatedStartPositionBottom();

        /**
         * <code>optional int32 rotated_start_position_right = 118;</code>
         * @return Whether the rotatedStartPositionRight field is set.
         */
        boolean hasRotatedStartPositionRight();
        /**
         * <code>optional int32 rotated_start_position_right = 118;</code>
         * @return The rotatedStartPositionRight.
         */
        int getRotatedStartPositionRight();

        /**
         * <code>optional int32 rotated_start_position_top = 119;</code>
         * @return Whether the rotatedStartPositionTop field is set.
         */
        boolean hasRotatedStartPositionTop();
        /**
         * <code>optional int32 rotated_start_position_top = 119;</code>
         * @return The rotatedStartPositionTop.
         */
        int getRotatedStartPositionTop();

        /**
         * <code>optional int32 rotated_end_position_left = 120;</code>
         * @return Whether the rotatedEndPositionLeft field is set.
         */
        boolean hasRotatedEndPositionLeft();
        /**
         * <code>optional int32 rotated_end_position_left = 120;</code>
         * @return The rotatedEndPositionLeft.
         */
        int getRotatedEndPositionLeft();

        /**
         * <code>optional int32 rotated_end_position_bottom = 121;</code>
         * @return Whether the rotatedEndPositionBottom field is set.
         */
        boolean hasRotatedEndPositionBottom();
        /**
         * <code>optional int32 rotated_end_position_bottom = 121;</code>
         * @return The rotatedEndPositionBottom.
         */
        int getRotatedEndPositionBottom();

        /**
         * <code>optional int32 rotated_end_position_right = 122;</code>
         * @return Whether the rotatedEndPositionRight field is set.
         */
        boolean hasRotatedEndPositionRight();
        /**
         * <code>optional int32 rotated_end_position_right = 122;</code>
         * @return The rotatedEndPositionRight.
         */
        int getRotatedEndPositionRight();

        /**
         * <pre>
         * ==========================================================
         * </pre>
         *
         * <code>optional int32 rotated_end_position_top = 123;</code>
         * @return Whether the rotatedEndPositionTop field is set.
         */
        boolean hasRotatedEndPositionTop();
        /**
         * <pre>
         * ==========================================================
         * </pre>
         *
         * <code>optional int32 rotated_end_position_top = 123;</code>
         * @return The rotatedEndPositionTop.
         */
        int getRotatedEndPositionTop();

        /**
         * <code>optional int32 rotation = 124;</code>
         * @return Whether the rotation field is set.
         */
        boolean hasRotation();
        /**
         * <code>optional int32 rotation = 124;</code>
         * @return The rotation.
         */
        int getRotation();

        /**
         * <code>optional bool fliph = 125;</code>
         * @return Whether the fliph field is set.
         */
        boolean hasFliph();
        /**
         * <code>optional bool fliph = 125;</code>
         * @return The fliph.
         */
        boolean getFliph();

        /**
         * <code>optional bool flipv = 126;</code>
         * @return Whether the flipv field is set.
         */
        boolean hasFlipv();
        /**
         * <code>optional bool flipv = 126;</code>
         * @return The flipv.
         */
        boolean getFlipv();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 diff_av_duration = 127;</code>
         * @return Whether the diffAvDuration field is set.
         */
        boolean hasDiffAvDuration();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 diff_av_duration = 127;</code>
         * @return The diffAvDuration.
         */
        int getDiffAvDuration();

        /**
         * <code>optional int32 trim_time_start = 128;</code>
         * @return Whether the trimTimeStart field is set.
         */
        boolean hasTrimTimeStart();
        /**
         * <code>optional int32 trim_time_start = 128;</code>
         * @return The trimTimeStart.
         */
        int getTrimTimeStart();

        /**
         * <code>optional int32 trim_time_end = 129;</code>
         * @return Whether the trimTimeEnd field is set.
         */
        boolean hasTrimTimeEnd();
        /**
         * <code>optional int32 trim_time_end = 129;</code>
         * @return The trimTimeEnd.
         */
        int getTrimTimeEnd();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 trimmed_duration = 130;</code>
         * @return Whether the trimmedDuration field is set.
         */
        boolean hasTrimmedDuration();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 trimmed_duration = 130;</code>
         * @return The trimmedDuration.
         */
        int getTrimmedDuration();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 pre_trimmed_duration = 131;</code>
         * @return Whether the preTrimmedDuration field is set.
         */
        boolean hasPreTrimmedDuration();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 pre_trimmed_duration = 131;</code>
         * @return The preTrimmedDuration.
         */
        int getPreTrimmedDuration();

        /**
         * <code>optional string title_effect_id = 132;</code>
         * @return Whether the titleEffectId field is set.
         */
        boolean hasTitleEffectId();
        /**
         * <code>optional string title_effect_id = 132;</code>
         * @return The titleEffectId.
         */
        java.lang.String getTitleEffectId();
        /**
         * <code>optional string title_effect_id = 132;</code>
         * @return The bytes for titleEffectId.
         */
        com.google.protobuf.ByteString
            getTitleEffectIdBytes();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 title_start_time = 133;</code>
         * @return Whether the titleStartTime field is set.
         */
        boolean hasTitleStartTime();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 title_start_time = 133;</code>
         * @return The titleStartTime.
         */
        int getTitleStartTime();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 title_end_time = 134;</code>
         * @return Whether the titleEndTime field is set.
         */
        boolean hasTitleEndTime();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 title_end_time = 134;</code>
         * @return The titleEndTime.
         */
        int getTitleEndTime();

        /**
         * <code>optional int32 duration = 135;</code>
         * @return Whether the duration field is set.
         */
        boolean hasDuration();
        /**
         * <code>optional int32 duration = 135;</code>
         * @return The duration.
         */
        int getDuration();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 audio_duration = 136;</code>
         * @return Whether the audioDuration field is set.
         */
        boolean hasAudioDuration();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 audio_duration = 136;</code>
         * @return The audioDuration.
         */
        int getAudioDuration();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 video_duration = 137;</code>
         * @return Whether the videoDuration field is set.
         */
        boolean hasVideoDuration();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 video_duration = 137;</code>
         * @return The videoDuration.
         */
        int getVideoDuration();

        /**
         * <code>optional int32 start_overlap = 138;</code>
         * @return Whether the startOverlap field is set.
         */
        boolean hasStartOverlap();
        /**
         * <code>optional int32 start_overlap = 138;</code>
         * @return The startOverlap.
         */
        int getStartOverlap();

        /**
         * <code>optional int32 end_overlap = 139;</code>
         * @return Whether the endOverlap field is set.
         */
        boolean hasEndOverlap();
        /**
         * <code>optional int32 end_overlap = 139;</code>
         * @return The endOverlap.
         */
        int getEndOverlap();

        /**
         * <code>optional int32 width = 140;</code>
         * @return Whether the width field is set.
         */
        boolean hasWidth();
        /**
         * <code>optional int32 width = 140;</code>
         * @return The width.
         */
        int getWidth();

        /**
         * <code>optional int32 height = 141;</code>
         * @return Whether the height field is set.
         */
        boolean hasHeight();
        /**
         * <code>optional int32 height = 141;</code>
         * @return The height.
         */
        int getHeight();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 original_width = 142;</code>
         * @return Whether the originalWidth field is set.
         */
        boolean hasOriginalWidth();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 original_width = 142;</code>
         * @return The originalWidth.
         */
        int getOriginalWidth();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 original_height = 143;</code>
         * @return Whether the originalHeight field is set.
         */
        boolean hasOriginalHeight();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 original_height = 143;</code>
         * @return The originalHeight.
         */
        int getOriginalHeight();

        /**
         * <code>optional int32 clip_volume = 144;</code>
         * @return Whether the clipVolume field is set.
         */
        boolean hasClipVolume();
        /**
         * <code>optional int32 clip_volume = 144;</code>
         * @return The clipVolume.
         */
        int getClipVolume();

        /**
         * <code>optional int32 music_volume = 145;</code>
         * @return Whether the musicVolume field is set.
         */
        boolean hasMusicVolume();
        /**
         * <code>optional int32 music_volume = 145;</code>
         * @return The musicVolume.
         */
        int getMusicVolume();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.TitleStyle title_style = 146;</code>
         * @return Whether the titleStyle field is set.
         */
        boolean hasTitleStyle();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.TitleStyle title_style = 146;</code>
         * @return The titleStyle.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TitleStyle getTitleStyle();

        /**
         * <code>optional bool is_image = 147;</code>
         * @return Whether the isImage field is set.
         */
        boolean hasIsImage();
        /**
         * <code>optional bool is_image = 147;</code>
         * @return The isImage.
         */
        boolean getIsImage();

        /**
         * <code>optional bool mute_audio = 148;</code>
         * @return Whether the muteAudio field is set.
         */
        boolean hasMuteAudio();
        /**
         * <code>optional bool mute_audio = 148;</code>
         * @return The muteAudio.
         */
        boolean getMuteAudio();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool mute_music = 149;</code>
         * @return Whether the muteMusic field is set.
         */
        boolean hasMuteMusic();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool mute_music = 149;</code>
         * @return The muteMusic.
         */
        boolean getMuteMusic();

        /**
         * <code>optional bool has_audio = 150;</code>
         * @return Whether the hasAudio field is set.
         */
        boolean hasHasAudio();
        /**
         * <code>optional bool has_audio = 150;</code>
         * @return The hasAudio.
         */
        boolean getHasAudio();

        /**
         * <code>optional bool has_video = 151;</code>
         * @return Whether the hasVideo field is set.
         */
        boolean hasHasVideo();
        /**
         * <code>optional bool has_video = 151;</code>
         * @return The hasVideo.
         */
        boolean getHasVideo();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string thumb_path = 152;</code>
         * @return Whether the thumbPath field is set.
         */
        boolean hasThumbPath();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string thumb_path = 152;</code>
         * @return The thumbPath.
         */
        java.lang.String getThumbPath();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string thumb_path = 152;</code>
         * @return The bytes for thumbPath.
         */
        com.google.protobuf.ByteString
            getThumbPathBytes();

        /**
         * <code>optional uint64 transition_item_uuid_lsb = 154;</code>
         * @return Whether the transitionItemUuidLsb field is set.
         */
        boolean hasTransitionItemUuidLsb();
        /**
         * <code>optional uint64 transition_item_uuid_lsb = 154;</code>
         * @return The transitionItemUuidLsb.
         */
        long getTransitionItemUuidLsb();

        /**
         * <code>optional uint64 transition_item_uuid_msb = 155;</code>
         * @return Whether the transitionItemUuidMsb field is set.
         */
        boolean hasTransitionItemUuidMsb();
        /**
         * <code>optional uint64 transition_item_uuid_msb = 155;</code>
         * @return The transitionItemUuidMsb.
         */
        long getTransitionItemUuidMsb();

        /**
         * <code>optional .KMProto.KMProject.TimelineItem unattached_transition = 171;</code>
         * @return Whether the unattachedTransition field is set.
         */
        boolean hasUnattachedTransition();
        /**
         * <code>optional .KMProto.KMProject.TimelineItem unattached_transition = 171;</code>
         * @return The unattachedTransition.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem getUnattachedTransition();
        /**
         * <code>optional .KMProto.KMProject.TimelineItem unattached_transition = 171;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder getUnattachedTransitionOrBuilder();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 brightness = 156;</code>
         * @return Whether the brightness field is set.
         */
        boolean hasBrightness();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 brightness = 156;</code>
         * @return The brightness.
         */
        int getBrightness();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 contrast = 157;</code>
         * @return Whether the contrast field is set.
         */
        boolean hasContrast();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 contrast = 157;</code>
         * @return The contrast.
         */
        int getContrast();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 saturation = 158;</code>
         * @return Whether the saturation field is set.
         */
        boolean hasSaturation();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 saturation = 158;</code>
         * @return The saturation.
         */
        int getSaturation();

        /**
         * <code>optional int32 tintcolor = 159;</code>
         * @return Whether the tintcolor field is set.
         */
        boolean hasTintcolor();
        /**
         * <code>optional int32 tintcolor = 159;</code>
         * @return The tintcolor.
         */
        int getTintcolor();

        /**
         * <code>optional int32 effect_start_time = 160;</code>
         * @return Whether the effectStartTime field is set.
         */
        boolean hasEffectStartTime();
        /**
         * <code>optional int32 effect_start_time = 160;</code>
         * @return The effectStartTime.
         */
        int getEffectStartTime();

        /**
         * <code>optional int32 effect_end_time = 161;</code>
         * @return Whether the effectEndTime field is set.
         */
        boolean hasEffectEndTime();
        /**
         * <code>optional int32 effect_end_time = 161;</code>
         * @return The effectEndTime.
         */
        int getEffectEndTime();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Matrix start_matrix = 162;</code>
         * @return Whether the startMatrix field is set.
         */
        boolean hasStartMatrix();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Matrix start_matrix = 162;</code>
         * @return The startMatrix.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix getStartMatrix();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Matrix start_matrix = 162;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.MatrixOrBuilder getStartMatrixOrBuilder();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Matrix end_matrix = 163;</code>
         * @return Whether the endMatrix field is set.
         */
        boolean hasEndMatrix();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Matrix end_matrix = 163;</code>
         * @return The endMatrix.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix getEndMatrix();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Matrix end_matrix = 163;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.MatrixOrBuilder getEndMatrixOrBuilder();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ThemeEffectType auto_theme_effect = 164;</code>
         * @return Whether the autoThemeEffect field is set.
         */
        boolean hasAutoThemeEffect();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ThemeEffectType auto_theme_effect = 164;</code>
         * @return The autoThemeEffect.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ThemeEffectType getAutoThemeEffect();

        /**
         * <code>repeated int32 volume_envelope_time = 165 [packed = true];</code>
         * @return A list containing the volumeEnvelopeTime.
         */
        java.util.List<java.lang.Integer> getVolumeEnvelopeTimeList();
        /**
         * <code>repeated int32 volume_envelope_time = 165 [packed = true];</code>
         * @return The count of volumeEnvelopeTime.
         */
        int getVolumeEnvelopeTimeCount();
        /**
         * <code>repeated int32 volume_envelope_time = 165 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The volumeEnvelopeTime at the given index.
         */
        int getVolumeEnvelopeTime(int index);

        /**
         * <code>repeated int32 volume_envelope_level = 166 [packed = true];</code>
         * @return A list containing the volumeEnvelopeLevel.
         */
        java.util.List<java.lang.Integer> getVolumeEnvelopeLevelList();
        /**
         * <code>repeated int32 volume_envelope_level = 166 [packed = true];</code>
         * @return The count of volumeEnvelopeLevel.
         */
        int getVolumeEnvelopeLevelCount();
        /**
         * <code>repeated int32 volume_envelope_level = 166 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The volumeEnvelopeLevel at the given index.
         */
        int getVolumeEnvelopeLevel(int index);

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float clip_width = 167;</code>
         * @return Whether the clipWidth field is set.
         */
        boolean hasClipWidth();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float clip_width = 167;</code>
         * @return The clipWidth.
         */
        float getClipWidth();

        /**
         * <code>optional int32 playback_speed = 168;</code>
         * @return Whether the playbackSpeed field is set.
         */
        boolean hasPlaybackSpeed();
        /**
         * <code>optional int32 playback_speed = 168;</code>
         * @return The playbackSpeed.
         */
        int getPlaybackSpeed();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ColorEffect color_effect = 169;</code>
         * @return Whether the colorEffect field is set.
         */
        boolean hasColorEffect();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ColorEffect color_effect = 169;</code>
         * @return The colorEffect.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect getColorEffect();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ColorEffect color_effect = 169;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffectOrBuilder getColorEffectOrBuilder();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.StringHashMap effect_options = 170;</code>
         * @return Whether the effectOptions field is set.
         */
        boolean hasEffectOptions();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.StringHashMap effect_options = 170;</code>
         * @return The effectOptions.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap getEffectOptions();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.StringHashMap effect_options = 170;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapOrBuilder getEffectOptionsOrBuilder();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool transcode_approved = 172;</code>
         * @return Whether the transcodeApproved field is set.
         */
        boolean hasTranscodeApproved();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool transcode_approved = 172;</code>
         * @return The transcodeApproved.
         */
        boolean getTranscodeApproved();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ClipState clip_state = 173;</code>
         * @return Whether the clipState field is set.
         */
        boolean hasClipState();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ClipState clip_state = 173;</code>
         * @return The clipState.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipState getClipState();

        /**
         * <code>optional string media_msid = 174;</code>
         * @return Whether the mediaMsid field is set.
         */
        boolean hasMediaMsid();
        /**
         * <code>optional string media_msid = 174;</code>
         * @return The mediaMsid.
         */
        java.lang.String getMediaMsid();
        /**
         * <code>optional string media_msid = 174;</code>
         * @return The bytes for mediaMsid.
         */
        com.google.protobuf.ByteString
            getMediaMsidBytes();

        /**
         * <code>optional bool crop_link = 175;</code>
         * @return Whether the cropLink field is set.
         */
        boolean hasCropLink();
        /**
         * <code>optional bool crop_link = 175;</code>
         * @return The cropLink.
         */
        boolean getCropLink();

        /**
         * <code>optional bool is_reverse = 177;</code>
         * @return Whether the isReverse field is set.
         */
        boolean hasIsReverse();
        /**
         * <code>optional bool is_reverse = 177;</code>
         * @return The isReverse.
         */
        boolean getIsReverse();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 voice_changer = 178;</code>
         * @return Whether the voiceChanger field is set.
         */
        boolean hasVoiceChanger();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 voice_changer = 178;</code>
         * @return The voiceChanger.
         */
        int getVoiceChanger();

        /**
         * <code>optional bool vignette = 179;</code>
         * @return Whether the vignette field is set.
         */
        boolean hasVignette();
        /**
         * <code>optional bool vignette = 179;</code>
         * @return The vignette.
         */
        boolean getVignette();

        /**
         * <code>optional int32 pan_left = 180;</code>
         * @return Whether the panLeft field is set.
         */
        boolean hasPanLeft();
        /**
         * <code>optional int32 pan_left = 180;</code>
         * @return The panLeft.
         */
        int getPanLeft();

        /**
         * <code>optional int32 pan_right = 181;</code>
         * @return Whether the panRight field is set.
         */
        boolean hasPanRight();
        /**
         * <code>optional int32 pan_right = 181;</code>
         * @return The panRight.
         */
        int getPanRight();

        /**
         * <pre>
         * 0: off, 4: on (default: 0)
         * </pre>
         *
         * <code>optional int32 compressor = 182;</code>
         * @return Whether the compressor field is set.
         */
        boolean hasCompressor();
        /**
         * <pre>
         * 0: off, 4: on (default: 0)
         * </pre>
         *
         * <code>optional int32 compressor = 182;</code>
         * @return The compressor.
         */
        int getCompressor();

        /**
         * <code>optional int32 pitch_factor = 183;</code>
         * @return Whether the pitchFactor field is set.
         */
        boolean hasPitchFactor();
        /**
         * <code>optional int32 pitch_factor = 183;</code>
         * @return The pitchFactor.
         */
        int getPitchFactor();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string clip_name = 184;</code>
         * @return Whether the clipName field is set.
         */
        boolean hasClipName();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string clip_name = 184;</code>
         * @return The clipName.
         */
        java.lang.String getClipName();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string clip_name = 184;</code>
         * @return The bytes for clipName.
         */
        com.google.protobuf.ByteString
            getClipNameBytes();

        /**
         * <code>optional string ios_media_asset_id = 185;</code>
         * @return Whether the iosMediaAssetId field is set.
         */
        boolean hasIosMediaAssetId();
        /**
         * <code>optional string ios_media_asset_id = 185;</code>
         * @return The iosMediaAssetId.
         */
        java.lang.String getIosMediaAssetId();
        /**
         * <code>optional string ios_media_asset_id = 185;</code>
         * @return The bytes for iosMediaAssetId.
         */
        com.google.protobuf.ByteString
            getIosMediaAssetIdBytes();

        /**
         * <code>optional bool keepPitch = 186;</code>
         * @return Whether the keepPitch field is set.
         */
        boolean hasKeepPitch();
        /**
         * <code>optional bool keepPitch = 186;</code>
         * @return The keepPitch.
         */
        boolean getKeepPitch();

        /**
         * <code>optional bool useIFrameOnly = 187;</code>
         * @return Whether the useIFrameOnly field is set.
         */
        boolean hasUseIFrameOnly();
        /**
         * <code>optional bool useIFrameOnly = 187;</code>
         * @return The useIFrameOnly.
         */
        boolean getUseIFrameOnly();

        /**
         * <code>optional string enhancedAudioFilter = 188;</code>
         * @return Whether the enhancedAudioFilter field is set.
         */
        boolean hasEnhancedAudioFilter();
        /**
         * <code>optional string enhancedAudioFilter = 188;</code>
         * @return The enhancedAudioFilter.
         */
        java.lang.String getEnhancedAudioFilter();
        /**
         * <code>optional string enhancedAudioFilter = 188;</code>
         * @return The bytes for enhancedAudioFilter.
         */
        com.google.protobuf.ByteString
            getEnhancedAudioFilterBytes();

        /**
         * <code>optional string equalizer = 189;</code>
         * @return Whether the equalizer field is set.
         */
        boolean hasEqualizer();
        /**
         * <code>optional string equalizer = 189;</code>
         * @return The equalizer.
         */
        java.lang.String getEqualizer();
        /**
         * <code>optional string equalizer = 189;</code>
         * @return The bytes for equalizer.
         */
        com.google.protobuf.ByteString
            getEqualizerBytes();

        /**
         * <code>optional .KMProto.KMProject.ClipRange clipRange = 190;</code>
         * @return Whether the clipRange field is set.
         */
        boolean hasClipRange();
        /**
         * <code>optional .KMProto.KMProject.ClipRange clipRange = 190;</code>
         * @return The clipRange.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange getClipRange();
        /**
         * <code>optional .KMProto.KMProject.ClipRange clipRange = 190;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRangeOrBuilder getClipRangeOrBuilder();

        /**
         * <code>optional string reverb = 191;</code>
         * @return Whether the reverb field is set.
         */
        boolean hasReverb();
        /**
         * <code>optional string reverb = 191;</code>
         * @return The reverb.
         */
        java.lang.String getReverb();
        /**
         * <code>optional string reverb = 191;</code>
         * @return The bytes for reverb.
         */
        com.google.protobuf.ByteString
            getReverbBytes();

        /**
         * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 192;</code>
         * @return Whether the colorAdjustment field is set.
         */
        boolean hasColorAdjustment();
        /**
         * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 192;</code>
         * @return The colorAdjustment.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment getColorAdjustment();
        /**
         * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 192;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustmentOrBuilder getColorAdjustmentOrBuilder();

        /**
         * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 193;</code>
         * @return Whether the colorFilter field is set.
         */
        boolean hasColorFilter();
        /**
         * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 193;</code>
         * @return The colorFilter.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter getColorFilter();
        /**
         * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 193;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilterOrBuilder getColorFilterOrBuilder();

        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
         */
        java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem> 
            getEffectOptionList();
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem getEffectOption(int index);
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
         */
        int getEffectOptionCount();
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
         */
        java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder> 
            getEffectOptionOrBuilderList();
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder getEffectOptionOrBuilder(
            int index);

        /**
         * <code>optional bool includedClipRotation = 195;</code>
         * @return Whether the includedClipRotation field is set.
         */
        boolean hasIncludedClipRotation();
        /**
         * <code>optional bool includedClipRotation = 195;</code>
         * @return The includedClipRotation.
         */
        boolean getIncludedClipRotation();

        /**
         * <code>optional int32 uprightRotation = 196;</code>
         * @return Whether the uprightRotation field is set.
         */
        boolean hasUprightRotation();
        /**
         * <code>optional int32 uprightRotation = 196;</code>
         * @return The uprightRotation.
         */
        int getUprightRotation();
      }
      /**
       * <pre>
       * Defines a visual clip on the priamry timeline
       * </pre>
       *
       * Protobuf type {@code KMProto.KMProject.VisualClip}
       */
      public static final class VisualClip extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.VisualClip)
          VisualClipOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use VisualClip.newBuilder() to construct.
        private VisualClip(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private VisualClip() {
          mediaPath_ = "";
          captureFilename_ = "";
          titleEffectId_ = "";
          titleStyle_ = 0;
          thumbPath_ = "";
          autoThemeEffect_ = 1;
          volumeEnvelopeTime_ = emptyIntList();
          volumeEnvelopeLevel_ = emptyIntList();
          clipState_ = 1;
          mediaMsid_ = "";
          clipName_ = "";
          iosMediaAssetId_ = "";
          enhancedAudioFilter_ = "";
          equalizer_ = "";
          reverb_ = "";
          effectOption_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new VisualClip();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private VisualClip(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          int mutable_bitField1_ = 0;
          int mutable_bitField2_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 805: {
                  bitField0_ |= 0x00000002;
                  faceBoundsLeft_ = input.readFloat();
                  break;
                }
                case 813: {
                  bitField0_ |= 0x00000004;
                  faceBoundsTop_ = input.readFloat();
                  break;
                }
                case 821: {
                  bitField0_ |= 0x00000008;
                  faceBoundsRight_ = input.readFloat();
                  break;
                }
                case 829: {
                  bitField0_ |= 0x00000010;
                  faceBoundsBottom_ = input.readFloat();
                  break;
                }
                case 832: {
                  bitField0_ |= 0x00000020;
                  faceBoundsSet_ = input.readBool();
                  break;
                }
                case 842: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000040;
                  captureFilename_ = bs;
                  break;
                }
                case 848: {
                  bitField0_ |= 0x00000080;
                  engineClipId_ = input.readInt32();
                  break;
                }
                case 856: {
                  bitField0_ |= 0x00000100;
                  abstractCrop_ = input.readBool();
                  break;
                }
                case 864: {
                  bitField0_ |= 0x00000200;
                  startPositionLeft_ = input.readInt32();
                  break;
                }
                case 872: {
                  bitField0_ |= 0x00000400;
                  startPositionBottom_ = input.readInt32();
                  break;
                }
                case 880: {
                  bitField0_ |= 0x00000800;
                  startPositionRight_ = input.readInt32();
                  break;
                }
                case 888: {
                  bitField0_ |= 0x00001000;
                  startPositionTop_ = input.readInt32();
                  break;
                }
                case 896: {
                  bitField0_ |= 0x00002000;
                  endPositionLeft_ = input.readInt32();
                  break;
                }
                case 904: {
                  bitField0_ |= 0x00004000;
                  endPositionBottom_ = input.readInt32();
                  break;
                }
                case 912: {
                  bitField0_ |= 0x00008000;
                  endPositionRight_ = input.readInt32();
                  break;
                }
                case 920: {
                  bitField0_ |= 0x00010000;
                  endPositionTop_ = input.readInt32();
                  break;
                }
                case 928: {
                  bitField0_ |= 0x00020000;
                  rotatedStartPositionLeft_ = input.readInt32();
                  break;
                }
                case 936: {
                  bitField0_ |= 0x00040000;
                  rotatedStartPositionBottom_ = input.readInt32();
                  break;
                }
                case 944: {
                  bitField0_ |= 0x00080000;
                  rotatedStartPositionRight_ = input.readInt32();
                  break;
                }
                case 952: {
                  bitField0_ |= 0x00100000;
                  rotatedStartPositionTop_ = input.readInt32();
                  break;
                }
                case 960: {
                  bitField0_ |= 0x00200000;
                  rotatedEndPositionLeft_ = input.readInt32();
                  break;
                }
                case 968: {
                  bitField0_ |= 0x00400000;
                  rotatedEndPositionBottom_ = input.readInt32();
                  break;
                }
                case 976: {
                  bitField0_ |= 0x00800000;
                  rotatedEndPositionRight_ = input.readInt32();
                  break;
                }
                case 984: {
                  bitField0_ |= 0x01000000;
                  rotatedEndPositionTop_ = input.readInt32();
                  break;
                }
                case 992: {
                  bitField0_ |= 0x02000000;
                  rotation_ = input.readInt32();
                  break;
                }
                case 1000: {
                  bitField0_ |= 0x04000000;
                  fliph_ = input.readBool();
                  break;
                }
                case 1008: {
                  bitField0_ |= 0x08000000;
                  flipv_ = input.readBool();
                  break;
                }
                case 1016: {
                  bitField0_ |= 0x10000000;
                  diffAvDuration_ = input.readInt32();
                  break;
                }
                case 1024: {
                  bitField0_ |= 0x20000000;
                  trimTimeStart_ = input.readInt32();
                  break;
                }
                case 1032: {
                  bitField0_ |= 0x40000000;
                  trimTimeEnd_ = input.readInt32();
                  break;
                }
                case 1040: {
                  bitField0_ |= 0x80000000;
                  trimmedDuration_ = input.readInt32();
                  break;
                }
                case 1048: {
                  bitField1_ |= 0x00000001;
                  preTrimmedDuration_ = input.readInt32();
                  break;
                }
                case 1058: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField1_ |= 0x00000002;
                  titleEffectId_ = bs;
                  break;
                }
                case 1064: {
                  bitField1_ |= 0x00000004;
                  titleStartTime_ = input.readInt32();
                  break;
                }
                case 1072: {
                  bitField1_ |= 0x00000008;
                  titleEndTime_ = input.readInt32();
                  break;
                }
                case 1080: {
                  bitField1_ |= 0x00000010;
                  duration_ = input.readInt32();
                  break;
                }
                case 1088: {
                  bitField1_ |= 0x00000020;
                  audioDuration_ = input.readInt32();
                  break;
                }
                case 1096: {
                  bitField1_ |= 0x00000040;
                  videoDuration_ = input.readInt32();
                  break;
                }
                case 1104: {
                  bitField1_ |= 0x00000080;
                  startOverlap_ = input.readInt32();
                  break;
                }
                case 1112: {
                  bitField1_ |= 0x00000100;
                  endOverlap_ = input.readInt32();
                  break;
                }
                case 1120: {
                  bitField1_ |= 0x00000200;
                  width_ = input.readInt32();
                  break;
                }
                case 1128: {
                  bitField1_ |= 0x00000400;
                  height_ = input.readInt32();
                  break;
                }
                case 1136: {
                  bitField1_ |= 0x00000800;
                  originalWidth_ = input.readInt32();
                  break;
                }
                case 1144: {
                  bitField1_ |= 0x00001000;
                  originalHeight_ = input.readInt32();
                  break;
                }
                case 1152: {
                  bitField1_ |= 0x00002000;
                  clipVolume_ = input.readInt32();
                  break;
                }
                case 1160: {
                  bitField1_ |= 0x00004000;
                  musicVolume_ = input.readInt32();
                  break;
                }
                case 1168: {
                  int rawValue = input.readEnum();
                    @SuppressWarnings("deprecation")
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TitleStyle value = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TitleStyle.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(146, rawValue);
                  } else {
                    bitField1_ |= 0x00008000;
                    titleStyle_ = rawValue;
                  }
                  break;
                }
                case 1176: {
                  bitField1_ |= 0x00010000;
                  isImage_ = input.readBool();
                  break;
                }
                case 1184: {
                  bitField1_ |= 0x00020000;
                  muteAudio_ = input.readBool();
                  break;
                }
                case 1192: {
                  bitField1_ |= 0x00040000;
                  muteMusic_ = input.readBool();
                  break;
                }
                case 1200: {
                  bitField1_ |= 0x00080000;
                  hasAudio_ = input.readBool();
                  break;
                }
                case 1208: {
                  bitField1_ |= 0x00100000;
                  hasVideo_ = input.readBool();
                  break;
                }
                case 1218: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField1_ |= 0x00200000;
                  thumbPath_ = bs;
                  break;
                }
                case 1226: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000001;
                  mediaPath_ = bs;
                  break;
                }
                case 1232: {
                  bitField1_ |= 0x00400000;
                  transitionItemUuidLsb_ = input.readUInt64();
                  break;
                }
                case 1240: {
                  bitField1_ |= 0x00800000;
                  transitionItemUuidMsb_ = input.readUInt64();
                  break;
                }
                case 1248: {
                  bitField1_ |= 0x02000000;
                  brightness_ = input.readInt32();
                  break;
                }
                case 1256: {
                  bitField1_ |= 0x04000000;
                  contrast_ = input.readInt32();
                  break;
                }
                case 1264: {
                  bitField1_ |= 0x08000000;
                  saturation_ = input.readInt32();
                  break;
                }
                case 1272: {
                  bitField1_ |= 0x10000000;
                  tintcolor_ = input.readInt32();
                  break;
                }
                case 1280: {
                  bitField1_ |= 0x20000000;
                  effectStartTime_ = input.readInt32();
                  break;
                }
                case 1288: {
                  bitField1_ |= 0x40000000;
                  effectEndTime_ = input.readInt32();
                  break;
                }
                case 1298: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.Builder subBuilder = null;
                  if (((bitField1_ & 0x80000000) != 0)) {
                    subBuilder = startMatrix_.toBuilder();
                  }
                  startMatrix_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(startMatrix_);
                    startMatrix_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x80000000;
                  break;
                }
                case 1306: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.Builder subBuilder = null;
                  if (((bitField2_ & 0x00000001) != 0)) {
                    subBuilder = endMatrix_.toBuilder();
                  }
                  endMatrix_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(endMatrix_);
                    endMatrix_ = subBuilder.buildPartial();
                  }
                  bitField2_ |= 0x00000001;
                  break;
                }
                case 1312: {
                  int rawValue = input.readEnum();
                    @SuppressWarnings("deprecation")
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ThemeEffectType value = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ThemeEffectType.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(164, rawValue);
                  } else {
                    bitField2_ |= 0x00000002;
                    autoThemeEffect_ = rawValue;
                  }
                  break;
                }
                case 1320: {
                  if (!((mutable_bitField2_ & 0x00000004) != 0)) {
                    volumeEnvelopeTime_ = newIntList();
                    mutable_bitField2_ |= 0x00000004;
                  }
                  volumeEnvelopeTime_.addInt(input.readInt32());
                  break;
                }
                case 1322: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField2_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                    volumeEnvelopeTime_ = newIntList();
                    mutable_bitField2_ |= 0x00000004;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    volumeEnvelopeTime_.addInt(input.readInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 1328: {
                  if (!((mutable_bitField2_ & 0x00000008) != 0)) {
                    volumeEnvelopeLevel_ = newIntList();
                    mutable_bitField2_ |= 0x00000008;
                  }
                  volumeEnvelopeLevel_.addInt(input.readInt32());
                  break;
                }
                case 1330: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField2_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                    volumeEnvelopeLevel_ = newIntList();
                    mutable_bitField2_ |= 0x00000008;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    volumeEnvelopeLevel_.addInt(input.readInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 1341: {
                  bitField2_ |= 0x00000004;
                  clipWidth_ = input.readFloat();
                  break;
                }
                case 1344: {
                  bitField2_ |= 0x00000008;
                  playbackSpeed_ = input.readInt32();
                  break;
                }
                case 1354: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.Builder subBuilder = null;
                  if (((bitField2_ & 0x00000010) != 0)) {
                    subBuilder = colorEffect_.toBuilder();
                  }
                  colorEffect_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(colorEffect_);
                    colorEffect_ = subBuilder.buildPartial();
                  }
                  bitField2_ |= 0x00000010;
                  break;
                }
                case 1362: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.Builder subBuilder = null;
                  if (((bitField2_ & 0x00000020) != 0)) {
                    subBuilder = effectOptions_.toBuilder();
                  }
                  effectOptions_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(effectOptions_);
                    effectOptions_ = subBuilder.buildPartial();
                  }
                  bitField2_ |= 0x00000020;
                  break;
                }
                case 1370: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder subBuilder = null;
                  if (((bitField1_ & 0x01000000) != 0)) {
                    subBuilder = unattachedTransition_.toBuilder();
                  }
                  unattachedTransition_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(unattachedTransition_);
                    unattachedTransition_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x01000000;
                  break;
                }
                case 1376: {
                  bitField2_ |= 0x00000040;
                  transcodeApproved_ = input.readBool();
                  break;
                }
                case 1384: {
                  int rawValue = input.readEnum();
                    @SuppressWarnings("deprecation")
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipState value = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipState.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(173, rawValue);
                  } else {
                    bitField2_ |= 0x00000080;
                    clipState_ = rawValue;
                  }
                  break;
                }
                case 1394: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField2_ |= 0x00000100;
                  mediaMsid_ = bs;
                  break;
                }
                case 1400: {
                  bitField2_ |= 0x00000200;
                  cropLink_ = input.readBool();
                  break;
                }
                case 1416: {
                  bitField2_ |= 0x00000400;
                  isReverse_ = input.readBool();
                  break;
                }
                case 1424: {
                  bitField2_ |= 0x00000800;
                  voiceChanger_ = input.readInt32();
                  break;
                }
                case 1432: {
                  bitField2_ |= 0x00001000;
                  vignette_ = input.readBool();
                  break;
                }
                case 1440: {
                  bitField2_ |= 0x00002000;
                  panLeft_ = input.readInt32();
                  break;
                }
                case 1448: {
                  bitField2_ |= 0x00004000;
                  panRight_ = input.readInt32();
                  break;
                }
                case 1456: {
                  bitField2_ |= 0x00008000;
                  compressor_ = input.readInt32();
                  break;
                }
                case 1464: {
                  bitField2_ |= 0x00010000;
                  pitchFactor_ = input.readInt32();
                  break;
                }
                case 1474: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField2_ |= 0x00020000;
                  clipName_ = bs;
                  break;
                }
                case 1482: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField2_ |= 0x00040000;
                  iosMediaAssetId_ = bs;
                  break;
                }
                case 1488: {
                  bitField2_ |= 0x00080000;
                  keepPitch_ = input.readBool();
                  break;
                }
                case 1496: {
                  bitField2_ |= 0x00100000;
                  useIFrameOnly_ = input.readBool();
                  break;
                }
                case 1506: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField2_ |= 0x00200000;
                  enhancedAudioFilter_ = bs;
                  break;
                }
                case 1514: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField2_ |= 0x00400000;
                  equalizer_ = bs;
                  break;
                }
                case 1522: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.Builder subBuilder = null;
                  if (((bitField2_ & 0x00800000) != 0)) {
                    subBuilder = clipRange_.toBuilder();
                  }
                  clipRange_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(clipRange_);
                    clipRange_ = subBuilder.buildPartial();
                  }
                  bitField2_ |= 0x00800000;
                  break;
                }
                case 1530: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField2_ |= 0x01000000;
                  reverb_ = bs;
                  break;
                }
                case 1538: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.Builder subBuilder = null;
                  if (((bitField2_ & 0x02000000) != 0)) {
                    subBuilder = colorAdjustment_.toBuilder();
                  }
                  colorAdjustment_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(colorAdjustment_);
                    colorAdjustment_ = subBuilder.buildPartial();
                  }
                  bitField2_ |= 0x02000000;
                  break;
                }
                case 1546: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.Builder subBuilder = null;
                  if (((bitField2_ & 0x04000000) != 0)) {
                    subBuilder = colorFilter_.toBuilder();
                  }
                  colorFilter_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(colorFilter_);
                    colorFilter_ = subBuilder.buildPartial();
                  }
                  bitField2_ |= 0x04000000;
                  break;
                }
                case 1554: {
                  if (!((mutable_bitField2_ & 0x20000000) != 0)) {
                    effectOption_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem>();
                    mutable_bitField2_ |= 0x20000000;
                  }
                  effectOption_.add(
                      input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.PARSER, extensionRegistry));
                  break;
                }
                case 1560: {
                  bitField2_ |= 0x08000000;
                  includedClipRotation_ = input.readBool();
                  break;
                }
                case 1568: {
                  bitField2_ |= 0x10000000;
                  uprightRotation_ = input.readInt32();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField2_ & 0x00000004) != 0)) {
              volumeEnvelopeTime_.makeImmutable(); // C
            }
            if (((mutable_bitField2_ & 0x00000008) != 0)) {
              volumeEnvelopeLevel_.makeImmutable(); // C
            }
            if (((mutable_bitField2_ & 0x20000000) != 0)) {
              effectOption_ = java.util.Collections.unmodifiableList(effectOption_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_VisualClip_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_VisualClip_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip.Builder.class);
        }

        private int bitField0_;
        private int bitField1_;
        private int bitField2_;
        public static final int MEDIA_PATH_FIELD_NUMBER = 153;
        private volatile java.lang.Object mediaPath_;
        /**
         * <pre>
         * Path to the original file (image or video)
         * </pre>
         *
         * <code>optional string media_path = 153;</code>
         * @return Whether the mediaPath field is set.
         */
        @java.lang.Override
        public boolean hasMediaPath() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Path to the original file (image or video)
         * </pre>
         *
         * <code>optional string media_path = 153;</code>
         * @return The mediaPath.
         */
        @java.lang.Override
        public java.lang.String getMediaPath() {
          java.lang.Object ref = mediaPath_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              mediaPath_ = s;
            }
            return s;
          }
        }
        /**
         * <pre>
         * Path to the original file (image or video)
         * </pre>
         *
         * <code>optional string media_path = 153;</code>
         * @return The bytes for mediaPath.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getMediaPathBytes() {
          java.lang.Object ref = mediaPath_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            mediaPath_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int FACE_BOUNDS_LEFT_FIELD_NUMBER = 100;
        private float faceBoundsLeft_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float face_bounds_left = 100;</code>
         * @return Whether the faceBoundsLeft field is set.
         */
        @java.lang.Override
        public boolean hasFaceBoundsLeft() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float face_bounds_left = 100;</code>
         * @return The faceBoundsLeft.
         */
        @java.lang.Override
        public float getFaceBoundsLeft() {
          return faceBoundsLeft_;
        }

        public static final int FACE_BOUNDS_TOP_FIELD_NUMBER = 101;
        private float faceBoundsTop_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float face_bounds_top = 101;</code>
         * @return Whether the faceBoundsTop field is set.
         */
        @java.lang.Override
        public boolean hasFaceBoundsTop() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float face_bounds_top = 101;</code>
         * @return The faceBoundsTop.
         */
        @java.lang.Override
        public float getFaceBoundsTop() {
          return faceBoundsTop_;
        }

        public static final int FACE_BOUNDS_RIGHT_FIELD_NUMBER = 102;
        private float faceBoundsRight_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float face_bounds_right = 102;</code>
         * @return Whether the faceBoundsRight field is set.
         */
        @java.lang.Override
        public boolean hasFaceBoundsRight() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float face_bounds_right = 102;</code>
         * @return The faceBoundsRight.
         */
        @java.lang.Override
        public float getFaceBoundsRight() {
          return faceBoundsRight_;
        }

        public static final int FACE_BOUNDS_BOTTOM_FIELD_NUMBER = 103;
        private float faceBoundsBottom_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float face_bounds_bottom = 103;</code>
         * @return Whether the faceBoundsBottom field is set.
         */
        @java.lang.Override
        public boolean hasFaceBoundsBottom() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float face_bounds_bottom = 103;</code>
         * @return The faceBoundsBottom.
         */
        @java.lang.Override
        public float getFaceBoundsBottom() {
          return faceBoundsBottom_;
        }

        public static final int FACE_BOUNDS_SET_FIELD_NUMBER = 104;
        private boolean faceBoundsSet_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool face_bounds_set = 104;</code>
         * @return Whether the faceBoundsSet field is set.
         */
        @java.lang.Override
        public boolean hasFaceBoundsSet() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool face_bounds_set = 104;</code>
         * @return The faceBoundsSet.
         */
        @java.lang.Override
        public boolean getFaceBoundsSet() {
          return faceBoundsSet_;
        }

        public static final int CAPTURE_FILENAME_FIELD_NUMBER = 105;
        private volatile java.lang.Object captureFilename_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string capture_filename = 105;</code>
         * @return Whether the captureFilename field is set.
         */
        @java.lang.Override
        public boolean hasCaptureFilename() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string capture_filename = 105;</code>
         * @return The captureFilename.
         */
        @java.lang.Override
        public java.lang.String getCaptureFilename() {
          java.lang.Object ref = captureFilename_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              captureFilename_ = s;
            }
            return s;
          }
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string capture_filename = 105;</code>
         * @return The bytes for captureFilename.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getCaptureFilenameBytes() {
          java.lang.Object ref = captureFilename_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            captureFilename_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int ENGINE_CLIP_ID_FIELD_NUMBER = 106;
        private int engineClipId_;
        /**
         * <pre>
         * Unique identifier for this clip (within the project) used to identify
         * this clip to the NexEditor engine.
         * </pre>
         *
         * <code>optional int32 engine_clip_id = 106;</code>
         * @return Whether the engineClipId field is set.
         */
        @java.lang.Override
        public boolean hasEngineClipId() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <pre>
         * Unique identifier for this clip (within the project) used to identify
         * this clip to the NexEditor engine.
         * </pre>
         *
         * <code>optional int32 engine_clip_id = 106;</code>
         * @return The engineClipId.
         */
        @java.lang.Override
        public int getEngineClipId() {
          return engineClipId_;
        }

        public static final int ABSTRACT_CROP_FIELD_NUMBER = 107;
        private boolean abstractCrop_;
        /**
         * <pre>
         * ==== Cropping =============================================
         * Specifyies cropping of the video or image frame.
         * Sepearate start and end cropping can be set, which results
         * in an animated crop (for images, this is usually called the
         * "Ken Burns" effect; for video clips, the term "Digital Zoom"
         * is often used).
         * Because the width and height (and therefore aspect ratio) of
         * a clip are different when it is roated (except for perfectly
         * square images), for simplicity, rotated start and end positions
         * are stored separately and used when the clip is rotated at
         * 90-degree or 270-degree angles.
         * The start and end crop positions are stored in normalized
         * coordinates ("abstract" means normalized in this case).
         * Coordinates are normalized to the range 0,0 (top-left corner
         * of the image or video clip) through 100000 (bottom-right corner
         * of the image or video clip).  This means that if the crop area
         * extends outside the video (for example, black bars are shown)
         * at least some coordinates will be outside the 0~100000 range.
         * Note that for old projects, normalized cooridnates were not
         * used (this caused a problem when a JPEG was downsampled as
         * it was loaded, because the downsampler in the UI and engine
         * were different).  New projects always use normalized cooridnates.
         * Check abstract_crop to see if normalized  coordinates
         * are used.
         * </pre>
         *
         * <code>optional bool abstract_crop = 107;</code>
         * @return Whether the abstractCrop field is set.
         */
        @java.lang.Override
        public boolean hasAbstractCrop() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <pre>
         * ==== Cropping =============================================
         * Specifyies cropping of the video or image frame.
         * Sepearate start and end cropping can be set, which results
         * in an animated crop (for images, this is usually called the
         * "Ken Burns" effect; for video clips, the term "Digital Zoom"
         * is often used).
         * Because the width and height (and therefore aspect ratio) of
         * a clip are different when it is roated (except for perfectly
         * square images), for simplicity, rotated start and end positions
         * are stored separately and used when the clip is rotated at
         * 90-degree or 270-degree angles.
         * The start and end crop positions are stored in normalized
         * coordinates ("abstract" means normalized in this case).
         * Coordinates are normalized to the range 0,0 (top-left corner
         * of the image or video clip) through 100000 (bottom-right corner
         * of the image or video clip).  This means that if the crop area
         * extends outside the video (for example, black bars are shown)
         * at least some coordinates will be outside the 0~100000 range.
         * Note that for old projects, normalized cooridnates were not
         * used (this caused a problem when a JPEG was downsampled as
         * it was loaded, because the downsampler in the UI and engine
         * were different).  New projects always use normalized cooridnates.
         * Check abstract_crop to see if normalized  coordinates
         * are used.
         * </pre>
         *
         * <code>optional bool abstract_crop = 107;</code>
         * @return The abstractCrop.
         */
        @java.lang.Override
        public boolean getAbstractCrop() {
          return abstractCrop_;
        }

        public static final int START_POSITION_LEFT_FIELD_NUMBER = 108;
        private int startPositionLeft_;
        /**
         * <code>optional int32 start_position_left = 108;</code>
         * @return Whether the startPositionLeft field is set.
         */
        @java.lang.Override
        public boolean hasStartPositionLeft() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <code>optional int32 start_position_left = 108;</code>
         * @return The startPositionLeft.
         */
        @java.lang.Override
        public int getStartPositionLeft() {
          return startPositionLeft_;
        }

        public static final int START_POSITION_BOTTOM_FIELD_NUMBER = 109;
        private int startPositionBottom_;
        /**
         * <code>optional int32 start_position_bottom = 109;</code>
         * @return Whether the startPositionBottom field is set.
         */
        @java.lang.Override
        public boolean hasStartPositionBottom() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <code>optional int32 start_position_bottom = 109;</code>
         * @return The startPositionBottom.
         */
        @java.lang.Override
        public int getStartPositionBottom() {
          return startPositionBottom_;
        }

        public static final int START_POSITION_RIGHT_FIELD_NUMBER = 110;
        private int startPositionRight_;
        /**
         * <code>optional int32 start_position_right = 110;</code>
         * @return Whether the startPositionRight field is set.
         */
        @java.lang.Override
        public boolean hasStartPositionRight() {
          return ((bitField0_ & 0x00000800) != 0);
        }
        /**
         * <code>optional int32 start_position_right = 110;</code>
         * @return The startPositionRight.
         */
        @java.lang.Override
        public int getStartPositionRight() {
          return startPositionRight_;
        }

        public static final int START_POSITION_TOP_FIELD_NUMBER = 111;
        private int startPositionTop_;
        /**
         * <code>optional int32 start_position_top = 111;</code>
         * @return Whether the startPositionTop field is set.
         */
        @java.lang.Override
        public boolean hasStartPositionTop() {
          return ((bitField0_ & 0x00001000) != 0);
        }
        /**
         * <code>optional int32 start_position_top = 111;</code>
         * @return The startPositionTop.
         */
        @java.lang.Override
        public int getStartPositionTop() {
          return startPositionTop_;
        }

        public static final int END_POSITION_LEFT_FIELD_NUMBER = 112;
        private int endPositionLeft_;
        /**
         * <code>optional int32 end_position_left = 112;</code>
         * @return Whether the endPositionLeft field is set.
         */
        @java.lang.Override
        public boolean hasEndPositionLeft() {
          return ((bitField0_ & 0x00002000) != 0);
        }
        /**
         * <code>optional int32 end_position_left = 112;</code>
         * @return The endPositionLeft.
         */
        @java.lang.Override
        public int getEndPositionLeft() {
          return endPositionLeft_;
        }

        public static final int END_POSITION_BOTTOM_FIELD_NUMBER = 113;
        private int endPositionBottom_;
        /**
         * <code>optional int32 end_position_bottom = 113;</code>
         * @return Whether the endPositionBottom field is set.
         */
        @java.lang.Override
        public boolean hasEndPositionBottom() {
          return ((bitField0_ & 0x00004000) != 0);
        }
        /**
         * <code>optional int32 end_position_bottom = 113;</code>
         * @return The endPositionBottom.
         */
        @java.lang.Override
        public int getEndPositionBottom() {
          return endPositionBottom_;
        }

        public static final int END_POSITION_RIGHT_FIELD_NUMBER = 114;
        private int endPositionRight_;
        /**
         * <code>optional int32 end_position_right = 114;</code>
         * @return Whether the endPositionRight field is set.
         */
        @java.lang.Override
        public boolean hasEndPositionRight() {
          return ((bitField0_ & 0x00008000) != 0);
        }
        /**
         * <code>optional int32 end_position_right = 114;</code>
         * @return The endPositionRight.
         */
        @java.lang.Override
        public int getEndPositionRight() {
          return endPositionRight_;
        }

        public static final int END_POSITION_TOP_FIELD_NUMBER = 115;
        private int endPositionTop_;
        /**
         * <code>optional int32 end_position_top = 115;</code>
         * @return Whether the endPositionTop field is set.
         */
        @java.lang.Override
        public boolean hasEndPositionTop() {
          return ((bitField0_ & 0x00010000) != 0);
        }
        /**
         * <code>optional int32 end_position_top = 115;</code>
         * @return The endPositionTop.
         */
        @java.lang.Override
        public int getEndPositionTop() {
          return endPositionTop_;
        }

        public static final int ROTATED_START_POSITION_LEFT_FIELD_NUMBER = 116;
        private int rotatedStartPositionLeft_;
        /**
         * <code>optional int32 rotated_start_position_left = 116;</code>
         * @return Whether the rotatedStartPositionLeft field is set.
         */
        @java.lang.Override
        public boolean hasRotatedStartPositionLeft() {
          return ((bitField0_ & 0x00020000) != 0);
        }
        /**
         * <code>optional int32 rotated_start_position_left = 116;</code>
         * @return The rotatedStartPositionLeft.
         */
        @java.lang.Override
        public int getRotatedStartPositionLeft() {
          return rotatedStartPositionLeft_;
        }

        public static final int ROTATED_START_POSITION_BOTTOM_FIELD_NUMBER = 117;
        private int rotatedStartPositionBottom_;
        /**
         * <code>optional int32 rotated_start_position_bottom = 117;</code>
         * @return Whether the rotatedStartPositionBottom field is set.
         */
        @java.lang.Override
        public boolean hasRotatedStartPositionBottom() {
          return ((bitField0_ & 0x00040000) != 0);
        }
        /**
         * <code>optional int32 rotated_start_position_bottom = 117;</code>
         * @return The rotatedStartPositionBottom.
         */
        @java.lang.Override
        public int getRotatedStartPositionBottom() {
          return rotatedStartPositionBottom_;
        }

        public static final int ROTATED_START_POSITION_RIGHT_FIELD_NUMBER = 118;
        private int rotatedStartPositionRight_;
        /**
         * <code>optional int32 rotated_start_position_right = 118;</code>
         * @return Whether the rotatedStartPositionRight field is set.
         */
        @java.lang.Override
        public boolean hasRotatedStartPositionRight() {
          return ((bitField0_ & 0x00080000) != 0);
        }
        /**
         * <code>optional int32 rotated_start_position_right = 118;</code>
         * @return The rotatedStartPositionRight.
         */
        @java.lang.Override
        public int getRotatedStartPositionRight() {
          return rotatedStartPositionRight_;
        }

        public static final int ROTATED_START_POSITION_TOP_FIELD_NUMBER = 119;
        private int rotatedStartPositionTop_;
        /**
         * <code>optional int32 rotated_start_position_top = 119;</code>
         * @return Whether the rotatedStartPositionTop field is set.
         */
        @java.lang.Override
        public boolean hasRotatedStartPositionTop() {
          return ((bitField0_ & 0x00100000) != 0);
        }
        /**
         * <code>optional int32 rotated_start_position_top = 119;</code>
         * @return The rotatedStartPositionTop.
         */
        @java.lang.Override
        public int getRotatedStartPositionTop() {
          return rotatedStartPositionTop_;
        }

        public static final int ROTATED_END_POSITION_LEFT_FIELD_NUMBER = 120;
        private int rotatedEndPositionLeft_;
        /**
         * <code>optional int32 rotated_end_position_left = 120;</code>
         * @return Whether the rotatedEndPositionLeft field is set.
         */
        @java.lang.Override
        public boolean hasRotatedEndPositionLeft() {
          return ((bitField0_ & 0x00200000) != 0);
        }
        /**
         * <code>optional int32 rotated_end_position_left = 120;</code>
         * @return The rotatedEndPositionLeft.
         */
        @java.lang.Override
        public int getRotatedEndPositionLeft() {
          return rotatedEndPositionLeft_;
        }

        public static final int ROTATED_END_POSITION_BOTTOM_FIELD_NUMBER = 121;
        private int rotatedEndPositionBottom_;
        /**
         * <code>optional int32 rotated_end_position_bottom = 121;</code>
         * @return Whether the rotatedEndPositionBottom field is set.
         */
        @java.lang.Override
        public boolean hasRotatedEndPositionBottom() {
          return ((bitField0_ & 0x00400000) != 0);
        }
        /**
         * <code>optional int32 rotated_end_position_bottom = 121;</code>
         * @return The rotatedEndPositionBottom.
         */
        @java.lang.Override
        public int getRotatedEndPositionBottom() {
          return rotatedEndPositionBottom_;
        }

        public static final int ROTATED_END_POSITION_RIGHT_FIELD_NUMBER = 122;
        private int rotatedEndPositionRight_;
        /**
         * <code>optional int32 rotated_end_position_right = 122;</code>
         * @return Whether the rotatedEndPositionRight field is set.
         */
        @java.lang.Override
        public boolean hasRotatedEndPositionRight() {
          return ((bitField0_ & 0x00800000) != 0);
        }
        /**
         * <code>optional int32 rotated_end_position_right = 122;</code>
         * @return The rotatedEndPositionRight.
         */
        @java.lang.Override
        public int getRotatedEndPositionRight() {
          return rotatedEndPositionRight_;
        }

        public static final int ROTATED_END_POSITION_TOP_FIELD_NUMBER = 123;
        private int rotatedEndPositionTop_;
        /**
         * <pre>
         * ==========================================================
         * </pre>
         *
         * <code>optional int32 rotated_end_position_top = 123;</code>
         * @return Whether the rotatedEndPositionTop field is set.
         */
        @java.lang.Override
        public boolean hasRotatedEndPositionTop() {
          return ((bitField0_ & 0x01000000) != 0);
        }
        /**
         * <pre>
         * ==========================================================
         * </pre>
         *
         * <code>optional int32 rotated_end_position_top = 123;</code>
         * @return The rotatedEndPositionTop.
         */
        @java.lang.Override
        public int getRotatedEndPositionTop() {
          return rotatedEndPositionTop_;
        }

        public static final int ROTATION_FIELD_NUMBER = 124;
        private int rotation_;
        /**
         * <code>optional int32 rotation = 124;</code>
         * @return Whether the rotation field is set.
         */
        @java.lang.Override
        public boolean hasRotation() {
          return ((bitField0_ & 0x02000000) != 0);
        }
        /**
         * <code>optional int32 rotation = 124;</code>
         * @return The rotation.
         */
        @java.lang.Override
        public int getRotation() {
          return rotation_;
        }

        public static final int FLIPH_FIELD_NUMBER = 125;
        private boolean fliph_;
        /**
         * <code>optional bool fliph = 125;</code>
         * @return Whether the fliph field is set.
         */
        @java.lang.Override
        public boolean hasFliph() {
          return ((bitField0_ & 0x04000000) != 0);
        }
        /**
         * <code>optional bool fliph = 125;</code>
         * @return The fliph.
         */
        @java.lang.Override
        public boolean getFliph() {
          return fliph_;
        }

        public static final int FLIPV_FIELD_NUMBER = 126;
        private boolean flipv_;
        /**
         * <code>optional bool flipv = 126;</code>
         * @return Whether the flipv field is set.
         */
        @java.lang.Override
        public boolean hasFlipv() {
          return ((bitField0_ & 0x08000000) != 0);
        }
        /**
         * <code>optional bool flipv = 126;</code>
         * @return The flipv.
         */
        @java.lang.Override
        public boolean getFlipv() {
          return flipv_;
        }

        public static final int DIFF_AV_DURATION_FIELD_NUMBER = 127;
        private int diffAvDuration_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 diff_av_duration = 127;</code>
         * @return Whether the diffAvDuration field is set.
         */
        @java.lang.Override
        public boolean hasDiffAvDuration() {
          return ((bitField0_ & 0x10000000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 diff_av_duration = 127;</code>
         * @return The diffAvDuration.
         */
        @java.lang.Override
        public int getDiffAvDuration() {
          return diffAvDuration_;
        }

        public static final int TRIM_TIME_START_FIELD_NUMBER = 128;
        private int trimTimeStart_;
        /**
         * <code>optional int32 trim_time_start = 128;</code>
         * @return Whether the trimTimeStart field is set.
         */
        @java.lang.Override
        public boolean hasTrimTimeStart() {
          return ((bitField0_ & 0x20000000) != 0);
        }
        /**
         * <code>optional int32 trim_time_start = 128;</code>
         * @return The trimTimeStart.
         */
        @java.lang.Override
        public int getTrimTimeStart() {
          return trimTimeStart_;
        }

        public static final int TRIM_TIME_END_FIELD_NUMBER = 129;
        private int trimTimeEnd_;
        /**
         * <code>optional int32 trim_time_end = 129;</code>
         * @return Whether the trimTimeEnd field is set.
         */
        @java.lang.Override
        public boolean hasTrimTimeEnd() {
          return ((bitField0_ & 0x40000000) != 0);
        }
        /**
         * <code>optional int32 trim_time_end = 129;</code>
         * @return The trimTimeEnd.
         */
        @java.lang.Override
        public int getTrimTimeEnd() {
          return trimTimeEnd_;
        }

        public static final int TRIMMED_DURATION_FIELD_NUMBER = 130;
        private int trimmedDuration_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 trimmed_duration = 130;</code>
         * @return Whether the trimmedDuration field is set.
         */
        @java.lang.Override
        public boolean hasTrimmedDuration() {
          return ((bitField0_ & 0x80000000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 trimmed_duration = 130;</code>
         * @return The trimmedDuration.
         */
        @java.lang.Override
        public int getTrimmedDuration() {
          return trimmedDuration_;
        }

        public static final int PRE_TRIMMED_DURATION_FIELD_NUMBER = 131;
        private int preTrimmedDuration_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 pre_trimmed_duration = 131;</code>
         * @return Whether the preTrimmedDuration field is set.
         */
        @java.lang.Override
        public boolean hasPreTrimmedDuration() {
          return ((bitField1_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 pre_trimmed_duration = 131;</code>
         * @return The preTrimmedDuration.
         */
        @java.lang.Override
        public int getPreTrimmedDuration() {
          return preTrimmedDuration_;
        }

        public static final int TITLE_EFFECT_ID_FIELD_NUMBER = 132;
        private volatile java.lang.Object titleEffectId_;
        /**
         * <code>optional string title_effect_id = 132;</code>
         * @return Whether the titleEffectId field is set.
         */
        @java.lang.Override
        public boolean hasTitleEffectId() {
          return ((bitField1_ & 0x00000002) != 0);
        }
        /**
         * <code>optional string title_effect_id = 132;</code>
         * @return The titleEffectId.
         */
        @java.lang.Override
        public java.lang.String getTitleEffectId() {
          java.lang.Object ref = titleEffectId_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              titleEffectId_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string title_effect_id = 132;</code>
         * @return The bytes for titleEffectId.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getTitleEffectIdBytes() {
          java.lang.Object ref = titleEffectId_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            titleEffectId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int TITLE_START_TIME_FIELD_NUMBER = 133;
        private int titleStartTime_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 title_start_time = 133;</code>
         * @return Whether the titleStartTime field is set.
         */
        @java.lang.Override
        public boolean hasTitleStartTime() {
          return ((bitField1_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 title_start_time = 133;</code>
         * @return The titleStartTime.
         */
        @java.lang.Override
        public int getTitleStartTime() {
          return titleStartTime_;
        }

        public static final int TITLE_END_TIME_FIELD_NUMBER = 134;
        private int titleEndTime_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 title_end_time = 134;</code>
         * @return Whether the titleEndTime field is set.
         */
        @java.lang.Override
        public boolean hasTitleEndTime() {
          return ((bitField1_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 title_end_time = 134;</code>
         * @return The titleEndTime.
         */
        @java.lang.Override
        public int getTitleEndTime() {
          return titleEndTime_;
        }

        public static final int DURATION_FIELD_NUMBER = 135;
        private int duration_;
        /**
         * <code>optional int32 duration = 135;</code>
         * @return Whether the duration field is set.
         */
        @java.lang.Override
        public boolean hasDuration() {
          return ((bitField1_ & 0x00000010) != 0);
        }
        /**
         * <code>optional int32 duration = 135;</code>
         * @return The duration.
         */
        @java.lang.Override
        public int getDuration() {
          return duration_;
        }

        public static final int AUDIO_DURATION_FIELD_NUMBER = 136;
        private int audioDuration_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 audio_duration = 136;</code>
         * @return Whether the audioDuration field is set.
         */
        @java.lang.Override
        public boolean hasAudioDuration() {
          return ((bitField1_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 audio_duration = 136;</code>
         * @return The audioDuration.
         */
        @java.lang.Override
        public int getAudioDuration() {
          return audioDuration_;
        }

        public static final int VIDEO_DURATION_FIELD_NUMBER = 137;
        private int videoDuration_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 video_duration = 137;</code>
         * @return Whether the videoDuration field is set.
         */
        @java.lang.Override
        public boolean hasVideoDuration() {
          return ((bitField1_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 video_duration = 137;</code>
         * @return The videoDuration.
         */
        @java.lang.Override
        public int getVideoDuration() {
          return videoDuration_;
        }

        public static final int START_OVERLAP_FIELD_NUMBER = 138;
        private int startOverlap_;
        /**
         * <code>optional int32 start_overlap = 138;</code>
         * @return Whether the startOverlap field is set.
         */
        @java.lang.Override
        public boolean hasStartOverlap() {
          return ((bitField1_ & 0x00000080) != 0);
        }
        /**
         * <code>optional int32 start_overlap = 138;</code>
         * @return The startOverlap.
         */
        @java.lang.Override
        public int getStartOverlap() {
          return startOverlap_;
        }

        public static final int END_OVERLAP_FIELD_NUMBER = 139;
        private int endOverlap_;
        /**
         * <code>optional int32 end_overlap = 139;</code>
         * @return Whether the endOverlap field is set.
         */
        @java.lang.Override
        public boolean hasEndOverlap() {
          return ((bitField1_ & 0x00000100) != 0);
        }
        /**
         * <code>optional int32 end_overlap = 139;</code>
         * @return The endOverlap.
         */
        @java.lang.Override
        public int getEndOverlap() {
          return endOverlap_;
        }

        public static final int WIDTH_FIELD_NUMBER = 140;
        private int width_;
        /**
         * <code>optional int32 width = 140;</code>
         * @return Whether the width field is set.
         */
        @java.lang.Override
        public boolean hasWidth() {
          return ((bitField1_ & 0x00000200) != 0);
        }
        /**
         * <code>optional int32 width = 140;</code>
         * @return The width.
         */
        @java.lang.Override
        public int getWidth() {
          return width_;
        }

        public static final int HEIGHT_FIELD_NUMBER = 141;
        private int height_;
        /**
         * <code>optional int32 height = 141;</code>
         * @return Whether the height field is set.
         */
        @java.lang.Override
        public boolean hasHeight() {
          return ((bitField1_ & 0x00000400) != 0);
        }
        /**
         * <code>optional int32 height = 141;</code>
         * @return The height.
         */
        @java.lang.Override
        public int getHeight() {
          return height_;
        }

        public static final int ORIGINAL_WIDTH_FIELD_NUMBER = 142;
        private int originalWidth_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 original_width = 142;</code>
         * @return Whether the originalWidth field is set.
         */
        @java.lang.Override
        public boolean hasOriginalWidth() {
          return ((bitField1_ & 0x00000800) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 original_width = 142;</code>
         * @return The originalWidth.
         */
        @java.lang.Override
        public int getOriginalWidth() {
          return originalWidth_;
        }

        public static final int ORIGINAL_HEIGHT_FIELD_NUMBER = 143;
        private int originalHeight_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 original_height = 143;</code>
         * @return Whether the originalHeight field is set.
         */
        @java.lang.Override
        public boolean hasOriginalHeight() {
          return ((bitField1_ & 0x00001000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 original_height = 143;</code>
         * @return The originalHeight.
         */
        @java.lang.Override
        public int getOriginalHeight() {
          return originalHeight_;
        }

        public static final int CLIP_VOLUME_FIELD_NUMBER = 144;
        private int clipVolume_;
        /**
         * <code>optional int32 clip_volume = 144;</code>
         * @return Whether the clipVolume field is set.
         */
        @java.lang.Override
        public boolean hasClipVolume() {
          return ((bitField1_ & 0x00002000) != 0);
        }
        /**
         * <code>optional int32 clip_volume = 144;</code>
         * @return The clipVolume.
         */
        @java.lang.Override
        public int getClipVolume() {
          return clipVolume_;
        }

        public static final int MUSIC_VOLUME_FIELD_NUMBER = 145;
        private int musicVolume_;
        /**
         * <code>optional int32 music_volume = 145;</code>
         * @return Whether the musicVolume field is set.
         */
        @java.lang.Override
        public boolean hasMusicVolume() {
          return ((bitField1_ & 0x00004000) != 0);
        }
        /**
         * <code>optional int32 music_volume = 145;</code>
         * @return The musicVolume.
         */
        @java.lang.Override
        public int getMusicVolume() {
          return musicVolume_;
        }

        public static final int TITLE_STYLE_FIELD_NUMBER = 146;
        private int titleStyle_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.TitleStyle title_style = 146;</code>
         * @return Whether the titleStyle field is set.
         */
        @java.lang.Override public boolean hasTitleStyle() {
          return ((bitField1_ & 0x00008000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.TitleStyle title_style = 146;</code>
         * @return The titleStyle.
         */
        @java.lang.Override public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TitleStyle getTitleStyle() {
          @SuppressWarnings("deprecation")
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TitleStyle result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TitleStyle.valueOf(titleStyle_);
          return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TitleStyle.TITLE_STYLE_NONE : result;
        }

        public static final int IS_IMAGE_FIELD_NUMBER = 147;
        private boolean isImage_;
        /**
         * <code>optional bool is_image = 147;</code>
         * @return Whether the isImage field is set.
         */
        @java.lang.Override
        public boolean hasIsImage() {
          return ((bitField1_ & 0x00010000) != 0);
        }
        /**
         * <code>optional bool is_image = 147;</code>
         * @return The isImage.
         */
        @java.lang.Override
        public boolean getIsImage() {
          return isImage_;
        }

        public static final int MUTE_AUDIO_FIELD_NUMBER = 148;
        private boolean muteAudio_;
        /**
         * <code>optional bool mute_audio = 148;</code>
         * @return Whether the muteAudio field is set.
         */
        @java.lang.Override
        public boolean hasMuteAudio() {
          return ((bitField1_ & 0x00020000) != 0);
        }
        /**
         * <code>optional bool mute_audio = 148;</code>
         * @return The muteAudio.
         */
        @java.lang.Override
        public boolean getMuteAudio() {
          return muteAudio_;
        }

        public static final int MUTE_MUSIC_FIELD_NUMBER = 149;
        private boolean muteMusic_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool mute_music = 149;</code>
         * @return Whether the muteMusic field is set.
         */
        @java.lang.Override
        public boolean hasMuteMusic() {
          return ((bitField1_ & 0x00040000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool mute_music = 149;</code>
         * @return The muteMusic.
         */
        @java.lang.Override
        public boolean getMuteMusic() {
          return muteMusic_;
        }

        public static final int HAS_AUDIO_FIELD_NUMBER = 150;
        private boolean hasAudio_;
        /**
         * <code>optional bool has_audio = 150;</code>
         * @return Whether the hasAudio field is set.
         */
        @java.lang.Override
        public boolean hasHasAudio() {
          return ((bitField1_ & 0x00080000) != 0);
        }
        /**
         * <code>optional bool has_audio = 150;</code>
         * @return The hasAudio.
         */
        @java.lang.Override
        public boolean getHasAudio() {
          return hasAudio_;
        }

        public static final int HAS_VIDEO_FIELD_NUMBER = 151;
        private boolean hasVideo_;
        /**
         * <code>optional bool has_video = 151;</code>
         * @return Whether the hasVideo field is set.
         */
        @java.lang.Override
        public boolean hasHasVideo() {
          return ((bitField1_ & 0x00100000) != 0);
        }
        /**
         * <code>optional bool has_video = 151;</code>
         * @return The hasVideo.
         */
        @java.lang.Override
        public boolean getHasVideo() {
          return hasVideo_;
        }

        public static final int THUMB_PATH_FIELD_NUMBER = 152;
        private volatile java.lang.Object thumbPath_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string thumb_path = 152;</code>
         * @return Whether the thumbPath field is set.
         */
        @java.lang.Override
        public boolean hasThumbPath() {
          return ((bitField1_ & 0x00200000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string thumb_path = 152;</code>
         * @return The thumbPath.
         */
        @java.lang.Override
        public java.lang.String getThumbPath() {
          java.lang.Object ref = thumbPath_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              thumbPath_ = s;
            }
            return s;
          }
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string thumb_path = 152;</code>
         * @return The bytes for thumbPath.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getThumbPathBytes() {
          java.lang.Object ref = thumbPath_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            thumbPath_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int TRANSITION_ITEM_UUID_LSB_FIELD_NUMBER = 154;
        private long transitionItemUuidLsb_;
        /**
         * <code>optional uint64 transition_item_uuid_lsb = 154;</code>
         * @return Whether the transitionItemUuidLsb field is set.
         */
        @java.lang.Override
        public boolean hasTransitionItemUuidLsb() {
          return ((bitField1_ & 0x00400000) != 0);
        }
        /**
         * <code>optional uint64 transition_item_uuid_lsb = 154;</code>
         * @return The transitionItemUuidLsb.
         */
        @java.lang.Override
        public long getTransitionItemUuidLsb() {
          return transitionItemUuidLsb_;
        }

        public static final int TRANSITION_ITEM_UUID_MSB_FIELD_NUMBER = 155;
        private long transitionItemUuidMsb_;
        /**
         * <code>optional uint64 transition_item_uuid_msb = 155;</code>
         * @return Whether the transitionItemUuidMsb field is set.
         */
        @java.lang.Override
        public boolean hasTransitionItemUuidMsb() {
          return ((bitField1_ & 0x00800000) != 0);
        }
        /**
         * <code>optional uint64 transition_item_uuid_msb = 155;</code>
         * @return The transitionItemUuidMsb.
         */
        @java.lang.Override
        public long getTransitionItemUuidMsb() {
          return transitionItemUuidMsb_;
        }

        public static final int UNATTACHED_TRANSITION_FIELD_NUMBER = 171;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem unattachedTransition_;
        /**
         * <code>optional .KMProto.KMProject.TimelineItem unattached_transition = 171;</code>
         * @return Whether the unattachedTransition field is set.
         */
        @java.lang.Override
        public boolean hasUnattachedTransition() {
          return ((bitField1_ & 0x01000000) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.TimelineItem unattached_transition = 171;</code>
         * @return The unattachedTransition.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem getUnattachedTransition() {
          return unattachedTransition_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.getDefaultInstance() : unattachedTransition_;
        }
        /**
         * <code>optional .KMProto.KMProject.TimelineItem unattached_transition = 171;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder getUnattachedTransitionOrBuilder() {
          return unattachedTransition_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.getDefaultInstance() : unattachedTransition_;
        }

        public static final int BRIGHTNESS_FIELD_NUMBER = 156;
        private int brightness_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 brightness = 156;</code>
         * @return Whether the brightness field is set.
         */
        @java.lang.Override
        public boolean hasBrightness() {
          return ((bitField1_ & 0x02000000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 brightness = 156;</code>
         * @return The brightness.
         */
        @java.lang.Override
        public int getBrightness() {
          return brightness_;
        }

        public static final int CONTRAST_FIELD_NUMBER = 157;
        private int contrast_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 contrast = 157;</code>
         * @return Whether the contrast field is set.
         */
        @java.lang.Override
        public boolean hasContrast() {
          return ((bitField1_ & 0x04000000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 contrast = 157;</code>
         * @return The contrast.
         */
        @java.lang.Override
        public int getContrast() {
          return contrast_;
        }

        public static final int SATURATION_FIELD_NUMBER = 158;
        private int saturation_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 saturation = 158;</code>
         * @return Whether the saturation field is set.
         */
        @java.lang.Override
        public boolean hasSaturation() {
          return ((bitField1_ & 0x08000000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 saturation = 158;</code>
         * @return The saturation.
         */
        @java.lang.Override
        public int getSaturation() {
          return saturation_;
        }

        public static final int TINTCOLOR_FIELD_NUMBER = 159;
        private int tintcolor_;
        /**
         * <code>optional int32 tintcolor = 159;</code>
         * @return Whether the tintcolor field is set.
         */
        @java.lang.Override
        public boolean hasTintcolor() {
          return ((bitField1_ & 0x10000000) != 0);
        }
        /**
         * <code>optional int32 tintcolor = 159;</code>
         * @return The tintcolor.
         */
        @java.lang.Override
        public int getTintcolor() {
          return tintcolor_;
        }

        public static final int EFFECT_START_TIME_FIELD_NUMBER = 160;
        private int effectStartTime_;
        /**
         * <code>optional int32 effect_start_time = 160;</code>
         * @return Whether the effectStartTime field is set.
         */
        @java.lang.Override
        public boolean hasEffectStartTime() {
          return ((bitField1_ & 0x20000000) != 0);
        }
        /**
         * <code>optional int32 effect_start_time = 160;</code>
         * @return The effectStartTime.
         */
        @java.lang.Override
        public int getEffectStartTime() {
          return effectStartTime_;
        }

        public static final int EFFECT_END_TIME_FIELD_NUMBER = 161;
        private int effectEndTime_;
        /**
         * <code>optional int32 effect_end_time = 161;</code>
         * @return Whether the effectEndTime field is set.
         */
        @java.lang.Override
        public boolean hasEffectEndTime() {
          return ((bitField1_ & 0x40000000) != 0);
        }
        /**
         * <code>optional int32 effect_end_time = 161;</code>
         * @return The effectEndTime.
         */
        @java.lang.Override
        public int getEffectEndTime() {
          return effectEndTime_;
        }

        public static final int START_MATRIX_FIELD_NUMBER = 162;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix startMatrix_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Matrix start_matrix = 162;</code>
         * @return Whether the startMatrix field is set.
         */
        @java.lang.Override
        public boolean hasStartMatrix() {
          return ((bitField1_ & 0x80000000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Matrix start_matrix = 162;</code>
         * @return The startMatrix.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix getStartMatrix() {
          return startMatrix_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.getDefaultInstance() : startMatrix_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Matrix start_matrix = 162;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.MatrixOrBuilder getStartMatrixOrBuilder() {
          return startMatrix_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.getDefaultInstance() : startMatrix_;
        }

        public static final int END_MATRIX_FIELD_NUMBER = 163;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix endMatrix_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Matrix end_matrix = 163;</code>
         * @return Whether the endMatrix field is set.
         */
        @java.lang.Override
        public boolean hasEndMatrix() {
          return ((bitField2_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Matrix end_matrix = 163;</code>
         * @return The endMatrix.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix getEndMatrix() {
          return endMatrix_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.getDefaultInstance() : endMatrix_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Matrix end_matrix = 163;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.MatrixOrBuilder getEndMatrixOrBuilder() {
          return endMatrix_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.getDefaultInstance() : endMatrix_;
        }

        public static final int AUTO_THEME_EFFECT_FIELD_NUMBER = 164;
        private int autoThemeEffect_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ThemeEffectType auto_theme_effect = 164;</code>
         * @return Whether the autoThemeEffect field is set.
         */
        @java.lang.Override public boolean hasAutoThemeEffect() {
          return ((bitField2_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ThemeEffectType auto_theme_effect = 164;</code>
         * @return The autoThemeEffect.
         */
        @java.lang.Override public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ThemeEffectType getAutoThemeEffect() {
          @SuppressWarnings("deprecation")
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ThemeEffectType result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ThemeEffectType.valueOf(autoThemeEffect_);
          return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ThemeEffectType.THEME_EFFECT_TYPE_OPENING : result;
        }

        public static final int VOLUME_ENVELOPE_TIME_FIELD_NUMBER = 165;
        private com.google.protobuf.Internal.IntList volumeEnvelopeTime_;
        /**
         * <code>repeated int32 volume_envelope_time = 165 [packed = true];</code>
         * @return A list containing the volumeEnvelopeTime.
         */
        @java.lang.Override
        public java.util.List<java.lang.Integer>
            getVolumeEnvelopeTimeList() {
          return volumeEnvelopeTime_;
        }
        /**
         * <code>repeated int32 volume_envelope_time = 165 [packed = true];</code>
         * @return The count of volumeEnvelopeTime.
         */
        public int getVolumeEnvelopeTimeCount() {
          return volumeEnvelopeTime_.size();
        }
        /**
         * <code>repeated int32 volume_envelope_time = 165 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The volumeEnvelopeTime at the given index.
         */
        public int getVolumeEnvelopeTime(int index) {
          return volumeEnvelopeTime_.getInt(index);
        }
        private int volumeEnvelopeTimeMemoizedSerializedSize = -1;

        public static final int VOLUME_ENVELOPE_LEVEL_FIELD_NUMBER = 166;
        private com.google.protobuf.Internal.IntList volumeEnvelopeLevel_;
        /**
         * <code>repeated int32 volume_envelope_level = 166 [packed = true];</code>
         * @return A list containing the volumeEnvelopeLevel.
         */
        @java.lang.Override
        public java.util.List<java.lang.Integer>
            getVolumeEnvelopeLevelList() {
          return volumeEnvelopeLevel_;
        }
        /**
         * <code>repeated int32 volume_envelope_level = 166 [packed = true];</code>
         * @return The count of volumeEnvelopeLevel.
         */
        public int getVolumeEnvelopeLevelCount() {
          return volumeEnvelopeLevel_.size();
        }
        /**
         * <code>repeated int32 volume_envelope_level = 166 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The volumeEnvelopeLevel at the given index.
         */
        public int getVolumeEnvelopeLevel(int index) {
          return volumeEnvelopeLevel_.getInt(index);
        }
        private int volumeEnvelopeLevelMemoizedSerializedSize = -1;

        public static final int CLIP_WIDTH_FIELD_NUMBER = 167;
        private float clipWidth_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float clip_width = 167;</code>
         * @return Whether the clipWidth field is set.
         */
        @java.lang.Override
        public boolean hasClipWidth() {
          return ((bitField2_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float clip_width = 167;</code>
         * @return The clipWidth.
         */
        @java.lang.Override
        public float getClipWidth() {
          return clipWidth_;
        }

        public static final int PLAYBACK_SPEED_FIELD_NUMBER = 168;
        private int playbackSpeed_;
        /**
         * <code>optional int32 playback_speed = 168;</code>
         * @return Whether the playbackSpeed field is set.
         */
        @java.lang.Override
        public boolean hasPlaybackSpeed() {
          return ((bitField2_ & 0x00000008) != 0);
        }
        /**
         * <code>optional int32 playback_speed = 168;</code>
         * @return The playbackSpeed.
         */
        @java.lang.Override
        public int getPlaybackSpeed() {
          return playbackSpeed_;
        }

        public static final int COLOR_EFFECT_FIELD_NUMBER = 169;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect colorEffect_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ColorEffect color_effect = 169;</code>
         * @return Whether the colorEffect field is set.
         */
        @java.lang.Override
        public boolean hasColorEffect() {
          return ((bitField2_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ColorEffect color_effect = 169;</code>
         * @return The colorEffect.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect getColorEffect() {
          return colorEffect_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.getDefaultInstance() : colorEffect_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ColorEffect color_effect = 169;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffectOrBuilder getColorEffectOrBuilder() {
          return colorEffect_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.getDefaultInstance() : colorEffect_;
        }

        public static final int EFFECT_OPTIONS_FIELD_NUMBER = 170;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap effectOptions_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.StringHashMap effect_options = 170;</code>
         * @return Whether the effectOptions field is set.
         */
        @java.lang.Override
        public boolean hasEffectOptions() {
          return ((bitField2_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.StringHashMap effect_options = 170;</code>
         * @return The effectOptions.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap getEffectOptions() {
          return effectOptions_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.getDefaultInstance() : effectOptions_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.StringHashMap effect_options = 170;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapOrBuilder getEffectOptionsOrBuilder() {
          return effectOptions_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.getDefaultInstance() : effectOptions_;
        }

        public static final int TRANSCODE_APPROVED_FIELD_NUMBER = 172;
        private boolean transcodeApproved_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool transcode_approved = 172;</code>
         * @return Whether the transcodeApproved field is set.
         */
        @java.lang.Override
        public boolean hasTranscodeApproved() {
          return ((bitField2_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool transcode_approved = 172;</code>
         * @return The transcodeApproved.
         */
        @java.lang.Override
        public boolean getTranscodeApproved() {
          return transcodeApproved_;
        }

        public static final int CLIP_STATE_FIELD_NUMBER = 173;
        private int clipState_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ClipState clip_state = 173;</code>
         * @return Whether the clipState field is set.
         */
        @java.lang.Override public boolean hasClipState() {
          return ((bitField2_ & 0x00000080) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ClipState clip_state = 173;</code>
         * @return The clipState.
         */
        @java.lang.Override public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipState getClipState() {
          @SuppressWarnings("deprecation")
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipState result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipState.valueOf(clipState_);
          return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipState.BUSY : result;
        }

        public static final int MEDIA_MSID_FIELD_NUMBER = 174;
        private volatile java.lang.Object mediaMsid_;
        /**
         * <code>optional string media_msid = 174;</code>
         * @return Whether the mediaMsid field is set.
         */
        @java.lang.Override
        public boolean hasMediaMsid() {
          return ((bitField2_ & 0x00000100) != 0);
        }
        /**
         * <code>optional string media_msid = 174;</code>
         * @return The mediaMsid.
         */
        @java.lang.Override
        public java.lang.String getMediaMsid() {
          java.lang.Object ref = mediaMsid_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              mediaMsid_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string media_msid = 174;</code>
         * @return The bytes for mediaMsid.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getMediaMsidBytes() {
          java.lang.Object ref = mediaMsid_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            mediaMsid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int CROP_LINK_FIELD_NUMBER = 175;
        private boolean cropLink_;
        /**
         * <code>optional bool crop_link = 175;</code>
         * @return Whether the cropLink field is set.
         */
        @java.lang.Override
        public boolean hasCropLink() {
          return ((bitField2_ & 0x00000200) != 0);
        }
        /**
         * <code>optional bool crop_link = 175;</code>
         * @return The cropLink.
         */
        @java.lang.Override
        public boolean getCropLink() {
          return cropLink_;
        }

        public static final int IS_REVERSE_FIELD_NUMBER = 177;
        private boolean isReverse_;
        /**
         * <code>optional bool is_reverse = 177;</code>
         * @return Whether the isReverse field is set.
         */
        @java.lang.Override
        public boolean hasIsReverse() {
          return ((bitField2_ & 0x00000400) != 0);
        }
        /**
         * <code>optional bool is_reverse = 177;</code>
         * @return The isReverse.
         */
        @java.lang.Override
        public boolean getIsReverse() {
          return isReverse_;
        }

        public static final int VOICE_CHANGER_FIELD_NUMBER = 178;
        private int voiceChanger_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 voice_changer = 178;</code>
         * @return Whether the voiceChanger field is set.
         */
        @java.lang.Override
        public boolean hasVoiceChanger() {
          return ((bitField2_ & 0x00000800) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 voice_changer = 178;</code>
         * @return The voiceChanger.
         */
        @java.lang.Override
        public int getVoiceChanger() {
          return voiceChanger_;
        }

        public static final int VIGNETTE_FIELD_NUMBER = 179;
        private boolean vignette_;
        /**
         * <code>optional bool vignette = 179;</code>
         * @return Whether the vignette field is set.
         */
        @java.lang.Override
        public boolean hasVignette() {
          return ((bitField2_ & 0x00001000) != 0);
        }
        /**
         * <code>optional bool vignette = 179;</code>
         * @return The vignette.
         */
        @java.lang.Override
        public boolean getVignette() {
          return vignette_;
        }

        public static final int PAN_LEFT_FIELD_NUMBER = 180;
        private int panLeft_;
        /**
         * <code>optional int32 pan_left = 180;</code>
         * @return Whether the panLeft field is set.
         */
        @java.lang.Override
        public boolean hasPanLeft() {
          return ((bitField2_ & 0x00002000) != 0);
        }
        /**
         * <code>optional int32 pan_left = 180;</code>
         * @return The panLeft.
         */
        @java.lang.Override
        public int getPanLeft() {
          return panLeft_;
        }

        public static final int PAN_RIGHT_FIELD_NUMBER = 181;
        private int panRight_;
        /**
         * <code>optional int32 pan_right = 181;</code>
         * @return Whether the panRight field is set.
         */
        @java.lang.Override
        public boolean hasPanRight() {
          return ((bitField2_ & 0x00004000) != 0);
        }
        /**
         * <code>optional int32 pan_right = 181;</code>
         * @return The panRight.
         */
        @java.lang.Override
        public int getPanRight() {
          return panRight_;
        }

        public static final int COMPRESSOR_FIELD_NUMBER = 182;
        private int compressor_;
        /**
         * <pre>
         * 0: off, 4: on (default: 0)
         * </pre>
         *
         * <code>optional int32 compressor = 182;</code>
         * @return Whether the compressor field is set.
         */
        @java.lang.Override
        public boolean hasCompressor() {
          return ((bitField2_ & 0x00008000) != 0);
        }
        /**
         * <pre>
         * 0: off, 4: on (default: 0)
         * </pre>
         *
         * <code>optional int32 compressor = 182;</code>
         * @return The compressor.
         */
        @java.lang.Override
        public int getCompressor() {
          return compressor_;
        }

        public static final int PITCH_FACTOR_FIELD_NUMBER = 183;
        private int pitchFactor_;
        /**
         * <code>optional int32 pitch_factor = 183;</code>
         * @return Whether the pitchFactor field is set.
         */
        @java.lang.Override
        public boolean hasPitchFactor() {
          return ((bitField2_ & 0x00010000) != 0);
        }
        /**
         * <code>optional int32 pitch_factor = 183;</code>
         * @return The pitchFactor.
         */
        @java.lang.Override
        public int getPitchFactor() {
          return pitchFactor_;
        }

        public static final int CLIP_NAME_FIELD_NUMBER = 184;
        private volatile java.lang.Object clipName_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string clip_name = 184;</code>
         * @return Whether the clipName field is set.
         */
        @java.lang.Override
        public boolean hasClipName() {
          return ((bitField2_ & 0x00020000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string clip_name = 184;</code>
         * @return The clipName.
         */
        @java.lang.Override
        public java.lang.String getClipName() {
          java.lang.Object ref = clipName_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              clipName_ = s;
            }
            return s;
          }
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string clip_name = 184;</code>
         * @return The bytes for clipName.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getClipNameBytes() {
          java.lang.Object ref = clipName_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            clipName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int IOS_MEDIA_ASSET_ID_FIELD_NUMBER = 185;
        private volatile java.lang.Object iosMediaAssetId_;
        /**
         * <code>optional string ios_media_asset_id = 185;</code>
         * @return Whether the iosMediaAssetId field is set.
         */
        @java.lang.Override
        public boolean hasIosMediaAssetId() {
          return ((bitField2_ & 0x00040000) != 0);
        }
        /**
         * <code>optional string ios_media_asset_id = 185;</code>
         * @return The iosMediaAssetId.
         */
        @java.lang.Override
        public java.lang.String getIosMediaAssetId() {
          java.lang.Object ref = iosMediaAssetId_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              iosMediaAssetId_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string ios_media_asset_id = 185;</code>
         * @return The bytes for iosMediaAssetId.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getIosMediaAssetIdBytes() {
          java.lang.Object ref = iosMediaAssetId_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            iosMediaAssetId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int KEEPPITCH_FIELD_NUMBER = 186;
        private boolean keepPitch_;
        /**
         * <code>optional bool keepPitch = 186;</code>
         * @return Whether the keepPitch field is set.
         */
        @java.lang.Override
        public boolean hasKeepPitch() {
          return ((bitField2_ & 0x00080000) != 0);
        }
        /**
         * <code>optional bool keepPitch = 186;</code>
         * @return The keepPitch.
         */
        @java.lang.Override
        public boolean getKeepPitch() {
          return keepPitch_;
        }

        public static final int USEIFRAMEONLY_FIELD_NUMBER = 187;
        private boolean useIFrameOnly_;
        /**
         * <code>optional bool useIFrameOnly = 187;</code>
         * @return Whether the useIFrameOnly field is set.
         */
        @java.lang.Override
        public boolean hasUseIFrameOnly() {
          return ((bitField2_ & 0x00100000) != 0);
        }
        /**
         * <code>optional bool useIFrameOnly = 187;</code>
         * @return The useIFrameOnly.
         */
        @java.lang.Override
        public boolean getUseIFrameOnly() {
          return useIFrameOnly_;
        }

        public static final int ENHANCEDAUDIOFILTER_FIELD_NUMBER = 188;
        private volatile java.lang.Object enhancedAudioFilter_;
        /**
         * <code>optional string enhancedAudioFilter = 188;</code>
         * @return Whether the enhancedAudioFilter field is set.
         */
        @java.lang.Override
        public boolean hasEnhancedAudioFilter() {
          return ((bitField2_ & 0x00200000) != 0);
        }
        /**
         * <code>optional string enhancedAudioFilter = 188;</code>
         * @return The enhancedAudioFilter.
         */
        @java.lang.Override
        public java.lang.String getEnhancedAudioFilter() {
          java.lang.Object ref = enhancedAudioFilter_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              enhancedAudioFilter_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string enhancedAudioFilter = 188;</code>
         * @return The bytes for enhancedAudioFilter.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getEnhancedAudioFilterBytes() {
          java.lang.Object ref = enhancedAudioFilter_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            enhancedAudioFilter_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int EQUALIZER_FIELD_NUMBER = 189;
        private volatile java.lang.Object equalizer_;
        /**
         * <code>optional string equalizer = 189;</code>
         * @return Whether the equalizer field is set.
         */
        @java.lang.Override
        public boolean hasEqualizer() {
          return ((bitField2_ & 0x00400000) != 0);
        }
        /**
         * <code>optional string equalizer = 189;</code>
         * @return The equalizer.
         */
        @java.lang.Override
        public java.lang.String getEqualizer() {
          java.lang.Object ref = equalizer_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              equalizer_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string equalizer = 189;</code>
         * @return The bytes for equalizer.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getEqualizerBytes() {
          java.lang.Object ref = equalizer_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            equalizer_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int CLIPRANGE_FIELD_NUMBER = 190;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange clipRange_;
        /**
         * <code>optional .KMProto.KMProject.ClipRange clipRange = 190;</code>
         * @return Whether the clipRange field is set.
         */
        @java.lang.Override
        public boolean hasClipRange() {
          return ((bitField2_ & 0x00800000) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.ClipRange clipRange = 190;</code>
         * @return The clipRange.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange getClipRange() {
          return clipRange_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.getDefaultInstance() : clipRange_;
        }
        /**
         * <code>optional .KMProto.KMProject.ClipRange clipRange = 190;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRangeOrBuilder getClipRangeOrBuilder() {
          return clipRange_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.getDefaultInstance() : clipRange_;
        }

        public static final int REVERB_FIELD_NUMBER = 191;
        private volatile java.lang.Object reverb_;
        /**
         * <code>optional string reverb = 191;</code>
         * @return Whether the reverb field is set.
         */
        @java.lang.Override
        public boolean hasReverb() {
          return ((bitField2_ & 0x01000000) != 0);
        }
        /**
         * <code>optional string reverb = 191;</code>
         * @return The reverb.
         */
        @java.lang.Override
        public java.lang.String getReverb() {
          java.lang.Object ref = reverb_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              reverb_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string reverb = 191;</code>
         * @return The bytes for reverb.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getReverbBytes() {
          java.lang.Object ref = reverb_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            reverb_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int COLORADJUSTMENT_FIELD_NUMBER = 192;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment colorAdjustment_;
        /**
         * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 192;</code>
         * @return Whether the colorAdjustment field is set.
         */
        @java.lang.Override
        public boolean hasColorAdjustment() {
          return ((bitField2_ & 0x02000000) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 192;</code>
         * @return The colorAdjustment.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment getColorAdjustment() {
          return colorAdjustment_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.getDefaultInstance() : colorAdjustment_;
        }
        /**
         * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 192;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustmentOrBuilder getColorAdjustmentOrBuilder() {
          return colorAdjustment_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.getDefaultInstance() : colorAdjustment_;
        }

        public static final int COLORFILTER_FIELD_NUMBER = 193;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter colorFilter_;
        /**
         * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 193;</code>
         * @return Whether the colorFilter field is set.
         */
        @java.lang.Override
        public boolean hasColorFilter() {
          return ((bitField2_ & 0x04000000) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 193;</code>
         * @return The colorFilter.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter getColorFilter() {
          return colorFilter_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.getDefaultInstance() : colorFilter_;
        }
        /**
         * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 193;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilterOrBuilder getColorFilterOrBuilder() {
          return colorFilter_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.getDefaultInstance() : colorFilter_;
        }

        public static final int EFFECTOPTION_FIELD_NUMBER = 194;
        private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem> effectOption_;
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
         */
        @java.lang.Override
        public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem> getEffectOptionList() {
          return effectOption_;
        }
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
         */
        @java.lang.Override
        public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder> 
            getEffectOptionOrBuilderList() {
          return effectOption_;
        }
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
         */
        @java.lang.Override
        public int getEffectOptionCount() {
          return effectOption_.size();
        }
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem getEffectOption(int index) {
          return effectOption_.get(index);
        }
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder getEffectOptionOrBuilder(
            int index) {
          return effectOption_.get(index);
        }

        public static final int INCLUDEDCLIPROTATION_FIELD_NUMBER = 195;
        private boolean includedClipRotation_;
        /**
         * <code>optional bool includedClipRotation = 195;</code>
         * @return Whether the includedClipRotation field is set.
         */
        @java.lang.Override
        public boolean hasIncludedClipRotation() {
          return ((bitField2_ & 0x08000000) != 0);
        }
        /**
         * <code>optional bool includedClipRotation = 195;</code>
         * @return The includedClipRotation.
         */
        @java.lang.Override
        public boolean getIncludedClipRotation() {
          return includedClipRotation_;
        }

        public static final int UPRIGHTROTATION_FIELD_NUMBER = 196;
        private int uprightRotation_;
        /**
         * <code>optional int32 uprightRotation = 196;</code>
         * @return Whether the uprightRotation field is set.
         */
        @java.lang.Override
        public boolean hasUprightRotation() {
          return ((bitField2_ & 0x10000000) != 0);
        }
        /**
         * <code>optional int32 uprightRotation = 196;</code>
         * @return The uprightRotation.
         */
        @java.lang.Override
        public int getUprightRotation() {
          return uprightRotation_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeFloat(100, faceBoundsLeft_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeFloat(101, faceBoundsTop_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeFloat(102, faceBoundsRight_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            output.writeFloat(103, faceBoundsBottom_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            output.writeBool(104, faceBoundsSet_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 105, captureFilename_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            output.writeInt32(106, engineClipId_);
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            output.writeBool(107, abstractCrop_);
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            output.writeInt32(108, startPositionLeft_);
          }
          if (((bitField0_ & 0x00000400) != 0)) {
            output.writeInt32(109, startPositionBottom_);
          }
          if (((bitField0_ & 0x00000800) != 0)) {
            output.writeInt32(110, startPositionRight_);
          }
          if (((bitField0_ & 0x00001000) != 0)) {
            output.writeInt32(111, startPositionTop_);
          }
          if (((bitField0_ & 0x00002000) != 0)) {
            output.writeInt32(112, endPositionLeft_);
          }
          if (((bitField0_ & 0x00004000) != 0)) {
            output.writeInt32(113, endPositionBottom_);
          }
          if (((bitField0_ & 0x00008000) != 0)) {
            output.writeInt32(114, endPositionRight_);
          }
          if (((bitField0_ & 0x00010000) != 0)) {
            output.writeInt32(115, endPositionTop_);
          }
          if (((bitField0_ & 0x00020000) != 0)) {
            output.writeInt32(116, rotatedStartPositionLeft_);
          }
          if (((bitField0_ & 0x00040000) != 0)) {
            output.writeInt32(117, rotatedStartPositionBottom_);
          }
          if (((bitField0_ & 0x00080000) != 0)) {
            output.writeInt32(118, rotatedStartPositionRight_);
          }
          if (((bitField0_ & 0x00100000) != 0)) {
            output.writeInt32(119, rotatedStartPositionTop_);
          }
          if (((bitField0_ & 0x00200000) != 0)) {
            output.writeInt32(120, rotatedEndPositionLeft_);
          }
          if (((bitField0_ & 0x00400000) != 0)) {
            output.writeInt32(121, rotatedEndPositionBottom_);
          }
          if (((bitField0_ & 0x00800000) != 0)) {
            output.writeInt32(122, rotatedEndPositionRight_);
          }
          if (((bitField0_ & 0x01000000) != 0)) {
            output.writeInt32(123, rotatedEndPositionTop_);
          }
          if (((bitField0_ & 0x02000000) != 0)) {
            output.writeInt32(124, rotation_);
          }
          if (((bitField0_ & 0x04000000) != 0)) {
            output.writeBool(125, fliph_);
          }
          if (((bitField0_ & 0x08000000) != 0)) {
            output.writeBool(126, flipv_);
          }
          if (((bitField0_ & 0x10000000) != 0)) {
            output.writeInt32(127, diffAvDuration_);
          }
          if (((bitField0_ & 0x20000000) != 0)) {
            output.writeInt32(128, trimTimeStart_);
          }
          if (((bitField0_ & 0x40000000) != 0)) {
            output.writeInt32(129, trimTimeEnd_);
          }
          if (((bitField0_ & 0x80000000) != 0)) {
            output.writeInt32(130, trimmedDuration_);
          }
          if (((bitField1_ & 0x00000001) != 0)) {
            output.writeInt32(131, preTrimmedDuration_);
          }
          if (((bitField1_ & 0x00000002) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 132, titleEffectId_);
          }
          if (((bitField1_ & 0x00000004) != 0)) {
            output.writeInt32(133, titleStartTime_);
          }
          if (((bitField1_ & 0x00000008) != 0)) {
            output.writeInt32(134, titleEndTime_);
          }
          if (((bitField1_ & 0x00000010) != 0)) {
            output.writeInt32(135, duration_);
          }
          if (((bitField1_ & 0x00000020) != 0)) {
            output.writeInt32(136, audioDuration_);
          }
          if (((bitField1_ & 0x00000040) != 0)) {
            output.writeInt32(137, videoDuration_);
          }
          if (((bitField1_ & 0x00000080) != 0)) {
            output.writeInt32(138, startOverlap_);
          }
          if (((bitField1_ & 0x00000100) != 0)) {
            output.writeInt32(139, endOverlap_);
          }
          if (((bitField1_ & 0x00000200) != 0)) {
            output.writeInt32(140, width_);
          }
          if (((bitField1_ & 0x00000400) != 0)) {
            output.writeInt32(141, height_);
          }
          if (((bitField1_ & 0x00000800) != 0)) {
            output.writeInt32(142, originalWidth_);
          }
          if (((bitField1_ & 0x00001000) != 0)) {
            output.writeInt32(143, originalHeight_);
          }
          if (((bitField1_ & 0x00002000) != 0)) {
            output.writeInt32(144, clipVolume_);
          }
          if (((bitField1_ & 0x00004000) != 0)) {
            output.writeInt32(145, musicVolume_);
          }
          if (((bitField1_ & 0x00008000) != 0)) {
            output.writeEnum(146, titleStyle_);
          }
          if (((bitField1_ & 0x00010000) != 0)) {
            output.writeBool(147, isImage_);
          }
          if (((bitField1_ & 0x00020000) != 0)) {
            output.writeBool(148, muteAudio_);
          }
          if (((bitField1_ & 0x00040000) != 0)) {
            output.writeBool(149, muteMusic_);
          }
          if (((bitField1_ & 0x00080000) != 0)) {
            output.writeBool(150, hasAudio_);
          }
          if (((bitField1_ & 0x00100000) != 0)) {
            output.writeBool(151, hasVideo_);
          }
          if (((bitField1_ & 0x00200000) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 152, thumbPath_);
          }
          if (((bitField0_ & 0x00000001) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 153, mediaPath_);
          }
          if (((bitField1_ & 0x00400000) != 0)) {
            output.writeUInt64(154, transitionItemUuidLsb_);
          }
          if (((bitField1_ & 0x00800000) != 0)) {
            output.writeUInt64(155, transitionItemUuidMsb_);
          }
          if (((bitField1_ & 0x02000000) != 0)) {
            output.writeInt32(156, brightness_);
          }
          if (((bitField1_ & 0x04000000) != 0)) {
            output.writeInt32(157, contrast_);
          }
          if (((bitField1_ & 0x08000000) != 0)) {
            output.writeInt32(158, saturation_);
          }
          if (((bitField1_ & 0x10000000) != 0)) {
            output.writeInt32(159, tintcolor_);
          }
          if (((bitField1_ & 0x20000000) != 0)) {
            output.writeInt32(160, effectStartTime_);
          }
          if (((bitField1_ & 0x40000000) != 0)) {
            output.writeInt32(161, effectEndTime_);
          }
          if (((bitField1_ & 0x80000000) != 0)) {
            output.writeMessage(162, getStartMatrix());
          }
          if (((bitField2_ & 0x00000001) != 0)) {
            output.writeMessage(163, getEndMatrix());
          }
          if (((bitField2_ & 0x00000002) != 0)) {
            output.writeEnum(164, autoThemeEffect_);
          }
          if (getVolumeEnvelopeTimeList().size() > 0) {
            output.writeUInt32NoTag(1322);
            output.writeUInt32NoTag(volumeEnvelopeTimeMemoizedSerializedSize);
          }
          for (int i = 0; i < volumeEnvelopeTime_.size(); i++) {
            output.writeInt32NoTag(volumeEnvelopeTime_.getInt(i));
          }
          if (getVolumeEnvelopeLevelList().size() > 0) {
            output.writeUInt32NoTag(1330);
            output.writeUInt32NoTag(volumeEnvelopeLevelMemoizedSerializedSize);
          }
          for (int i = 0; i < volumeEnvelopeLevel_.size(); i++) {
            output.writeInt32NoTag(volumeEnvelopeLevel_.getInt(i));
          }
          if (((bitField2_ & 0x00000004) != 0)) {
            output.writeFloat(167, clipWidth_);
          }
          if (((bitField2_ & 0x00000008) != 0)) {
            output.writeInt32(168, playbackSpeed_);
          }
          if (((bitField2_ & 0x00000010) != 0)) {
            output.writeMessage(169, getColorEffect());
          }
          if (((bitField2_ & 0x00000020) != 0)) {
            output.writeMessage(170, getEffectOptions());
          }
          if (((bitField1_ & 0x01000000) != 0)) {
            output.writeMessage(171, getUnattachedTransition());
          }
          if (((bitField2_ & 0x00000040) != 0)) {
            output.writeBool(172, transcodeApproved_);
          }
          if (((bitField2_ & 0x00000080) != 0)) {
            output.writeEnum(173, clipState_);
          }
          if (((bitField2_ & 0x00000100) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 174, mediaMsid_);
          }
          if (((bitField2_ & 0x00000200) != 0)) {
            output.writeBool(175, cropLink_);
          }
          if (((bitField2_ & 0x00000400) != 0)) {
            output.writeBool(177, isReverse_);
          }
          if (((bitField2_ & 0x00000800) != 0)) {
            output.writeInt32(178, voiceChanger_);
          }
          if (((bitField2_ & 0x00001000) != 0)) {
            output.writeBool(179, vignette_);
          }
          if (((bitField2_ & 0x00002000) != 0)) {
            output.writeInt32(180, panLeft_);
          }
          if (((bitField2_ & 0x00004000) != 0)) {
            output.writeInt32(181, panRight_);
          }
          if (((bitField2_ & 0x00008000) != 0)) {
            output.writeInt32(182, compressor_);
          }
          if (((bitField2_ & 0x00010000) != 0)) {
            output.writeInt32(183, pitchFactor_);
          }
          if (((bitField2_ & 0x00020000) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 184, clipName_);
          }
          if (((bitField2_ & 0x00040000) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 185, iosMediaAssetId_);
          }
          if (((bitField2_ & 0x00080000) != 0)) {
            output.writeBool(186, keepPitch_);
          }
          if (((bitField2_ & 0x00100000) != 0)) {
            output.writeBool(187, useIFrameOnly_);
          }
          if (((bitField2_ & 0x00200000) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 188, enhancedAudioFilter_);
          }
          if (((bitField2_ & 0x00400000) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 189, equalizer_);
          }
          if (((bitField2_ & 0x00800000) != 0)) {
            output.writeMessage(190, getClipRange());
          }
          if (((bitField2_ & 0x01000000) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 191, reverb_);
          }
          if (((bitField2_ & 0x02000000) != 0)) {
            output.writeMessage(192, getColorAdjustment());
          }
          if (((bitField2_ & 0x04000000) != 0)) {
            output.writeMessage(193, getColorFilter());
          }
          for (int i = 0; i < effectOption_.size(); i++) {
            output.writeMessage(194, effectOption_.get(i));
          }
          if (((bitField2_ & 0x08000000) != 0)) {
            output.writeBool(195, includedClipRotation_);
          }
          if (((bitField2_ & 0x10000000) != 0)) {
            output.writeInt32(196, uprightRotation_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(100, faceBoundsLeft_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(101, faceBoundsTop_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(102, faceBoundsRight_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(103, faceBoundsBottom_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(104, faceBoundsSet_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(105, captureFilename_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(106, engineClipId_);
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(107, abstractCrop_);
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(108, startPositionLeft_);
          }
          if (((bitField0_ & 0x00000400) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(109, startPositionBottom_);
          }
          if (((bitField0_ & 0x00000800) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(110, startPositionRight_);
          }
          if (((bitField0_ & 0x00001000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(111, startPositionTop_);
          }
          if (((bitField0_ & 0x00002000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(112, endPositionLeft_);
          }
          if (((bitField0_ & 0x00004000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(113, endPositionBottom_);
          }
          if (((bitField0_ & 0x00008000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(114, endPositionRight_);
          }
          if (((bitField0_ & 0x00010000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(115, endPositionTop_);
          }
          if (((bitField0_ & 0x00020000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(116, rotatedStartPositionLeft_);
          }
          if (((bitField0_ & 0x00040000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(117, rotatedStartPositionBottom_);
          }
          if (((bitField0_ & 0x00080000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(118, rotatedStartPositionRight_);
          }
          if (((bitField0_ & 0x00100000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(119, rotatedStartPositionTop_);
          }
          if (((bitField0_ & 0x00200000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(120, rotatedEndPositionLeft_);
          }
          if (((bitField0_ & 0x00400000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(121, rotatedEndPositionBottom_);
          }
          if (((bitField0_ & 0x00800000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(122, rotatedEndPositionRight_);
          }
          if (((bitField0_ & 0x01000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(123, rotatedEndPositionTop_);
          }
          if (((bitField0_ & 0x02000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(124, rotation_);
          }
          if (((bitField0_ & 0x04000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(125, fliph_);
          }
          if (((bitField0_ & 0x08000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(126, flipv_);
          }
          if (((bitField0_ & 0x10000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(127, diffAvDuration_);
          }
          if (((bitField0_ & 0x20000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(128, trimTimeStart_);
          }
          if (((bitField0_ & 0x40000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(129, trimTimeEnd_);
          }
          if (((bitField0_ & 0x80000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(130, trimmedDuration_);
          }
          if (((bitField1_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(131, preTrimmedDuration_);
          }
          if (((bitField1_ & 0x00000002) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(132, titleEffectId_);
          }
          if (((bitField1_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(133, titleStartTime_);
          }
          if (((bitField1_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(134, titleEndTime_);
          }
          if (((bitField1_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(135, duration_);
          }
          if (((bitField1_ & 0x00000020) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(136, audioDuration_);
          }
          if (((bitField1_ & 0x00000040) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(137, videoDuration_);
          }
          if (((bitField1_ & 0x00000080) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(138, startOverlap_);
          }
          if (((bitField1_ & 0x00000100) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(139, endOverlap_);
          }
          if (((bitField1_ & 0x00000200) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(140, width_);
          }
          if (((bitField1_ & 0x00000400) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(141, height_);
          }
          if (((bitField1_ & 0x00000800) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(142, originalWidth_);
          }
          if (((bitField1_ & 0x00001000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(143, originalHeight_);
          }
          if (((bitField1_ & 0x00002000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(144, clipVolume_);
          }
          if (((bitField1_ & 0x00004000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(145, musicVolume_);
          }
          if (((bitField1_ & 0x00008000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(146, titleStyle_);
          }
          if (((bitField1_ & 0x00010000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(147, isImage_);
          }
          if (((bitField1_ & 0x00020000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(148, muteAudio_);
          }
          if (((bitField1_ & 0x00040000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(149, muteMusic_);
          }
          if (((bitField1_ & 0x00080000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(150, hasAudio_);
          }
          if (((bitField1_ & 0x00100000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(151, hasVideo_);
          }
          if (((bitField1_ & 0x00200000) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(152, thumbPath_);
          }
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(153, mediaPath_);
          }
          if (((bitField1_ & 0x00400000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(154, transitionItemUuidLsb_);
          }
          if (((bitField1_ & 0x00800000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(155, transitionItemUuidMsb_);
          }
          if (((bitField1_ & 0x02000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(156, brightness_);
          }
          if (((bitField1_ & 0x04000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(157, contrast_);
          }
          if (((bitField1_ & 0x08000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(158, saturation_);
          }
          if (((bitField1_ & 0x10000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(159, tintcolor_);
          }
          if (((bitField1_ & 0x20000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(160, effectStartTime_);
          }
          if (((bitField1_ & 0x40000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(161, effectEndTime_);
          }
          if (((bitField1_ & 0x80000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(162, getStartMatrix());
          }
          if (((bitField2_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(163, getEndMatrix());
          }
          if (((bitField2_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(164, autoThemeEffect_);
          }
          {
            int dataSize = 0;
            for (int i = 0; i < volumeEnvelopeTime_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(volumeEnvelopeTime_.getInt(i));
            }
            size += dataSize;
            if (!getVolumeEnvelopeTimeList().isEmpty()) {
              size += 2;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            volumeEnvelopeTimeMemoizedSerializedSize = dataSize;
          }
          {
            int dataSize = 0;
            for (int i = 0; i < volumeEnvelopeLevel_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(volumeEnvelopeLevel_.getInt(i));
            }
            size += dataSize;
            if (!getVolumeEnvelopeLevelList().isEmpty()) {
              size += 2;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            volumeEnvelopeLevelMemoizedSerializedSize = dataSize;
          }
          if (((bitField2_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(167, clipWidth_);
          }
          if (((bitField2_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(168, playbackSpeed_);
          }
          if (((bitField2_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(169, getColorEffect());
          }
          if (((bitField2_ & 0x00000020) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(170, getEffectOptions());
          }
          if (((bitField1_ & 0x01000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(171, getUnattachedTransition());
          }
          if (((bitField2_ & 0x00000040) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(172, transcodeApproved_);
          }
          if (((bitField2_ & 0x00000080) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(173, clipState_);
          }
          if (((bitField2_ & 0x00000100) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(174, mediaMsid_);
          }
          if (((bitField2_ & 0x00000200) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(175, cropLink_);
          }
          if (((bitField2_ & 0x00000400) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(177, isReverse_);
          }
          if (((bitField2_ & 0x00000800) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(178, voiceChanger_);
          }
          if (((bitField2_ & 0x00001000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(179, vignette_);
          }
          if (((bitField2_ & 0x00002000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(180, panLeft_);
          }
          if (((bitField2_ & 0x00004000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(181, panRight_);
          }
          if (((bitField2_ & 0x00008000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(182, compressor_);
          }
          if (((bitField2_ & 0x00010000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(183, pitchFactor_);
          }
          if (((bitField2_ & 0x00020000) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(184, clipName_);
          }
          if (((bitField2_ & 0x00040000) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(185, iosMediaAssetId_);
          }
          if (((bitField2_ & 0x00080000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(186, keepPitch_);
          }
          if (((bitField2_ & 0x00100000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(187, useIFrameOnly_);
          }
          if (((bitField2_ & 0x00200000) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(188, enhancedAudioFilter_);
          }
          if (((bitField2_ & 0x00400000) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(189, equalizer_);
          }
          if (((bitField2_ & 0x00800000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(190, getClipRange());
          }
          if (((bitField2_ & 0x01000000) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(191, reverb_);
          }
          if (((bitField2_ & 0x02000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(192, getColorAdjustment());
          }
          if (((bitField2_ & 0x04000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(193, getColorFilter());
          }
          for (int i = 0; i < effectOption_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(194, effectOption_.get(i));
          }
          if (((bitField2_ & 0x08000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(195, includedClipRotation_);
          }
          if (((bitField2_ & 0x10000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(196, uprightRotation_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip) obj;

          if (hasMediaPath() != other.hasMediaPath()) return false;
          if (hasMediaPath()) {
            if (!getMediaPath()
                .equals(other.getMediaPath())) return false;
          }
          if (hasFaceBoundsLeft() != other.hasFaceBoundsLeft()) return false;
          if (hasFaceBoundsLeft()) {
            if (java.lang.Float.floatToIntBits(getFaceBoundsLeft())
                != java.lang.Float.floatToIntBits(
                    other.getFaceBoundsLeft())) return false;
          }
          if (hasFaceBoundsTop() != other.hasFaceBoundsTop()) return false;
          if (hasFaceBoundsTop()) {
            if (java.lang.Float.floatToIntBits(getFaceBoundsTop())
                != java.lang.Float.floatToIntBits(
                    other.getFaceBoundsTop())) return false;
          }
          if (hasFaceBoundsRight() != other.hasFaceBoundsRight()) return false;
          if (hasFaceBoundsRight()) {
            if (java.lang.Float.floatToIntBits(getFaceBoundsRight())
                != java.lang.Float.floatToIntBits(
                    other.getFaceBoundsRight())) return false;
          }
          if (hasFaceBoundsBottom() != other.hasFaceBoundsBottom()) return false;
          if (hasFaceBoundsBottom()) {
            if (java.lang.Float.floatToIntBits(getFaceBoundsBottom())
                != java.lang.Float.floatToIntBits(
                    other.getFaceBoundsBottom())) return false;
          }
          if (hasFaceBoundsSet() != other.hasFaceBoundsSet()) return false;
          if (hasFaceBoundsSet()) {
            if (getFaceBoundsSet()
                != other.getFaceBoundsSet()) return false;
          }
          if (hasCaptureFilename() != other.hasCaptureFilename()) return false;
          if (hasCaptureFilename()) {
            if (!getCaptureFilename()
                .equals(other.getCaptureFilename())) return false;
          }
          if (hasEngineClipId() != other.hasEngineClipId()) return false;
          if (hasEngineClipId()) {
            if (getEngineClipId()
                != other.getEngineClipId()) return false;
          }
          if (hasAbstractCrop() != other.hasAbstractCrop()) return false;
          if (hasAbstractCrop()) {
            if (getAbstractCrop()
                != other.getAbstractCrop()) return false;
          }
          if (hasStartPositionLeft() != other.hasStartPositionLeft()) return false;
          if (hasStartPositionLeft()) {
            if (getStartPositionLeft()
                != other.getStartPositionLeft()) return false;
          }
          if (hasStartPositionBottom() != other.hasStartPositionBottom()) return false;
          if (hasStartPositionBottom()) {
            if (getStartPositionBottom()
                != other.getStartPositionBottom()) return false;
          }
          if (hasStartPositionRight() != other.hasStartPositionRight()) return false;
          if (hasStartPositionRight()) {
            if (getStartPositionRight()
                != other.getStartPositionRight()) return false;
          }
          if (hasStartPositionTop() != other.hasStartPositionTop()) return false;
          if (hasStartPositionTop()) {
            if (getStartPositionTop()
                != other.getStartPositionTop()) return false;
          }
          if (hasEndPositionLeft() != other.hasEndPositionLeft()) return false;
          if (hasEndPositionLeft()) {
            if (getEndPositionLeft()
                != other.getEndPositionLeft()) return false;
          }
          if (hasEndPositionBottom() != other.hasEndPositionBottom()) return false;
          if (hasEndPositionBottom()) {
            if (getEndPositionBottom()
                != other.getEndPositionBottom()) return false;
          }
          if (hasEndPositionRight() != other.hasEndPositionRight()) return false;
          if (hasEndPositionRight()) {
            if (getEndPositionRight()
                != other.getEndPositionRight()) return false;
          }
          if (hasEndPositionTop() != other.hasEndPositionTop()) return false;
          if (hasEndPositionTop()) {
            if (getEndPositionTop()
                != other.getEndPositionTop()) return false;
          }
          if (hasRotatedStartPositionLeft() != other.hasRotatedStartPositionLeft()) return false;
          if (hasRotatedStartPositionLeft()) {
            if (getRotatedStartPositionLeft()
                != other.getRotatedStartPositionLeft()) return false;
          }
          if (hasRotatedStartPositionBottom() != other.hasRotatedStartPositionBottom()) return false;
          if (hasRotatedStartPositionBottom()) {
            if (getRotatedStartPositionBottom()
                != other.getRotatedStartPositionBottom()) return false;
          }
          if (hasRotatedStartPositionRight() != other.hasRotatedStartPositionRight()) return false;
          if (hasRotatedStartPositionRight()) {
            if (getRotatedStartPositionRight()
                != other.getRotatedStartPositionRight()) return false;
          }
          if (hasRotatedStartPositionTop() != other.hasRotatedStartPositionTop()) return false;
          if (hasRotatedStartPositionTop()) {
            if (getRotatedStartPositionTop()
                != other.getRotatedStartPositionTop()) return false;
          }
          if (hasRotatedEndPositionLeft() != other.hasRotatedEndPositionLeft()) return false;
          if (hasRotatedEndPositionLeft()) {
            if (getRotatedEndPositionLeft()
                != other.getRotatedEndPositionLeft()) return false;
          }
          if (hasRotatedEndPositionBottom() != other.hasRotatedEndPositionBottom()) return false;
          if (hasRotatedEndPositionBottom()) {
            if (getRotatedEndPositionBottom()
                != other.getRotatedEndPositionBottom()) return false;
          }
          if (hasRotatedEndPositionRight() != other.hasRotatedEndPositionRight()) return false;
          if (hasRotatedEndPositionRight()) {
            if (getRotatedEndPositionRight()
                != other.getRotatedEndPositionRight()) return false;
          }
          if (hasRotatedEndPositionTop() != other.hasRotatedEndPositionTop()) return false;
          if (hasRotatedEndPositionTop()) {
            if (getRotatedEndPositionTop()
                != other.getRotatedEndPositionTop()) return false;
          }
          if (hasRotation() != other.hasRotation()) return false;
          if (hasRotation()) {
            if (getRotation()
                != other.getRotation()) return false;
          }
          if (hasFliph() != other.hasFliph()) return false;
          if (hasFliph()) {
            if (getFliph()
                != other.getFliph()) return false;
          }
          if (hasFlipv() != other.hasFlipv()) return false;
          if (hasFlipv()) {
            if (getFlipv()
                != other.getFlipv()) return false;
          }
          if (hasDiffAvDuration() != other.hasDiffAvDuration()) return false;
          if (hasDiffAvDuration()) {
            if (getDiffAvDuration()
                != other.getDiffAvDuration()) return false;
          }
          if (hasTrimTimeStart() != other.hasTrimTimeStart()) return false;
          if (hasTrimTimeStart()) {
            if (getTrimTimeStart()
                != other.getTrimTimeStart()) return false;
          }
          if (hasTrimTimeEnd() != other.hasTrimTimeEnd()) return false;
          if (hasTrimTimeEnd()) {
            if (getTrimTimeEnd()
                != other.getTrimTimeEnd()) return false;
          }
          if (hasTrimmedDuration() != other.hasTrimmedDuration()) return false;
          if (hasTrimmedDuration()) {
            if (getTrimmedDuration()
                != other.getTrimmedDuration()) return false;
          }
          if (hasPreTrimmedDuration() != other.hasPreTrimmedDuration()) return false;
          if (hasPreTrimmedDuration()) {
            if (getPreTrimmedDuration()
                != other.getPreTrimmedDuration()) return false;
          }
          if (hasTitleEffectId() != other.hasTitleEffectId()) return false;
          if (hasTitleEffectId()) {
            if (!getTitleEffectId()
                .equals(other.getTitleEffectId())) return false;
          }
          if (hasTitleStartTime() != other.hasTitleStartTime()) return false;
          if (hasTitleStartTime()) {
            if (getTitleStartTime()
                != other.getTitleStartTime()) return false;
          }
          if (hasTitleEndTime() != other.hasTitleEndTime()) return false;
          if (hasTitleEndTime()) {
            if (getTitleEndTime()
                != other.getTitleEndTime()) return false;
          }
          if (hasDuration() != other.hasDuration()) return false;
          if (hasDuration()) {
            if (getDuration()
                != other.getDuration()) return false;
          }
          if (hasAudioDuration() != other.hasAudioDuration()) return false;
          if (hasAudioDuration()) {
            if (getAudioDuration()
                != other.getAudioDuration()) return false;
          }
          if (hasVideoDuration() != other.hasVideoDuration()) return false;
          if (hasVideoDuration()) {
            if (getVideoDuration()
                != other.getVideoDuration()) return false;
          }
          if (hasStartOverlap() != other.hasStartOverlap()) return false;
          if (hasStartOverlap()) {
            if (getStartOverlap()
                != other.getStartOverlap()) return false;
          }
          if (hasEndOverlap() != other.hasEndOverlap()) return false;
          if (hasEndOverlap()) {
            if (getEndOverlap()
                != other.getEndOverlap()) return false;
          }
          if (hasWidth() != other.hasWidth()) return false;
          if (hasWidth()) {
            if (getWidth()
                != other.getWidth()) return false;
          }
          if (hasHeight() != other.hasHeight()) return false;
          if (hasHeight()) {
            if (getHeight()
                != other.getHeight()) return false;
          }
          if (hasOriginalWidth() != other.hasOriginalWidth()) return false;
          if (hasOriginalWidth()) {
            if (getOriginalWidth()
                != other.getOriginalWidth()) return false;
          }
          if (hasOriginalHeight() != other.hasOriginalHeight()) return false;
          if (hasOriginalHeight()) {
            if (getOriginalHeight()
                != other.getOriginalHeight()) return false;
          }
          if (hasClipVolume() != other.hasClipVolume()) return false;
          if (hasClipVolume()) {
            if (getClipVolume()
                != other.getClipVolume()) return false;
          }
          if (hasMusicVolume() != other.hasMusicVolume()) return false;
          if (hasMusicVolume()) {
            if (getMusicVolume()
                != other.getMusicVolume()) return false;
          }
          if (hasTitleStyle() != other.hasTitleStyle()) return false;
          if (hasTitleStyle()) {
            if (titleStyle_ != other.titleStyle_) return false;
          }
          if (hasIsImage() != other.hasIsImage()) return false;
          if (hasIsImage()) {
            if (getIsImage()
                != other.getIsImage()) return false;
          }
          if (hasMuteAudio() != other.hasMuteAudio()) return false;
          if (hasMuteAudio()) {
            if (getMuteAudio()
                != other.getMuteAudio()) return false;
          }
          if (hasMuteMusic() != other.hasMuteMusic()) return false;
          if (hasMuteMusic()) {
            if (getMuteMusic()
                != other.getMuteMusic()) return false;
          }
          if (hasHasAudio() != other.hasHasAudio()) return false;
          if (hasHasAudio()) {
            if (getHasAudio()
                != other.getHasAudio()) return false;
          }
          if (hasHasVideo() != other.hasHasVideo()) return false;
          if (hasHasVideo()) {
            if (getHasVideo()
                != other.getHasVideo()) return false;
          }
          if (hasThumbPath() != other.hasThumbPath()) return false;
          if (hasThumbPath()) {
            if (!getThumbPath()
                .equals(other.getThumbPath())) return false;
          }
          if (hasTransitionItemUuidLsb() != other.hasTransitionItemUuidLsb()) return false;
          if (hasTransitionItemUuidLsb()) {
            if (getTransitionItemUuidLsb()
                != other.getTransitionItemUuidLsb()) return false;
          }
          if (hasTransitionItemUuidMsb() != other.hasTransitionItemUuidMsb()) return false;
          if (hasTransitionItemUuidMsb()) {
            if (getTransitionItemUuidMsb()
                != other.getTransitionItemUuidMsb()) return false;
          }
          if (hasUnattachedTransition() != other.hasUnattachedTransition()) return false;
          if (hasUnattachedTransition()) {
            if (!getUnattachedTransition()
                .equals(other.getUnattachedTransition())) return false;
          }
          if (hasBrightness() != other.hasBrightness()) return false;
          if (hasBrightness()) {
            if (getBrightness()
                != other.getBrightness()) return false;
          }
          if (hasContrast() != other.hasContrast()) return false;
          if (hasContrast()) {
            if (getContrast()
                != other.getContrast()) return false;
          }
          if (hasSaturation() != other.hasSaturation()) return false;
          if (hasSaturation()) {
            if (getSaturation()
                != other.getSaturation()) return false;
          }
          if (hasTintcolor() != other.hasTintcolor()) return false;
          if (hasTintcolor()) {
            if (getTintcolor()
                != other.getTintcolor()) return false;
          }
          if (hasEffectStartTime() != other.hasEffectStartTime()) return false;
          if (hasEffectStartTime()) {
            if (getEffectStartTime()
                != other.getEffectStartTime()) return false;
          }
          if (hasEffectEndTime() != other.hasEffectEndTime()) return false;
          if (hasEffectEndTime()) {
            if (getEffectEndTime()
                != other.getEffectEndTime()) return false;
          }
          if (hasStartMatrix() != other.hasStartMatrix()) return false;
          if (hasStartMatrix()) {
            if (!getStartMatrix()
                .equals(other.getStartMatrix())) return false;
          }
          if (hasEndMatrix() != other.hasEndMatrix()) return false;
          if (hasEndMatrix()) {
            if (!getEndMatrix()
                .equals(other.getEndMatrix())) return false;
          }
          if (hasAutoThemeEffect() != other.hasAutoThemeEffect()) return false;
          if (hasAutoThemeEffect()) {
            if (autoThemeEffect_ != other.autoThemeEffect_) return false;
          }
          if (!getVolumeEnvelopeTimeList()
              .equals(other.getVolumeEnvelopeTimeList())) return false;
          if (!getVolumeEnvelopeLevelList()
              .equals(other.getVolumeEnvelopeLevelList())) return false;
          if (hasClipWidth() != other.hasClipWidth()) return false;
          if (hasClipWidth()) {
            if (java.lang.Float.floatToIntBits(getClipWidth())
                != java.lang.Float.floatToIntBits(
                    other.getClipWidth())) return false;
          }
          if (hasPlaybackSpeed() != other.hasPlaybackSpeed()) return false;
          if (hasPlaybackSpeed()) {
            if (getPlaybackSpeed()
                != other.getPlaybackSpeed()) return false;
          }
          if (hasColorEffect() != other.hasColorEffect()) return false;
          if (hasColorEffect()) {
            if (!getColorEffect()
                .equals(other.getColorEffect())) return false;
          }
          if (hasEffectOptions() != other.hasEffectOptions()) return false;
          if (hasEffectOptions()) {
            if (!getEffectOptions()
                .equals(other.getEffectOptions())) return false;
          }
          if (hasTranscodeApproved() != other.hasTranscodeApproved()) return false;
          if (hasTranscodeApproved()) {
            if (getTranscodeApproved()
                != other.getTranscodeApproved()) return false;
          }
          if (hasClipState() != other.hasClipState()) return false;
          if (hasClipState()) {
            if (clipState_ != other.clipState_) return false;
          }
          if (hasMediaMsid() != other.hasMediaMsid()) return false;
          if (hasMediaMsid()) {
            if (!getMediaMsid()
                .equals(other.getMediaMsid())) return false;
          }
          if (hasCropLink() != other.hasCropLink()) return false;
          if (hasCropLink()) {
            if (getCropLink()
                != other.getCropLink()) return false;
          }
          if (hasIsReverse() != other.hasIsReverse()) return false;
          if (hasIsReverse()) {
            if (getIsReverse()
                != other.getIsReverse()) return false;
          }
          if (hasVoiceChanger() != other.hasVoiceChanger()) return false;
          if (hasVoiceChanger()) {
            if (getVoiceChanger()
                != other.getVoiceChanger()) return false;
          }
          if (hasVignette() != other.hasVignette()) return false;
          if (hasVignette()) {
            if (getVignette()
                != other.getVignette()) return false;
          }
          if (hasPanLeft() != other.hasPanLeft()) return false;
          if (hasPanLeft()) {
            if (getPanLeft()
                != other.getPanLeft()) return false;
          }
          if (hasPanRight() != other.hasPanRight()) return false;
          if (hasPanRight()) {
            if (getPanRight()
                != other.getPanRight()) return false;
          }
          if (hasCompressor() != other.hasCompressor()) return false;
          if (hasCompressor()) {
            if (getCompressor()
                != other.getCompressor()) return false;
          }
          if (hasPitchFactor() != other.hasPitchFactor()) return false;
          if (hasPitchFactor()) {
            if (getPitchFactor()
                != other.getPitchFactor()) return false;
          }
          if (hasClipName() != other.hasClipName()) return false;
          if (hasClipName()) {
            if (!getClipName()
                .equals(other.getClipName())) return false;
          }
          if (hasIosMediaAssetId() != other.hasIosMediaAssetId()) return false;
          if (hasIosMediaAssetId()) {
            if (!getIosMediaAssetId()
                .equals(other.getIosMediaAssetId())) return false;
          }
          if (hasKeepPitch() != other.hasKeepPitch()) return false;
          if (hasKeepPitch()) {
            if (getKeepPitch()
                != other.getKeepPitch()) return false;
          }
          if (hasUseIFrameOnly() != other.hasUseIFrameOnly()) return false;
          if (hasUseIFrameOnly()) {
            if (getUseIFrameOnly()
                != other.getUseIFrameOnly()) return false;
          }
          if (hasEnhancedAudioFilter() != other.hasEnhancedAudioFilter()) return false;
          if (hasEnhancedAudioFilter()) {
            if (!getEnhancedAudioFilter()
                .equals(other.getEnhancedAudioFilter())) return false;
          }
          if (hasEqualizer() != other.hasEqualizer()) return false;
          if (hasEqualizer()) {
            if (!getEqualizer()
                .equals(other.getEqualizer())) return false;
          }
          if (hasClipRange() != other.hasClipRange()) return false;
          if (hasClipRange()) {
            if (!getClipRange()
                .equals(other.getClipRange())) return false;
          }
          if (hasReverb() != other.hasReverb()) return false;
          if (hasReverb()) {
            if (!getReverb()
                .equals(other.getReverb())) return false;
          }
          if (hasColorAdjustment() != other.hasColorAdjustment()) return false;
          if (hasColorAdjustment()) {
            if (!getColorAdjustment()
                .equals(other.getColorAdjustment())) return false;
          }
          if (hasColorFilter() != other.hasColorFilter()) return false;
          if (hasColorFilter()) {
            if (!getColorFilter()
                .equals(other.getColorFilter())) return false;
          }
          if (!getEffectOptionList()
              .equals(other.getEffectOptionList())) return false;
          if (hasIncludedClipRotation() != other.hasIncludedClipRotation()) return false;
          if (hasIncludedClipRotation()) {
            if (getIncludedClipRotation()
                != other.getIncludedClipRotation()) return false;
          }
          if (hasUprightRotation() != other.hasUprightRotation()) return false;
          if (hasUprightRotation()) {
            if (getUprightRotation()
                != other.getUprightRotation()) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasMediaPath()) {
            hash = (37 * hash) + MEDIA_PATH_FIELD_NUMBER;
            hash = (53 * hash) + getMediaPath().hashCode();
          }
          if (hasFaceBoundsLeft()) {
            hash = (37 * hash) + FACE_BOUNDS_LEFT_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getFaceBoundsLeft());
          }
          if (hasFaceBoundsTop()) {
            hash = (37 * hash) + FACE_BOUNDS_TOP_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getFaceBoundsTop());
          }
          if (hasFaceBoundsRight()) {
            hash = (37 * hash) + FACE_BOUNDS_RIGHT_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getFaceBoundsRight());
          }
          if (hasFaceBoundsBottom()) {
            hash = (37 * hash) + FACE_BOUNDS_BOTTOM_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getFaceBoundsBottom());
          }
          if (hasFaceBoundsSet()) {
            hash = (37 * hash) + FACE_BOUNDS_SET_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getFaceBoundsSet());
          }
          if (hasCaptureFilename()) {
            hash = (37 * hash) + CAPTURE_FILENAME_FIELD_NUMBER;
            hash = (53 * hash) + getCaptureFilename().hashCode();
          }
          if (hasEngineClipId()) {
            hash = (37 * hash) + ENGINE_CLIP_ID_FIELD_NUMBER;
            hash = (53 * hash) + getEngineClipId();
          }
          if (hasAbstractCrop()) {
            hash = (37 * hash) + ABSTRACT_CROP_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getAbstractCrop());
          }
          if (hasStartPositionLeft()) {
            hash = (37 * hash) + START_POSITION_LEFT_FIELD_NUMBER;
            hash = (53 * hash) + getStartPositionLeft();
          }
          if (hasStartPositionBottom()) {
            hash = (37 * hash) + START_POSITION_BOTTOM_FIELD_NUMBER;
            hash = (53 * hash) + getStartPositionBottom();
          }
          if (hasStartPositionRight()) {
            hash = (37 * hash) + START_POSITION_RIGHT_FIELD_NUMBER;
            hash = (53 * hash) + getStartPositionRight();
          }
          if (hasStartPositionTop()) {
            hash = (37 * hash) + START_POSITION_TOP_FIELD_NUMBER;
            hash = (53 * hash) + getStartPositionTop();
          }
          if (hasEndPositionLeft()) {
            hash = (37 * hash) + END_POSITION_LEFT_FIELD_NUMBER;
            hash = (53 * hash) + getEndPositionLeft();
          }
          if (hasEndPositionBottom()) {
            hash = (37 * hash) + END_POSITION_BOTTOM_FIELD_NUMBER;
            hash = (53 * hash) + getEndPositionBottom();
          }
          if (hasEndPositionRight()) {
            hash = (37 * hash) + END_POSITION_RIGHT_FIELD_NUMBER;
            hash = (53 * hash) + getEndPositionRight();
          }
          if (hasEndPositionTop()) {
            hash = (37 * hash) + END_POSITION_TOP_FIELD_NUMBER;
            hash = (53 * hash) + getEndPositionTop();
          }
          if (hasRotatedStartPositionLeft()) {
            hash = (37 * hash) + ROTATED_START_POSITION_LEFT_FIELD_NUMBER;
            hash = (53 * hash) + getRotatedStartPositionLeft();
          }
          if (hasRotatedStartPositionBottom()) {
            hash = (37 * hash) + ROTATED_START_POSITION_BOTTOM_FIELD_NUMBER;
            hash = (53 * hash) + getRotatedStartPositionBottom();
          }
          if (hasRotatedStartPositionRight()) {
            hash = (37 * hash) + ROTATED_START_POSITION_RIGHT_FIELD_NUMBER;
            hash = (53 * hash) + getRotatedStartPositionRight();
          }
          if (hasRotatedStartPositionTop()) {
            hash = (37 * hash) + ROTATED_START_POSITION_TOP_FIELD_NUMBER;
            hash = (53 * hash) + getRotatedStartPositionTop();
          }
          if (hasRotatedEndPositionLeft()) {
            hash = (37 * hash) + ROTATED_END_POSITION_LEFT_FIELD_NUMBER;
            hash = (53 * hash) + getRotatedEndPositionLeft();
          }
          if (hasRotatedEndPositionBottom()) {
            hash = (37 * hash) + ROTATED_END_POSITION_BOTTOM_FIELD_NUMBER;
            hash = (53 * hash) + getRotatedEndPositionBottom();
          }
          if (hasRotatedEndPositionRight()) {
            hash = (37 * hash) + ROTATED_END_POSITION_RIGHT_FIELD_NUMBER;
            hash = (53 * hash) + getRotatedEndPositionRight();
          }
          if (hasRotatedEndPositionTop()) {
            hash = (37 * hash) + ROTATED_END_POSITION_TOP_FIELD_NUMBER;
            hash = (53 * hash) + getRotatedEndPositionTop();
          }
          if (hasRotation()) {
            hash = (37 * hash) + ROTATION_FIELD_NUMBER;
            hash = (53 * hash) + getRotation();
          }
          if (hasFliph()) {
            hash = (37 * hash) + FLIPH_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getFliph());
          }
          if (hasFlipv()) {
            hash = (37 * hash) + FLIPV_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getFlipv());
          }
          if (hasDiffAvDuration()) {
            hash = (37 * hash) + DIFF_AV_DURATION_FIELD_NUMBER;
            hash = (53 * hash) + getDiffAvDuration();
          }
          if (hasTrimTimeStart()) {
            hash = (37 * hash) + TRIM_TIME_START_FIELD_NUMBER;
            hash = (53 * hash) + getTrimTimeStart();
          }
          if (hasTrimTimeEnd()) {
            hash = (37 * hash) + TRIM_TIME_END_FIELD_NUMBER;
            hash = (53 * hash) + getTrimTimeEnd();
          }
          if (hasTrimmedDuration()) {
            hash = (37 * hash) + TRIMMED_DURATION_FIELD_NUMBER;
            hash = (53 * hash) + getTrimmedDuration();
          }
          if (hasPreTrimmedDuration()) {
            hash = (37 * hash) + PRE_TRIMMED_DURATION_FIELD_NUMBER;
            hash = (53 * hash) + getPreTrimmedDuration();
          }
          if (hasTitleEffectId()) {
            hash = (37 * hash) + TITLE_EFFECT_ID_FIELD_NUMBER;
            hash = (53 * hash) + getTitleEffectId().hashCode();
          }
          if (hasTitleStartTime()) {
            hash = (37 * hash) + TITLE_START_TIME_FIELD_NUMBER;
            hash = (53 * hash) + getTitleStartTime();
          }
          if (hasTitleEndTime()) {
            hash = (37 * hash) + TITLE_END_TIME_FIELD_NUMBER;
            hash = (53 * hash) + getTitleEndTime();
          }
          if (hasDuration()) {
            hash = (37 * hash) + DURATION_FIELD_NUMBER;
            hash = (53 * hash) + getDuration();
          }
          if (hasAudioDuration()) {
            hash = (37 * hash) + AUDIO_DURATION_FIELD_NUMBER;
            hash = (53 * hash) + getAudioDuration();
          }
          if (hasVideoDuration()) {
            hash = (37 * hash) + VIDEO_DURATION_FIELD_NUMBER;
            hash = (53 * hash) + getVideoDuration();
          }
          if (hasStartOverlap()) {
            hash = (37 * hash) + START_OVERLAP_FIELD_NUMBER;
            hash = (53 * hash) + getStartOverlap();
          }
          if (hasEndOverlap()) {
            hash = (37 * hash) + END_OVERLAP_FIELD_NUMBER;
            hash = (53 * hash) + getEndOverlap();
          }
          if (hasWidth()) {
            hash = (37 * hash) + WIDTH_FIELD_NUMBER;
            hash = (53 * hash) + getWidth();
          }
          if (hasHeight()) {
            hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
            hash = (53 * hash) + getHeight();
          }
          if (hasOriginalWidth()) {
            hash = (37 * hash) + ORIGINAL_WIDTH_FIELD_NUMBER;
            hash = (53 * hash) + getOriginalWidth();
          }
          if (hasOriginalHeight()) {
            hash = (37 * hash) + ORIGINAL_HEIGHT_FIELD_NUMBER;
            hash = (53 * hash) + getOriginalHeight();
          }
          if (hasClipVolume()) {
            hash = (37 * hash) + CLIP_VOLUME_FIELD_NUMBER;
            hash = (53 * hash) + getClipVolume();
          }
          if (hasMusicVolume()) {
            hash = (37 * hash) + MUSIC_VOLUME_FIELD_NUMBER;
            hash = (53 * hash) + getMusicVolume();
          }
          if (hasTitleStyle()) {
            hash = (37 * hash) + TITLE_STYLE_FIELD_NUMBER;
            hash = (53 * hash) + titleStyle_;
          }
          if (hasIsImage()) {
            hash = (37 * hash) + IS_IMAGE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getIsImage());
          }
          if (hasMuteAudio()) {
            hash = (37 * hash) + MUTE_AUDIO_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getMuteAudio());
          }
          if (hasMuteMusic()) {
            hash = (37 * hash) + MUTE_MUSIC_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getMuteMusic());
          }
          if (hasHasAudio()) {
            hash = (37 * hash) + HAS_AUDIO_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getHasAudio());
          }
          if (hasHasVideo()) {
            hash = (37 * hash) + HAS_VIDEO_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getHasVideo());
          }
          if (hasThumbPath()) {
            hash = (37 * hash) + THUMB_PATH_FIELD_NUMBER;
            hash = (53 * hash) + getThumbPath().hashCode();
          }
          if (hasTransitionItemUuidLsb()) {
            hash = (37 * hash) + TRANSITION_ITEM_UUID_LSB_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getTransitionItemUuidLsb());
          }
          if (hasTransitionItemUuidMsb()) {
            hash = (37 * hash) + TRANSITION_ITEM_UUID_MSB_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getTransitionItemUuidMsb());
          }
          if (hasUnattachedTransition()) {
            hash = (37 * hash) + UNATTACHED_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getUnattachedTransition().hashCode();
          }
          if (hasBrightness()) {
            hash = (37 * hash) + BRIGHTNESS_FIELD_NUMBER;
            hash = (53 * hash) + getBrightness();
          }
          if (hasContrast()) {
            hash = (37 * hash) + CONTRAST_FIELD_NUMBER;
            hash = (53 * hash) + getContrast();
          }
          if (hasSaturation()) {
            hash = (37 * hash) + SATURATION_FIELD_NUMBER;
            hash = (53 * hash) + getSaturation();
          }
          if (hasTintcolor()) {
            hash = (37 * hash) + TINTCOLOR_FIELD_NUMBER;
            hash = (53 * hash) + getTintcolor();
          }
          if (hasEffectStartTime()) {
            hash = (37 * hash) + EFFECT_START_TIME_FIELD_NUMBER;
            hash = (53 * hash) + getEffectStartTime();
          }
          if (hasEffectEndTime()) {
            hash = (37 * hash) + EFFECT_END_TIME_FIELD_NUMBER;
            hash = (53 * hash) + getEffectEndTime();
          }
          if (hasStartMatrix()) {
            hash = (37 * hash) + START_MATRIX_FIELD_NUMBER;
            hash = (53 * hash) + getStartMatrix().hashCode();
          }
          if (hasEndMatrix()) {
            hash = (37 * hash) + END_MATRIX_FIELD_NUMBER;
            hash = (53 * hash) + getEndMatrix().hashCode();
          }
          if (hasAutoThemeEffect()) {
            hash = (37 * hash) + AUTO_THEME_EFFECT_FIELD_NUMBER;
            hash = (53 * hash) + autoThemeEffect_;
          }
          if (getVolumeEnvelopeTimeCount() > 0) {
            hash = (37 * hash) + VOLUME_ENVELOPE_TIME_FIELD_NUMBER;
            hash = (53 * hash) + getVolumeEnvelopeTimeList().hashCode();
          }
          if (getVolumeEnvelopeLevelCount() > 0) {
            hash = (37 * hash) + VOLUME_ENVELOPE_LEVEL_FIELD_NUMBER;
            hash = (53 * hash) + getVolumeEnvelopeLevelList().hashCode();
          }
          if (hasClipWidth()) {
            hash = (37 * hash) + CLIP_WIDTH_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getClipWidth());
          }
          if (hasPlaybackSpeed()) {
            hash = (37 * hash) + PLAYBACK_SPEED_FIELD_NUMBER;
            hash = (53 * hash) + getPlaybackSpeed();
          }
          if (hasColorEffect()) {
            hash = (37 * hash) + COLOR_EFFECT_FIELD_NUMBER;
            hash = (53 * hash) + getColorEffect().hashCode();
          }
          if (hasEffectOptions()) {
            hash = (37 * hash) + EFFECT_OPTIONS_FIELD_NUMBER;
            hash = (53 * hash) + getEffectOptions().hashCode();
          }
          if (hasTranscodeApproved()) {
            hash = (37 * hash) + TRANSCODE_APPROVED_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getTranscodeApproved());
          }
          if (hasClipState()) {
            hash = (37 * hash) + CLIP_STATE_FIELD_NUMBER;
            hash = (53 * hash) + clipState_;
          }
          if (hasMediaMsid()) {
            hash = (37 * hash) + MEDIA_MSID_FIELD_NUMBER;
            hash = (53 * hash) + getMediaMsid().hashCode();
          }
          if (hasCropLink()) {
            hash = (37 * hash) + CROP_LINK_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getCropLink());
          }
          if (hasIsReverse()) {
            hash = (37 * hash) + IS_REVERSE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getIsReverse());
          }
          if (hasVoiceChanger()) {
            hash = (37 * hash) + VOICE_CHANGER_FIELD_NUMBER;
            hash = (53 * hash) + getVoiceChanger();
          }
          if (hasVignette()) {
            hash = (37 * hash) + VIGNETTE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getVignette());
          }
          if (hasPanLeft()) {
            hash = (37 * hash) + PAN_LEFT_FIELD_NUMBER;
            hash = (53 * hash) + getPanLeft();
          }
          if (hasPanRight()) {
            hash = (37 * hash) + PAN_RIGHT_FIELD_NUMBER;
            hash = (53 * hash) + getPanRight();
          }
          if (hasCompressor()) {
            hash = (37 * hash) + COMPRESSOR_FIELD_NUMBER;
            hash = (53 * hash) + getCompressor();
          }
          if (hasPitchFactor()) {
            hash = (37 * hash) + PITCH_FACTOR_FIELD_NUMBER;
            hash = (53 * hash) + getPitchFactor();
          }
          if (hasClipName()) {
            hash = (37 * hash) + CLIP_NAME_FIELD_NUMBER;
            hash = (53 * hash) + getClipName().hashCode();
          }
          if (hasIosMediaAssetId()) {
            hash = (37 * hash) + IOS_MEDIA_ASSET_ID_FIELD_NUMBER;
            hash = (53 * hash) + getIosMediaAssetId().hashCode();
          }
          if (hasKeepPitch()) {
            hash = (37 * hash) + KEEPPITCH_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getKeepPitch());
          }
          if (hasUseIFrameOnly()) {
            hash = (37 * hash) + USEIFRAMEONLY_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getUseIFrameOnly());
          }
          if (hasEnhancedAudioFilter()) {
            hash = (37 * hash) + ENHANCEDAUDIOFILTER_FIELD_NUMBER;
            hash = (53 * hash) + getEnhancedAudioFilter().hashCode();
          }
          if (hasEqualizer()) {
            hash = (37 * hash) + EQUALIZER_FIELD_NUMBER;
            hash = (53 * hash) + getEqualizer().hashCode();
          }
          if (hasClipRange()) {
            hash = (37 * hash) + CLIPRANGE_FIELD_NUMBER;
            hash = (53 * hash) + getClipRange().hashCode();
          }
          if (hasReverb()) {
            hash = (37 * hash) + REVERB_FIELD_NUMBER;
            hash = (53 * hash) + getReverb().hashCode();
          }
          if (hasColorAdjustment()) {
            hash = (37 * hash) + COLORADJUSTMENT_FIELD_NUMBER;
            hash = (53 * hash) + getColorAdjustment().hashCode();
          }
          if (hasColorFilter()) {
            hash = (37 * hash) + COLORFILTER_FIELD_NUMBER;
            hash = (53 * hash) + getColorFilter().hashCode();
          }
          if (getEffectOptionCount() > 0) {
            hash = (37 * hash) + EFFECTOPTION_FIELD_NUMBER;
            hash = (53 * hash) + getEffectOptionList().hashCode();
          }
          if (hasIncludedClipRotation()) {
            hash = (37 * hash) + INCLUDEDCLIPROTATION_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getIncludedClipRotation());
          }
          if (hasUprightRotation()) {
            hash = (37 * hash) + UPRIGHTROTATION_FIELD_NUMBER;
            hash = (53 * hash) + getUprightRotation();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Defines a visual clip on the priamry timeline
         * </pre>
         *
         * Protobuf type {@code KMProto.KMProject.VisualClip}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.VisualClip)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClipOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_VisualClip_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_VisualClip_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
              getUnattachedTransitionFieldBuilder();
              getStartMatrixFieldBuilder();
              getEndMatrixFieldBuilder();
              getColorEffectFieldBuilder();
              getEffectOptionsFieldBuilder();
              getClipRangeFieldBuilder();
              getColorAdjustmentFieldBuilder();
              getColorFilterFieldBuilder();
              getEffectOptionFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            mediaPath_ = "";
            bitField0_ = (bitField0_ & ~0x00000001);
            faceBoundsLeft_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000002);
            faceBoundsTop_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000004);
            faceBoundsRight_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000008);
            faceBoundsBottom_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000010);
            faceBoundsSet_ = false;
            bitField0_ = (bitField0_ & ~0x00000020);
            captureFilename_ = "";
            bitField0_ = (bitField0_ & ~0x00000040);
            engineClipId_ = 0;
            bitField0_ = (bitField0_ & ~0x00000080);
            abstractCrop_ = false;
            bitField0_ = (bitField0_ & ~0x00000100);
            startPositionLeft_ = 0;
            bitField0_ = (bitField0_ & ~0x00000200);
            startPositionBottom_ = 0;
            bitField0_ = (bitField0_ & ~0x00000400);
            startPositionRight_ = 0;
            bitField0_ = (bitField0_ & ~0x00000800);
            startPositionTop_ = 0;
            bitField0_ = (bitField0_ & ~0x00001000);
            endPositionLeft_ = 0;
            bitField0_ = (bitField0_ & ~0x00002000);
            endPositionBottom_ = 0;
            bitField0_ = (bitField0_ & ~0x00004000);
            endPositionRight_ = 0;
            bitField0_ = (bitField0_ & ~0x00008000);
            endPositionTop_ = 0;
            bitField0_ = (bitField0_ & ~0x00010000);
            rotatedStartPositionLeft_ = 0;
            bitField0_ = (bitField0_ & ~0x00020000);
            rotatedStartPositionBottom_ = 0;
            bitField0_ = (bitField0_ & ~0x00040000);
            rotatedStartPositionRight_ = 0;
            bitField0_ = (bitField0_ & ~0x00080000);
            rotatedStartPositionTop_ = 0;
            bitField0_ = (bitField0_ & ~0x00100000);
            rotatedEndPositionLeft_ = 0;
            bitField0_ = (bitField0_ & ~0x00200000);
            rotatedEndPositionBottom_ = 0;
            bitField0_ = (bitField0_ & ~0x00400000);
            rotatedEndPositionRight_ = 0;
            bitField0_ = (bitField0_ & ~0x00800000);
            rotatedEndPositionTop_ = 0;
            bitField0_ = (bitField0_ & ~0x01000000);
            rotation_ = 0;
            bitField0_ = (bitField0_ & ~0x02000000);
            fliph_ = false;
            bitField0_ = (bitField0_ & ~0x04000000);
            flipv_ = false;
            bitField0_ = (bitField0_ & ~0x08000000);
            diffAvDuration_ = 0;
            bitField0_ = (bitField0_ & ~0x10000000);
            trimTimeStart_ = 0;
            bitField0_ = (bitField0_ & ~0x20000000);
            trimTimeEnd_ = 0;
            bitField0_ = (bitField0_ & ~0x40000000);
            trimmedDuration_ = 0;
            bitField0_ = (bitField0_ & ~0x80000000);
            preTrimmedDuration_ = 0;
            bitField1_ = (bitField1_ & ~0x00000001);
            titleEffectId_ = "";
            bitField1_ = (bitField1_ & ~0x00000002);
            titleStartTime_ = 0;
            bitField1_ = (bitField1_ & ~0x00000004);
            titleEndTime_ = 0;
            bitField1_ = (bitField1_ & ~0x00000008);
            duration_ = 0;
            bitField1_ = (bitField1_ & ~0x00000010);
            audioDuration_ = 0;
            bitField1_ = (bitField1_ & ~0x00000020);
            videoDuration_ = 0;
            bitField1_ = (bitField1_ & ~0x00000040);
            startOverlap_ = 0;
            bitField1_ = (bitField1_ & ~0x00000080);
            endOverlap_ = 0;
            bitField1_ = (bitField1_ & ~0x00000100);
            width_ = 0;
            bitField1_ = (bitField1_ & ~0x00000200);
            height_ = 0;
            bitField1_ = (bitField1_ & ~0x00000400);
            originalWidth_ = 0;
            bitField1_ = (bitField1_ & ~0x00000800);
            originalHeight_ = 0;
            bitField1_ = (bitField1_ & ~0x00001000);
            clipVolume_ = 0;
            bitField1_ = (bitField1_ & ~0x00002000);
            musicVolume_ = 0;
            bitField1_ = (bitField1_ & ~0x00004000);
            titleStyle_ = 0;
            bitField1_ = (bitField1_ & ~0x00008000);
            isImage_ = false;
            bitField1_ = (bitField1_ & ~0x00010000);
            muteAudio_ = false;
            bitField1_ = (bitField1_ & ~0x00020000);
            muteMusic_ = false;
            bitField1_ = (bitField1_ & ~0x00040000);
            hasAudio_ = false;
            bitField1_ = (bitField1_ & ~0x00080000);
            hasVideo_ = false;
            bitField1_ = (bitField1_ & ~0x00100000);
            thumbPath_ = "";
            bitField1_ = (bitField1_ & ~0x00200000);
            transitionItemUuidLsb_ = 0L;
            bitField1_ = (bitField1_ & ~0x00400000);
            transitionItemUuidMsb_ = 0L;
            bitField1_ = (bitField1_ & ~0x00800000);
            if (unattachedTransitionBuilder_ == null) {
              unattachedTransition_ = null;
            } else {
              unattachedTransitionBuilder_.clear();
            }
            bitField1_ = (bitField1_ & ~0x01000000);
            brightness_ = 0;
            bitField1_ = (bitField1_ & ~0x02000000);
            contrast_ = 0;
            bitField1_ = (bitField1_ & ~0x04000000);
            saturation_ = 0;
            bitField1_ = (bitField1_ & ~0x08000000);
            tintcolor_ = 0;
            bitField1_ = (bitField1_ & ~0x10000000);
            effectStartTime_ = 0;
            bitField1_ = (bitField1_ & ~0x20000000);
            effectEndTime_ = 0;
            bitField1_ = (bitField1_ & ~0x40000000);
            if (startMatrixBuilder_ == null) {
              startMatrix_ = null;
            } else {
              startMatrixBuilder_.clear();
            }
            bitField1_ = (bitField1_ & ~0x80000000);
            if (endMatrixBuilder_ == null) {
              endMatrix_ = null;
            } else {
              endMatrixBuilder_.clear();
            }
            bitField2_ = (bitField2_ & ~0x00000001);
            autoThemeEffect_ = 1;
            bitField2_ = (bitField2_ & ~0x00000002);
            volumeEnvelopeTime_ = emptyIntList();
            bitField2_ = (bitField2_ & ~0x00000004);
            volumeEnvelopeLevel_ = emptyIntList();
            bitField2_ = (bitField2_ & ~0x00000008);
            clipWidth_ = 0F;
            bitField2_ = (bitField2_ & ~0x00000010);
            playbackSpeed_ = 0;
            bitField2_ = (bitField2_ & ~0x00000020);
            if (colorEffectBuilder_ == null) {
              colorEffect_ = null;
            } else {
              colorEffectBuilder_.clear();
            }
            bitField2_ = (bitField2_ & ~0x00000040);
            if (effectOptionsBuilder_ == null) {
              effectOptions_ = null;
            } else {
              effectOptionsBuilder_.clear();
            }
            bitField2_ = (bitField2_ & ~0x00000080);
            transcodeApproved_ = false;
            bitField2_ = (bitField2_ & ~0x00000100);
            clipState_ = 1;
            bitField2_ = (bitField2_ & ~0x00000200);
            mediaMsid_ = "";
            bitField2_ = (bitField2_ & ~0x00000400);
            cropLink_ = false;
            bitField2_ = (bitField2_ & ~0x00000800);
            isReverse_ = false;
            bitField2_ = (bitField2_ & ~0x00001000);
            voiceChanger_ = 0;
            bitField2_ = (bitField2_ & ~0x00002000);
            vignette_ = false;
            bitField2_ = (bitField2_ & ~0x00004000);
            panLeft_ = 0;
            bitField2_ = (bitField2_ & ~0x00008000);
            panRight_ = 0;
            bitField2_ = (bitField2_ & ~0x00010000);
            compressor_ = 0;
            bitField2_ = (bitField2_ & ~0x00020000);
            pitchFactor_ = 0;
            bitField2_ = (bitField2_ & ~0x00040000);
            clipName_ = "";
            bitField2_ = (bitField2_ & ~0x00080000);
            iosMediaAssetId_ = "";
            bitField2_ = (bitField2_ & ~0x00100000);
            keepPitch_ = false;
            bitField2_ = (bitField2_ & ~0x00200000);
            useIFrameOnly_ = false;
            bitField2_ = (bitField2_ & ~0x00400000);
            enhancedAudioFilter_ = "";
            bitField2_ = (bitField2_ & ~0x00800000);
            equalizer_ = "";
            bitField2_ = (bitField2_ & ~0x01000000);
            if (clipRangeBuilder_ == null) {
              clipRange_ = null;
            } else {
              clipRangeBuilder_.clear();
            }
            bitField2_ = (bitField2_ & ~0x02000000);
            reverb_ = "";
            bitField2_ = (bitField2_ & ~0x04000000);
            if (colorAdjustmentBuilder_ == null) {
              colorAdjustment_ = null;
            } else {
              colorAdjustmentBuilder_.clear();
            }
            bitField2_ = (bitField2_ & ~0x08000000);
            if (colorFilterBuilder_ == null) {
              colorFilter_ = null;
            } else {
              colorFilterBuilder_.clear();
            }
            bitField2_ = (bitField2_ & ~0x10000000);
            if (effectOptionBuilder_ == null) {
              effectOption_ = java.util.Collections.emptyList();
              bitField2_ = (bitField2_ & ~0x20000000);
            } else {
              effectOptionBuilder_.clear();
            }
            includedClipRotation_ = false;
            bitField2_ = (bitField2_ & ~0x40000000);
            uprightRotation_ = 0;
            bitField2_ = (bitField2_ & ~0x80000000);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_VisualClip_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip(this);
            int from_bitField0_ = bitField0_;
            int from_bitField1_ = bitField1_;
            int from_bitField2_ = bitField2_;
            int to_bitField0_ = 0;
            int to_bitField1_ = 0;
            int to_bitField2_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              to_bitField0_ |= 0x00000001;
            }
            result.mediaPath_ = mediaPath_;
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.faceBoundsLeft_ = faceBoundsLeft_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.faceBoundsTop_ = faceBoundsTop_;
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.faceBoundsRight_ = faceBoundsRight_;
              to_bitField0_ |= 0x00000008;
            }
            if (((from_bitField0_ & 0x00000010) != 0)) {
              result.faceBoundsBottom_ = faceBoundsBottom_;
              to_bitField0_ |= 0x00000010;
            }
            if (((from_bitField0_ & 0x00000020) != 0)) {
              result.faceBoundsSet_ = faceBoundsSet_;
              to_bitField0_ |= 0x00000020;
            }
            if (((from_bitField0_ & 0x00000040) != 0)) {
              to_bitField0_ |= 0x00000040;
            }
            result.captureFilename_ = captureFilename_;
            if (((from_bitField0_ & 0x00000080) != 0)) {
              result.engineClipId_ = engineClipId_;
              to_bitField0_ |= 0x00000080;
            }
            if (((from_bitField0_ & 0x00000100) != 0)) {
              result.abstractCrop_ = abstractCrop_;
              to_bitField0_ |= 0x00000100;
            }
            if (((from_bitField0_ & 0x00000200) != 0)) {
              result.startPositionLeft_ = startPositionLeft_;
              to_bitField0_ |= 0x00000200;
            }
            if (((from_bitField0_ & 0x00000400) != 0)) {
              result.startPositionBottom_ = startPositionBottom_;
              to_bitField0_ |= 0x00000400;
            }
            if (((from_bitField0_ & 0x00000800) != 0)) {
              result.startPositionRight_ = startPositionRight_;
              to_bitField0_ |= 0x00000800;
            }
            if (((from_bitField0_ & 0x00001000) != 0)) {
              result.startPositionTop_ = startPositionTop_;
              to_bitField0_ |= 0x00001000;
            }
            if (((from_bitField0_ & 0x00002000) != 0)) {
              result.endPositionLeft_ = endPositionLeft_;
              to_bitField0_ |= 0x00002000;
            }
            if (((from_bitField0_ & 0x00004000) != 0)) {
              result.endPositionBottom_ = endPositionBottom_;
              to_bitField0_ |= 0x00004000;
            }
            if (((from_bitField0_ & 0x00008000) != 0)) {
              result.endPositionRight_ = endPositionRight_;
              to_bitField0_ |= 0x00008000;
            }
            if (((from_bitField0_ & 0x00010000) != 0)) {
              result.endPositionTop_ = endPositionTop_;
              to_bitField0_ |= 0x00010000;
            }
            if (((from_bitField0_ & 0x00020000) != 0)) {
              result.rotatedStartPositionLeft_ = rotatedStartPositionLeft_;
              to_bitField0_ |= 0x00020000;
            }
            if (((from_bitField0_ & 0x00040000) != 0)) {
              result.rotatedStartPositionBottom_ = rotatedStartPositionBottom_;
              to_bitField0_ |= 0x00040000;
            }
            if (((from_bitField0_ & 0x00080000) != 0)) {
              result.rotatedStartPositionRight_ = rotatedStartPositionRight_;
              to_bitField0_ |= 0x00080000;
            }
            if (((from_bitField0_ & 0x00100000) != 0)) {
              result.rotatedStartPositionTop_ = rotatedStartPositionTop_;
              to_bitField0_ |= 0x00100000;
            }
            if (((from_bitField0_ & 0x00200000) != 0)) {
              result.rotatedEndPositionLeft_ = rotatedEndPositionLeft_;
              to_bitField0_ |= 0x00200000;
            }
            if (((from_bitField0_ & 0x00400000) != 0)) {
              result.rotatedEndPositionBottom_ = rotatedEndPositionBottom_;
              to_bitField0_ |= 0x00400000;
            }
            if (((from_bitField0_ & 0x00800000) != 0)) {
              result.rotatedEndPositionRight_ = rotatedEndPositionRight_;
              to_bitField0_ |= 0x00800000;
            }
            if (((from_bitField0_ & 0x01000000) != 0)) {
              result.rotatedEndPositionTop_ = rotatedEndPositionTop_;
              to_bitField0_ |= 0x01000000;
            }
            if (((from_bitField0_ & 0x02000000) != 0)) {
              result.rotation_ = rotation_;
              to_bitField0_ |= 0x02000000;
            }
            if (((from_bitField0_ & 0x04000000) != 0)) {
              result.fliph_ = fliph_;
              to_bitField0_ |= 0x04000000;
            }
            if (((from_bitField0_ & 0x08000000) != 0)) {
              result.flipv_ = flipv_;
              to_bitField0_ |= 0x08000000;
            }
            if (((from_bitField0_ & 0x10000000) != 0)) {
              result.diffAvDuration_ = diffAvDuration_;
              to_bitField0_ |= 0x10000000;
            }
            if (((from_bitField0_ & 0x20000000) != 0)) {
              result.trimTimeStart_ = trimTimeStart_;
              to_bitField0_ |= 0x20000000;
            }
            if (((from_bitField0_ & 0x40000000) != 0)) {
              result.trimTimeEnd_ = trimTimeEnd_;
              to_bitField0_ |= 0x40000000;
            }
            if (((from_bitField0_ & 0x80000000) != 0)) {
              result.trimmedDuration_ = trimmedDuration_;
              to_bitField0_ |= 0x80000000;
            }
            if (((from_bitField1_ & 0x00000001) != 0)) {
              result.preTrimmedDuration_ = preTrimmedDuration_;
              to_bitField1_ |= 0x00000001;
            }
            if (((from_bitField1_ & 0x00000002) != 0)) {
              to_bitField1_ |= 0x00000002;
            }
            result.titleEffectId_ = titleEffectId_;
            if (((from_bitField1_ & 0x00000004) != 0)) {
              result.titleStartTime_ = titleStartTime_;
              to_bitField1_ |= 0x00000004;
            }
            if (((from_bitField1_ & 0x00000008) != 0)) {
              result.titleEndTime_ = titleEndTime_;
              to_bitField1_ |= 0x00000008;
            }
            if (((from_bitField1_ & 0x00000010) != 0)) {
              result.duration_ = duration_;
              to_bitField1_ |= 0x00000010;
            }
            if (((from_bitField1_ & 0x00000020) != 0)) {
              result.audioDuration_ = audioDuration_;
              to_bitField1_ |= 0x00000020;
            }
            if (((from_bitField1_ & 0x00000040) != 0)) {
              result.videoDuration_ = videoDuration_;
              to_bitField1_ |= 0x00000040;
            }
            if (((from_bitField1_ & 0x00000080) != 0)) {
              result.startOverlap_ = startOverlap_;
              to_bitField1_ |= 0x00000080;
            }
            if (((from_bitField1_ & 0x00000100) != 0)) {
              result.endOverlap_ = endOverlap_;
              to_bitField1_ |= 0x00000100;
            }
            if (((from_bitField1_ & 0x00000200) != 0)) {
              result.width_ = width_;
              to_bitField1_ |= 0x00000200;
            }
            if (((from_bitField1_ & 0x00000400) != 0)) {
              result.height_ = height_;
              to_bitField1_ |= 0x00000400;
            }
            if (((from_bitField1_ & 0x00000800) != 0)) {
              result.originalWidth_ = originalWidth_;
              to_bitField1_ |= 0x00000800;
            }
            if (((from_bitField1_ & 0x00001000) != 0)) {
              result.originalHeight_ = originalHeight_;
              to_bitField1_ |= 0x00001000;
            }
            if (((from_bitField1_ & 0x00002000) != 0)) {
              result.clipVolume_ = clipVolume_;
              to_bitField1_ |= 0x00002000;
            }
            if (((from_bitField1_ & 0x00004000) != 0)) {
              result.musicVolume_ = musicVolume_;
              to_bitField1_ |= 0x00004000;
            }
            if (((from_bitField1_ & 0x00008000) != 0)) {
              to_bitField1_ |= 0x00008000;
            }
            result.titleStyle_ = titleStyle_;
            if (((from_bitField1_ & 0x00010000) != 0)) {
              result.isImage_ = isImage_;
              to_bitField1_ |= 0x00010000;
            }
            if (((from_bitField1_ & 0x00020000) != 0)) {
              result.muteAudio_ = muteAudio_;
              to_bitField1_ |= 0x00020000;
            }
            if (((from_bitField1_ & 0x00040000) != 0)) {
              result.muteMusic_ = muteMusic_;
              to_bitField1_ |= 0x00040000;
            }
            if (((from_bitField1_ & 0x00080000) != 0)) {
              result.hasAudio_ = hasAudio_;
              to_bitField1_ |= 0x00080000;
            }
            if (((from_bitField1_ & 0x00100000) != 0)) {
              result.hasVideo_ = hasVideo_;
              to_bitField1_ |= 0x00100000;
            }
            if (((from_bitField1_ & 0x00200000) != 0)) {
              to_bitField1_ |= 0x00200000;
            }
            result.thumbPath_ = thumbPath_;
            if (((from_bitField1_ & 0x00400000) != 0)) {
              result.transitionItemUuidLsb_ = transitionItemUuidLsb_;
              to_bitField1_ |= 0x00400000;
            }
            if (((from_bitField1_ & 0x00800000) != 0)) {
              result.transitionItemUuidMsb_ = transitionItemUuidMsb_;
              to_bitField1_ |= 0x00800000;
            }
            if (((from_bitField1_ & 0x01000000) != 0)) {
              if (unattachedTransitionBuilder_ == null) {
                result.unattachedTransition_ = unattachedTransition_;
              } else {
                result.unattachedTransition_ = unattachedTransitionBuilder_.build();
              }
              to_bitField1_ |= 0x01000000;
            }
            if (((from_bitField1_ & 0x02000000) != 0)) {
              result.brightness_ = brightness_;
              to_bitField1_ |= 0x02000000;
            }
            if (((from_bitField1_ & 0x04000000) != 0)) {
              result.contrast_ = contrast_;
              to_bitField1_ |= 0x04000000;
            }
            if (((from_bitField1_ & 0x08000000) != 0)) {
              result.saturation_ = saturation_;
              to_bitField1_ |= 0x08000000;
            }
            if (((from_bitField1_ & 0x10000000) != 0)) {
              result.tintcolor_ = tintcolor_;
              to_bitField1_ |= 0x10000000;
            }
            if (((from_bitField1_ & 0x20000000) != 0)) {
              result.effectStartTime_ = effectStartTime_;
              to_bitField1_ |= 0x20000000;
            }
            if (((from_bitField1_ & 0x40000000) != 0)) {
              result.effectEndTime_ = effectEndTime_;
              to_bitField1_ |= 0x40000000;
            }
            if (((from_bitField1_ & 0x80000000) != 0)) {
              if (startMatrixBuilder_ == null) {
                result.startMatrix_ = startMatrix_;
              } else {
                result.startMatrix_ = startMatrixBuilder_.build();
              }
              to_bitField1_ |= 0x80000000;
            }
            if (((from_bitField2_ & 0x00000001) != 0)) {
              if (endMatrixBuilder_ == null) {
                result.endMatrix_ = endMatrix_;
              } else {
                result.endMatrix_ = endMatrixBuilder_.build();
              }
              to_bitField2_ |= 0x00000001;
            }
            if (((from_bitField2_ & 0x00000002) != 0)) {
              to_bitField2_ |= 0x00000002;
            }
            result.autoThemeEffect_ = autoThemeEffect_;
            if (((bitField2_ & 0x00000004) != 0)) {
              volumeEnvelopeTime_.makeImmutable();
              bitField2_ = (bitField2_ & ~0x00000004);
            }
            result.volumeEnvelopeTime_ = volumeEnvelopeTime_;
            if (((bitField2_ & 0x00000008) != 0)) {
              volumeEnvelopeLevel_.makeImmutable();
              bitField2_ = (bitField2_ & ~0x00000008);
            }
            result.volumeEnvelopeLevel_ = volumeEnvelopeLevel_;
            if (((from_bitField2_ & 0x00000010) != 0)) {
              result.clipWidth_ = clipWidth_;
              to_bitField2_ |= 0x00000004;
            }
            if (((from_bitField2_ & 0x00000020) != 0)) {
              result.playbackSpeed_ = playbackSpeed_;
              to_bitField2_ |= 0x00000008;
            }
            if (((from_bitField2_ & 0x00000040) != 0)) {
              if (colorEffectBuilder_ == null) {
                result.colorEffect_ = colorEffect_;
              } else {
                result.colorEffect_ = colorEffectBuilder_.build();
              }
              to_bitField2_ |= 0x00000010;
            }
            if (((from_bitField2_ & 0x00000080) != 0)) {
              if (effectOptionsBuilder_ == null) {
                result.effectOptions_ = effectOptions_;
              } else {
                result.effectOptions_ = effectOptionsBuilder_.build();
              }
              to_bitField2_ |= 0x00000020;
            }
            if (((from_bitField2_ & 0x00000100) != 0)) {
              result.transcodeApproved_ = transcodeApproved_;
              to_bitField2_ |= 0x00000040;
            }
            if (((from_bitField2_ & 0x00000200) != 0)) {
              to_bitField2_ |= 0x00000080;
            }
            result.clipState_ = clipState_;
            if (((from_bitField2_ & 0x00000400) != 0)) {
              to_bitField2_ |= 0x00000100;
            }
            result.mediaMsid_ = mediaMsid_;
            if (((from_bitField2_ & 0x00000800) != 0)) {
              result.cropLink_ = cropLink_;
              to_bitField2_ |= 0x00000200;
            }
            if (((from_bitField2_ & 0x00001000) != 0)) {
              result.isReverse_ = isReverse_;
              to_bitField2_ |= 0x00000400;
            }
            if (((from_bitField2_ & 0x00002000) != 0)) {
              result.voiceChanger_ = voiceChanger_;
              to_bitField2_ |= 0x00000800;
            }
            if (((from_bitField2_ & 0x00004000) != 0)) {
              result.vignette_ = vignette_;
              to_bitField2_ |= 0x00001000;
            }
            if (((from_bitField2_ & 0x00008000) != 0)) {
              result.panLeft_ = panLeft_;
              to_bitField2_ |= 0x00002000;
            }
            if (((from_bitField2_ & 0x00010000) != 0)) {
              result.panRight_ = panRight_;
              to_bitField2_ |= 0x00004000;
            }
            if (((from_bitField2_ & 0x00020000) != 0)) {
              result.compressor_ = compressor_;
              to_bitField2_ |= 0x00008000;
            }
            if (((from_bitField2_ & 0x00040000) != 0)) {
              result.pitchFactor_ = pitchFactor_;
              to_bitField2_ |= 0x00010000;
            }
            if (((from_bitField2_ & 0x00080000) != 0)) {
              to_bitField2_ |= 0x00020000;
            }
            result.clipName_ = clipName_;
            if (((from_bitField2_ & 0x00100000) != 0)) {
              to_bitField2_ |= 0x00040000;
            }
            result.iosMediaAssetId_ = iosMediaAssetId_;
            if (((from_bitField2_ & 0x00200000) != 0)) {
              result.keepPitch_ = keepPitch_;
              to_bitField2_ |= 0x00080000;
            }
            if (((from_bitField2_ & 0x00400000) != 0)) {
              result.useIFrameOnly_ = useIFrameOnly_;
              to_bitField2_ |= 0x00100000;
            }
            if (((from_bitField2_ & 0x00800000) != 0)) {
              to_bitField2_ |= 0x00200000;
            }
            result.enhancedAudioFilter_ = enhancedAudioFilter_;
            if (((from_bitField2_ & 0x01000000) != 0)) {
              to_bitField2_ |= 0x00400000;
            }
            result.equalizer_ = equalizer_;
            if (((from_bitField2_ & 0x02000000) != 0)) {
              if (clipRangeBuilder_ == null) {
                result.clipRange_ = clipRange_;
              } else {
                result.clipRange_ = clipRangeBuilder_.build();
              }
              to_bitField2_ |= 0x00800000;
            }
            if (((from_bitField2_ & 0x04000000) != 0)) {
              to_bitField2_ |= 0x01000000;
            }
            result.reverb_ = reverb_;
            if (((from_bitField2_ & 0x08000000) != 0)) {
              if (colorAdjustmentBuilder_ == null) {
                result.colorAdjustment_ = colorAdjustment_;
              } else {
                result.colorAdjustment_ = colorAdjustmentBuilder_.build();
              }
              to_bitField2_ |= 0x02000000;
            }
            if (((from_bitField2_ & 0x10000000) != 0)) {
              if (colorFilterBuilder_ == null) {
                result.colorFilter_ = colorFilter_;
              } else {
                result.colorFilter_ = colorFilterBuilder_.build();
              }
              to_bitField2_ |= 0x04000000;
            }
            if (effectOptionBuilder_ == null) {
              if (((bitField2_ & 0x20000000) != 0)) {
                effectOption_ = java.util.Collections.unmodifiableList(effectOption_);
                bitField2_ = (bitField2_ & ~0x20000000);
              }
              result.effectOption_ = effectOption_;
            } else {
              result.effectOption_ = effectOptionBuilder_.build();
            }
            if (((from_bitField2_ & 0x40000000) != 0)) {
              result.includedClipRotation_ = includedClipRotation_;
              to_bitField2_ |= 0x08000000;
            }
            if (((from_bitField2_ & 0x80000000) != 0)) {
              result.uprightRotation_ = uprightRotation_;
              to_bitField2_ |= 0x10000000;
            }
            result.bitField0_ = to_bitField0_;
            result.bitField1_ = to_bitField1_;
            result.bitField2_ = to_bitField2_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip.getDefaultInstance()) return this;
            if (other.hasMediaPath()) {
              bitField0_ |= 0x00000001;
              mediaPath_ = other.mediaPath_;
              onChanged();
            }
            if (other.hasFaceBoundsLeft()) {
              setFaceBoundsLeft(other.getFaceBoundsLeft());
            }
            if (other.hasFaceBoundsTop()) {
              setFaceBoundsTop(other.getFaceBoundsTop());
            }
            if (other.hasFaceBoundsRight()) {
              setFaceBoundsRight(other.getFaceBoundsRight());
            }
            if (other.hasFaceBoundsBottom()) {
              setFaceBoundsBottom(other.getFaceBoundsBottom());
            }
            if (other.hasFaceBoundsSet()) {
              setFaceBoundsSet(other.getFaceBoundsSet());
            }
            if (other.hasCaptureFilename()) {
              bitField0_ |= 0x00000040;
              captureFilename_ = other.captureFilename_;
              onChanged();
            }
            if (other.hasEngineClipId()) {
              setEngineClipId(other.getEngineClipId());
            }
            if (other.hasAbstractCrop()) {
              setAbstractCrop(other.getAbstractCrop());
            }
            if (other.hasStartPositionLeft()) {
              setStartPositionLeft(other.getStartPositionLeft());
            }
            if (other.hasStartPositionBottom()) {
              setStartPositionBottom(other.getStartPositionBottom());
            }
            if (other.hasStartPositionRight()) {
              setStartPositionRight(other.getStartPositionRight());
            }
            if (other.hasStartPositionTop()) {
              setStartPositionTop(other.getStartPositionTop());
            }
            if (other.hasEndPositionLeft()) {
              setEndPositionLeft(other.getEndPositionLeft());
            }
            if (other.hasEndPositionBottom()) {
              setEndPositionBottom(other.getEndPositionBottom());
            }
            if (other.hasEndPositionRight()) {
              setEndPositionRight(other.getEndPositionRight());
            }
            if (other.hasEndPositionTop()) {
              setEndPositionTop(other.getEndPositionTop());
            }
            if (other.hasRotatedStartPositionLeft()) {
              setRotatedStartPositionLeft(other.getRotatedStartPositionLeft());
            }
            if (other.hasRotatedStartPositionBottom()) {
              setRotatedStartPositionBottom(other.getRotatedStartPositionBottom());
            }
            if (other.hasRotatedStartPositionRight()) {
              setRotatedStartPositionRight(other.getRotatedStartPositionRight());
            }
            if (other.hasRotatedStartPositionTop()) {
              setRotatedStartPositionTop(other.getRotatedStartPositionTop());
            }
            if (other.hasRotatedEndPositionLeft()) {
              setRotatedEndPositionLeft(other.getRotatedEndPositionLeft());
            }
            if (other.hasRotatedEndPositionBottom()) {
              setRotatedEndPositionBottom(other.getRotatedEndPositionBottom());
            }
            if (other.hasRotatedEndPositionRight()) {
              setRotatedEndPositionRight(other.getRotatedEndPositionRight());
            }
            if (other.hasRotatedEndPositionTop()) {
              setRotatedEndPositionTop(other.getRotatedEndPositionTop());
            }
            if (other.hasRotation()) {
              setRotation(other.getRotation());
            }
            if (other.hasFliph()) {
              setFliph(other.getFliph());
            }
            if (other.hasFlipv()) {
              setFlipv(other.getFlipv());
            }
            if (other.hasDiffAvDuration()) {
              setDiffAvDuration(other.getDiffAvDuration());
            }
            if (other.hasTrimTimeStart()) {
              setTrimTimeStart(other.getTrimTimeStart());
            }
            if (other.hasTrimTimeEnd()) {
              setTrimTimeEnd(other.getTrimTimeEnd());
            }
            if (other.hasTrimmedDuration()) {
              setTrimmedDuration(other.getTrimmedDuration());
            }
            if (other.hasPreTrimmedDuration()) {
              setPreTrimmedDuration(other.getPreTrimmedDuration());
            }
            if (other.hasTitleEffectId()) {
              bitField1_ |= 0x00000002;
              titleEffectId_ = other.titleEffectId_;
              onChanged();
            }
            if (other.hasTitleStartTime()) {
              setTitleStartTime(other.getTitleStartTime());
            }
            if (other.hasTitleEndTime()) {
              setTitleEndTime(other.getTitleEndTime());
            }
            if (other.hasDuration()) {
              setDuration(other.getDuration());
            }
            if (other.hasAudioDuration()) {
              setAudioDuration(other.getAudioDuration());
            }
            if (other.hasVideoDuration()) {
              setVideoDuration(other.getVideoDuration());
            }
            if (other.hasStartOverlap()) {
              setStartOverlap(other.getStartOverlap());
            }
            if (other.hasEndOverlap()) {
              setEndOverlap(other.getEndOverlap());
            }
            if (other.hasWidth()) {
              setWidth(other.getWidth());
            }
            if (other.hasHeight()) {
              setHeight(other.getHeight());
            }
            if (other.hasOriginalWidth()) {
              setOriginalWidth(other.getOriginalWidth());
            }
            if (other.hasOriginalHeight()) {
              setOriginalHeight(other.getOriginalHeight());
            }
            if (other.hasClipVolume()) {
              setClipVolume(other.getClipVolume());
            }
            if (other.hasMusicVolume()) {
              setMusicVolume(other.getMusicVolume());
            }
            if (other.hasTitleStyle()) {
              setTitleStyle(other.getTitleStyle());
            }
            if (other.hasIsImage()) {
              setIsImage(other.getIsImage());
            }
            if (other.hasMuteAudio()) {
              setMuteAudio(other.getMuteAudio());
            }
            if (other.hasMuteMusic()) {
              setMuteMusic(other.getMuteMusic());
            }
            if (other.hasHasAudio()) {
              setHasAudio(other.getHasAudio());
            }
            if (other.hasHasVideo()) {
              setHasVideo(other.getHasVideo());
            }
            if (other.hasThumbPath()) {
              bitField1_ |= 0x00200000;
              thumbPath_ = other.thumbPath_;
              onChanged();
            }
            if (other.hasTransitionItemUuidLsb()) {
              setTransitionItemUuidLsb(other.getTransitionItemUuidLsb());
            }
            if (other.hasTransitionItemUuidMsb()) {
              setTransitionItemUuidMsb(other.getTransitionItemUuidMsb());
            }
            if (other.hasUnattachedTransition()) {
              mergeUnattachedTransition(other.getUnattachedTransition());
            }
            if (other.hasBrightness()) {
              setBrightness(other.getBrightness());
            }
            if (other.hasContrast()) {
              setContrast(other.getContrast());
            }
            if (other.hasSaturation()) {
              setSaturation(other.getSaturation());
            }
            if (other.hasTintcolor()) {
              setTintcolor(other.getTintcolor());
            }
            if (other.hasEffectStartTime()) {
              setEffectStartTime(other.getEffectStartTime());
            }
            if (other.hasEffectEndTime()) {
              setEffectEndTime(other.getEffectEndTime());
            }
            if (other.hasStartMatrix()) {
              mergeStartMatrix(other.getStartMatrix());
            }
            if (other.hasEndMatrix()) {
              mergeEndMatrix(other.getEndMatrix());
            }
            if (other.hasAutoThemeEffect()) {
              setAutoThemeEffect(other.getAutoThemeEffect());
            }
            if (!other.volumeEnvelopeTime_.isEmpty()) {
              if (volumeEnvelopeTime_.isEmpty()) {
                volumeEnvelopeTime_ = other.volumeEnvelopeTime_;
                bitField2_ = (bitField2_ & ~0x00000004);
              } else {
                ensureVolumeEnvelopeTimeIsMutable();
                volumeEnvelopeTime_.addAll(other.volumeEnvelopeTime_);
              }
              onChanged();
            }
            if (!other.volumeEnvelopeLevel_.isEmpty()) {
              if (volumeEnvelopeLevel_.isEmpty()) {
                volumeEnvelopeLevel_ = other.volumeEnvelopeLevel_;
                bitField2_ = (bitField2_ & ~0x00000008);
              } else {
                ensureVolumeEnvelopeLevelIsMutable();
                volumeEnvelopeLevel_.addAll(other.volumeEnvelopeLevel_);
              }
              onChanged();
            }
            if (other.hasClipWidth()) {
              setClipWidth(other.getClipWidth());
            }
            if (other.hasPlaybackSpeed()) {
              setPlaybackSpeed(other.getPlaybackSpeed());
            }
            if (other.hasColorEffect()) {
              mergeColorEffect(other.getColorEffect());
            }
            if (other.hasEffectOptions()) {
              mergeEffectOptions(other.getEffectOptions());
            }
            if (other.hasTranscodeApproved()) {
              setTranscodeApproved(other.getTranscodeApproved());
            }
            if (other.hasClipState()) {
              setClipState(other.getClipState());
            }
            if (other.hasMediaMsid()) {
              bitField2_ |= 0x00000400;
              mediaMsid_ = other.mediaMsid_;
              onChanged();
            }
            if (other.hasCropLink()) {
              setCropLink(other.getCropLink());
            }
            if (other.hasIsReverse()) {
              setIsReverse(other.getIsReverse());
            }
            if (other.hasVoiceChanger()) {
              setVoiceChanger(other.getVoiceChanger());
            }
            if (other.hasVignette()) {
              setVignette(other.getVignette());
            }
            if (other.hasPanLeft()) {
              setPanLeft(other.getPanLeft());
            }
            if (other.hasPanRight()) {
              setPanRight(other.getPanRight());
            }
            if (other.hasCompressor()) {
              setCompressor(other.getCompressor());
            }
            if (other.hasPitchFactor()) {
              setPitchFactor(other.getPitchFactor());
            }
            if (other.hasClipName()) {
              bitField2_ |= 0x00080000;
              clipName_ = other.clipName_;
              onChanged();
            }
            if (other.hasIosMediaAssetId()) {
              bitField2_ |= 0x00100000;
              iosMediaAssetId_ = other.iosMediaAssetId_;
              onChanged();
            }
            if (other.hasKeepPitch()) {
              setKeepPitch(other.getKeepPitch());
            }
            if (other.hasUseIFrameOnly()) {
              setUseIFrameOnly(other.getUseIFrameOnly());
            }
            if (other.hasEnhancedAudioFilter()) {
              bitField2_ |= 0x00800000;
              enhancedAudioFilter_ = other.enhancedAudioFilter_;
              onChanged();
            }
            if (other.hasEqualizer()) {
              bitField2_ |= 0x01000000;
              equalizer_ = other.equalizer_;
              onChanged();
            }
            if (other.hasClipRange()) {
              mergeClipRange(other.getClipRange());
            }
            if (other.hasReverb()) {
              bitField2_ |= 0x04000000;
              reverb_ = other.reverb_;
              onChanged();
            }
            if (other.hasColorAdjustment()) {
              mergeColorAdjustment(other.getColorAdjustment());
            }
            if (other.hasColorFilter()) {
              mergeColorFilter(other.getColorFilter());
            }
            if (effectOptionBuilder_ == null) {
              if (!other.effectOption_.isEmpty()) {
                if (effectOption_.isEmpty()) {
                  effectOption_ = other.effectOption_;
                  bitField2_ = (bitField2_ & ~0x20000000);
                } else {
                  ensureEffectOptionIsMutable();
                  effectOption_.addAll(other.effectOption_);
                }
                onChanged();
              }
            } else {
              if (!other.effectOption_.isEmpty()) {
                if (effectOptionBuilder_.isEmpty()) {
                  effectOptionBuilder_.dispose();
                  effectOptionBuilder_ = null;
                  effectOption_ = other.effectOption_;
                  bitField2_ = (bitField2_ & ~0x20000000);
                  effectOptionBuilder_ = 
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                       getEffectOptionFieldBuilder() : null;
                } else {
                  effectOptionBuilder_.addAllMessages(other.effectOption_);
                }
              }
            }
            if (other.hasIncludedClipRotation()) {
              setIncludedClipRotation(other.getIncludedClipRotation());
            }
            if (other.hasUprightRotation()) {
              setUprightRotation(other.getUprightRotation());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;
          private int bitField1_;
          private int bitField2_;

          private java.lang.Object mediaPath_ = "";
          /**
           * <pre>
           * Path to the original file (image or video)
           * </pre>
           *
           * <code>optional string media_path = 153;</code>
           * @return Whether the mediaPath field is set.
           */
          public boolean hasMediaPath() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <pre>
           * Path to the original file (image or video)
           * </pre>
           *
           * <code>optional string media_path = 153;</code>
           * @return The mediaPath.
           */
          public java.lang.String getMediaPath() {
            java.lang.Object ref = mediaPath_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                mediaPath_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Path to the original file (image or video)
           * </pre>
           *
           * <code>optional string media_path = 153;</code>
           * @return The bytes for mediaPath.
           */
          public com.google.protobuf.ByteString
              getMediaPathBytes() {
            java.lang.Object ref = mediaPath_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              mediaPath_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Path to the original file (image or video)
           * </pre>
           *
           * <code>optional string media_path = 153;</code>
           * @param value The mediaPath to set.
           * @return This builder for chaining.
           */
          public Builder setMediaPath(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            mediaPath_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Path to the original file (image or video)
           * </pre>
           *
           * <code>optional string media_path = 153;</code>
           * @return This builder for chaining.
           */
          public Builder clearMediaPath() {
            bitField0_ = (bitField0_ & ~0x00000001);
            mediaPath_ = getDefaultInstance().getMediaPath();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Path to the original file (image or video)
           * </pre>
           *
           * <code>optional string media_path = 153;</code>
           * @param value The bytes for mediaPath to set.
           * @return This builder for chaining.
           */
          public Builder setMediaPathBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            mediaPath_ = value;
            onChanged();
            return this;
          }

          private float faceBoundsLeft_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float face_bounds_left = 100;</code>
           * @return Whether the faceBoundsLeft field is set.
           */
          @java.lang.Override
          public boolean hasFaceBoundsLeft() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float face_bounds_left = 100;</code>
           * @return The faceBoundsLeft.
           */
          @java.lang.Override
          public float getFaceBoundsLeft() {
            return faceBoundsLeft_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float face_bounds_left = 100;</code>
           * @param value The faceBoundsLeft to set.
           * @return This builder for chaining.
           */
          public Builder setFaceBoundsLeft(float value) {
            bitField0_ |= 0x00000002;
            faceBoundsLeft_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float face_bounds_left = 100;</code>
           * @return This builder for chaining.
           */
          public Builder clearFaceBoundsLeft() {
            bitField0_ = (bitField0_ & ~0x00000002);
            faceBoundsLeft_ = 0F;
            onChanged();
            return this;
          }

          private float faceBoundsTop_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float face_bounds_top = 101;</code>
           * @return Whether the faceBoundsTop field is set.
           */
          @java.lang.Override
          public boolean hasFaceBoundsTop() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float face_bounds_top = 101;</code>
           * @return The faceBoundsTop.
           */
          @java.lang.Override
          public float getFaceBoundsTop() {
            return faceBoundsTop_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float face_bounds_top = 101;</code>
           * @param value The faceBoundsTop to set.
           * @return This builder for chaining.
           */
          public Builder setFaceBoundsTop(float value) {
            bitField0_ |= 0x00000004;
            faceBoundsTop_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float face_bounds_top = 101;</code>
           * @return This builder for chaining.
           */
          public Builder clearFaceBoundsTop() {
            bitField0_ = (bitField0_ & ~0x00000004);
            faceBoundsTop_ = 0F;
            onChanged();
            return this;
          }

          private float faceBoundsRight_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float face_bounds_right = 102;</code>
           * @return Whether the faceBoundsRight field is set.
           */
          @java.lang.Override
          public boolean hasFaceBoundsRight() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float face_bounds_right = 102;</code>
           * @return The faceBoundsRight.
           */
          @java.lang.Override
          public float getFaceBoundsRight() {
            return faceBoundsRight_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float face_bounds_right = 102;</code>
           * @param value The faceBoundsRight to set.
           * @return This builder for chaining.
           */
          public Builder setFaceBoundsRight(float value) {
            bitField0_ |= 0x00000008;
            faceBoundsRight_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float face_bounds_right = 102;</code>
           * @return This builder for chaining.
           */
          public Builder clearFaceBoundsRight() {
            bitField0_ = (bitField0_ & ~0x00000008);
            faceBoundsRight_ = 0F;
            onChanged();
            return this;
          }

          private float faceBoundsBottom_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float face_bounds_bottom = 103;</code>
           * @return Whether the faceBoundsBottom field is set.
           */
          @java.lang.Override
          public boolean hasFaceBoundsBottom() {
            return ((bitField0_ & 0x00000010) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float face_bounds_bottom = 103;</code>
           * @return The faceBoundsBottom.
           */
          @java.lang.Override
          public float getFaceBoundsBottom() {
            return faceBoundsBottom_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float face_bounds_bottom = 103;</code>
           * @param value The faceBoundsBottom to set.
           * @return This builder for chaining.
           */
          public Builder setFaceBoundsBottom(float value) {
            bitField0_ |= 0x00000010;
            faceBoundsBottom_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float face_bounds_bottom = 103;</code>
           * @return This builder for chaining.
           */
          public Builder clearFaceBoundsBottom() {
            bitField0_ = (bitField0_ & ~0x00000010);
            faceBoundsBottom_ = 0F;
            onChanged();
            return this;
          }

          private boolean faceBoundsSet_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool face_bounds_set = 104;</code>
           * @return Whether the faceBoundsSet field is set.
           */
          @java.lang.Override
          public boolean hasFaceBoundsSet() {
            return ((bitField0_ & 0x00000020) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool face_bounds_set = 104;</code>
           * @return The faceBoundsSet.
           */
          @java.lang.Override
          public boolean getFaceBoundsSet() {
            return faceBoundsSet_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool face_bounds_set = 104;</code>
           * @param value The faceBoundsSet to set.
           * @return This builder for chaining.
           */
          public Builder setFaceBoundsSet(boolean value) {
            bitField0_ |= 0x00000020;
            faceBoundsSet_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool face_bounds_set = 104;</code>
           * @return This builder for chaining.
           */
          public Builder clearFaceBoundsSet() {
            bitField0_ = (bitField0_ & ~0x00000020);
            faceBoundsSet_ = false;
            onChanged();
            return this;
          }

          private java.lang.Object captureFilename_ = "";
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string capture_filename = 105;</code>
           * @return Whether the captureFilename field is set.
           */
          public boolean hasCaptureFilename() {
            return ((bitField0_ & 0x00000040) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string capture_filename = 105;</code>
           * @return The captureFilename.
           */
          public java.lang.String getCaptureFilename() {
            java.lang.Object ref = captureFilename_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                captureFilename_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string capture_filename = 105;</code>
           * @return The bytes for captureFilename.
           */
          public com.google.protobuf.ByteString
              getCaptureFilenameBytes() {
            java.lang.Object ref = captureFilename_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              captureFilename_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string capture_filename = 105;</code>
           * @param value The captureFilename to set.
           * @return This builder for chaining.
           */
          public Builder setCaptureFilename(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
            captureFilename_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string capture_filename = 105;</code>
           * @return This builder for chaining.
           */
          public Builder clearCaptureFilename() {
            bitField0_ = (bitField0_ & ~0x00000040);
            captureFilename_ = getDefaultInstance().getCaptureFilename();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string capture_filename = 105;</code>
           * @param value The bytes for captureFilename to set.
           * @return This builder for chaining.
           */
          public Builder setCaptureFilenameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
            captureFilename_ = value;
            onChanged();
            return this;
          }

          private int engineClipId_ ;
          /**
           * <pre>
           * Unique identifier for this clip (within the project) used to identify
           * this clip to the NexEditor engine.
           * </pre>
           *
           * <code>optional int32 engine_clip_id = 106;</code>
           * @return Whether the engineClipId field is set.
           */
          @java.lang.Override
          public boolean hasEngineClipId() {
            return ((bitField0_ & 0x00000080) != 0);
          }
          /**
           * <pre>
           * Unique identifier for this clip (within the project) used to identify
           * this clip to the NexEditor engine.
           * </pre>
           *
           * <code>optional int32 engine_clip_id = 106;</code>
           * @return The engineClipId.
           */
          @java.lang.Override
          public int getEngineClipId() {
            return engineClipId_;
          }
          /**
           * <pre>
           * Unique identifier for this clip (within the project) used to identify
           * this clip to the NexEditor engine.
           * </pre>
           *
           * <code>optional int32 engine_clip_id = 106;</code>
           * @param value The engineClipId to set.
           * @return This builder for chaining.
           */
          public Builder setEngineClipId(int value) {
            bitField0_ |= 0x00000080;
            engineClipId_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Unique identifier for this clip (within the project) used to identify
           * this clip to the NexEditor engine.
           * </pre>
           *
           * <code>optional int32 engine_clip_id = 106;</code>
           * @return This builder for chaining.
           */
          public Builder clearEngineClipId() {
            bitField0_ = (bitField0_ & ~0x00000080);
            engineClipId_ = 0;
            onChanged();
            return this;
          }

          private boolean abstractCrop_ ;
          /**
           * <pre>
           * ==== Cropping =============================================
           * Specifyies cropping of the video or image frame.
           * Sepearate start and end cropping can be set, which results
           * in an animated crop (for images, this is usually called the
           * "Ken Burns" effect; for video clips, the term "Digital Zoom"
           * is often used).
           * Because the width and height (and therefore aspect ratio) of
           * a clip are different when it is roated (except for perfectly
           * square images), for simplicity, rotated start and end positions
           * are stored separately and used when the clip is rotated at
           * 90-degree or 270-degree angles.
           * The start and end crop positions are stored in normalized
           * coordinates ("abstract" means normalized in this case).
           * Coordinates are normalized to the range 0,0 (top-left corner
           * of the image or video clip) through 100000 (bottom-right corner
           * of the image or video clip).  This means that if the crop area
           * extends outside the video (for example, black bars are shown)
           * at least some coordinates will be outside the 0~100000 range.
           * Note that for old projects, normalized cooridnates were not
           * used (this caused a problem when a JPEG was downsampled as
           * it was loaded, because the downsampler in the UI and engine
           * were different).  New projects always use normalized cooridnates.
           * Check abstract_crop to see if normalized  coordinates
           * are used.
           * </pre>
           *
           * <code>optional bool abstract_crop = 107;</code>
           * @return Whether the abstractCrop field is set.
           */
          @java.lang.Override
          public boolean hasAbstractCrop() {
            return ((bitField0_ & 0x00000100) != 0);
          }
          /**
           * <pre>
           * ==== Cropping =============================================
           * Specifyies cropping of the video or image frame.
           * Sepearate start and end cropping can be set, which results
           * in an animated crop (for images, this is usually called the
           * "Ken Burns" effect; for video clips, the term "Digital Zoom"
           * is often used).
           * Because the width and height (and therefore aspect ratio) of
           * a clip are different when it is roated (except for perfectly
           * square images), for simplicity, rotated start and end positions
           * are stored separately and used when the clip is rotated at
           * 90-degree or 270-degree angles.
           * The start and end crop positions are stored in normalized
           * coordinates ("abstract" means normalized in this case).
           * Coordinates are normalized to the range 0,0 (top-left corner
           * of the image or video clip) through 100000 (bottom-right corner
           * of the image or video clip).  This means that if the crop area
           * extends outside the video (for example, black bars are shown)
           * at least some coordinates will be outside the 0~100000 range.
           * Note that for old projects, normalized cooridnates were not
           * used (this caused a problem when a JPEG was downsampled as
           * it was loaded, because the downsampler in the UI and engine
           * were different).  New projects always use normalized cooridnates.
           * Check abstract_crop to see if normalized  coordinates
           * are used.
           * </pre>
           *
           * <code>optional bool abstract_crop = 107;</code>
           * @return The abstractCrop.
           */
          @java.lang.Override
          public boolean getAbstractCrop() {
            return abstractCrop_;
          }
          /**
           * <pre>
           * ==== Cropping =============================================
           * Specifyies cropping of the video or image frame.
           * Sepearate start and end cropping can be set, which results
           * in an animated crop (for images, this is usually called the
           * "Ken Burns" effect; for video clips, the term "Digital Zoom"
           * is often used).
           * Because the width and height (and therefore aspect ratio) of
           * a clip are different when it is roated (except for perfectly
           * square images), for simplicity, rotated start and end positions
           * are stored separately and used when the clip is rotated at
           * 90-degree or 270-degree angles.
           * The start and end crop positions are stored in normalized
           * coordinates ("abstract" means normalized in this case).
           * Coordinates are normalized to the range 0,0 (top-left corner
           * of the image or video clip) through 100000 (bottom-right corner
           * of the image or video clip).  This means that if the crop area
           * extends outside the video (for example, black bars are shown)
           * at least some coordinates will be outside the 0~100000 range.
           * Note that for old projects, normalized cooridnates were not
           * used (this caused a problem when a JPEG was downsampled as
           * it was loaded, because the downsampler in the UI and engine
           * were different).  New projects always use normalized cooridnates.
           * Check abstract_crop to see if normalized  coordinates
           * are used.
           * </pre>
           *
           * <code>optional bool abstract_crop = 107;</code>
           * @param value The abstractCrop to set.
           * @return This builder for chaining.
           */
          public Builder setAbstractCrop(boolean value) {
            bitField0_ |= 0x00000100;
            abstractCrop_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * ==== Cropping =============================================
           * Specifyies cropping of the video or image frame.
           * Sepearate start and end cropping can be set, which results
           * in an animated crop (for images, this is usually called the
           * "Ken Burns" effect; for video clips, the term "Digital Zoom"
           * is often used).
           * Because the width and height (and therefore aspect ratio) of
           * a clip are different when it is roated (except for perfectly
           * square images), for simplicity, rotated start and end positions
           * are stored separately and used when the clip is rotated at
           * 90-degree or 270-degree angles.
           * The start and end crop positions are stored in normalized
           * coordinates ("abstract" means normalized in this case).
           * Coordinates are normalized to the range 0,0 (top-left corner
           * of the image or video clip) through 100000 (bottom-right corner
           * of the image or video clip).  This means that if the crop area
           * extends outside the video (for example, black bars are shown)
           * at least some coordinates will be outside the 0~100000 range.
           * Note that for old projects, normalized cooridnates were not
           * used (this caused a problem when a JPEG was downsampled as
           * it was loaded, because the downsampler in the UI and engine
           * were different).  New projects always use normalized cooridnates.
           * Check abstract_crop to see if normalized  coordinates
           * are used.
           * </pre>
           *
           * <code>optional bool abstract_crop = 107;</code>
           * @return This builder for chaining.
           */
          public Builder clearAbstractCrop() {
            bitField0_ = (bitField0_ & ~0x00000100);
            abstractCrop_ = false;
            onChanged();
            return this;
          }

          private int startPositionLeft_ ;
          /**
           * <code>optional int32 start_position_left = 108;</code>
           * @return Whether the startPositionLeft field is set.
           */
          @java.lang.Override
          public boolean hasStartPositionLeft() {
            return ((bitField0_ & 0x00000200) != 0);
          }
          /**
           * <code>optional int32 start_position_left = 108;</code>
           * @return The startPositionLeft.
           */
          @java.lang.Override
          public int getStartPositionLeft() {
            return startPositionLeft_;
          }
          /**
           * <code>optional int32 start_position_left = 108;</code>
           * @param value The startPositionLeft to set.
           * @return This builder for chaining.
           */
          public Builder setStartPositionLeft(int value) {
            bitField0_ |= 0x00000200;
            startPositionLeft_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 start_position_left = 108;</code>
           * @return This builder for chaining.
           */
          public Builder clearStartPositionLeft() {
            bitField0_ = (bitField0_ & ~0x00000200);
            startPositionLeft_ = 0;
            onChanged();
            return this;
          }

          private int startPositionBottom_ ;
          /**
           * <code>optional int32 start_position_bottom = 109;</code>
           * @return Whether the startPositionBottom field is set.
           */
          @java.lang.Override
          public boolean hasStartPositionBottom() {
            return ((bitField0_ & 0x00000400) != 0);
          }
          /**
           * <code>optional int32 start_position_bottom = 109;</code>
           * @return The startPositionBottom.
           */
          @java.lang.Override
          public int getStartPositionBottom() {
            return startPositionBottom_;
          }
          /**
           * <code>optional int32 start_position_bottom = 109;</code>
           * @param value The startPositionBottom to set.
           * @return This builder for chaining.
           */
          public Builder setStartPositionBottom(int value) {
            bitField0_ |= 0x00000400;
            startPositionBottom_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 start_position_bottom = 109;</code>
           * @return This builder for chaining.
           */
          public Builder clearStartPositionBottom() {
            bitField0_ = (bitField0_ & ~0x00000400);
            startPositionBottom_ = 0;
            onChanged();
            return this;
          }

          private int startPositionRight_ ;
          /**
           * <code>optional int32 start_position_right = 110;</code>
           * @return Whether the startPositionRight field is set.
           */
          @java.lang.Override
          public boolean hasStartPositionRight() {
            return ((bitField0_ & 0x00000800) != 0);
          }
          /**
           * <code>optional int32 start_position_right = 110;</code>
           * @return The startPositionRight.
           */
          @java.lang.Override
          public int getStartPositionRight() {
            return startPositionRight_;
          }
          /**
           * <code>optional int32 start_position_right = 110;</code>
           * @param value The startPositionRight to set.
           * @return This builder for chaining.
           */
          public Builder setStartPositionRight(int value) {
            bitField0_ |= 0x00000800;
            startPositionRight_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 start_position_right = 110;</code>
           * @return This builder for chaining.
           */
          public Builder clearStartPositionRight() {
            bitField0_ = (bitField0_ & ~0x00000800);
            startPositionRight_ = 0;
            onChanged();
            return this;
          }

          private int startPositionTop_ ;
          /**
           * <code>optional int32 start_position_top = 111;</code>
           * @return Whether the startPositionTop field is set.
           */
          @java.lang.Override
          public boolean hasStartPositionTop() {
            return ((bitField0_ & 0x00001000) != 0);
          }
          /**
           * <code>optional int32 start_position_top = 111;</code>
           * @return The startPositionTop.
           */
          @java.lang.Override
          public int getStartPositionTop() {
            return startPositionTop_;
          }
          /**
           * <code>optional int32 start_position_top = 111;</code>
           * @param value The startPositionTop to set.
           * @return This builder for chaining.
           */
          public Builder setStartPositionTop(int value) {
            bitField0_ |= 0x00001000;
            startPositionTop_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 start_position_top = 111;</code>
           * @return This builder for chaining.
           */
          public Builder clearStartPositionTop() {
            bitField0_ = (bitField0_ & ~0x00001000);
            startPositionTop_ = 0;
            onChanged();
            return this;
          }

          private int endPositionLeft_ ;
          /**
           * <code>optional int32 end_position_left = 112;</code>
           * @return Whether the endPositionLeft field is set.
           */
          @java.lang.Override
          public boolean hasEndPositionLeft() {
            return ((bitField0_ & 0x00002000) != 0);
          }
          /**
           * <code>optional int32 end_position_left = 112;</code>
           * @return The endPositionLeft.
           */
          @java.lang.Override
          public int getEndPositionLeft() {
            return endPositionLeft_;
          }
          /**
           * <code>optional int32 end_position_left = 112;</code>
           * @param value The endPositionLeft to set.
           * @return This builder for chaining.
           */
          public Builder setEndPositionLeft(int value) {
            bitField0_ |= 0x00002000;
            endPositionLeft_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 end_position_left = 112;</code>
           * @return This builder for chaining.
           */
          public Builder clearEndPositionLeft() {
            bitField0_ = (bitField0_ & ~0x00002000);
            endPositionLeft_ = 0;
            onChanged();
            return this;
          }

          private int endPositionBottom_ ;
          /**
           * <code>optional int32 end_position_bottom = 113;</code>
           * @return Whether the endPositionBottom field is set.
           */
          @java.lang.Override
          public boolean hasEndPositionBottom() {
            return ((bitField0_ & 0x00004000) != 0);
          }
          /**
           * <code>optional int32 end_position_bottom = 113;</code>
           * @return The endPositionBottom.
           */
          @java.lang.Override
          public int getEndPositionBottom() {
            return endPositionBottom_;
          }
          /**
           * <code>optional int32 end_position_bottom = 113;</code>
           * @param value The endPositionBottom to set.
           * @return This builder for chaining.
           */
          public Builder setEndPositionBottom(int value) {
            bitField0_ |= 0x00004000;
            endPositionBottom_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 end_position_bottom = 113;</code>
           * @return This builder for chaining.
           */
          public Builder clearEndPositionBottom() {
            bitField0_ = (bitField0_ & ~0x00004000);
            endPositionBottom_ = 0;
            onChanged();
            return this;
          }

          private int endPositionRight_ ;
          /**
           * <code>optional int32 end_position_right = 114;</code>
           * @return Whether the endPositionRight field is set.
           */
          @java.lang.Override
          public boolean hasEndPositionRight() {
            return ((bitField0_ & 0x00008000) != 0);
          }
          /**
           * <code>optional int32 end_position_right = 114;</code>
           * @return The endPositionRight.
           */
          @java.lang.Override
          public int getEndPositionRight() {
            return endPositionRight_;
          }
          /**
           * <code>optional int32 end_position_right = 114;</code>
           * @param value The endPositionRight to set.
           * @return This builder for chaining.
           */
          public Builder setEndPositionRight(int value) {
            bitField0_ |= 0x00008000;
            endPositionRight_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 end_position_right = 114;</code>
           * @return This builder for chaining.
           */
          public Builder clearEndPositionRight() {
            bitField0_ = (bitField0_ & ~0x00008000);
            endPositionRight_ = 0;
            onChanged();
            return this;
          }

          private int endPositionTop_ ;
          /**
           * <code>optional int32 end_position_top = 115;</code>
           * @return Whether the endPositionTop field is set.
           */
          @java.lang.Override
          public boolean hasEndPositionTop() {
            return ((bitField0_ & 0x00010000) != 0);
          }
          /**
           * <code>optional int32 end_position_top = 115;</code>
           * @return The endPositionTop.
           */
          @java.lang.Override
          public int getEndPositionTop() {
            return endPositionTop_;
          }
          /**
           * <code>optional int32 end_position_top = 115;</code>
           * @param value The endPositionTop to set.
           * @return This builder for chaining.
           */
          public Builder setEndPositionTop(int value) {
            bitField0_ |= 0x00010000;
            endPositionTop_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 end_position_top = 115;</code>
           * @return This builder for chaining.
           */
          public Builder clearEndPositionTop() {
            bitField0_ = (bitField0_ & ~0x00010000);
            endPositionTop_ = 0;
            onChanged();
            return this;
          }

          private int rotatedStartPositionLeft_ ;
          /**
           * <code>optional int32 rotated_start_position_left = 116;</code>
           * @return Whether the rotatedStartPositionLeft field is set.
           */
          @java.lang.Override
          public boolean hasRotatedStartPositionLeft() {
            return ((bitField0_ & 0x00020000) != 0);
          }
          /**
           * <code>optional int32 rotated_start_position_left = 116;</code>
           * @return The rotatedStartPositionLeft.
           */
          @java.lang.Override
          public int getRotatedStartPositionLeft() {
            return rotatedStartPositionLeft_;
          }
          /**
           * <code>optional int32 rotated_start_position_left = 116;</code>
           * @param value The rotatedStartPositionLeft to set.
           * @return This builder for chaining.
           */
          public Builder setRotatedStartPositionLeft(int value) {
            bitField0_ |= 0x00020000;
            rotatedStartPositionLeft_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 rotated_start_position_left = 116;</code>
           * @return This builder for chaining.
           */
          public Builder clearRotatedStartPositionLeft() {
            bitField0_ = (bitField0_ & ~0x00020000);
            rotatedStartPositionLeft_ = 0;
            onChanged();
            return this;
          }

          private int rotatedStartPositionBottom_ ;
          /**
           * <code>optional int32 rotated_start_position_bottom = 117;</code>
           * @return Whether the rotatedStartPositionBottom field is set.
           */
          @java.lang.Override
          public boolean hasRotatedStartPositionBottom() {
            return ((bitField0_ & 0x00040000) != 0);
          }
          /**
           * <code>optional int32 rotated_start_position_bottom = 117;</code>
           * @return The rotatedStartPositionBottom.
           */
          @java.lang.Override
          public int getRotatedStartPositionBottom() {
            return rotatedStartPositionBottom_;
          }
          /**
           * <code>optional int32 rotated_start_position_bottom = 117;</code>
           * @param value The rotatedStartPositionBottom to set.
           * @return This builder for chaining.
           */
          public Builder setRotatedStartPositionBottom(int value) {
            bitField0_ |= 0x00040000;
            rotatedStartPositionBottom_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 rotated_start_position_bottom = 117;</code>
           * @return This builder for chaining.
           */
          public Builder clearRotatedStartPositionBottom() {
            bitField0_ = (bitField0_ & ~0x00040000);
            rotatedStartPositionBottom_ = 0;
            onChanged();
            return this;
          }

          private int rotatedStartPositionRight_ ;
          /**
           * <code>optional int32 rotated_start_position_right = 118;</code>
           * @return Whether the rotatedStartPositionRight field is set.
           */
          @java.lang.Override
          public boolean hasRotatedStartPositionRight() {
            return ((bitField0_ & 0x00080000) != 0);
          }
          /**
           * <code>optional int32 rotated_start_position_right = 118;</code>
           * @return The rotatedStartPositionRight.
           */
          @java.lang.Override
          public int getRotatedStartPositionRight() {
            return rotatedStartPositionRight_;
          }
          /**
           * <code>optional int32 rotated_start_position_right = 118;</code>
           * @param value The rotatedStartPositionRight to set.
           * @return This builder for chaining.
           */
          public Builder setRotatedStartPositionRight(int value) {
            bitField0_ |= 0x00080000;
            rotatedStartPositionRight_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 rotated_start_position_right = 118;</code>
           * @return This builder for chaining.
           */
          public Builder clearRotatedStartPositionRight() {
            bitField0_ = (bitField0_ & ~0x00080000);
            rotatedStartPositionRight_ = 0;
            onChanged();
            return this;
          }

          private int rotatedStartPositionTop_ ;
          /**
           * <code>optional int32 rotated_start_position_top = 119;</code>
           * @return Whether the rotatedStartPositionTop field is set.
           */
          @java.lang.Override
          public boolean hasRotatedStartPositionTop() {
            return ((bitField0_ & 0x00100000) != 0);
          }
          /**
           * <code>optional int32 rotated_start_position_top = 119;</code>
           * @return The rotatedStartPositionTop.
           */
          @java.lang.Override
          public int getRotatedStartPositionTop() {
            return rotatedStartPositionTop_;
          }
          /**
           * <code>optional int32 rotated_start_position_top = 119;</code>
           * @param value The rotatedStartPositionTop to set.
           * @return This builder for chaining.
           */
          public Builder setRotatedStartPositionTop(int value) {
            bitField0_ |= 0x00100000;
            rotatedStartPositionTop_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 rotated_start_position_top = 119;</code>
           * @return This builder for chaining.
           */
          public Builder clearRotatedStartPositionTop() {
            bitField0_ = (bitField0_ & ~0x00100000);
            rotatedStartPositionTop_ = 0;
            onChanged();
            return this;
          }

          private int rotatedEndPositionLeft_ ;
          /**
           * <code>optional int32 rotated_end_position_left = 120;</code>
           * @return Whether the rotatedEndPositionLeft field is set.
           */
          @java.lang.Override
          public boolean hasRotatedEndPositionLeft() {
            return ((bitField0_ & 0x00200000) != 0);
          }
          /**
           * <code>optional int32 rotated_end_position_left = 120;</code>
           * @return The rotatedEndPositionLeft.
           */
          @java.lang.Override
          public int getRotatedEndPositionLeft() {
            return rotatedEndPositionLeft_;
          }
          /**
           * <code>optional int32 rotated_end_position_left = 120;</code>
           * @param value The rotatedEndPositionLeft to set.
           * @return This builder for chaining.
           */
          public Builder setRotatedEndPositionLeft(int value) {
            bitField0_ |= 0x00200000;
            rotatedEndPositionLeft_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 rotated_end_position_left = 120;</code>
           * @return This builder for chaining.
           */
          public Builder clearRotatedEndPositionLeft() {
            bitField0_ = (bitField0_ & ~0x00200000);
            rotatedEndPositionLeft_ = 0;
            onChanged();
            return this;
          }

          private int rotatedEndPositionBottom_ ;
          /**
           * <code>optional int32 rotated_end_position_bottom = 121;</code>
           * @return Whether the rotatedEndPositionBottom field is set.
           */
          @java.lang.Override
          public boolean hasRotatedEndPositionBottom() {
            return ((bitField0_ & 0x00400000) != 0);
          }
          /**
           * <code>optional int32 rotated_end_position_bottom = 121;</code>
           * @return The rotatedEndPositionBottom.
           */
          @java.lang.Override
          public int getRotatedEndPositionBottom() {
            return rotatedEndPositionBottom_;
          }
          /**
           * <code>optional int32 rotated_end_position_bottom = 121;</code>
           * @param value The rotatedEndPositionBottom to set.
           * @return This builder for chaining.
           */
          public Builder setRotatedEndPositionBottom(int value) {
            bitField0_ |= 0x00400000;
            rotatedEndPositionBottom_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 rotated_end_position_bottom = 121;</code>
           * @return This builder for chaining.
           */
          public Builder clearRotatedEndPositionBottom() {
            bitField0_ = (bitField0_ & ~0x00400000);
            rotatedEndPositionBottom_ = 0;
            onChanged();
            return this;
          }

          private int rotatedEndPositionRight_ ;
          /**
           * <code>optional int32 rotated_end_position_right = 122;</code>
           * @return Whether the rotatedEndPositionRight field is set.
           */
          @java.lang.Override
          public boolean hasRotatedEndPositionRight() {
            return ((bitField0_ & 0x00800000) != 0);
          }
          /**
           * <code>optional int32 rotated_end_position_right = 122;</code>
           * @return The rotatedEndPositionRight.
           */
          @java.lang.Override
          public int getRotatedEndPositionRight() {
            return rotatedEndPositionRight_;
          }
          /**
           * <code>optional int32 rotated_end_position_right = 122;</code>
           * @param value The rotatedEndPositionRight to set.
           * @return This builder for chaining.
           */
          public Builder setRotatedEndPositionRight(int value) {
            bitField0_ |= 0x00800000;
            rotatedEndPositionRight_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 rotated_end_position_right = 122;</code>
           * @return This builder for chaining.
           */
          public Builder clearRotatedEndPositionRight() {
            bitField0_ = (bitField0_ & ~0x00800000);
            rotatedEndPositionRight_ = 0;
            onChanged();
            return this;
          }

          private int rotatedEndPositionTop_ ;
          /**
           * <pre>
           * ==========================================================
           * </pre>
           *
           * <code>optional int32 rotated_end_position_top = 123;</code>
           * @return Whether the rotatedEndPositionTop field is set.
           */
          @java.lang.Override
          public boolean hasRotatedEndPositionTop() {
            return ((bitField0_ & 0x01000000) != 0);
          }
          /**
           * <pre>
           * ==========================================================
           * </pre>
           *
           * <code>optional int32 rotated_end_position_top = 123;</code>
           * @return The rotatedEndPositionTop.
           */
          @java.lang.Override
          public int getRotatedEndPositionTop() {
            return rotatedEndPositionTop_;
          }
          /**
           * <pre>
           * ==========================================================
           * </pre>
           *
           * <code>optional int32 rotated_end_position_top = 123;</code>
           * @param value The rotatedEndPositionTop to set.
           * @return This builder for chaining.
           */
          public Builder setRotatedEndPositionTop(int value) {
            bitField0_ |= 0x01000000;
            rotatedEndPositionTop_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * ==========================================================
           * </pre>
           *
           * <code>optional int32 rotated_end_position_top = 123;</code>
           * @return This builder for chaining.
           */
          public Builder clearRotatedEndPositionTop() {
            bitField0_ = (bitField0_ & ~0x01000000);
            rotatedEndPositionTop_ = 0;
            onChanged();
            return this;
          }

          private int rotation_ ;
          /**
           * <code>optional int32 rotation = 124;</code>
           * @return Whether the rotation field is set.
           */
          @java.lang.Override
          public boolean hasRotation() {
            return ((bitField0_ & 0x02000000) != 0);
          }
          /**
           * <code>optional int32 rotation = 124;</code>
           * @return The rotation.
           */
          @java.lang.Override
          public int getRotation() {
            return rotation_;
          }
          /**
           * <code>optional int32 rotation = 124;</code>
           * @param value The rotation to set.
           * @return This builder for chaining.
           */
          public Builder setRotation(int value) {
            bitField0_ |= 0x02000000;
            rotation_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 rotation = 124;</code>
           * @return This builder for chaining.
           */
          public Builder clearRotation() {
            bitField0_ = (bitField0_ & ~0x02000000);
            rotation_ = 0;
            onChanged();
            return this;
          }

          private boolean fliph_ ;
          /**
           * <code>optional bool fliph = 125;</code>
           * @return Whether the fliph field is set.
           */
          @java.lang.Override
          public boolean hasFliph() {
            return ((bitField0_ & 0x04000000) != 0);
          }
          /**
           * <code>optional bool fliph = 125;</code>
           * @return The fliph.
           */
          @java.lang.Override
          public boolean getFliph() {
            return fliph_;
          }
          /**
           * <code>optional bool fliph = 125;</code>
           * @param value The fliph to set.
           * @return This builder for chaining.
           */
          public Builder setFliph(boolean value) {
            bitField0_ |= 0x04000000;
            fliph_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool fliph = 125;</code>
           * @return This builder for chaining.
           */
          public Builder clearFliph() {
            bitField0_ = (bitField0_ & ~0x04000000);
            fliph_ = false;
            onChanged();
            return this;
          }

          private boolean flipv_ ;
          /**
           * <code>optional bool flipv = 126;</code>
           * @return Whether the flipv field is set.
           */
          @java.lang.Override
          public boolean hasFlipv() {
            return ((bitField0_ & 0x08000000) != 0);
          }
          /**
           * <code>optional bool flipv = 126;</code>
           * @return The flipv.
           */
          @java.lang.Override
          public boolean getFlipv() {
            return flipv_;
          }
          /**
           * <code>optional bool flipv = 126;</code>
           * @param value The flipv to set.
           * @return This builder for chaining.
           */
          public Builder setFlipv(boolean value) {
            bitField0_ |= 0x08000000;
            flipv_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool flipv = 126;</code>
           * @return This builder for chaining.
           */
          public Builder clearFlipv() {
            bitField0_ = (bitField0_ & ~0x08000000);
            flipv_ = false;
            onChanged();
            return this;
          }

          private int diffAvDuration_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 diff_av_duration = 127;</code>
           * @return Whether the diffAvDuration field is set.
           */
          @java.lang.Override
          public boolean hasDiffAvDuration() {
            return ((bitField0_ & 0x10000000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 diff_av_duration = 127;</code>
           * @return The diffAvDuration.
           */
          @java.lang.Override
          public int getDiffAvDuration() {
            return diffAvDuration_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 diff_av_duration = 127;</code>
           * @param value The diffAvDuration to set.
           * @return This builder for chaining.
           */
          public Builder setDiffAvDuration(int value) {
            bitField0_ |= 0x10000000;
            diffAvDuration_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 diff_av_duration = 127;</code>
           * @return This builder for chaining.
           */
          public Builder clearDiffAvDuration() {
            bitField0_ = (bitField0_ & ~0x10000000);
            diffAvDuration_ = 0;
            onChanged();
            return this;
          }

          private int trimTimeStart_ ;
          /**
           * <code>optional int32 trim_time_start = 128;</code>
           * @return Whether the trimTimeStart field is set.
           */
          @java.lang.Override
          public boolean hasTrimTimeStart() {
            return ((bitField0_ & 0x20000000) != 0);
          }
          /**
           * <code>optional int32 trim_time_start = 128;</code>
           * @return The trimTimeStart.
           */
          @java.lang.Override
          public int getTrimTimeStart() {
            return trimTimeStart_;
          }
          /**
           * <code>optional int32 trim_time_start = 128;</code>
           * @param value The trimTimeStart to set.
           * @return This builder for chaining.
           */
          public Builder setTrimTimeStart(int value) {
            bitField0_ |= 0x20000000;
            trimTimeStart_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 trim_time_start = 128;</code>
           * @return This builder for chaining.
           */
          public Builder clearTrimTimeStart() {
            bitField0_ = (bitField0_ & ~0x20000000);
            trimTimeStart_ = 0;
            onChanged();
            return this;
          }

          private int trimTimeEnd_ ;
          /**
           * <code>optional int32 trim_time_end = 129;</code>
           * @return Whether the trimTimeEnd field is set.
           */
          @java.lang.Override
          public boolean hasTrimTimeEnd() {
            return ((bitField0_ & 0x40000000) != 0);
          }
          /**
           * <code>optional int32 trim_time_end = 129;</code>
           * @return The trimTimeEnd.
           */
          @java.lang.Override
          public int getTrimTimeEnd() {
            return trimTimeEnd_;
          }
          /**
           * <code>optional int32 trim_time_end = 129;</code>
           * @param value The trimTimeEnd to set.
           * @return This builder for chaining.
           */
          public Builder setTrimTimeEnd(int value) {
            bitField0_ |= 0x40000000;
            trimTimeEnd_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 trim_time_end = 129;</code>
           * @return This builder for chaining.
           */
          public Builder clearTrimTimeEnd() {
            bitField0_ = (bitField0_ & ~0x40000000);
            trimTimeEnd_ = 0;
            onChanged();
            return this;
          }

          private int trimmedDuration_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 trimmed_duration = 130;</code>
           * @return Whether the trimmedDuration field is set.
           */
          @java.lang.Override
          public boolean hasTrimmedDuration() {
            return ((bitField0_ & 0x80000000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 trimmed_duration = 130;</code>
           * @return The trimmedDuration.
           */
          @java.lang.Override
          public int getTrimmedDuration() {
            return trimmedDuration_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 trimmed_duration = 130;</code>
           * @param value The trimmedDuration to set.
           * @return This builder for chaining.
           */
          public Builder setTrimmedDuration(int value) {
            bitField0_ |= 0x80000000;
            trimmedDuration_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 trimmed_duration = 130;</code>
           * @return This builder for chaining.
           */
          public Builder clearTrimmedDuration() {
            bitField0_ = (bitField0_ & ~0x80000000);
            trimmedDuration_ = 0;
            onChanged();
            return this;
          }

          private int preTrimmedDuration_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 pre_trimmed_duration = 131;</code>
           * @return Whether the preTrimmedDuration field is set.
           */
          @java.lang.Override
          public boolean hasPreTrimmedDuration() {
            return ((bitField1_ & 0x00000001) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 pre_trimmed_duration = 131;</code>
           * @return The preTrimmedDuration.
           */
          @java.lang.Override
          public int getPreTrimmedDuration() {
            return preTrimmedDuration_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 pre_trimmed_duration = 131;</code>
           * @param value The preTrimmedDuration to set.
           * @return This builder for chaining.
           */
          public Builder setPreTrimmedDuration(int value) {
            bitField1_ |= 0x00000001;
            preTrimmedDuration_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 pre_trimmed_duration = 131;</code>
           * @return This builder for chaining.
           */
          public Builder clearPreTrimmedDuration() {
            bitField1_ = (bitField1_ & ~0x00000001);
            preTrimmedDuration_ = 0;
            onChanged();
            return this;
          }

          private java.lang.Object titleEffectId_ = "";
          /**
           * <code>optional string title_effect_id = 132;</code>
           * @return Whether the titleEffectId field is set.
           */
          public boolean hasTitleEffectId() {
            return ((bitField1_ & 0x00000002) != 0);
          }
          /**
           * <code>optional string title_effect_id = 132;</code>
           * @return The titleEffectId.
           */
          public java.lang.String getTitleEffectId() {
            java.lang.Object ref = titleEffectId_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                titleEffectId_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string title_effect_id = 132;</code>
           * @return The bytes for titleEffectId.
           */
          public com.google.protobuf.ByteString
              getTitleEffectIdBytes() {
            java.lang.Object ref = titleEffectId_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              titleEffectId_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string title_effect_id = 132;</code>
           * @param value The titleEffectId to set.
           * @return This builder for chaining.
           */
          public Builder setTitleEffectId(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000002;
            titleEffectId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string title_effect_id = 132;</code>
           * @return This builder for chaining.
           */
          public Builder clearTitleEffectId() {
            bitField1_ = (bitField1_ & ~0x00000002);
            titleEffectId_ = getDefaultInstance().getTitleEffectId();
            onChanged();
            return this;
          }
          /**
           * <code>optional string title_effect_id = 132;</code>
           * @param value The bytes for titleEffectId to set.
           * @return This builder for chaining.
           */
          public Builder setTitleEffectIdBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000002;
            titleEffectId_ = value;
            onChanged();
            return this;
          }

          private int titleStartTime_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 title_start_time = 133;</code>
           * @return Whether the titleStartTime field is set.
           */
          @java.lang.Override
          public boolean hasTitleStartTime() {
            return ((bitField1_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 title_start_time = 133;</code>
           * @return The titleStartTime.
           */
          @java.lang.Override
          public int getTitleStartTime() {
            return titleStartTime_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 title_start_time = 133;</code>
           * @param value The titleStartTime to set.
           * @return This builder for chaining.
           */
          public Builder setTitleStartTime(int value) {
            bitField1_ |= 0x00000004;
            titleStartTime_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 title_start_time = 133;</code>
           * @return This builder for chaining.
           */
          public Builder clearTitleStartTime() {
            bitField1_ = (bitField1_ & ~0x00000004);
            titleStartTime_ = 0;
            onChanged();
            return this;
          }

          private int titleEndTime_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 title_end_time = 134;</code>
           * @return Whether the titleEndTime field is set.
           */
          @java.lang.Override
          public boolean hasTitleEndTime() {
            return ((bitField1_ & 0x00000008) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 title_end_time = 134;</code>
           * @return The titleEndTime.
           */
          @java.lang.Override
          public int getTitleEndTime() {
            return titleEndTime_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 title_end_time = 134;</code>
           * @param value The titleEndTime to set.
           * @return This builder for chaining.
           */
          public Builder setTitleEndTime(int value) {
            bitField1_ |= 0x00000008;
            titleEndTime_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 title_end_time = 134;</code>
           * @return This builder for chaining.
           */
          public Builder clearTitleEndTime() {
            bitField1_ = (bitField1_ & ~0x00000008);
            titleEndTime_ = 0;
            onChanged();
            return this;
          }

          private int duration_ ;
          /**
           * <code>optional int32 duration = 135;</code>
           * @return Whether the duration field is set.
           */
          @java.lang.Override
          public boolean hasDuration() {
            return ((bitField1_ & 0x00000010) != 0);
          }
          /**
           * <code>optional int32 duration = 135;</code>
           * @return The duration.
           */
          @java.lang.Override
          public int getDuration() {
            return duration_;
          }
          /**
           * <code>optional int32 duration = 135;</code>
           * @param value The duration to set.
           * @return This builder for chaining.
           */
          public Builder setDuration(int value) {
            bitField1_ |= 0x00000010;
            duration_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 duration = 135;</code>
           * @return This builder for chaining.
           */
          public Builder clearDuration() {
            bitField1_ = (bitField1_ & ~0x00000010);
            duration_ = 0;
            onChanged();
            return this;
          }

          private int audioDuration_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 audio_duration = 136;</code>
           * @return Whether the audioDuration field is set.
           */
          @java.lang.Override
          public boolean hasAudioDuration() {
            return ((bitField1_ & 0x00000020) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 audio_duration = 136;</code>
           * @return The audioDuration.
           */
          @java.lang.Override
          public int getAudioDuration() {
            return audioDuration_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 audio_duration = 136;</code>
           * @param value The audioDuration to set.
           * @return This builder for chaining.
           */
          public Builder setAudioDuration(int value) {
            bitField1_ |= 0x00000020;
            audioDuration_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 audio_duration = 136;</code>
           * @return This builder for chaining.
           */
          public Builder clearAudioDuration() {
            bitField1_ = (bitField1_ & ~0x00000020);
            audioDuration_ = 0;
            onChanged();
            return this;
          }

          private int videoDuration_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 video_duration = 137;</code>
           * @return Whether the videoDuration field is set.
           */
          @java.lang.Override
          public boolean hasVideoDuration() {
            return ((bitField1_ & 0x00000040) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 video_duration = 137;</code>
           * @return The videoDuration.
           */
          @java.lang.Override
          public int getVideoDuration() {
            return videoDuration_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 video_duration = 137;</code>
           * @param value The videoDuration to set.
           * @return This builder for chaining.
           */
          public Builder setVideoDuration(int value) {
            bitField1_ |= 0x00000040;
            videoDuration_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 video_duration = 137;</code>
           * @return This builder for chaining.
           */
          public Builder clearVideoDuration() {
            bitField1_ = (bitField1_ & ~0x00000040);
            videoDuration_ = 0;
            onChanged();
            return this;
          }

          private int startOverlap_ ;
          /**
           * <code>optional int32 start_overlap = 138;</code>
           * @return Whether the startOverlap field is set.
           */
          @java.lang.Override
          public boolean hasStartOverlap() {
            return ((bitField1_ & 0x00000080) != 0);
          }
          /**
           * <code>optional int32 start_overlap = 138;</code>
           * @return The startOverlap.
           */
          @java.lang.Override
          public int getStartOverlap() {
            return startOverlap_;
          }
          /**
           * <code>optional int32 start_overlap = 138;</code>
           * @param value The startOverlap to set.
           * @return This builder for chaining.
           */
          public Builder setStartOverlap(int value) {
            bitField1_ |= 0x00000080;
            startOverlap_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 start_overlap = 138;</code>
           * @return This builder for chaining.
           */
          public Builder clearStartOverlap() {
            bitField1_ = (bitField1_ & ~0x00000080);
            startOverlap_ = 0;
            onChanged();
            return this;
          }

          private int endOverlap_ ;
          /**
           * <code>optional int32 end_overlap = 139;</code>
           * @return Whether the endOverlap field is set.
           */
          @java.lang.Override
          public boolean hasEndOverlap() {
            return ((bitField1_ & 0x00000100) != 0);
          }
          /**
           * <code>optional int32 end_overlap = 139;</code>
           * @return The endOverlap.
           */
          @java.lang.Override
          public int getEndOverlap() {
            return endOverlap_;
          }
          /**
           * <code>optional int32 end_overlap = 139;</code>
           * @param value The endOverlap to set.
           * @return This builder for chaining.
           */
          public Builder setEndOverlap(int value) {
            bitField1_ |= 0x00000100;
            endOverlap_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 end_overlap = 139;</code>
           * @return This builder for chaining.
           */
          public Builder clearEndOverlap() {
            bitField1_ = (bitField1_ & ~0x00000100);
            endOverlap_ = 0;
            onChanged();
            return this;
          }

          private int width_ ;
          /**
           * <code>optional int32 width = 140;</code>
           * @return Whether the width field is set.
           */
          @java.lang.Override
          public boolean hasWidth() {
            return ((bitField1_ & 0x00000200) != 0);
          }
          /**
           * <code>optional int32 width = 140;</code>
           * @return The width.
           */
          @java.lang.Override
          public int getWidth() {
            return width_;
          }
          /**
           * <code>optional int32 width = 140;</code>
           * @param value The width to set.
           * @return This builder for chaining.
           */
          public Builder setWidth(int value) {
            bitField1_ |= 0x00000200;
            width_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 width = 140;</code>
           * @return This builder for chaining.
           */
          public Builder clearWidth() {
            bitField1_ = (bitField1_ & ~0x00000200);
            width_ = 0;
            onChanged();
            return this;
          }

          private int height_ ;
          /**
           * <code>optional int32 height = 141;</code>
           * @return Whether the height field is set.
           */
          @java.lang.Override
          public boolean hasHeight() {
            return ((bitField1_ & 0x00000400) != 0);
          }
          /**
           * <code>optional int32 height = 141;</code>
           * @return The height.
           */
          @java.lang.Override
          public int getHeight() {
            return height_;
          }
          /**
           * <code>optional int32 height = 141;</code>
           * @param value The height to set.
           * @return This builder for chaining.
           */
          public Builder setHeight(int value) {
            bitField1_ |= 0x00000400;
            height_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 height = 141;</code>
           * @return This builder for chaining.
           */
          public Builder clearHeight() {
            bitField1_ = (bitField1_ & ~0x00000400);
            height_ = 0;
            onChanged();
            return this;
          }

          private int originalWidth_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 original_width = 142;</code>
           * @return Whether the originalWidth field is set.
           */
          @java.lang.Override
          public boolean hasOriginalWidth() {
            return ((bitField1_ & 0x00000800) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 original_width = 142;</code>
           * @return The originalWidth.
           */
          @java.lang.Override
          public int getOriginalWidth() {
            return originalWidth_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 original_width = 142;</code>
           * @param value The originalWidth to set.
           * @return This builder for chaining.
           */
          public Builder setOriginalWidth(int value) {
            bitField1_ |= 0x00000800;
            originalWidth_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 original_width = 142;</code>
           * @return This builder for chaining.
           */
          public Builder clearOriginalWidth() {
            bitField1_ = (bitField1_ & ~0x00000800);
            originalWidth_ = 0;
            onChanged();
            return this;
          }

          private int originalHeight_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 original_height = 143;</code>
           * @return Whether the originalHeight field is set.
           */
          @java.lang.Override
          public boolean hasOriginalHeight() {
            return ((bitField1_ & 0x00001000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 original_height = 143;</code>
           * @return The originalHeight.
           */
          @java.lang.Override
          public int getOriginalHeight() {
            return originalHeight_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 original_height = 143;</code>
           * @param value The originalHeight to set.
           * @return This builder for chaining.
           */
          public Builder setOriginalHeight(int value) {
            bitField1_ |= 0x00001000;
            originalHeight_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 original_height = 143;</code>
           * @return This builder for chaining.
           */
          public Builder clearOriginalHeight() {
            bitField1_ = (bitField1_ & ~0x00001000);
            originalHeight_ = 0;
            onChanged();
            return this;
          }

          private int clipVolume_ ;
          /**
           * <code>optional int32 clip_volume = 144;</code>
           * @return Whether the clipVolume field is set.
           */
          @java.lang.Override
          public boolean hasClipVolume() {
            return ((bitField1_ & 0x00002000) != 0);
          }
          /**
           * <code>optional int32 clip_volume = 144;</code>
           * @return The clipVolume.
           */
          @java.lang.Override
          public int getClipVolume() {
            return clipVolume_;
          }
          /**
           * <code>optional int32 clip_volume = 144;</code>
           * @param value The clipVolume to set.
           * @return This builder for chaining.
           */
          public Builder setClipVolume(int value) {
            bitField1_ |= 0x00002000;
            clipVolume_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 clip_volume = 144;</code>
           * @return This builder for chaining.
           */
          public Builder clearClipVolume() {
            bitField1_ = (bitField1_ & ~0x00002000);
            clipVolume_ = 0;
            onChanged();
            return this;
          }

          private int musicVolume_ ;
          /**
           * <code>optional int32 music_volume = 145;</code>
           * @return Whether the musicVolume field is set.
           */
          @java.lang.Override
          public boolean hasMusicVolume() {
            return ((bitField1_ & 0x00004000) != 0);
          }
          /**
           * <code>optional int32 music_volume = 145;</code>
           * @return The musicVolume.
           */
          @java.lang.Override
          public int getMusicVolume() {
            return musicVolume_;
          }
          /**
           * <code>optional int32 music_volume = 145;</code>
           * @param value The musicVolume to set.
           * @return This builder for chaining.
           */
          public Builder setMusicVolume(int value) {
            bitField1_ |= 0x00004000;
            musicVolume_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 music_volume = 145;</code>
           * @return This builder for chaining.
           */
          public Builder clearMusicVolume() {
            bitField1_ = (bitField1_ & ~0x00004000);
            musicVolume_ = 0;
            onChanged();
            return this;
          }

          private int titleStyle_ = 0;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.TitleStyle title_style = 146;</code>
           * @return Whether the titleStyle field is set.
           */
          @java.lang.Override public boolean hasTitleStyle() {
            return ((bitField1_ & 0x00008000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.TitleStyle title_style = 146;</code>
           * @return The titleStyle.
           */
          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TitleStyle getTitleStyle() {
            @SuppressWarnings("deprecation")
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TitleStyle result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TitleStyle.valueOf(titleStyle_);
            return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TitleStyle.TITLE_STYLE_NONE : result;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.TitleStyle title_style = 146;</code>
           * @param value The titleStyle to set.
           * @return This builder for chaining.
           */
          public Builder setTitleStyle(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TitleStyle value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField1_ |= 0x00008000;
            titleStyle_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.TitleStyle title_style = 146;</code>
           * @return This builder for chaining.
           */
          public Builder clearTitleStyle() {
            bitField1_ = (bitField1_ & ~0x00008000);
            titleStyle_ = 0;
            onChanged();
            return this;
          }

          private boolean isImage_ ;
          /**
           * <code>optional bool is_image = 147;</code>
           * @return Whether the isImage field is set.
           */
          @java.lang.Override
          public boolean hasIsImage() {
            return ((bitField1_ & 0x00010000) != 0);
          }
          /**
           * <code>optional bool is_image = 147;</code>
           * @return The isImage.
           */
          @java.lang.Override
          public boolean getIsImage() {
            return isImage_;
          }
          /**
           * <code>optional bool is_image = 147;</code>
           * @param value The isImage to set.
           * @return This builder for chaining.
           */
          public Builder setIsImage(boolean value) {
            bitField1_ |= 0x00010000;
            isImage_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool is_image = 147;</code>
           * @return This builder for chaining.
           */
          public Builder clearIsImage() {
            bitField1_ = (bitField1_ & ~0x00010000);
            isImage_ = false;
            onChanged();
            return this;
          }

          private boolean muteAudio_ ;
          /**
           * <code>optional bool mute_audio = 148;</code>
           * @return Whether the muteAudio field is set.
           */
          @java.lang.Override
          public boolean hasMuteAudio() {
            return ((bitField1_ & 0x00020000) != 0);
          }
          /**
           * <code>optional bool mute_audio = 148;</code>
           * @return The muteAudio.
           */
          @java.lang.Override
          public boolean getMuteAudio() {
            return muteAudio_;
          }
          /**
           * <code>optional bool mute_audio = 148;</code>
           * @param value The muteAudio to set.
           * @return This builder for chaining.
           */
          public Builder setMuteAudio(boolean value) {
            bitField1_ |= 0x00020000;
            muteAudio_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool mute_audio = 148;</code>
           * @return This builder for chaining.
           */
          public Builder clearMuteAudio() {
            bitField1_ = (bitField1_ & ~0x00020000);
            muteAudio_ = false;
            onChanged();
            return this;
          }

          private boolean muteMusic_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool mute_music = 149;</code>
           * @return Whether the muteMusic field is set.
           */
          @java.lang.Override
          public boolean hasMuteMusic() {
            return ((bitField1_ & 0x00040000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool mute_music = 149;</code>
           * @return The muteMusic.
           */
          @java.lang.Override
          public boolean getMuteMusic() {
            return muteMusic_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool mute_music = 149;</code>
           * @param value The muteMusic to set.
           * @return This builder for chaining.
           */
          public Builder setMuteMusic(boolean value) {
            bitField1_ |= 0x00040000;
            muteMusic_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool mute_music = 149;</code>
           * @return This builder for chaining.
           */
          public Builder clearMuteMusic() {
            bitField1_ = (bitField1_ & ~0x00040000);
            muteMusic_ = false;
            onChanged();
            return this;
          }

          private boolean hasAudio_ ;
          /**
           * <code>optional bool has_audio = 150;</code>
           * @return Whether the hasAudio field is set.
           */
          @java.lang.Override
          public boolean hasHasAudio() {
            return ((bitField1_ & 0x00080000) != 0);
          }
          /**
           * <code>optional bool has_audio = 150;</code>
           * @return The hasAudio.
           */
          @java.lang.Override
          public boolean getHasAudio() {
            return hasAudio_;
          }
          /**
           * <code>optional bool has_audio = 150;</code>
           * @param value The hasAudio to set.
           * @return This builder for chaining.
           */
          public Builder setHasAudio(boolean value) {
            bitField1_ |= 0x00080000;
            hasAudio_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool has_audio = 150;</code>
           * @return This builder for chaining.
           */
          public Builder clearHasAudio() {
            bitField1_ = (bitField1_ & ~0x00080000);
            hasAudio_ = false;
            onChanged();
            return this;
          }

          private boolean hasVideo_ ;
          /**
           * <code>optional bool has_video = 151;</code>
           * @return Whether the hasVideo field is set.
           */
          @java.lang.Override
          public boolean hasHasVideo() {
            return ((bitField1_ & 0x00100000) != 0);
          }
          /**
           * <code>optional bool has_video = 151;</code>
           * @return The hasVideo.
           */
          @java.lang.Override
          public boolean getHasVideo() {
            return hasVideo_;
          }
          /**
           * <code>optional bool has_video = 151;</code>
           * @param value The hasVideo to set.
           * @return This builder for chaining.
           */
          public Builder setHasVideo(boolean value) {
            bitField1_ |= 0x00100000;
            hasVideo_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool has_video = 151;</code>
           * @return This builder for chaining.
           */
          public Builder clearHasVideo() {
            bitField1_ = (bitField1_ & ~0x00100000);
            hasVideo_ = false;
            onChanged();
            return this;
          }

          private java.lang.Object thumbPath_ = "";
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string thumb_path = 152;</code>
           * @return Whether the thumbPath field is set.
           */
          public boolean hasThumbPath() {
            return ((bitField1_ & 0x00200000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string thumb_path = 152;</code>
           * @return The thumbPath.
           */
          public java.lang.String getThumbPath() {
            java.lang.Object ref = thumbPath_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                thumbPath_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string thumb_path = 152;</code>
           * @return The bytes for thumbPath.
           */
          public com.google.protobuf.ByteString
              getThumbPathBytes() {
            java.lang.Object ref = thumbPath_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              thumbPath_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string thumb_path = 152;</code>
           * @param value The thumbPath to set.
           * @return This builder for chaining.
           */
          public Builder setThumbPath(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00200000;
            thumbPath_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string thumb_path = 152;</code>
           * @return This builder for chaining.
           */
          public Builder clearThumbPath() {
            bitField1_ = (bitField1_ & ~0x00200000);
            thumbPath_ = getDefaultInstance().getThumbPath();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string thumb_path = 152;</code>
           * @param value The bytes for thumbPath to set.
           * @return This builder for chaining.
           */
          public Builder setThumbPathBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00200000;
            thumbPath_ = value;
            onChanged();
            return this;
          }

          private long transitionItemUuidLsb_ ;
          /**
           * <code>optional uint64 transition_item_uuid_lsb = 154;</code>
           * @return Whether the transitionItemUuidLsb field is set.
           */
          @java.lang.Override
          public boolean hasTransitionItemUuidLsb() {
            return ((bitField1_ & 0x00400000) != 0);
          }
          /**
           * <code>optional uint64 transition_item_uuid_lsb = 154;</code>
           * @return The transitionItemUuidLsb.
           */
          @java.lang.Override
          public long getTransitionItemUuidLsb() {
            return transitionItemUuidLsb_;
          }
          /**
           * <code>optional uint64 transition_item_uuid_lsb = 154;</code>
           * @param value The transitionItemUuidLsb to set.
           * @return This builder for chaining.
           */
          public Builder setTransitionItemUuidLsb(long value) {
            bitField1_ |= 0x00400000;
            transitionItemUuidLsb_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint64 transition_item_uuid_lsb = 154;</code>
           * @return This builder for chaining.
           */
          public Builder clearTransitionItemUuidLsb() {
            bitField1_ = (bitField1_ & ~0x00400000);
            transitionItemUuidLsb_ = 0L;
            onChanged();
            return this;
          }

          private long transitionItemUuidMsb_ ;
          /**
           * <code>optional uint64 transition_item_uuid_msb = 155;</code>
           * @return Whether the transitionItemUuidMsb field is set.
           */
          @java.lang.Override
          public boolean hasTransitionItemUuidMsb() {
            return ((bitField1_ & 0x00800000) != 0);
          }
          /**
           * <code>optional uint64 transition_item_uuid_msb = 155;</code>
           * @return The transitionItemUuidMsb.
           */
          @java.lang.Override
          public long getTransitionItemUuidMsb() {
            return transitionItemUuidMsb_;
          }
          /**
           * <code>optional uint64 transition_item_uuid_msb = 155;</code>
           * @param value The transitionItemUuidMsb to set.
           * @return This builder for chaining.
           */
          public Builder setTransitionItemUuidMsb(long value) {
            bitField1_ |= 0x00800000;
            transitionItemUuidMsb_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint64 transition_item_uuid_msb = 155;</code>
           * @return This builder for chaining.
           */
          public Builder clearTransitionItemUuidMsb() {
            bitField1_ = (bitField1_ & ~0x00800000);
            transitionItemUuidMsb_ = 0L;
            onChanged();
            return this;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem unattachedTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder> unattachedTransitionBuilder_;
          /**
           * <code>optional .KMProto.KMProject.TimelineItem unattached_transition = 171;</code>
           * @return Whether the unattachedTransition field is set.
           */
          public boolean hasUnattachedTransition() {
            return ((bitField1_ & 0x01000000) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.TimelineItem unattached_transition = 171;</code>
           * @return The unattachedTransition.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem getUnattachedTransition() {
            if (unattachedTransitionBuilder_ == null) {
              return unattachedTransition_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.getDefaultInstance() : unattachedTransition_;
            } else {
              return unattachedTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>optional .KMProto.KMProject.TimelineItem unattached_transition = 171;</code>
           */
          public Builder setUnattachedTransition(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem value) {
            if (unattachedTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              unattachedTransition_ = value;
              onChanged();
            } else {
              unattachedTransitionBuilder_.setMessage(value);
            }
            bitField1_ |= 0x01000000;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.TimelineItem unattached_transition = 171;</code>
           */
          public Builder setUnattachedTransition(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder builderForValue) {
            if (unattachedTransitionBuilder_ == null) {
              unattachedTransition_ = builderForValue.build();
              onChanged();
            } else {
              unattachedTransitionBuilder_.setMessage(builderForValue.build());
            }
            bitField1_ |= 0x01000000;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.TimelineItem unattached_transition = 171;</code>
           */
          public Builder mergeUnattachedTransition(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem value) {
            if (unattachedTransitionBuilder_ == null) {
              if (((bitField1_ & 0x01000000) != 0) &&
                  unattachedTransition_ != null &&
                  unattachedTransition_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.getDefaultInstance()) {
                unattachedTransition_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.newBuilder(unattachedTransition_).mergeFrom(value).buildPartial();
              } else {
                unattachedTransition_ = value;
              }
              onChanged();
            } else {
              unattachedTransitionBuilder_.mergeFrom(value);
            }
            bitField1_ |= 0x01000000;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.TimelineItem unattached_transition = 171;</code>
           */
          public Builder clearUnattachedTransition() {
            if (unattachedTransitionBuilder_ == null) {
              unattachedTransition_ = null;
              onChanged();
            } else {
              unattachedTransitionBuilder_.clear();
            }
            bitField1_ = (bitField1_ & ~0x01000000);
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.TimelineItem unattached_transition = 171;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder getUnattachedTransitionBuilder() {
            bitField1_ |= 0x01000000;
            onChanged();
            return getUnattachedTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>optional .KMProto.KMProject.TimelineItem unattached_transition = 171;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder getUnattachedTransitionOrBuilder() {
            if (unattachedTransitionBuilder_ != null) {
              return unattachedTransitionBuilder_.getMessageOrBuilder();
            } else {
              return unattachedTransition_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.getDefaultInstance() : unattachedTransition_;
            }
          }
          /**
           * <code>optional .KMProto.KMProject.TimelineItem unattached_transition = 171;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder> 
              getUnattachedTransitionFieldBuilder() {
            if (unattachedTransitionBuilder_ == null) {
              unattachedTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder>(
                      getUnattachedTransition(),
                      getParentForChildren(),
                      isClean());
              unattachedTransition_ = null;
            }
            return unattachedTransitionBuilder_;
          }

          private int brightness_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 brightness = 156;</code>
           * @return Whether the brightness field is set.
           */
          @java.lang.Override
          public boolean hasBrightness() {
            return ((bitField1_ & 0x02000000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 brightness = 156;</code>
           * @return The brightness.
           */
          @java.lang.Override
          public int getBrightness() {
            return brightness_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 brightness = 156;</code>
           * @param value The brightness to set.
           * @return This builder for chaining.
           */
          public Builder setBrightness(int value) {
            bitField1_ |= 0x02000000;
            brightness_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 brightness = 156;</code>
           * @return This builder for chaining.
           */
          public Builder clearBrightness() {
            bitField1_ = (bitField1_ & ~0x02000000);
            brightness_ = 0;
            onChanged();
            return this;
          }

          private int contrast_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 contrast = 157;</code>
           * @return Whether the contrast field is set.
           */
          @java.lang.Override
          public boolean hasContrast() {
            return ((bitField1_ & 0x04000000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 contrast = 157;</code>
           * @return The contrast.
           */
          @java.lang.Override
          public int getContrast() {
            return contrast_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 contrast = 157;</code>
           * @param value The contrast to set.
           * @return This builder for chaining.
           */
          public Builder setContrast(int value) {
            bitField1_ |= 0x04000000;
            contrast_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 contrast = 157;</code>
           * @return This builder for chaining.
           */
          public Builder clearContrast() {
            bitField1_ = (bitField1_ & ~0x04000000);
            contrast_ = 0;
            onChanged();
            return this;
          }

          private int saturation_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 saturation = 158;</code>
           * @return Whether the saturation field is set.
           */
          @java.lang.Override
          public boolean hasSaturation() {
            return ((bitField1_ & 0x08000000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 saturation = 158;</code>
           * @return The saturation.
           */
          @java.lang.Override
          public int getSaturation() {
            return saturation_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 saturation = 158;</code>
           * @param value The saturation to set.
           * @return This builder for chaining.
           */
          public Builder setSaturation(int value) {
            bitField1_ |= 0x08000000;
            saturation_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 saturation = 158;</code>
           * @return This builder for chaining.
           */
          public Builder clearSaturation() {
            bitField1_ = (bitField1_ & ~0x08000000);
            saturation_ = 0;
            onChanged();
            return this;
          }

          private int tintcolor_ ;
          /**
           * <code>optional int32 tintcolor = 159;</code>
           * @return Whether the tintcolor field is set.
           */
          @java.lang.Override
          public boolean hasTintcolor() {
            return ((bitField1_ & 0x10000000) != 0);
          }
          /**
           * <code>optional int32 tintcolor = 159;</code>
           * @return The tintcolor.
           */
          @java.lang.Override
          public int getTintcolor() {
            return tintcolor_;
          }
          /**
           * <code>optional int32 tintcolor = 159;</code>
           * @param value The tintcolor to set.
           * @return This builder for chaining.
           */
          public Builder setTintcolor(int value) {
            bitField1_ |= 0x10000000;
            tintcolor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 tintcolor = 159;</code>
           * @return This builder for chaining.
           */
          public Builder clearTintcolor() {
            bitField1_ = (bitField1_ & ~0x10000000);
            tintcolor_ = 0;
            onChanged();
            return this;
          }

          private int effectStartTime_ ;
          /**
           * <code>optional int32 effect_start_time = 160;</code>
           * @return Whether the effectStartTime field is set.
           */
          @java.lang.Override
          public boolean hasEffectStartTime() {
            return ((bitField1_ & 0x20000000) != 0);
          }
          /**
           * <code>optional int32 effect_start_time = 160;</code>
           * @return The effectStartTime.
           */
          @java.lang.Override
          public int getEffectStartTime() {
            return effectStartTime_;
          }
          /**
           * <code>optional int32 effect_start_time = 160;</code>
           * @param value The effectStartTime to set.
           * @return This builder for chaining.
           */
          public Builder setEffectStartTime(int value) {
            bitField1_ |= 0x20000000;
            effectStartTime_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 effect_start_time = 160;</code>
           * @return This builder for chaining.
           */
          public Builder clearEffectStartTime() {
            bitField1_ = (bitField1_ & ~0x20000000);
            effectStartTime_ = 0;
            onChanged();
            return this;
          }

          private int effectEndTime_ ;
          /**
           * <code>optional int32 effect_end_time = 161;</code>
           * @return Whether the effectEndTime field is set.
           */
          @java.lang.Override
          public boolean hasEffectEndTime() {
            return ((bitField1_ & 0x40000000) != 0);
          }
          /**
           * <code>optional int32 effect_end_time = 161;</code>
           * @return The effectEndTime.
           */
          @java.lang.Override
          public int getEffectEndTime() {
            return effectEndTime_;
          }
          /**
           * <code>optional int32 effect_end_time = 161;</code>
           * @param value The effectEndTime to set.
           * @return This builder for chaining.
           */
          public Builder setEffectEndTime(int value) {
            bitField1_ |= 0x40000000;
            effectEndTime_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 effect_end_time = 161;</code>
           * @return This builder for chaining.
           */
          public Builder clearEffectEndTime() {
            bitField1_ = (bitField1_ & ~0x40000000);
            effectEndTime_ = 0;
            onChanged();
            return this;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix startMatrix_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.MatrixOrBuilder> startMatrixBuilder_;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Matrix start_matrix = 162;</code>
           * @return Whether the startMatrix field is set.
           */
          public boolean hasStartMatrix() {
            return ((bitField1_ & 0x80000000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Matrix start_matrix = 162;</code>
           * @return The startMatrix.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix getStartMatrix() {
            if (startMatrixBuilder_ == null) {
              return startMatrix_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.getDefaultInstance() : startMatrix_;
            } else {
              return startMatrixBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Matrix start_matrix = 162;</code>
           */
          public Builder setStartMatrix(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix value) {
            if (startMatrixBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              startMatrix_ = value;
              onChanged();
            } else {
              startMatrixBuilder_.setMessage(value);
            }
            bitField1_ |= 0x80000000;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Matrix start_matrix = 162;</code>
           */
          public Builder setStartMatrix(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.Builder builderForValue) {
            if (startMatrixBuilder_ == null) {
              startMatrix_ = builderForValue.build();
              onChanged();
            } else {
              startMatrixBuilder_.setMessage(builderForValue.build());
            }
            bitField1_ |= 0x80000000;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Matrix start_matrix = 162;</code>
           */
          public Builder mergeStartMatrix(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix value) {
            if (startMatrixBuilder_ == null) {
              if (((bitField1_ & 0x80000000) != 0) &&
                  startMatrix_ != null &&
                  startMatrix_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.getDefaultInstance()) {
                startMatrix_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.newBuilder(startMatrix_).mergeFrom(value).buildPartial();
              } else {
                startMatrix_ = value;
              }
              onChanged();
            } else {
              startMatrixBuilder_.mergeFrom(value);
            }
            bitField1_ |= 0x80000000;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Matrix start_matrix = 162;</code>
           */
          public Builder clearStartMatrix() {
            if (startMatrixBuilder_ == null) {
              startMatrix_ = null;
              onChanged();
            } else {
              startMatrixBuilder_.clear();
            }
            bitField1_ = (bitField1_ & ~0x80000000);
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Matrix start_matrix = 162;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.Builder getStartMatrixBuilder() {
            bitField1_ |= 0x80000000;
            onChanged();
            return getStartMatrixFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Matrix start_matrix = 162;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.MatrixOrBuilder getStartMatrixOrBuilder() {
            if (startMatrixBuilder_ != null) {
              return startMatrixBuilder_.getMessageOrBuilder();
            } else {
              return startMatrix_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.getDefaultInstance() : startMatrix_;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Matrix start_matrix = 162;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.MatrixOrBuilder> 
              getStartMatrixFieldBuilder() {
            if (startMatrixBuilder_ == null) {
              startMatrixBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.MatrixOrBuilder>(
                      getStartMatrix(),
                      getParentForChildren(),
                      isClean());
              startMatrix_ = null;
            }
            return startMatrixBuilder_;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix endMatrix_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.MatrixOrBuilder> endMatrixBuilder_;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Matrix end_matrix = 163;</code>
           * @return Whether the endMatrix field is set.
           */
          public boolean hasEndMatrix() {
            return ((bitField2_ & 0x00000001) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Matrix end_matrix = 163;</code>
           * @return The endMatrix.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix getEndMatrix() {
            if (endMatrixBuilder_ == null) {
              return endMatrix_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.getDefaultInstance() : endMatrix_;
            } else {
              return endMatrixBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Matrix end_matrix = 163;</code>
           */
          public Builder setEndMatrix(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix value) {
            if (endMatrixBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              endMatrix_ = value;
              onChanged();
            } else {
              endMatrixBuilder_.setMessage(value);
            }
            bitField2_ |= 0x00000001;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Matrix end_matrix = 163;</code>
           */
          public Builder setEndMatrix(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.Builder builderForValue) {
            if (endMatrixBuilder_ == null) {
              endMatrix_ = builderForValue.build();
              onChanged();
            } else {
              endMatrixBuilder_.setMessage(builderForValue.build());
            }
            bitField2_ |= 0x00000001;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Matrix end_matrix = 163;</code>
           */
          public Builder mergeEndMatrix(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix value) {
            if (endMatrixBuilder_ == null) {
              if (((bitField2_ & 0x00000001) != 0) &&
                  endMatrix_ != null &&
                  endMatrix_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.getDefaultInstance()) {
                endMatrix_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.newBuilder(endMatrix_).mergeFrom(value).buildPartial();
              } else {
                endMatrix_ = value;
              }
              onChanged();
            } else {
              endMatrixBuilder_.mergeFrom(value);
            }
            bitField2_ |= 0x00000001;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Matrix end_matrix = 163;</code>
           */
          public Builder clearEndMatrix() {
            if (endMatrixBuilder_ == null) {
              endMatrix_ = null;
              onChanged();
            } else {
              endMatrixBuilder_.clear();
            }
            bitField2_ = (bitField2_ & ~0x00000001);
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Matrix end_matrix = 163;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.Builder getEndMatrixBuilder() {
            bitField2_ |= 0x00000001;
            onChanged();
            return getEndMatrixFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Matrix end_matrix = 163;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.MatrixOrBuilder getEndMatrixOrBuilder() {
            if (endMatrixBuilder_ != null) {
              return endMatrixBuilder_.getMessageOrBuilder();
            } else {
              return endMatrix_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.getDefaultInstance() : endMatrix_;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.Matrix end_matrix = 163;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.MatrixOrBuilder> 
              getEndMatrixFieldBuilder() {
            if (endMatrixBuilder_ == null) {
              endMatrixBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.MatrixOrBuilder>(
                      getEndMatrix(),
                      getParentForChildren(),
                      isClean());
              endMatrix_ = null;
            }
            return endMatrixBuilder_;
          }

          private int autoThemeEffect_ = 1;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ThemeEffectType auto_theme_effect = 164;</code>
           * @return Whether the autoThemeEffect field is set.
           */
          @java.lang.Override public boolean hasAutoThemeEffect() {
            return ((bitField2_ & 0x00000002) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ThemeEffectType auto_theme_effect = 164;</code>
           * @return The autoThemeEffect.
           */
          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ThemeEffectType getAutoThemeEffect() {
            @SuppressWarnings("deprecation")
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ThemeEffectType result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ThemeEffectType.valueOf(autoThemeEffect_);
            return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ThemeEffectType.THEME_EFFECT_TYPE_OPENING : result;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ThemeEffectType auto_theme_effect = 164;</code>
           * @param value The autoThemeEffect to set.
           * @return This builder for chaining.
           */
          public Builder setAutoThemeEffect(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ThemeEffectType value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField2_ |= 0x00000002;
            autoThemeEffect_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ThemeEffectType auto_theme_effect = 164;</code>
           * @return This builder for chaining.
           */
          public Builder clearAutoThemeEffect() {
            bitField2_ = (bitField2_ & ~0x00000002);
            autoThemeEffect_ = 1;
            onChanged();
            return this;
          }

          private com.google.protobuf.Internal.IntList volumeEnvelopeTime_ = emptyIntList();
          private void ensureVolumeEnvelopeTimeIsMutable() {
            if (!((bitField2_ & 0x00000004) != 0)) {
              volumeEnvelopeTime_ = mutableCopy(volumeEnvelopeTime_);
              bitField2_ |= 0x00000004;
             }
          }
          /**
           * <code>repeated int32 volume_envelope_time = 165 [packed = true];</code>
           * @return A list containing the volumeEnvelopeTime.
           */
          public java.util.List<java.lang.Integer>
              getVolumeEnvelopeTimeList() {
            return ((bitField2_ & 0x00000004) != 0) ?
                     java.util.Collections.unmodifiableList(volumeEnvelopeTime_) : volumeEnvelopeTime_;
          }
          /**
           * <code>repeated int32 volume_envelope_time = 165 [packed = true];</code>
           * @return The count of volumeEnvelopeTime.
           */
          public int getVolumeEnvelopeTimeCount() {
            return volumeEnvelopeTime_.size();
          }
          /**
           * <code>repeated int32 volume_envelope_time = 165 [packed = true];</code>
           * @param index The index of the element to return.
           * @return The volumeEnvelopeTime at the given index.
           */
          public int getVolumeEnvelopeTime(int index) {
            return volumeEnvelopeTime_.getInt(index);
          }
          /**
           * <code>repeated int32 volume_envelope_time = 165 [packed = true];</code>
           * @param index The index to set the value at.
           * @param value The volumeEnvelopeTime to set.
           * @return This builder for chaining.
           */
          public Builder setVolumeEnvelopeTime(
              int index, int value) {
            ensureVolumeEnvelopeTimeIsMutable();
            volumeEnvelopeTime_.setInt(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated int32 volume_envelope_time = 165 [packed = true];</code>
           * @param value The volumeEnvelopeTime to add.
           * @return This builder for chaining.
           */
          public Builder addVolumeEnvelopeTime(int value) {
            ensureVolumeEnvelopeTimeIsMutable();
            volumeEnvelopeTime_.addInt(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated int32 volume_envelope_time = 165 [packed = true];</code>
           * @param values The volumeEnvelopeTime to add.
           * @return This builder for chaining.
           */
          public Builder addAllVolumeEnvelopeTime(
              java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureVolumeEnvelopeTimeIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, volumeEnvelopeTime_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated int32 volume_envelope_time = 165 [packed = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearVolumeEnvelopeTime() {
            volumeEnvelopeTime_ = emptyIntList();
            bitField2_ = (bitField2_ & ~0x00000004);
            onChanged();
            return this;
          }

          private com.google.protobuf.Internal.IntList volumeEnvelopeLevel_ = emptyIntList();
          private void ensureVolumeEnvelopeLevelIsMutable() {
            if (!((bitField2_ & 0x00000008) != 0)) {
              volumeEnvelopeLevel_ = mutableCopy(volumeEnvelopeLevel_);
              bitField2_ |= 0x00000008;
             }
          }
          /**
           * <code>repeated int32 volume_envelope_level = 166 [packed = true];</code>
           * @return A list containing the volumeEnvelopeLevel.
           */
          public java.util.List<java.lang.Integer>
              getVolumeEnvelopeLevelList() {
            return ((bitField2_ & 0x00000008) != 0) ?
                     java.util.Collections.unmodifiableList(volumeEnvelopeLevel_) : volumeEnvelopeLevel_;
          }
          /**
           * <code>repeated int32 volume_envelope_level = 166 [packed = true];</code>
           * @return The count of volumeEnvelopeLevel.
           */
          public int getVolumeEnvelopeLevelCount() {
            return volumeEnvelopeLevel_.size();
          }
          /**
           * <code>repeated int32 volume_envelope_level = 166 [packed = true];</code>
           * @param index The index of the element to return.
           * @return The volumeEnvelopeLevel at the given index.
           */
          public int getVolumeEnvelopeLevel(int index) {
            return volumeEnvelopeLevel_.getInt(index);
          }
          /**
           * <code>repeated int32 volume_envelope_level = 166 [packed = true];</code>
           * @param index The index to set the value at.
           * @param value The volumeEnvelopeLevel to set.
           * @return This builder for chaining.
           */
          public Builder setVolumeEnvelopeLevel(
              int index, int value) {
            ensureVolumeEnvelopeLevelIsMutable();
            volumeEnvelopeLevel_.setInt(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated int32 volume_envelope_level = 166 [packed = true];</code>
           * @param value The volumeEnvelopeLevel to add.
           * @return This builder for chaining.
           */
          public Builder addVolumeEnvelopeLevel(int value) {
            ensureVolumeEnvelopeLevelIsMutable();
            volumeEnvelopeLevel_.addInt(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated int32 volume_envelope_level = 166 [packed = true];</code>
           * @param values The volumeEnvelopeLevel to add.
           * @return This builder for chaining.
           */
          public Builder addAllVolumeEnvelopeLevel(
              java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureVolumeEnvelopeLevelIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, volumeEnvelopeLevel_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated int32 volume_envelope_level = 166 [packed = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearVolumeEnvelopeLevel() {
            volumeEnvelopeLevel_ = emptyIntList();
            bitField2_ = (bitField2_ & ~0x00000008);
            onChanged();
            return this;
          }

          private float clipWidth_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float clip_width = 167;</code>
           * @return Whether the clipWidth field is set.
           */
          @java.lang.Override
          public boolean hasClipWidth() {
            return ((bitField2_ & 0x00000010) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float clip_width = 167;</code>
           * @return The clipWidth.
           */
          @java.lang.Override
          public float getClipWidth() {
            return clipWidth_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float clip_width = 167;</code>
           * @param value The clipWidth to set.
           * @return This builder for chaining.
           */
          public Builder setClipWidth(float value) {
            bitField2_ |= 0x00000010;
            clipWidth_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float clip_width = 167;</code>
           * @return This builder for chaining.
           */
          public Builder clearClipWidth() {
            bitField2_ = (bitField2_ & ~0x00000010);
            clipWidth_ = 0F;
            onChanged();
            return this;
          }

          private int playbackSpeed_ ;
          /**
           * <code>optional int32 playback_speed = 168;</code>
           * @return Whether the playbackSpeed field is set.
           */
          @java.lang.Override
          public boolean hasPlaybackSpeed() {
            return ((bitField2_ & 0x00000020) != 0);
          }
          /**
           * <code>optional int32 playback_speed = 168;</code>
           * @return The playbackSpeed.
           */
          @java.lang.Override
          public int getPlaybackSpeed() {
            return playbackSpeed_;
          }
          /**
           * <code>optional int32 playback_speed = 168;</code>
           * @param value The playbackSpeed to set.
           * @return This builder for chaining.
           */
          public Builder setPlaybackSpeed(int value) {
            bitField2_ |= 0x00000020;
            playbackSpeed_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 playback_speed = 168;</code>
           * @return This builder for chaining.
           */
          public Builder clearPlaybackSpeed() {
            bitField2_ = (bitField2_ & ~0x00000020);
            playbackSpeed_ = 0;
            onChanged();
            return this;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect colorEffect_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffectOrBuilder> colorEffectBuilder_;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 169;</code>
           * @return Whether the colorEffect field is set.
           */
          public boolean hasColorEffect() {
            return ((bitField2_ & 0x00000040) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 169;</code>
           * @return The colorEffect.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect getColorEffect() {
            if (colorEffectBuilder_ == null) {
              return colorEffect_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.getDefaultInstance() : colorEffect_;
            } else {
              return colorEffectBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 169;</code>
           */
          public Builder setColorEffect(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect value) {
            if (colorEffectBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              colorEffect_ = value;
              onChanged();
            } else {
              colorEffectBuilder_.setMessage(value);
            }
            bitField2_ |= 0x00000040;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 169;</code>
           */
          public Builder setColorEffect(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.Builder builderForValue) {
            if (colorEffectBuilder_ == null) {
              colorEffect_ = builderForValue.build();
              onChanged();
            } else {
              colorEffectBuilder_.setMessage(builderForValue.build());
            }
            bitField2_ |= 0x00000040;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 169;</code>
           */
          public Builder mergeColorEffect(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect value) {
            if (colorEffectBuilder_ == null) {
              if (((bitField2_ & 0x00000040) != 0) &&
                  colorEffect_ != null &&
                  colorEffect_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.getDefaultInstance()) {
                colorEffect_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.newBuilder(colorEffect_).mergeFrom(value).buildPartial();
              } else {
                colorEffect_ = value;
              }
              onChanged();
            } else {
              colorEffectBuilder_.mergeFrom(value);
            }
            bitField2_ |= 0x00000040;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 169;</code>
           */
          public Builder clearColorEffect() {
            if (colorEffectBuilder_ == null) {
              colorEffect_ = null;
              onChanged();
            } else {
              colorEffectBuilder_.clear();
            }
            bitField2_ = (bitField2_ & ~0x00000040);
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 169;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.Builder getColorEffectBuilder() {
            bitField2_ |= 0x00000040;
            onChanged();
            return getColorEffectFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 169;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffectOrBuilder getColorEffectOrBuilder() {
            if (colorEffectBuilder_ != null) {
              return colorEffectBuilder_.getMessageOrBuilder();
            } else {
              return colorEffect_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.getDefaultInstance() : colorEffect_;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 169;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffectOrBuilder> 
              getColorEffectFieldBuilder() {
            if (colorEffectBuilder_ == null) {
              colorEffectBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffectOrBuilder>(
                      getColorEffect(),
                      getParentForChildren(),
                      isClean());
              colorEffect_ = null;
            }
            return colorEffectBuilder_;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap effectOptions_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapOrBuilder> effectOptionsBuilder_;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 170;</code>
           * @return Whether the effectOptions field is set.
           */
          public boolean hasEffectOptions() {
            return ((bitField2_ & 0x00000080) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 170;</code>
           * @return The effectOptions.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap getEffectOptions() {
            if (effectOptionsBuilder_ == null) {
              return effectOptions_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.getDefaultInstance() : effectOptions_;
            } else {
              return effectOptionsBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 170;</code>
           */
          public Builder setEffectOptions(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap value) {
            if (effectOptionsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              effectOptions_ = value;
              onChanged();
            } else {
              effectOptionsBuilder_.setMessage(value);
            }
            bitField2_ |= 0x00000080;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 170;</code>
           */
          public Builder setEffectOptions(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.Builder builderForValue) {
            if (effectOptionsBuilder_ == null) {
              effectOptions_ = builderForValue.build();
              onChanged();
            } else {
              effectOptionsBuilder_.setMessage(builderForValue.build());
            }
            bitField2_ |= 0x00000080;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 170;</code>
           */
          public Builder mergeEffectOptions(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap value) {
            if (effectOptionsBuilder_ == null) {
              if (((bitField2_ & 0x00000080) != 0) &&
                  effectOptions_ != null &&
                  effectOptions_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.getDefaultInstance()) {
                effectOptions_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.newBuilder(effectOptions_).mergeFrom(value).buildPartial();
              } else {
                effectOptions_ = value;
              }
              onChanged();
            } else {
              effectOptionsBuilder_.mergeFrom(value);
            }
            bitField2_ |= 0x00000080;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 170;</code>
           */
          public Builder clearEffectOptions() {
            if (effectOptionsBuilder_ == null) {
              effectOptions_ = null;
              onChanged();
            } else {
              effectOptionsBuilder_.clear();
            }
            bitField2_ = (bitField2_ & ~0x00000080);
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 170;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.Builder getEffectOptionsBuilder() {
            bitField2_ |= 0x00000080;
            onChanged();
            return getEffectOptionsFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 170;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapOrBuilder getEffectOptionsOrBuilder() {
            if (effectOptionsBuilder_ != null) {
              return effectOptionsBuilder_.getMessageOrBuilder();
            } else {
              return effectOptions_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.getDefaultInstance() : effectOptions_;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 170;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapOrBuilder> 
              getEffectOptionsFieldBuilder() {
            if (effectOptionsBuilder_ == null) {
              effectOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapOrBuilder>(
                      getEffectOptions(),
                      getParentForChildren(),
                      isClean());
              effectOptions_ = null;
            }
            return effectOptionsBuilder_;
          }

          private boolean transcodeApproved_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool transcode_approved = 172;</code>
           * @return Whether the transcodeApproved field is set.
           */
          @java.lang.Override
          public boolean hasTranscodeApproved() {
            return ((bitField2_ & 0x00000100) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool transcode_approved = 172;</code>
           * @return The transcodeApproved.
           */
          @java.lang.Override
          public boolean getTranscodeApproved() {
            return transcodeApproved_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool transcode_approved = 172;</code>
           * @param value The transcodeApproved to set.
           * @return This builder for chaining.
           */
          public Builder setTranscodeApproved(boolean value) {
            bitField2_ |= 0x00000100;
            transcodeApproved_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool transcode_approved = 172;</code>
           * @return This builder for chaining.
           */
          public Builder clearTranscodeApproved() {
            bitField2_ = (bitField2_ & ~0x00000100);
            transcodeApproved_ = false;
            onChanged();
            return this;
          }

          private int clipState_ = 1;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ClipState clip_state = 173;</code>
           * @return Whether the clipState field is set.
           */
          @java.lang.Override public boolean hasClipState() {
            return ((bitField2_ & 0x00000200) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ClipState clip_state = 173;</code>
           * @return The clipState.
           */
          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipState getClipState() {
            @SuppressWarnings("deprecation")
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipState result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipState.valueOf(clipState_);
            return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipState.BUSY : result;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ClipState clip_state = 173;</code>
           * @param value The clipState to set.
           * @return This builder for chaining.
           */
          public Builder setClipState(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipState value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField2_ |= 0x00000200;
            clipState_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ClipState clip_state = 173;</code>
           * @return This builder for chaining.
           */
          public Builder clearClipState() {
            bitField2_ = (bitField2_ & ~0x00000200);
            clipState_ = 1;
            onChanged();
            return this;
          }

          private java.lang.Object mediaMsid_ = "";
          /**
           * <code>optional string media_msid = 174;</code>
           * @return Whether the mediaMsid field is set.
           */
          public boolean hasMediaMsid() {
            return ((bitField2_ & 0x00000400) != 0);
          }
          /**
           * <code>optional string media_msid = 174;</code>
           * @return The mediaMsid.
           */
          public java.lang.String getMediaMsid() {
            java.lang.Object ref = mediaMsid_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                mediaMsid_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string media_msid = 174;</code>
           * @return The bytes for mediaMsid.
           */
          public com.google.protobuf.ByteString
              getMediaMsidBytes() {
            java.lang.Object ref = mediaMsid_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              mediaMsid_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string media_msid = 174;</code>
           * @param value The mediaMsid to set.
           * @return This builder for chaining.
           */
          public Builder setMediaMsid(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField2_ |= 0x00000400;
            mediaMsid_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string media_msid = 174;</code>
           * @return This builder for chaining.
           */
          public Builder clearMediaMsid() {
            bitField2_ = (bitField2_ & ~0x00000400);
            mediaMsid_ = getDefaultInstance().getMediaMsid();
            onChanged();
            return this;
          }
          /**
           * <code>optional string media_msid = 174;</code>
           * @param value The bytes for mediaMsid to set.
           * @return This builder for chaining.
           */
          public Builder setMediaMsidBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField2_ |= 0x00000400;
            mediaMsid_ = value;
            onChanged();
            return this;
          }

          private boolean cropLink_ ;
          /**
           * <code>optional bool crop_link = 175;</code>
           * @return Whether the cropLink field is set.
           */
          @java.lang.Override
          public boolean hasCropLink() {
            return ((bitField2_ & 0x00000800) != 0);
          }
          /**
           * <code>optional bool crop_link = 175;</code>
           * @return The cropLink.
           */
          @java.lang.Override
          public boolean getCropLink() {
            return cropLink_;
          }
          /**
           * <code>optional bool crop_link = 175;</code>
           * @param value The cropLink to set.
           * @return This builder for chaining.
           */
          public Builder setCropLink(boolean value) {
            bitField2_ |= 0x00000800;
            cropLink_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool crop_link = 175;</code>
           * @return This builder for chaining.
           */
          public Builder clearCropLink() {
            bitField2_ = (bitField2_ & ~0x00000800);
            cropLink_ = false;
            onChanged();
            return this;
          }

          private boolean isReverse_ ;
          /**
           * <code>optional bool is_reverse = 177;</code>
           * @return Whether the isReverse field is set.
           */
          @java.lang.Override
          public boolean hasIsReverse() {
            return ((bitField2_ & 0x00001000) != 0);
          }
          /**
           * <code>optional bool is_reverse = 177;</code>
           * @return The isReverse.
           */
          @java.lang.Override
          public boolean getIsReverse() {
            return isReverse_;
          }
          /**
           * <code>optional bool is_reverse = 177;</code>
           * @param value The isReverse to set.
           * @return This builder for chaining.
           */
          public Builder setIsReverse(boolean value) {
            bitField2_ |= 0x00001000;
            isReverse_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool is_reverse = 177;</code>
           * @return This builder for chaining.
           */
          public Builder clearIsReverse() {
            bitField2_ = (bitField2_ & ~0x00001000);
            isReverse_ = false;
            onChanged();
            return this;
          }

          private int voiceChanger_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 voice_changer = 178;</code>
           * @return Whether the voiceChanger field is set.
           */
          @java.lang.Override
          public boolean hasVoiceChanger() {
            return ((bitField2_ & 0x00002000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 voice_changer = 178;</code>
           * @return The voiceChanger.
           */
          @java.lang.Override
          public int getVoiceChanger() {
            return voiceChanger_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 voice_changer = 178;</code>
           * @param value The voiceChanger to set.
           * @return This builder for chaining.
           */
          public Builder setVoiceChanger(int value) {
            bitField2_ |= 0x00002000;
            voiceChanger_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 voice_changer = 178;</code>
           * @return This builder for chaining.
           */
          public Builder clearVoiceChanger() {
            bitField2_ = (bitField2_ & ~0x00002000);
            voiceChanger_ = 0;
            onChanged();
            return this;
          }

          private boolean vignette_ ;
          /**
           * <code>optional bool vignette = 179;</code>
           * @return Whether the vignette field is set.
           */
          @java.lang.Override
          public boolean hasVignette() {
            return ((bitField2_ & 0x00004000) != 0);
          }
          /**
           * <code>optional bool vignette = 179;</code>
           * @return The vignette.
           */
          @java.lang.Override
          public boolean getVignette() {
            return vignette_;
          }
          /**
           * <code>optional bool vignette = 179;</code>
           * @param value The vignette to set.
           * @return This builder for chaining.
           */
          public Builder setVignette(boolean value) {
            bitField2_ |= 0x00004000;
            vignette_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool vignette = 179;</code>
           * @return This builder for chaining.
           */
          public Builder clearVignette() {
            bitField2_ = (bitField2_ & ~0x00004000);
            vignette_ = false;
            onChanged();
            return this;
          }

          private int panLeft_ ;
          /**
           * <code>optional int32 pan_left = 180;</code>
           * @return Whether the panLeft field is set.
           */
          @java.lang.Override
          public boolean hasPanLeft() {
            return ((bitField2_ & 0x00008000) != 0);
          }
          /**
           * <code>optional int32 pan_left = 180;</code>
           * @return The panLeft.
           */
          @java.lang.Override
          public int getPanLeft() {
            return panLeft_;
          }
          /**
           * <code>optional int32 pan_left = 180;</code>
           * @param value The panLeft to set.
           * @return This builder for chaining.
           */
          public Builder setPanLeft(int value) {
            bitField2_ |= 0x00008000;
            panLeft_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 pan_left = 180;</code>
           * @return This builder for chaining.
           */
          public Builder clearPanLeft() {
            bitField2_ = (bitField2_ & ~0x00008000);
            panLeft_ = 0;
            onChanged();
            return this;
          }

          private int panRight_ ;
          /**
           * <code>optional int32 pan_right = 181;</code>
           * @return Whether the panRight field is set.
           */
          @java.lang.Override
          public boolean hasPanRight() {
            return ((bitField2_ & 0x00010000) != 0);
          }
          /**
           * <code>optional int32 pan_right = 181;</code>
           * @return The panRight.
           */
          @java.lang.Override
          public int getPanRight() {
            return panRight_;
          }
          /**
           * <code>optional int32 pan_right = 181;</code>
           * @param value The panRight to set.
           * @return This builder for chaining.
           */
          public Builder setPanRight(int value) {
            bitField2_ |= 0x00010000;
            panRight_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 pan_right = 181;</code>
           * @return This builder for chaining.
           */
          public Builder clearPanRight() {
            bitField2_ = (bitField2_ & ~0x00010000);
            panRight_ = 0;
            onChanged();
            return this;
          }

          private int compressor_ ;
          /**
           * <pre>
           * 0: off, 4: on (default: 0)
           * </pre>
           *
           * <code>optional int32 compressor = 182;</code>
           * @return Whether the compressor field is set.
           */
          @java.lang.Override
          public boolean hasCompressor() {
            return ((bitField2_ & 0x00020000) != 0);
          }
          /**
           * <pre>
           * 0: off, 4: on (default: 0)
           * </pre>
           *
           * <code>optional int32 compressor = 182;</code>
           * @return The compressor.
           */
          @java.lang.Override
          public int getCompressor() {
            return compressor_;
          }
          /**
           * <pre>
           * 0: off, 4: on (default: 0)
           * </pre>
           *
           * <code>optional int32 compressor = 182;</code>
           * @param value The compressor to set.
           * @return This builder for chaining.
           */
          public Builder setCompressor(int value) {
            bitField2_ |= 0x00020000;
            compressor_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * 0: off, 4: on (default: 0)
           * </pre>
           *
           * <code>optional int32 compressor = 182;</code>
           * @return This builder for chaining.
           */
          public Builder clearCompressor() {
            bitField2_ = (bitField2_ & ~0x00020000);
            compressor_ = 0;
            onChanged();
            return this;
          }

          private int pitchFactor_ ;
          /**
           * <code>optional int32 pitch_factor = 183;</code>
           * @return Whether the pitchFactor field is set.
           */
          @java.lang.Override
          public boolean hasPitchFactor() {
            return ((bitField2_ & 0x00040000) != 0);
          }
          /**
           * <code>optional int32 pitch_factor = 183;</code>
           * @return The pitchFactor.
           */
          @java.lang.Override
          public int getPitchFactor() {
            return pitchFactor_;
          }
          /**
           * <code>optional int32 pitch_factor = 183;</code>
           * @param value The pitchFactor to set.
           * @return This builder for chaining.
           */
          public Builder setPitchFactor(int value) {
            bitField2_ |= 0x00040000;
            pitchFactor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 pitch_factor = 183;</code>
           * @return This builder for chaining.
           */
          public Builder clearPitchFactor() {
            bitField2_ = (bitField2_ & ~0x00040000);
            pitchFactor_ = 0;
            onChanged();
            return this;
          }

          private java.lang.Object clipName_ = "";
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string clip_name = 184;</code>
           * @return Whether the clipName field is set.
           */
          public boolean hasClipName() {
            return ((bitField2_ & 0x00080000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string clip_name = 184;</code>
           * @return The clipName.
           */
          public java.lang.String getClipName() {
            java.lang.Object ref = clipName_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                clipName_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string clip_name = 184;</code>
           * @return The bytes for clipName.
           */
          public com.google.protobuf.ByteString
              getClipNameBytes() {
            java.lang.Object ref = clipName_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              clipName_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string clip_name = 184;</code>
           * @param value The clipName to set.
           * @return This builder for chaining.
           */
          public Builder setClipName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField2_ |= 0x00080000;
            clipName_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string clip_name = 184;</code>
           * @return This builder for chaining.
           */
          public Builder clearClipName() {
            bitField2_ = (bitField2_ & ~0x00080000);
            clipName_ = getDefaultInstance().getClipName();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string clip_name = 184;</code>
           * @param value The bytes for clipName to set.
           * @return This builder for chaining.
           */
          public Builder setClipNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField2_ |= 0x00080000;
            clipName_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object iosMediaAssetId_ = "";
          /**
           * <code>optional string ios_media_asset_id = 185;</code>
           * @return Whether the iosMediaAssetId field is set.
           */
          public boolean hasIosMediaAssetId() {
            return ((bitField2_ & 0x00100000) != 0);
          }
          /**
           * <code>optional string ios_media_asset_id = 185;</code>
           * @return The iosMediaAssetId.
           */
          public java.lang.String getIosMediaAssetId() {
            java.lang.Object ref = iosMediaAssetId_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                iosMediaAssetId_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string ios_media_asset_id = 185;</code>
           * @return The bytes for iosMediaAssetId.
           */
          public com.google.protobuf.ByteString
              getIosMediaAssetIdBytes() {
            java.lang.Object ref = iosMediaAssetId_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              iosMediaAssetId_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string ios_media_asset_id = 185;</code>
           * @param value The iosMediaAssetId to set.
           * @return This builder for chaining.
           */
          public Builder setIosMediaAssetId(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField2_ |= 0x00100000;
            iosMediaAssetId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string ios_media_asset_id = 185;</code>
           * @return This builder for chaining.
           */
          public Builder clearIosMediaAssetId() {
            bitField2_ = (bitField2_ & ~0x00100000);
            iosMediaAssetId_ = getDefaultInstance().getIosMediaAssetId();
            onChanged();
            return this;
          }
          /**
           * <code>optional string ios_media_asset_id = 185;</code>
           * @param value The bytes for iosMediaAssetId to set.
           * @return This builder for chaining.
           */
          public Builder setIosMediaAssetIdBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField2_ |= 0x00100000;
            iosMediaAssetId_ = value;
            onChanged();
            return this;
          }

          private boolean keepPitch_ ;
          /**
           * <code>optional bool keepPitch = 186;</code>
           * @return Whether the keepPitch field is set.
           */
          @java.lang.Override
          public boolean hasKeepPitch() {
            return ((bitField2_ & 0x00200000) != 0);
          }
          /**
           * <code>optional bool keepPitch = 186;</code>
           * @return The keepPitch.
           */
          @java.lang.Override
          public boolean getKeepPitch() {
            return keepPitch_;
          }
          /**
           * <code>optional bool keepPitch = 186;</code>
           * @param value The keepPitch to set.
           * @return This builder for chaining.
           */
          public Builder setKeepPitch(boolean value) {
            bitField2_ |= 0x00200000;
            keepPitch_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool keepPitch = 186;</code>
           * @return This builder for chaining.
           */
          public Builder clearKeepPitch() {
            bitField2_ = (bitField2_ & ~0x00200000);
            keepPitch_ = false;
            onChanged();
            return this;
          }

          private boolean useIFrameOnly_ ;
          /**
           * <code>optional bool useIFrameOnly = 187;</code>
           * @return Whether the useIFrameOnly field is set.
           */
          @java.lang.Override
          public boolean hasUseIFrameOnly() {
            return ((bitField2_ & 0x00400000) != 0);
          }
          /**
           * <code>optional bool useIFrameOnly = 187;</code>
           * @return The useIFrameOnly.
           */
          @java.lang.Override
          public boolean getUseIFrameOnly() {
            return useIFrameOnly_;
          }
          /**
           * <code>optional bool useIFrameOnly = 187;</code>
           * @param value The useIFrameOnly to set.
           * @return This builder for chaining.
           */
          public Builder setUseIFrameOnly(boolean value) {
            bitField2_ |= 0x00400000;
            useIFrameOnly_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool useIFrameOnly = 187;</code>
           * @return This builder for chaining.
           */
          public Builder clearUseIFrameOnly() {
            bitField2_ = (bitField2_ & ~0x00400000);
            useIFrameOnly_ = false;
            onChanged();
            return this;
          }

          private java.lang.Object enhancedAudioFilter_ = "";
          /**
           * <code>optional string enhancedAudioFilter = 188;</code>
           * @return Whether the enhancedAudioFilter field is set.
           */
          public boolean hasEnhancedAudioFilter() {
            return ((bitField2_ & 0x00800000) != 0);
          }
          /**
           * <code>optional string enhancedAudioFilter = 188;</code>
           * @return The enhancedAudioFilter.
           */
          public java.lang.String getEnhancedAudioFilter() {
            java.lang.Object ref = enhancedAudioFilter_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                enhancedAudioFilter_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string enhancedAudioFilter = 188;</code>
           * @return The bytes for enhancedAudioFilter.
           */
          public com.google.protobuf.ByteString
              getEnhancedAudioFilterBytes() {
            java.lang.Object ref = enhancedAudioFilter_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              enhancedAudioFilter_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string enhancedAudioFilter = 188;</code>
           * @param value The enhancedAudioFilter to set.
           * @return This builder for chaining.
           */
          public Builder setEnhancedAudioFilter(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField2_ |= 0x00800000;
            enhancedAudioFilter_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string enhancedAudioFilter = 188;</code>
           * @return This builder for chaining.
           */
          public Builder clearEnhancedAudioFilter() {
            bitField2_ = (bitField2_ & ~0x00800000);
            enhancedAudioFilter_ = getDefaultInstance().getEnhancedAudioFilter();
            onChanged();
            return this;
          }
          /**
           * <code>optional string enhancedAudioFilter = 188;</code>
           * @param value The bytes for enhancedAudioFilter to set.
           * @return This builder for chaining.
           */
          public Builder setEnhancedAudioFilterBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField2_ |= 0x00800000;
            enhancedAudioFilter_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object equalizer_ = "";
          /**
           * <code>optional string equalizer = 189;</code>
           * @return Whether the equalizer field is set.
           */
          public boolean hasEqualizer() {
            return ((bitField2_ & 0x01000000) != 0);
          }
          /**
           * <code>optional string equalizer = 189;</code>
           * @return The equalizer.
           */
          public java.lang.String getEqualizer() {
            java.lang.Object ref = equalizer_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                equalizer_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string equalizer = 189;</code>
           * @return The bytes for equalizer.
           */
          public com.google.protobuf.ByteString
              getEqualizerBytes() {
            java.lang.Object ref = equalizer_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              equalizer_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string equalizer = 189;</code>
           * @param value The equalizer to set.
           * @return This builder for chaining.
           */
          public Builder setEqualizer(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField2_ |= 0x01000000;
            equalizer_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string equalizer = 189;</code>
           * @return This builder for chaining.
           */
          public Builder clearEqualizer() {
            bitField2_ = (bitField2_ & ~0x01000000);
            equalizer_ = getDefaultInstance().getEqualizer();
            onChanged();
            return this;
          }
          /**
           * <code>optional string equalizer = 189;</code>
           * @param value The bytes for equalizer to set.
           * @return This builder for chaining.
           */
          public Builder setEqualizerBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField2_ |= 0x01000000;
            equalizer_ = value;
            onChanged();
            return this;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange clipRange_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRangeOrBuilder> clipRangeBuilder_;
          /**
           * <code>optional .KMProto.KMProject.ClipRange clipRange = 190;</code>
           * @return Whether the clipRange field is set.
           */
          public boolean hasClipRange() {
            return ((bitField2_ & 0x02000000) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.ClipRange clipRange = 190;</code>
           * @return The clipRange.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange getClipRange() {
            if (clipRangeBuilder_ == null) {
              return clipRange_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.getDefaultInstance() : clipRange_;
            } else {
              return clipRangeBuilder_.getMessage();
            }
          }
          /**
           * <code>optional .KMProto.KMProject.ClipRange clipRange = 190;</code>
           */
          public Builder setClipRange(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange value) {
            if (clipRangeBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              clipRange_ = value;
              onChanged();
            } else {
              clipRangeBuilder_.setMessage(value);
            }
            bitField2_ |= 0x02000000;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ClipRange clipRange = 190;</code>
           */
          public Builder setClipRange(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.Builder builderForValue) {
            if (clipRangeBuilder_ == null) {
              clipRange_ = builderForValue.build();
              onChanged();
            } else {
              clipRangeBuilder_.setMessage(builderForValue.build());
            }
            bitField2_ |= 0x02000000;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ClipRange clipRange = 190;</code>
           */
          public Builder mergeClipRange(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange value) {
            if (clipRangeBuilder_ == null) {
              if (((bitField2_ & 0x02000000) != 0) &&
                  clipRange_ != null &&
                  clipRange_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.getDefaultInstance()) {
                clipRange_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.newBuilder(clipRange_).mergeFrom(value).buildPartial();
              } else {
                clipRange_ = value;
              }
              onChanged();
            } else {
              clipRangeBuilder_.mergeFrom(value);
            }
            bitField2_ |= 0x02000000;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ClipRange clipRange = 190;</code>
           */
          public Builder clearClipRange() {
            if (clipRangeBuilder_ == null) {
              clipRange_ = null;
              onChanged();
            } else {
              clipRangeBuilder_.clear();
            }
            bitField2_ = (bitField2_ & ~0x02000000);
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ClipRange clipRange = 190;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.Builder getClipRangeBuilder() {
            bitField2_ |= 0x02000000;
            onChanged();
            return getClipRangeFieldBuilder().getBuilder();
          }
          /**
           * <code>optional .KMProto.KMProject.ClipRange clipRange = 190;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRangeOrBuilder getClipRangeOrBuilder() {
            if (clipRangeBuilder_ != null) {
              return clipRangeBuilder_.getMessageOrBuilder();
            } else {
              return clipRange_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.getDefaultInstance() : clipRange_;
            }
          }
          /**
           * <code>optional .KMProto.KMProject.ClipRange clipRange = 190;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRangeOrBuilder> 
              getClipRangeFieldBuilder() {
            if (clipRangeBuilder_ == null) {
              clipRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRangeOrBuilder>(
                      getClipRange(),
                      getParentForChildren(),
                      isClean());
              clipRange_ = null;
            }
            return clipRangeBuilder_;
          }

          private java.lang.Object reverb_ = "";
          /**
           * <code>optional string reverb = 191;</code>
           * @return Whether the reverb field is set.
           */
          public boolean hasReverb() {
            return ((bitField2_ & 0x04000000) != 0);
          }
          /**
           * <code>optional string reverb = 191;</code>
           * @return The reverb.
           */
          public java.lang.String getReverb() {
            java.lang.Object ref = reverb_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                reverb_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string reverb = 191;</code>
           * @return The bytes for reverb.
           */
          public com.google.protobuf.ByteString
              getReverbBytes() {
            java.lang.Object ref = reverb_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              reverb_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string reverb = 191;</code>
           * @param value The reverb to set.
           * @return This builder for chaining.
           */
          public Builder setReverb(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField2_ |= 0x04000000;
            reverb_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string reverb = 191;</code>
           * @return This builder for chaining.
           */
          public Builder clearReverb() {
            bitField2_ = (bitField2_ & ~0x04000000);
            reverb_ = getDefaultInstance().getReverb();
            onChanged();
            return this;
          }
          /**
           * <code>optional string reverb = 191;</code>
           * @param value The bytes for reverb to set.
           * @return This builder for chaining.
           */
          public Builder setReverbBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField2_ |= 0x04000000;
            reverb_ = value;
            onChanged();
            return this;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment colorAdjustment_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustmentOrBuilder> colorAdjustmentBuilder_;
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 192;</code>
           * @return Whether the colorAdjustment field is set.
           */
          public boolean hasColorAdjustment() {
            return ((bitField2_ & 0x08000000) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 192;</code>
           * @return The colorAdjustment.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment getColorAdjustment() {
            if (colorAdjustmentBuilder_ == null) {
              return colorAdjustment_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.getDefaultInstance() : colorAdjustment_;
            } else {
              return colorAdjustmentBuilder_.getMessage();
            }
          }
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 192;</code>
           */
          public Builder setColorAdjustment(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment value) {
            if (colorAdjustmentBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              colorAdjustment_ = value;
              onChanged();
            } else {
              colorAdjustmentBuilder_.setMessage(value);
            }
            bitField2_ |= 0x08000000;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 192;</code>
           */
          public Builder setColorAdjustment(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.Builder builderForValue) {
            if (colorAdjustmentBuilder_ == null) {
              colorAdjustment_ = builderForValue.build();
              onChanged();
            } else {
              colorAdjustmentBuilder_.setMessage(builderForValue.build());
            }
            bitField2_ |= 0x08000000;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 192;</code>
           */
          public Builder mergeColorAdjustment(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment value) {
            if (colorAdjustmentBuilder_ == null) {
              if (((bitField2_ & 0x08000000) != 0) &&
                  colorAdjustment_ != null &&
                  colorAdjustment_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.getDefaultInstance()) {
                colorAdjustment_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.newBuilder(colorAdjustment_).mergeFrom(value).buildPartial();
              } else {
                colorAdjustment_ = value;
              }
              onChanged();
            } else {
              colorAdjustmentBuilder_.mergeFrom(value);
            }
            bitField2_ |= 0x08000000;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 192;</code>
           */
          public Builder clearColorAdjustment() {
            if (colorAdjustmentBuilder_ == null) {
              colorAdjustment_ = null;
              onChanged();
            } else {
              colorAdjustmentBuilder_.clear();
            }
            bitField2_ = (bitField2_ & ~0x08000000);
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 192;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.Builder getColorAdjustmentBuilder() {
            bitField2_ |= 0x08000000;
            onChanged();
            return getColorAdjustmentFieldBuilder().getBuilder();
          }
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 192;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustmentOrBuilder getColorAdjustmentOrBuilder() {
            if (colorAdjustmentBuilder_ != null) {
              return colorAdjustmentBuilder_.getMessageOrBuilder();
            } else {
              return colorAdjustment_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.getDefaultInstance() : colorAdjustment_;
            }
          }
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 192;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustmentOrBuilder> 
              getColorAdjustmentFieldBuilder() {
            if (colorAdjustmentBuilder_ == null) {
              colorAdjustmentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustmentOrBuilder>(
                      getColorAdjustment(),
                      getParentForChildren(),
                      isClean());
              colorAdjustment_ = null;
            }
            return colorAdjustmentBuilder_;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter colorFilter_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilterOrBuilder> colorFilterBuilder_;
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 193;</code>
           * @return Whether the colorFilter field is set.
           */
          public boolean hasColorFilter() {
            return ((bitField2_ & 0x10000000) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 193;</code>
           * @return The colorFilter.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter getColorFilter() {
            if (colorFilterBuilder_ == null) {
              return colorFilter_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.getDefaultInstance() : colorFilter_;
            } else {
              return colorFilterBuilder_.getMessage();
            }
          }
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 193;</code>
           */
          public Builder setColorFilter(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter value) {
            if (colorFilterBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              colorFilter_ = value;
              onChanged();
            } else {
              colorFilterBuilder_.setMessage(value);
            }
            bitField2_ |= 0x10000000;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 193;</code>
           */
          public Builder setColorFilter(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.Builder builderForValue) {
            if (colorFilterBuilder_ == null) {
              colorFilter_ = builderForValue.build();
              onChanged();
            } else {
              colorFilterBuilder_.setMessage(builderForValue.build());
            }
            bitField2_ |= 0x10000000;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 193;</code>
           */
          public Builder mergeColorFilter(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter value) {
            if (colorFilterBuilder_ == null) {
              if (((bitField2_ & 0x10000000) != 0) &&
                  colorFilter_ != null &&
                  colorFilter_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.getDefaultInstance()) {
                colorFilter_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.newBuilder(colorFilter_).mergeFrom(value).buildPartial();
              } else {
                colorFilter_ = value;
              }
              onChanged();
            } else {
              colorFilterBuilder_.mergeFrom(value);
            }
            bitField2_ |= 0x10000000;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 193;</code>
           */
          public Builder clearColorFilter() {
            if (colorFilterBuilder_ == null) {
              colorFilter_ = null;
              onChanged();
            } else {
              colorFilterBuilder_.clear();
            }
            bitField2_ = (bitField2_ & ~0x10000000);
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 193;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.Builder getColorFilterBuilder() {
            bitField2_ |= 0x10000000;
            onChanged();
            return getColorFilterFieldBuilder().getBuilder();
          }
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 193;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilterOrBuilder getColorFilterOrBuilder() {
            if (colorFilterBuilder_ != null) {
              return colorFilterBuilder_.getMessageOrBuilder();
            } else {
              return colorFilter_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.getDefaultInstance() : colorFilter_;
            }
          }
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 193;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilterOrBuilder> 
              getColorFilterFieldBuilder() {
            if (colorFilterBuilder_ == null) {
              colorFilterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilterOrBuilder>(
                      getColorFilter(),
                      getParentForChildren(),
                      isClean());
              colorFilter_ = null;
            }
            return colorFilterBuilder_;
          }

          private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem> effectOption_ =
            java.util.Collections.emptyList();
          private void ensureEffectOptionIsMutable() {
            if (!((bitField2_ & 0x20000000) != 0)) {
              effectOption_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem>(effectOption_);
              bitField2_ |= 0x20000000;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder> effectOptionBuilder_;

          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
           */
          public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem> getEffectOptionList() {
            if (effectOptionBuilder_ == null) {
              return java.util.Collections.unmodifiableList(effectOption_);
            } else {
              return effectOptionBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
           */
          public int getEffectOptionCount() {
            if (effectOptionBuilder_ == null) {
              return effectOption_.size();
            } else {
              return effectOptionBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem getEffectOption(int index) {
            if (effectOptionBuilder_ == null) {
              return effectOption_.get(index);
            } else {
              return effectOptionBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
           */
          public Builder setEffectOption(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem value) {
            if (effectOptionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureEffectOptionIsMutable();
              effectOption_.set(index, value);
              onChanged();
            } else {
              effectOptionBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
           */
          public Builder setEffectOption(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder builderForValue) {
            if (effectOptionBuilder_ == null) {
              ensureEffectOptionIsMutable();
              effectOption_.set(index, builderForValue.build());
              onChanged();
            } else {
              effectOptionBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
           */
          public Builder addEffectOption(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem value) {
            if (effectOptionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureEffectOptionIsMutable();
              effectOption_.add(value);
              onChanged();
            } else {
              effectOptionBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
           */
          public Builder addEffectOption(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem value) {
            if (effectOptionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureEffectOptionIsMutable();
              effectOption_.add(index, value);
              onChanged();
            } else {
              effectOptionBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
           */
          public Builder addEffectOption(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder builderForValue) {
            if (effectOptionBuilder_ == null) {
              ensureEffectOptionIsMutable();
              effectOption_.add(builderForValue.build());
              onChanged();
            } else {
              effectOptionBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
           */
          public Builder addEffectOption(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder builderForValue) {
            if (effectOptionBuilder_ == null) {
              ensureEffectOptionIsMutable();
              effectOption_.add(index, builderForValue.build());
              onChanged();
            } else {
              effectOptionBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
           */
          public Builder addAllEffectOption(
              java.lang.Iterable<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem> values) {
            if (effectOptionBuilder_ == null) {
              ensureEffectOptionIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, effectOption_);
              onChanged();
            } else {
              effectOptionBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
           */
          public Builder clearEffectOption() {
            if (effectOptionBuilder_ == null) {
              effectOption_ = java.util.Collections.emptyList();
              bitField2_ = (bitField2_ & ~0x20000000);
              onChanged();
            } else {
              effectOptionBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
           */
          public Builder removeEffectOption(int index) {
            if (effectOptionBuilder_ == null) {
              ensureEffectOptionIsMutable();
              effectOption_.remove(index);
              onChanged();
            } else {
              effectOptionBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder getEffectOptionBuilder(
              int index) {
            return getEffectOptionFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder getEffectOptionOrBuilder(
              int index) {
            if (effectOptionBuilder_ == null) {
              return effectOption_.get(index);  } else {
              return effectOptionBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
           */
          public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder> 
               getEffectOptionOrBuilderList() {
            if (effectOptionBuilder_ != null) {
              return effectOptionBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(effectOption_);
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder addEffectOptionBuilder() {
            return getEffectOptionFieldBuilder().addBuilder(
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.getDefaultInstance());
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder addEffectOptionBuilder(
              int index) {
            return getEffectOptionFieldBuilder().addBuilder(
                index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.getDefaultInstance());
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 194;</code>
           */
          public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder> 
               getEffectOptionBuilderList() {
            return getEffectOptionFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder> 
              getEffectOptionFieldBuilder() {
            if (effectOptionBuilder_ == null) {
              effectOptionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder>(
                      effectOption_,
                      ((bitField2_ & 0x20000000) != 0),
                      getParentForChildren(),
                      isClean());
              effectOption_ = null;
            }
            return effectOptionBuilder_;
          }

          private boolean includedClipRotation_ ;
          /**
           * <code>optional bool includedClipRotation = 195;</code>
           * @return Whether the includedClipRotation field is set.
           */
          @java.lang.Override
          public boolean hasIncludedClipRotation() {
            return ((bitField2_ & 0x40000000) != 0);
          }
          /**
           * <code>optional bool includedClipRotation = 195;</code>
           * @return The includedClipRotation.
           */
          @java.lang.Override
          public boolean getIncludedClipRotation() {
            return includedClipRotation_;
          }
          /**
           * <code>optional bool includedClipRotation = 195;</code>
           * @param value The includedClipRotation to set.
           * @return This builder for chaining.
           */
          public Builder setIncludedClipRotation(boolean value) {
            bitField2_ |= 0x40000000;
            includedClipRotation_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool includedClipRotation = 195;</code>
           * @return This builder for chaining.
           */
          public Builder clearIncludedClipRotation() {
            bitField2_ = (bitField2_ & ~0x40000000);
            includedClipRotation_ = false;
            onChanged();
            return this;
          }

          private int uprightRotation_ ;
          /**
           * <code>optional int32 uprightRotation = 196;</code>
           * @return Whether the uprightRotation field is set.
           */
          @java.lang.Override
          public boolean hasUprightRotation() {
            return ((bitField2_ & 0x80000000) != 0);
          }
          /**
           * <code>optional int32 uprightRotation = 196;</code>
           * @return The uprightRotation.
           */
          @java.lang.Override
          public int getUprightRotation() {
            return uprightRotation_;
          }
          /**
           * <code>optional int32 uprightRotation = 196;</code>
           * @param value The uprightRotation to set.
           * @return This builder for chaining.
           */
          public Builder setUprightRotation(int value) {
            bitField2_ |= 0x80000000;
            uprightRotation_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 uprightRotation = 196;</code>
           * @return This builder for chaining.
           */
          public Builder clearUprightRotation() {
            bitField2_ = (bitField2_ & ~0x80000000);
            uprightRotation_ = 0;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.VisualClip)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.VisualClip)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<VisualClip>
            PARSER = new com.google.protobuf.AbstractParser<VisualClip>() {
          @java.lang.Override
          public VisualClip parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new VisualClip(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<VisualClip> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<VisualClip> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VisualClip getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface ClipRangeOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.ClipRange)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional string sourcePath = 1;</code>
         * @return Whether the sourcePath field is set.
         */
        boolean hasSourcePath();
        /**
         * <code>optional string sourcePath = 1;</code>
         * @return The sourcePath.
         */
        java.lang.String getSourcePath();
        /**
         * <code>optional string sourcePath = 1;</code>
         * @return The bytes for sourcePath.
         */
        com.google.protobuf.ByteString
            getSourcePathBytes();

        /**
         * <code>optional string sourcePhAssetId = 2;</code>
         * @return Whether the sourcePhAssetId field is set.
         */
        boolean hasSourcePhAssetId();
        /**
         * <code>optional string sourcePhAssetId = 2;</code>
         * @return The sourcePhAssetId.
         */
        java.lang.String getSourcePhAssetId();
        /**
         * <code>optional string sourcePhAssetId = 2;</code>
         * @return The bytes for sourcePhAssetId.
         */
        com.google.protobuf.ByteString
            getSourcePhAssetIdBytes();

        /**
         * <code>optional int64 sourceRagneStartTime = 3;</code>
         * @return Whether the sourceRagneStartTime field is set.
         */
        boolean hasSourceRagneStartTime();
        /**
         * <code>optional int64 sourceRagneStartTime = 3;</code>
         * @return The sourceRagneStartTime.
         */
        long getSourceRagneStartTime();

        /**
         * <code>optional int64 sourceRagneDuration = 4;</code>
         * @return Whether the sourceRagneDuration field is set.
         */
        boolean hasSourceRagneDuration();
        /**
         * <code>optional int64 sourceRagneDuration = 4;</code>
         * @return The sourceRagneDuration.
         */
        long getSourceRagneDuration();
      }
      /**
       * Protobuf type {@code KMProto.KMProject.ClipRange}
       */
      public static final class ClipRange extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.ClipRange)
          ClipRangeOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use ClipRange.newBuilder() to construct.
        private ClipRange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private ClipRange() {
          sourcePath_ = "";
          sourcePhAssetId_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new ClipRange();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private ClipRange(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000001;
                  sourcePath_ = bs;
                  break;
                }
                case 18: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000002;
                  sourcePhAssetId_ = bs;
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  sourceRagneStartTime_ = input.readInt64();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  sourceRagneDuration_ = input.readInt64();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ClipRange_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ClipRange_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.Builder.class);
        }

        private int bitField0_;
        public static final int SOURCEPATH_FIELD_NUMBER = 1;
        private volatile java.lang.Object sourcePath_;
        /**
         * <code>optional string sourcePath = 1;</code>
         * @return Whether the sourcePath field is set.
         */
        @java.lang.Override
        public boolean hasSourcePath() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional string sourcePath = 1;</code>
         * @return The sourcePath.
         */
        @java.lang.Override
        public java.lang.String getSourcePath() {
          java.lang.Object ref = sourcePath_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              sourcePath_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string sourcePath = 1;</code>
         * @return The bytes for sourcePath.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getSourcePathBytes() {
          java.lang.Object ref = sourcePath_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sourcePath_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int SOURCEPHASSETID_FIELD_NUMBER = 2;
        private volatile java.lang.Object sourcePhAssetId_;
        /**
         * <code>optional string sourcePhAssetId = 2;</code>
         * @return Whether the sourcePhAssetId field is set.
         */
        @java.lang.Override
        public boolean hasSourcePhAssetId() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional string sourcePhAssetId = 2;</code>
         * @return The sourcePhAssetId.
         */
        @java.lang.Override
        public java.lang.String getSourcePhAssetId() {
          java.lang.Object ref = sourcePhAssetId_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              sourcePhAssetId_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string sourcePhAssetId = 2;</code>
         * @return The bytes for sourcePhAssetId.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getSourcePhAssetIdBytes() {
          java.lang.Object ref = sourcePhAssetId_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sourcePhAssetId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int SOURCERAGNESTARTTIME_FIELD_NUMBER = 3;
        private long sourceRagneStartTime_;
        /**
         * <code>optional int64 sourceRagneStartTime = 3;</code>
         * @return Whether the sourceRagneStartTime field is set.
         */
        @java.lang.Override
        public boolean hasSourceRagneStartTime() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional int64 sourceRagneStartTime = 3;</code>
         * @return The sourceRagneStartTime.
         */
        @java.lang.Override
        public long getSourceRagneStartTime() {
          return sourceRagneStartTime_;
        }

        public static final int SOURCERAGNEDURATION_FIELD_NUMBER = 4;
        private long sourceRagneDuration_;
        /**
         * <code>optional int64 sourceRagneDuration = 4;</code>
         * @return Whether the sourceRagneDuration field is set.
         */
        @java.lang.Override
        public boolean hasSourceRagneDuration() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional int64 sourceRagneDuration = 4;</code>
         * @return The sourceRagneDuration.
         */
        @java.lang.Override
        public long getSourceRagneDuration() {
          return sourceRagneDuration_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sourcePath_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, sourcePhAssetId_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeInt64(3, sourceRagneStartTime_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeInt64(4, sourceRagneDuration_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sourcePath_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, sourcePhAssetId_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt64Size(3, sourceRagneStartTime_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt64Size(4, sourceRagneDuration_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange) obj;

          if (hasSourcePath() != other.hasSourcePath()) return false;
          if (hasSourcePath()) {
            if (!getSourcePath()
                .equals(other.getSourcePath())) return false;
          }
          if (hasSourcePhAssetId() != other.hasSourcePhAssetId()) return false;
          if (hasSourcePhAssetId()) {
            if (!getSourcePhAssetId()
                .equals(other.getSourcePhAssetId())) return false;
          }
          if (hasSourceRagneStartTime() != other.hasSourceRagneStartTime()) return false;
          if (hasSourceRagneStartTime()) {
            if (getSourceRagneStartTime()
                != other.getSourceRagneStartTime()) return false;
          }
          if (hasSourceRagneDuration() != other.hasSourceRagneDuration()) return false;
          if (hasSourceRagneDuration()) {
            if (getSourceRagneDuration()
                != other.getSourceRagneDuration()) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasSourcePath()) {
            hash = (37 * hash) + SOURCEPATH_FIELD_NUMBER;
            hash = (53 * hash) + getSourcePath().hashCode();
          }
          if (hasSourcePhAssetId()) {
            hash = (37 * hash) + SOURCEPHASSETID_FIELD_NUMBER;
            hash = (53 * hash) + getSourcePhAssetId().hashCode();
          }
          if (hasSourceRagneStartTime()) {
            hash = (37 * hash) + SOURCERAGNESTARTTIME_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getSourceRagneStartTime());
          }
          if (hasSourceRagneDuration()) {
            hash = (37 * hash) + SOURCERAGNEDURATION_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getSourceRagneDuration());
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code KMProto.KMProject.ClipRange}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.ClipRange)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRangeOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ClipRange_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ClipRange_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            sourcePath_ = "";
            bitField0_ = (bitField0_ & ~0x00000001);
            sourcePhAssetId_ = "";
            bitField0_ = (bitField0_ & ~0x00000002);
            sourceRagneStartTime_ = 0L;
            bitField0_ = (bitField0_ & ~0x00000004);
            sourceRagneDuration_ = 0L;
            bitField0_ = (bitField0_ & ~0x00000008);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ClipRange_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              to_bitField0_ |= 0x00000001;
            }
            result.sourcePath_ = sourcePath_;
            if (((from_bitField0_ & 0x00000002) != 0)) {
              to_bitField0_ |= 0x00000002;
            }
            result.sourcePhAssetId_ = sourcePhAssetId_;
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.sourceRagneStartTime_ = sourceRagneStartTime_;
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.sourceRagneDuration_ = sourceRagneDuration_;
              to_bitField0_ |= 0x00000008;
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.getDefaultInstance()) return this;
            if (other.hasSourcePath()) {
              bitField0_ |= 0x00000001;
              sourcePath_ = other.sourcePath_;
              onChanged();
            }
            if (other.hasSourcePhAssetId()) {
              bitField0_ |= 0x00000002;
              sourcePhAssetId_ = other.sourcePhAssetId_;
              onChanged();
            }
            if (other.hasSourceRagneStartTime()) {
              setSourceRagneStartTime(other.getSourceRagneStartTime());
            }
            if (other.hasSourceRagneDuration()) {
              setSourceRagneDuration(other.getSourceRagneDuration());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object sourcePath_ = "";
          /**
           * <code>optional string sourcePath = 1;</code>
           * @return Whether the sourcePath field is set.
           */
          public boolean hasSourcePath() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional string sourcePath = 1;</code>
           * @return The sourcePath.
           */
          public java.lang.String getSourcePath() {
            java.lang.Object ref = sourcePath_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                sourcePath_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string sourcePath = 1;</code>
           * @return The bytes for sourcePath.
           */
          public com.google.protobuf.ByteString
              getSourcePathBytes() {
            java.lang.Object ref = sourcePath_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              sourcePath_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string sourcePath = 1;</code>
           * @param value The sourcePath to set.
           * @return This builder for chaining.
           */
          public Builder setSourcePath(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            sourcePath_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string sourcePath = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearSourcePath() {
            bitField0_ = (bitField0_ & ~0x00000001);
            sourcePath_ = getDefaultInstance().getSourcePath();
            onChanged();
            return this;
          }
          /**
           * <code>optional string sourcePath = 1;</code>
           * @param value The bytes for sourcePath to set.
           * @return This builder for chaining.
           */
          public Builder setSourcePathBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            sourcePath_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object sourcePhAssetId_ = "";
          /**
           * <code>optional string sourcePhAssetId = 2;</code>
           * @return Whether the sourcePhAssetId field is set.
           */
          public boolean hasSourcePhAssetId() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional string sourcePhAssetId = 2;</code>
           * @return The sourcePhAssetId.
           */
          public java.lang.String getSourcePhAssetId() {
            java.lang.Object ref = sourcePhAssetId_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                sourcePhAssetId_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string sourcePhAssetId = 2;</code>
           * @return The bytes for sourcePhAssetId.
           */
          public com.google.protobuf.ByteString
              getSourcePhAssetIdBytes() {
            java.lang.Object ref = sourcePhAssetId_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              sourcePhAssetId_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string sourcePhAssetId = 2;</code>
           * @param value The sourcePhAssetId to set.
           * @return This builder for chaining.
           */
          public Builder setSourcePhAssetId(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            sourcePhAssetId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string sourcePhAssetId = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearSourcePhAssetId() {
            bitField0_ = (bitField0_ & ~0x00000002);
            sourcePhAssetId_ = getDefaultInstance().getSourcePhAssetId();
            onChanged();
            return this;
          }
          /**
           * <code>optional string sourcePhAssetId = 2;</code>
           * @param value The bytes for sourcePhAssetId to set.
           * @return This builder for chaining.
           */
          public Builder setSourcePhAssetIdBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            sourcePhAssetId_ = value;
            onChanged();
            return this;
          }

          private long sourceRagneStartTime_ ;
          /**
           * <code>optional int64 sourceRagneStartTime = 3;</code>
           * @return Whether the sourceRagneStartTime field is set.
           */
          @java.lang.Override
          public boolean hasSourceRagneStartTime() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <code>optional int64 sourceRagneStartTime = 3;</code>
           * @return The sourceRagneStartTime.
           */
          @java.lang.Override
          public long getSourceRagneStartTime() {
            return sourceRagneStartTime_;
          }
          /**
           * <code>optional int64 sourceRagneStartTime = 3;</code>
           * @param value The sourceRagneStartTime to set.
           * @return This builder for chaining.
           */
          public Builder setSourceRagneStartTime(long value) {
            bitField0_ |= 0x00000004;
            sourceRagneStartTime_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int64 sourceRagneStartTime = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearSourceRagneStartTime() {
            bitField0_ = (bitField0_ & ~0x00000004);
            sourceRagneStartTime_ = 0L;
            onChanged();
            return this;
          }

          private long sourceRagneDuration_ ;
          /**
           * <code>optional int64 sourceRagneDuration = 4;</code>
           * @return Whether the sourceRagneDuration field is set.
           */
          @java.lang.Override
          public boolean hasSourceRagneDuration() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <code>optional int64 sourceRagneDuration = 4;</code>
           * @return The sourceRagneDuration.
           */
          @java.lang.Override
          public long getSourceRagneDuration() {
            return sourceRagneDuration_;
          }
          /**
           * <code>optional int64 sourceRagneDuration = 4;</code>
           * @param value The sourceRagneDuration to set.
           * @return This builder for chaining.
           */
          public Builder setSourceRagneDuration(long value) {
            bitField0_ |= 0x00000008;
            sourceRagneDuration_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int64 sourceRagneDuration = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearSourceRagneDuration() {
            bitField0_ = (bitField0_ & ~0x00000008);
            sourceRagneDuration_ = 0L;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.ClipRange)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.ClipRange)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<ClipRange>
            PARSER = new com.google.protobuf.AbstractParser<ClipRange>() {
          @java.lang.Override
          public ClipRange parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new ClipRange(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<ClipRange> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ClipRange> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface EffectOptionItemOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.EffectOptionItem)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .KMProto.KMProject.EffectOptionItemType type = 1;</code>
         * @return Whether the type field is set.
         */
        boolean hasType();
        /**
         * <code>optional .KMProto.KMProject.EffectOptionItemType type = 1;</code>
         * @return The type.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemType getType();

        /**
         * <pre>
         * f_text
         * </pre>
         *
         * <code>optional string field_name = 2;</code>
         * @return Whether the fieldName field is set.
         */
        boolean hasFieldName();
        /**
         * <pre>
         * f_text
         * </pre>
         *
         * <code>optional string field_name = 2;</code>
         * @return The fieldName.
         */
        java.lang.String getFieldName();
        /**
         * <pre>
         * f_text
         * </pre>
         *
         * <code>optional string field_name = 2;</code>
         * @return The bytes for fieldName.
         */
        com.google.protobuf.ByteString
            getFieldNameBytes();

        /**
         * <pre>
         * 사용자 입력 텍스트 "가나다라"
         * </pre>
         *
         * <code>optional string value = 3;</code>
         * @return Whether the value field is set.
         */
        boolean hasValue();
        /**
         * <pre>
         * 사용자 입력 텍스트 "가나다라"
         * </pre>
         *
         * <code>optional string value = 3;</code>
         * @return The value.
         */
        java.lang.String getValue();
        /**
         * <pre>
         * 사용자 입력 텍스트 "가나다라"
         * </pre>
         *
         * <code>optional string value = 3;</code>
         * @return The bytes for value.
         */
        com.google.protobuf.ByteString
            getValueBytes();

        /**
         * <pre>
         * null : if font is not setted
         * kmm://font/system.font.id
         * kmm://font/builtin.font.id
         * kmm://assetitemid/com.xxx.xxx?serveridx=1234
         * </pre>
         *
         * <code>optional string text_font = 4;</code>
         * @return Whether the textFont field is set.
         */
        boolean hasTextFont();
        /**
         * <pre>
         * null : if font is not setted
         * kmm://font/system.font.id
         * kmm://font/builtin.font.id
         * kmm://assetitemid/com.xxx.xxx?serveridx=1234
         * </pre>
         *
         * <code>optional string text_font = 4;</code>
         * @return The textFont.
         */
        java.lang.String getTextFont();
        /**
         * <pre>
         * null : if font is not setted
         * kmm://font/system.font.id
         * kmm://font/builtin.font.id
         * kmm://assetitemid/com.xxx.xxx?serveridx=1234
         * </pre>
         *
         * <code>optional string text_font = 4;</code>
         * @return The bytes for textFont.
         */
        com.google.protobuf.ByteString
            getTextFontBytes();
      }
      /**
       * Protobuf type {@code KMProto.KMProject.EffectOptionItem}
       */
      public static final class EffectOptionItem extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.EffectOptionItem)
          EffectOptionItemOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use EffectOptionItem.newBuilder() to construct.
        private EffectOptionItem(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private EffectOptionItem() {
          type_ = 0;
          fieldName_ = "";
          value_ = "";
          textFont_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new EffectOptionItem();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private EffectOptionItem(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  int rawValue = input.readEnum();
                    @SuppressWarnings("deprecation")
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemType value = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemType.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    type_ = rawValue;
                  }
                  break;
                }
                case 18: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000002;
                  fieldName_ = bs;
                  break;
                }
                case 26: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000004;
                  value_ = bs;
                  break;
                }
                case 34: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000008;
                  textFont_ = bs;
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_EffectOptionItem_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_EffectOptionItem_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder.class);
        }

        private int bitField0_;
        public static final int TYPE_FIELD_NUMBER = 1;
        private int type_;
        /**
         * <code>optional .KMProto.KMProject.EffectOptionItemType type = 1;</code>
         * @return Whether the type field is set.
         */
        @java.lang.Override public boolean hasType() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.EffectOptionItemType type = 1;</code>
         * @return The type.
         */
        @java.lang.Override public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemType getType() {
          @SuppressWarnings("deprecation")
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemType result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemType.valueOf(type_);
          return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemType.EFFECT_OPTION_TEXT : result;
        }

        public static final int FIELD_NAME_FIELD_NUMBER = 2;
        private volatile java.lang.Object fieldName_;
        /**
         * <pre>
         * f_text
         * </pre>
         *
         * <code>optional string field_name = 2;</code>
         * @return Whether the fieldName field is set.
         */
        @java.lang.Override
        public boolean hasFieldName() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * f_text
         * </pre>
         *
         * <code>optional string field_name = 2;</code>
         * @return The fieldName.
         */
        @java.lang.Override
        public java.lang.String getFieldName() {
          java.lang.Object ref = fieldName_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              fieldName_ = s;
            }
            return s;
          }
        }
        /**
         * <pre>
         * f_text
         * </pre>
         *
         * <code>optional string field_name = 2;</code>
         * @return The bytes for fieldName.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getFieldNameBytes() {
          java.lang.Object ref = fieldName_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            fieldName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int VALUE_FIELD_NUMBER = 3;
        private volatile java.lang.Object value_;
        /**
         * <pre>
         * 사용자 입력 텍스트 "가나다라"
         * </pre>
         *
         * <code>optional string value = 3;</code>
         * @return Whether the value field is set.
         */
        @java.lang.Override
        public boolean hasValue() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * 사용자 입력 텍스트 "가나다라"
         * </pre>
         *
         * <code>optional string value = 3;</code>
         * @return The value.
         */
        @java.lang.Override
        public java.lang.String getValue() {
          java.lang.Object ref = value_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              value_ = s;
            }
            return s;
          }
        }
        /**
         * <pre>
         * 사용자 입력 텍스트 "가나다라"
         * </pre>
         *
         * <code>optional string value = 3;</code>
         * @return The bytes for value.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getValueBytes() {
          java.lang.Object ref = value_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            value_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int TEXT_FONT_FIELD_NUMBER = 4;
        private volatile java.lang.Object textFont_;
        /**
         * <pre>
         * null : if font is not setted
         * kmm://font/system.font.id
         * kmm://font/builtin.font.id
         * kmm://assetitemid/com.xxx.xxx?serveridx=1234
         * </pre>
         *
         * <code>optional string text_font = 4;</code>
         * @return Whether the textFont field is set.
         */
        @java.lang.Override
        public boolean hasTextFont() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * null : if font is not setted
         * kmm://font/system.font.id
         * kmm://font/builtin.font.id
         * kmm://assetitemid/com.xxx.xxx?serveridx=1234
         * </pre>
         *
         * <code>optional string text_font = 4;</code>
         * @return The textFont.
         */
        @java.lang.Override
        public java.lang.String getTextFont() {
          java.lang.Object ref = textFont_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              textFont_ = s;
            }
            return s;
          }
        }
        /**
         * <pre>
         * null : if font is not setted
         * kmm://font/system.font.id
         * kmm://font/builtin.font.id
         * kmm://assetitemid/com.xxx.xxx?serveridx=1234
         * </pre>
         *
         * <code>optional string text_font = 4;</code>
         * @return The bytes for textFont.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getTextFontBytes() {
          java.lang.Object ref = textFont_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            textFont_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeEnum(1, type_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, fieldName_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 3, value_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 4, textFont_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, type_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, fieldName_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, value_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, textFont_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem) obj;

          if (hasType() != other.hasType()) return false;
          if (hasType()) {
            if (type_ != other.type_) return false;
          }
          if (hasFieldName() != other.hasFieldName()) return false;
          if (hasFieldName()) {
            if (!getFieldName()
                .equals(other.getFieldName())) return false;
          }
          if (hasValue() != other.hasValue()) return false;
          if (hasValue()) {
            if (!getValue()
                .equals(other.getValue())) return false;
          }
          if (hasTextFont() != other.hasTextFont()) return false;
          if (hasTextFont()) {
            if (!getTextFont()
                .equals(other.getTextFont())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasType()) {
            hash = (37 * hash) + TYPE_FIELD_NUMBER;
            hash = (53 * hash) + type_;
          }
          if (hasFieldName()) {
            hash = (37 * hash) + FIELD_NAME_FIELD_NUMBER;
            hash = (53 * hash) + getFieldName().hashCode();
          }
          if (hasValue()) {
            hash = (37 * hash) + VALUE_FIELD_NUMBER;
            hash = (53 * hash) + getValue().hashCode();
          }
          if (hasTextFont()) {
            hash = (37 * hash) + TEXT_FONT_FIELD_NUMBER;
            hash = (53 * hash) + getTextFont().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code KMProto.KMProject.EffectOptionItem}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.EffectOptionItem)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_EffectOptionItem_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_EffectOptionItem_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            type_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            fieldName_ = "";
            bitField0_ = (bitField0_ & ~0x00000002);
            value_ = "";
            bitField0_ = (bitField0_ & ~0x00000004);
            textFont_ = "";
            bitField0_ = (bitField0_ & ~0x00000008);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_EffectOptionItem_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              to_bitField0_ |= 0x00000001;
            }
            result.type_ = type_;
            if (((from_bitField0_ & 0x00000002) != 0)) {
              to_bitField0_ |= 0x00000002;
            }
            result.fieldName_ = fieldName_;
            if (((from_bitField0_ & 0x00000004) != 0)) {
              to_bitField0_ |= 0x00000004;
            }
            result.value_ = value_;
            if (((from_bitField0_ & 0x00000008) != 0)) {
              to_bitField0_ |= 0x00000008;
            }
            result.textFont_ = textFont_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.getDefaultInstance()) return this;
            if (other.hasType()) {
              setType(other.getType());
            }
            if (other.hasFieldName()) {
              bitField0_ |= 0x00000002;
              fieldName_ = other.fieldName_;
              onChanged();
            }
            if (other.hasValue()) {
              bitField0_ |= 0x00000004;
              value_ = other.value_;
              onChanged();
            }
            if (other.hasTextFont()) {
              bitField0_ |= 0x00000008;
              textFont_ = other.textFont_;
              onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int type_ = 0;
          /**
           * <code>optional .KMProto.KMProject.EffectOptionItemType type = 1;</code>
           * @return Whether the type field is set.
           */
          @java.lang.Override public boolean hasType() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.EffectOptionItemType type = 1;</code>
           * @return The type.
           */
          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemType getType() {
            @SuppressWarnings("deprecation")
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemType result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemType.valueOf(type_);
            return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemType.EFFECT_OPTION_TEXT : result;
          }
          /**
           * <code>optional .KMProto.KMProject.EffectOptionItemType type = 1;</code>
           * @param value The type to set.
           * @return This builder for chaining.
           */
          public Builder setType(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemType value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            type_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.EffectOptionItemType type = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearType() {
            bitField0_ = (bitField0_ & ~0x00000001);
            type_ = 0;
            onChanged();
            return this;
          }

          private java.lang.Object fieldName_ = "";
          /**
           * <pre>
           * f_text
           * </pre>
           *
           * <code>optional string field_name = 2;</code>
           * @return Whether the fieldName field is set.
           */
          public boolean hasFieldName() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <pre>
           * f_text
           * </pre>
           *
           * <code>optional string field_name = 2;</code>
           * @return The fieldName.
           */
          public java.lang.String getFieldName() {
            java.lang.Object ref = fieldName_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                fieldName_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * f_text
           * </pre>
           *
           * <code>optional string field_name = 2;</code>
           * @return The bytes for fieldName.
           */
          public com.google.protobuf.ByteString
              getFieldNameBytes() {
            java.lang.Object ref = fieldName_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              fieldName_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * f_text
           * </pre>
           *
           * <code>optional string field_name = 2;</code>
           * @param value The fieldName to set.
           * @return This builder for chaining.
           */
          public Builder setFieldName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            fieldName_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * f_text
           * </pre>
           *
           * <code>optional string field_name = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearFieldName() {
            bitField0_ = (bitField0_ & ~0x00000002);
            fieldName_ = getDefaultInstance().getFieldName();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * f_text
           * </pre>
           *
           * <code>optional string field_name = 2;</code>
           * @param value The bytes for fieldName to set.
           * @return This builder for chaining.
           */
          public Builder setFieldNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            fieldName_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object value_ = "";
          /**
           * <pre>
           * 사용자 입력 텍스트 "가나다라"
           * </pre>
           *
           * <code>optional string value = 3;</code>
           * @return Whether the value field is set.
           */
          public boolean hasValue() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           * 사용자 입력 텍스트 "가나다라"
           * </pre>
           *
           * <code>optional string value = 3;</code>
           * @return The value.
           */
          public java.lang.String getValue() {
            java.lang.Object ref = value_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                value_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * 사용자 입력 텍스트 "가나다라"
           * </pre>
           *
           * <code>optional string value = 3;</code>
           * @return The bytes for value.
           */
          public com.google.protobuf.ByteString
              getValueBytes() {
            java.lang.Object ref = value_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              value_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * 사용자 입력 텍스트 "가나다라"
           * </pre>
           *
           * <code>optional string value = 3;</code>
           * @param value The value to set.
           * @return This builder for chaining.
           */
          public Builder setValue(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
            value_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * 사용자 입력 텍스트 "가나다라"
           * </pre>
           *
           * <code>optional string value = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearValue() {
            bitField0_ = (bitField0_ & ~0x00000004);
            value_ = getDefaultInstance().getValue();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * 사용자 입력 텍스트 "가나다라"
           * </pre>
           *
           * <code>optional string value = 3;</code>
           * @param value The bytes for value to set.
           * @return This builder for chaining.
           */
          public Builder setValueBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
            value_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object textFont_ = "";
          /**
           * <pre>
           * null : if font is not setted
           * kmm://font/system.font.id
           * kmm://font/builtin.font.id
           * kmm://assetitemid/com.xxx.xxx?serveridx=1234
           * </pre>
           *
           * <code>optional string text_font = 4;</code>
           * @return Whether the textFont field is set.
           */
          public boolean hasTextFont() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <pre>
           * null : if font is not setted
           * kmm://font/system.font.id
           * kmm://font/builtin.font.id
           * kmm://assetitemid/com.xxx.xxx?serveridx=1234
           * </pre>
           *
           * <code>optional string text_font = 4;</code>
           * @return The textFont.
           */
          public java.lang.String getTextFont() {
            java.lang.Object ref = textFont_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                textFont_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * null : if font is not setted
           * kmm://font/system.font.id
           * kmm://font/builtin.font.id
           * kmm://assetitemid/com.xxx.xxx?serveridx=1234
           * </pre>
           *
           * <code>optional string text_font = 4;</code>
           * @return The bytes for textFont.
           */
          public com.google.protobuf.ByteString
              getTextFontBytes() {
            java.lang.Object ref = textFont_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              textFont_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * null : if font is not setted
           * kmm://font/system.font.id
           * kmm://font/builtin.font.id
           * kmm://assetitemid/com.xxx.xxx?serveridx=1234
           * </pre>
           *
           * <code>optional string text_font = 4;</code>
           * @param value The textFont to set.
           * @return This builder for chaining.
           */
          public Builder setTextFont(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
            textFont_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * null : if font is not setted
           * kmm://font/system.font.id
           * kmm://font/builtin.font.id
           * kmm://assetitemid/com.xxx.xxx?serveridx=1234
           * </pre>
           *
           * <code>optional string text_font = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearTextFont() {
            bitField0_ = (bitField0_ & ~0x00000008);
            textFont_ = getDefaultInstance().getTextFont();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * null : if font is not setted
           * kmm://font/system.font.id
           * kmm://font/builtin.font.id
           * kmm://assetitemid/com.xxx.xxx?serveridx=1234
           * </pre>
           *
           * <code>optional string text_font = 4;</code>
           * @param value The bytes for textFont to set.
           * @return This builder for chaining.
           */
          public Builder setTextFontBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
            textFont_ = value;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.EffectOptionItem)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.EffectOptionItem)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<EffectOptionItem>
            PARSER = new com.google.protobuf.AbstractParser<EffectOptionItem>() {
          @java.lang.Override
          public EffectOptionItem parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new EffectOptionItem(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<EffectOptionItem> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<EffectOptionItem> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface StringHashMapOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.StringHashMap)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
         */
        java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry> 
            getEntriesList();
        /**
         * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry getEntries(int index);
        /**
         * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
         */
        int getEntriesCount();
        /**
         * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
         */
        java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntryOrBuilder> 
            getEntriesOrBuilderList();
        /**
         * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntryOrBuilder getEntriesOrBuilder(
            int index);
      }
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * Protobuf type {@code KMProto.KMProject.StringHashMap}
       */
      public static final class StringHashMap extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.StringHashMap)
          StringHashMapOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use StringHashMap.newBuilder() to construct.
        private StringHashMap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private StringHashMap() {
          entries_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new StringHashMap();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private StringHashMap(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                    entries_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry>();
                    mutable_bitField0_ |= 0x00000001;
                  }
                  entries_.add(
                      input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry.PARSER, extensionRegistry));
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000001) != 0)) {
              entries_ = java.util.Collections.unmodifiableList(entries_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_StringHashMap_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_StringHashMap_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.Builder.class);
        }

        public static final int ENTRIES_FIELD_NUMBER = 1;
        private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry> entries_;
        /**
         * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
         */
        @java.lang.Override
        public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry> getEntriesList() {
          return entries_;
        }
        /**
         * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
         */
        @java.lang.Override
        public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntryOrBuilder> 
            getEntriesOrBuilderList() {
          return entries_;
        }
        /**
         * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
         */
        @java.lang.Override
        public int getEntriesCount() {
          return entries_.size();
        }
        /**
         * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry getEntries(int index) {
          return entries_.get(index);
        }
        /**
         * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntryOrBuilder getEntriesOrBuilder(
            int index) {
          return entries_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          for (int i = 0; i < entries_.size(); i++) {
            output.writeMessage(1, entries_.get(i));
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          for (int i = 0; i < entries_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, entries_.get(i));
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap) obj;

          if (!getEntriesList()
              .equals(other.getEntriesList())) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (getEntriesCount() > 0) {
            hash = (37 * hash) + ENTRIES_FIELD_NUMBER;
            hash = (53 * hash) + getEntriesList().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * Protobuf type {@code KMProto.KMProject.StringHashMap}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.StringHashMap)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_StringHashMap_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_StringHashMap_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
              getEntriesFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            if (entriesBuilder_ == null) {
              entries_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              entriesBuilder_.clear();
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_StringHashMap_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap(this);
            int from_bitField0_ = bitField0_;
            if (entriesBuilder_ == null) {
              if (((bitField0_ & 0x00000001) != 0)) {
                entries_ = java.util.Collections.unmodifiableList(entries_);
                bitField0_ = (bitField0_ & ~0x00000001);
              }
              result.entries_ = entries_;
            } else {
              result.entries_ = entriesBuilder_.build();
            }
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.getDefaultInstance()) return this;
            if (entriesBuilder_ == null) {
              if (!other.entries_.isEmpty()) {
                if (entries_.isEmpty()) {
                  entries_ = other.entries_;
                  bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                  ensureEntriesIsMutable();
                  entries_.addAll(other.entries_);
                }
                onChanged();
              }
            } else {
              if (!other.entries_.isEmpty()) {
                if (entriesBuilder_.isEmpty()) {
                  entriesBuilder_.dispose();
                  entriesBuilder_ = null;
                  entries_ = other.entries_;
                  bitField0_ = (bitField0_ & ~0x00000001);
                  entriesBuilder_ = 
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                       getEntriesFieldBuilder() : null;
                } else {
                  entriesBuilder_.addAllMessages(other.entries_);
                }
              }
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry> entries_ =
            java.util.Collections.emptyList();
          private void ensureEntriesIsMutable() {
            if (!((bitField0_ & 0x00000001) != 0)) {
              entries_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry>(entries_);
              bitField0_ |= 0x00000001;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntryOrBuilder> entriesBuilder_;

          /**
           * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
           */
          public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry> getEntriesList() {
            if (entriesBuilder_ == null) {
              return java.util.Collections.unmodifiableList(entries_);
            } else {
              return entriesBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
           */
          public int getEntriesCount() {
            if (entriesBuilder_ == null) {
              return entries_.size();
            } else {
              return entriesBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry getEntries(int index) {
            if (entriesBuilder_ == null) {
              return entries_.get(index);
            } else {
              return entriesBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
           */
          public Builder setEntries(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry value) {
            if (entriesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureEntriesIsMutable();
              entries_.set(index, value);
              onChanged();
            } else {
              entriesBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
           */
          public Builder setEntries(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry.Builder builderForValue) {
            if (entriesBuilder_ == null) {
              ensureEntriesIsMutable();
              entries_.set(index, builderForValue.build());
              onChanged();
            } else {
              entriesBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
           */
          public Builder addEntries(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry value) {
            if (entriesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureEntriesIsMutable();
              entries_.add(value);
              onChanged();
            } else {
              entriesBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
           */
          public Builder addEntries(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry value) {
            if (entriesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureEntriesIsMutable();
              entries_.add(index, value);
              onChanged();
            } else {
              entriesBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
           */
          public Builder addEntries(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry.Builder builderForValue) {
            if (entriesBuilder_ == null) {
              ensureEntriesIsMutable();
              entries_.add(builderForValue.build());
              onChanged();
            } else {
              entriesBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
           */
          public Builder addEntries(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry.Builder builderForValue) {
            if (entriesBuilder_ == null) {
              ensureEntriesIsMutable();
              entries_.add(index, builderForValue.build());
              onChanged();
            } else {
              entriesBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
           */
          public Builder addAllEntries(
              java.lang.Iterable<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry> values) {
            if (entriesBuilder_ == null) {
              ensureEntriesIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, entries_);
              onChanged();
            } else {
              entriesBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
           */
          public Builder clearEntries() {
            if (entriesBuilder_ == null) {
              entries_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000001);
              onChanged();
            } else {
              entriesBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
           */
          public Builder removeEntries(int index) {
            if (entriesBuilder_ == null) {
              ensureEntriesIsMutable();
              entries_.remove(index);
              onChanged();
            } else {
              entriesBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry.Builder getEntriesBuilder(
              int index) {
            return getEntriesFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntryOrBuilder getEntriesOrBuilder(
              int index) {
            if (entriesBuilder_ == null) {
              return entries_.get(index);  } else {
              return entriesBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
           */
          public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntryOrBuilder> 
               getEntriesOrBuilderList() {
            if (entriesBuilder_ != null) {
              return entriesBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(entries_);
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry.Builder addEntriesBuilder() {
            return getEntriesFieldBuilder().addBuilder(
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry.getDefaultInstance());
          }
          /**
           * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry.Builder addEntriesBuilder(
              int index) {
            return getEntriesFieldBuilder().addBuilder(
                index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry.getDefaultInstance());
          }
          /**
           * <code>repeated .KMProto.KMProject.StringHashMapEntry entries = 1;</code>
           */
          public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry.Builder> 
               getEntriesBuilderList() {
            return getEntriesFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntryOrBuilder> 
              getEntriesFieldBuilder() {
            if (entriesBuilder_ == null) {
              entriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntryOrBuilder>(
                      entries_,
                      ((bitField0_ & 0x00000001) != 0),
                      getParentForChildren(),
                      isClean());
              entries_ = null;
            }
            return entriesBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.StringHashMap)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.StringHashMap)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<StringHashMap>
            PARSER = new com.google.protobuf.AbstractParser<StringHashMap>() {
          @java.lang.Override
          public StringHashMap parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new StringHashMap(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<StringHashMap> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<StringHashMap> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface StringHashMapEntryOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.StringHashMapEntry)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional string key = 1;</code>
         * @return Whether the key field is set.
         */
        boolean hasKey();
        /**
         * <code>optional string key = 1;</code>
         * @return The key.
         */
        java.lang.String getKey();
        /**
         * <code>optional string key = 1;</code>
         * @return The bytes for key.
         */
        com.google.protobuf.ByteString
            getKeyBytes();

        /**
         * <code>optional string value = 2;</code>
         * @return Whether the value field is set.
         */
        boolean hasValue();
        /**
         * <code>optional string value = 2;</code>
         * @return The value.
         */
        java.lang.String getValue();
        /**
         * <code>optional string value = 2;</code>
         * @return The bytes for value.
         */
        com.google.protobuf.ByteString
            getValueBytes();
      }
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * Protobuf type {@code KMProto.KMProject.StringHashMapEntry}
       */
      public static final class StringHashMapEntry extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.StringHashMapEntry)
          StringHashMapEntryOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use StringHashMapEntry.newBuilder() to construct.
        private StringHashMapEntry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private StringHashMapEntry() {
          key_ = "";
          value_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new StringHashMapEntry();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private StringHashMapEntry(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000001;
                  key_ = bs;
                  break;
                }
                case 18: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000002;
                  value_ = bs;
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_StringHashMapEntry_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_StringHashMapEntry_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry.Builder.class);
        }

        private int bitField0_;
        public static final int KEY_FIELD_NUMBER = 1;
        private volatile java.lang.Object key_;
        /**
         * <code>optional string key = 1;</code>
         * @return Whether the key field is set.
         */
        @java.lang.Override
        public boolean hasKey() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional string key = 1;</code>
         * @return The key.
         */
        @java.lang.Override
        public java.lang.String getKey() {
          java.lang.Object ref = key_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              key_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string key = 1;</code>
         * @return The bytes for key.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getKeyBytes() {
          java.lang.Object ref = key_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            key_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int VALUE_FIELD_NUMBER = 2;
        private volatile java.lang.Object value_;
        /**
         * <code>optional string value = 2;</code>
         * @return Whether the value field is set.
         */
        @java.lang.Override
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional string value = 2;</code>
         * @return The value.
         */
        @java.lang.Override
        public java.lang.String getValue() {
          java.lang.Object ref = value_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              value_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string value = 2;</code>
         * @return The bytes for value.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getValueBytes() {
          java.lang.Object ref = value_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            value_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry) obj;

          if (hasKey() != other.hasKey()) return false;
          if (hasKey()) {
            if (!getKey()
                .equals(other.getKey())) return false;
          }
          if (hasValue() != other.hasValue()) return false;
          if (hasValue()) {
            if (!getValue()
                .equals(other.getValue())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasKey()) {
            hash = (37 * hash) + KEY_FIELD_NUMBER;
            hash = (53 * hash) + getKey().hashCode();
          }
          if (hasValue()) {
            hash = (37 * hash) + VALUE_FIELD_NUMBER;
            hash = (53 * hash) + getValue().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * Protobuf type {@code KMProto.KMProject.StringHashMapEntry}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.StringHashMapEntry)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntryOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_StringHashMapEntry_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_StringHashMapEntry_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            key_ = "";
            bitField0_ = (bitField0_ & ~0x00000001);
            value_ = "";
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_StringHashMapEntry_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              to_bitField0_ |= 0x00000001;
            }
            result.key_ = key_;
            if (((from_bitField0_ & 0x00000002) != 0)) {
              to_bitField0_ |= 0x00000002;
            }
            result.value_ = value_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry.getDefaultInstance()) return this;
            if (other.hasKey()) {
              bitField0_ |= 0x00000001;
              key_ = other.key_;
              onChanged();
            }
            if (other.hasValue()) {
              bitField0_ |= 0x00000002;
              value_ = other.value_;
              onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object key_ = "";
          /**
           * <code>optional string key = 1;</code>
           * @return Whether the key field is set.
           */
          public boolean hasKey() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional string key = 1;</code>
           * @return The key.
           */
          public java.lang.String getKey() {
            java.lang.Object ref = key_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                key_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string key = 1;</code>
           * @return The bytes for key.
           */
          public com.google.protobuf.ByteString
              getKeyBytes() {
            java.lang.Object ref = key_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              key_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string key = 1;</code>
           * @param value The key to set.
           * @return This builder for chaining.
           */
          public Builder setKey(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            key_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string key = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearKey() {
            bitField0_ = (bitField0_ & ~0x00000001);
            key_ = getDefaultInstance().getKey();
            onChanged();
            return this;
          }
          /**
           * <code>optional string key = 1;</code>
           * @param value The bytes for key to set.
           * @return This builder for chaining.
           */
          public Builder setKeyBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            key_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object value_ = "";
          /**
           * <code>optional string value = 2;</code>
           * @return Whether the value field is set.
           */
          public boolean hasValue() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional string value = 2;</code>
           * @return The value.
           */
          public java.lang.String getValue() {
            java.lang.Object ref = value_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                value_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string value = 2;</code>
           * @return The bytes for value.
           */
          public com.google.protobuf.ByteString
              getValueBytes() {
            java.lang.Object ref = value_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              value_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string value = 2;</code>
           * @param value The value to set.
           * @return This builder for chaining.
           */
          public Builder setValue(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            value_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string value = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearValue() {
            bitField0_ = (bitField0_ & ~0x00000002);
            value_ = getDefaultInstance().getValue();
            onChanged();
            return this;
          }
          /**
           * <code>optional string value = 2;</code>
           * @param value The bytes for value to set.
           * @return This builder for chaining.
           */
          public Builder setValueBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            value_ = value;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.StringHashMapEntry)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.StringHashMapEntry)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<StringHashMapEntry>
            PARSER = new com.google.protobuf.AbstractParser<StringHashMapEntry>() {
          @java.lang.Override
          public StringHashMapEntry parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new StringHashMapEntry(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<StringHashMapEntry> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<StringHashMapEntry> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapEntry getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface MatrixOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.Matrix)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated float element = 1 [packed = true];</code>
         * @return A list containing the element.
         */
        java.util.List<java.lang.Float> getElementList();
        /**
         * <code>repeated float element = 1 [packed = true];</code>
         * @return The count of element.
         */
        int getElementCount();
        /**
         * <code>repeated float element = 1 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The element at the given index.
         */
        float getElement(int index);
      }
      /**
       * Protobuf type {@code KMProto.KMProject.Matrix}
       */
      public static final class Matrix extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.Matrix)
          MatrixOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Matrix.newBuilder() to construct.
        private Matrix(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Matrix() {
          element_ = emptyFloatList();
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new Matrix();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private Matrix(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 13: {
                  if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                    element_ = newFloatList();
                    mutable_bitField0_ |= 0x00000001;
                  }
                  element_.addFloat(input.readFloat());
                  break;
                }
                case 10: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                    element_ = newFloatList();
                    mutable_bitField0_ |= 0x00000001;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    element_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000001) != 0)) {
              element_.makeImmutable(); // C
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_Matrix_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_Matrix_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.Builder.class);
        }

        public static final int ELEMENT_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.FloatList element_;
        /**
         * <code>repeated float element = 1 [packed = true];</code>
         * @return A list containing the element.
         */
        @java.lang.Override
        public java.util.List<java.lang.Float>
            getElementList() {
          return element_;
        }
        /**
         * <code>repeated float element = 1 [packed = true];</code>
         * @return The count of element.
         */
        public int getElementCount() {
          return element_.size();
        }
        /**
         * <code>repeated float element = 1 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The element at the given index.
         */
        public float getElement(int index) {
          return element_.getFloat(index);
        }
        private int elementMemoizedSerializedSize = -1;

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (getElementList().size() > 0) {
            output.writeUInt32NoTag(10);
            output.writeUInt32NoTag(elementMemoizedSerializedSize);
          }
          for (int i = 0; i < element_.size(); i++) {
            output.writeFloatNoTag(element_.getFloat(i));
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          {
            int dataSize = 0;
            dataSize = 4 * getElementList().size();
            size += dataSize;
            if (!getElementList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            elementMemoizedSerializedSize = dataSize;
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix) obj;

          if (!getElementList()
              .equals(other.getElementList())) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (getElementCount() > 0) {
            hash = (37 * hash) + ELEMENT_FIELD_NUMBER;
            hash = (53 * hash) + getElementList().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code KMProto.KMProject.Matrix}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.Matrix)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.MatrixOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_Matrix_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_Matrix_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            element_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00000001);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_Matrix_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix(this);
            int from_bitField0_ = bitField0_;
            if (((bitField0_ & 0x00000001) != 0)) {
              element_.makeImmutable();
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.element_ = element_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix.getDefaultInstance()) return this;
            if (!other.element_.isEmpty()) {
              if (element_.isEmpty()) {
                element_ = other.element_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureElementIsMutable();
                element_.addAll(other.element_);
              }
              onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private com.google.protobuf.Internal.FloatList element_ = emptyFloatList();
          private void ensureElementIsMutable() {
            if (!((bitField0_ & 0x00000001) != 0)) {
              element_ = mutableCopy(element_);
              bitField0_ |= 0x00000001;
             }
          }
          /**
           * <code>repeated float element = 1 [packed = true];</code>
           * @return A list containing the element.
           */
          public java.util.List<java.lang.Float>
              getElementList() {
            return ((bitField0_ & 0x00000001) != 0) ?
                     java.util.Collections.unmodifiableList(element_) : element_;
          }
          /**
           * <code>repeated float element = 1 [packed = true];</code>
           * @return The count of element.
           */
          public int getElementCount() {
            return element_.size();
          }
          /**
           * <code>repeated float element = 1 [packed = true];</code>
           * @param index The index of the element to return.
           * @return The element at the given index.
           */
          public float getElement(int index) {
            return element_.getFloat(index);
          }
          /**
           * <code>repeated float element = 1 [packed = true];</code>
           * @param index The index to set the value at.
           * @param value The element to set.
           * @return This builder for chaining.
           */
          public Builder setElement(
              int index, float value) {
            ensureElementIsMutable();
            element_.setFloat(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float element = 1 [packed = true];</code>
           * @param value The element to add.
           * @return This builder for chaining.
           */
          public Builder addElement(float value) {
            ensureElementIsMutable();
            element_.addFloat(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float element = 1 [packed = true];</code>
           * @param values The element to add.
           * @return This builder for chaining.
           */
          public Builder addAllElement(
              java.lang.Iterable<? extends java.lang.Float> values) {
            ensureElementIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, element_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float element = 1 [packed = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearElement() {
            element_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.Matrix)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.Matrix)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<Matrix>
            PARSER = new com.google.protobuf.AbstractParser<Matrix>() {
          @java.lang.Override
          public Matrix parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Matrix(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<Matrix> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Matrix> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Matrix getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface TransitionOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.Transition)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string captureFilename = 100;</code>
         * @return Whether the captureFilename field is set.
         */
        boolean hasCaptureFilename();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string captureFilename = 100;</code>
         * @return The captureFilename.
         */
        java.lang.String getCaptureFilename();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string captureFilename = 100;</code>
         * @return The bytes for captureFilename.
         */
        com.google.protobuf.ByteString
            getCaptureFilenameBytes();

        /**
         * <code>optional string transition_effect_id = 101;</code>
         * @return Whether the transitionEffectId field is set.
         */
        boolean hasTransitionEffectId();
        /**
         * <code>optional string transition_effect_id = 101;</code>
         * @return The transitionEffectId.
         */
        java.lang.String getTransitionEffectId();
        /**
         * <code>optional string transition_effect_id = 101;</code>
         * @return The bytes for transitionEffectId.
         */
        com.google.protobuf.ByteString
            getTransitionEffectIdBytes();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ThemeEffectType auto_theme_effect = 102;</code>
         * @return Whether the autoThemeEffect field is set.
         */
        boolean hasAutoThemeEffect();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ThemeEffectType auto_theme_effect = 102;</code>
         * @return The autoThemeEffect.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ThemeEffectType getAutoThemeEffect();

        /**
         * <code>optional int32 transition_duration = 103;</code>
         * @return Whether the transitionDuration field is set.
         */
        boolean hasTransitionDuration();
        /**
         * <code>optional int32 transition_duration = 103;</code>
         * @return The transitionDuration.
         */
        int getTransitionDuration();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 transition_engine_duration = 104;</code>
         * @return Whether the transitionEngineDuration field is set.
         */
        boolean hasTransitionEngineDuration();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 transition_engine_duration = 104;</code>
         * @return The transitionEngineDuration.
         */
        int getTransitionEngineDuration();

        /**
         * <code>optional int32 transition_overlap_percent = 105;</code>
         * @return Whether the transitionOverlapPercent field is set.
         */
        boolean hasTransitionOverlapPercent();
        /**
         * <code>optional int32 transition_overlap_percent = 105;</code>
         * @return The transitionOverlapPercent.
         */
        int getTransitionOverlapPercent();

        /**
         * <code>optional int32 transition_offset_percent = 106;</code>
         * @return Whether the transitionOffsetPercent field is set.
         */
        boolean hasTransitionOffsetPercent();
        /**
         * <code>optional int32 transition_offset_percent = 106;</code>
         * @return The transitionOffsetPercent.
         */
        int getTransitionOffsetPercent();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool disabled = 107;</code>
         * @return Whether the disabled field is set.
         */
        boolean hasDisabled();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool disabled = 107;</code>
         * @return The disabled.
         */
        boolean getDisabled();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 minimum_duration = 108;</code>
         * @return Whether the minimumDuration field is set.
         */
        boolean hasMinimumDuration();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 minimum_duration = 108;</code>
         * @return The minimumDuration.
         */
        int getMinimumDuration();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 maximum_duration = 109;</code>
         * @return Whether the maximumDuration field is set.
         */
        boolean hasMaximumDuration();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 maximum_duration = 109;</code>
         * @return The maximumDuration.
         */
        int getMaximumDuration();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.StringHashMap effect_options = 110;</code>
         * @return Whether the effectOptions field is set.
         */
        boolean hasEffectOptions();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.StringHashMap effect_options = 110;</code>
         * @return The effectOptions.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap getEffectOptions();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.StringHashMap effect_options = 110;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapOrBuilder getEffectOptionsOrBuilder();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 duration_limit = 111;</code>
         * @return Whether the durationLimit field is set.
         */
        boolean hasDurationLimit();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 duration_limit = 111;</code>
         * @return The durationLimit.
         */
        int getDurationLimit();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool allow_overlap = 112;</code>
         * @return Whether the allowOverlap field is set.
         */
        boolean hasAllowOverlap();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool allow_overlap = 112;</code>
         * @return The allowOverlap.
         */
        boolean getAllowOverlap();

        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
         */
        java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem> 
            getEffectOptionList();
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem getEffectOption(int index);
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
         */
        int getEffectOptionCount();
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
         */
        java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder> 
            getEffectOptionOrBuilderList();
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder getEffectOptionOrBuilder(
            int index);
      }
      /**
       * Protobuf type {@code KMProto.KMProject.Transition}
       */
      public static final class Transition extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.Transition)
          TransitionOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Transition.newBuilder() to construct.
        private Transition(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Transition() {
          captureFilename_ = "";
          transitionEffectId_ = "";
          autoThemeEffect_ = 1;
          effectOption_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new Transition();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private Transition(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 802: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000001;
                  captureFilename_ = bs;
                  break;
                }
                case 810: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000002;
                  transitionEffectId_ = bs;
                  break;
                }
                case 816: {
                  int rawValue = input.readEnum();
                    @SuppressWarnings("deprecation")
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ThemeEffectType value = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ThemeEffectType.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(102, rawValue);
                  } else {
                    bitField0_ |= 0x00000004;
                    autoThemeEffect_ = rawValue;
                  }
                  break;
                }
                case 824: {
                  bitField0_ |= 0x00000008;
                  transitionDuration_ = input.readInt32();
                  break;
                }
                case 832: {
                  bitField0_ |= 0x00000010;
                  transitionEngineDuration_ = input.readInt32();
                  break;
                }
                case 840: {
                  bitField0_ |= 0x00000020;
                  transitionOverlapPercent_ = input.readInt32();
                  break;
                }
                case 848: {
                  bitField0_ |= 0x00000040;
                  transitionOffsetPercent_ = input.readInt32();
                  break;
                }
                case 856: {
                  bitField0_ |= 0x00000080;
                  disabled_ = input.readBool();
                  break;
                }
                case 864: {
                  bitField0_ |= 0x00000100;
                  minimumDuration_ = input.readInt32();
                  break;
                }
                case 872: {
                  bitField0_ |= 0x00000200;
                  maximumDuration_ = input.readInt32();
                  break;
                }
                case 882: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000400) != 0)) {
                    subBuilder = effectOptions_.toBuilder();
                  }
                  effectOptions_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(effectOptions_);
                    effectOptions_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000400;
                  break;
                }
                case 888: {
                  bitField0_ |= 0x00000800;
                  durationLimit_ = input.readInt32();
                  break;
                }
                case 896: {
                  bitField0_ |= 0x00001000;
                  allowOverlap_ = input.readBool();
                  break;
                }
                case 906: {
                  if (!((mutable_bitField0_ & 0x00002000) != 0)) {
                    effectOption_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem>();
                    mutable_bitField0_ |= 0x00002000;
                  }
                  effectOption_.add(
                      input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.PARSER, extensionRegistry));
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00002000) != 0)) {
              effectOption_ = java.util.Collections.unmodifiableList(effectOption_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_Transition_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_Transition_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition.Builder.class);
        }

        private int bitField0_;
        public static final int CAPTUREFILENAME_FIELD_NUMBER = 100;
        private volatile java.lang.Object captureFilename_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string captureFilename = 100;</code>
         * @return Whether the captureFilename field is set.
         */
        @java.lang.Override
        public boolean hasCaptureFilename() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string captureFilename = 100;</code>
         * @return The captureFilename.
         */
        @java.lang.Override
        public java.lang.String getCaptureFilename() {
          java.lang.Object ref = captureFilename_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              captureFilename_ = s;
            }
            return s;
          }
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string captureFilename = 100;</code>
         * @return The bytes for captureFilename.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getCaptureFilenameBytes() {
          java.lang.Object ref = captureFilename_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            captureFilename_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int TRANSITION_EFFECT_ID_FIELD_NUMBER = 101;
        private volatile java.lang.Object transitionEffectId_;
        /**
         * <code>optional string transition_effect_id = 101;</code>
         * @return Whether the transitionEffectId field is set.
         */
        @java.lang.Override
        public boolean hasTransitionEffectId() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional string transition_effect_id = 101;</code>
         * @return The transitionEffectId.
         */
        @java.lang.Override
        public java.lang.String getTransitionEffectId() {
          java.lang.Object ref = transitionEffectId_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              transitionEffectId_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string transition_effect_id = 101;</code>
         * @return The bytes for transitionEffectId.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getTransitionEffectIdBytes() {
          java.lang.Object ref = transitionEffectId_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            transitionEffectId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int AUTO_THEME_EFFECT_FIELD_NUMBER = 102;
        private int autoThemeEffect_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ThemeEffectType auto_theme_effect = 102;</code>
         * @return Whether the autoThemeEffect field is set.
         */
        @java.lang.Override public boolean hasAutoThemeEffect() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ThemeEffectType auto_theme_effect = 102;</code>
         * @return The autoThemeEffect.
         */
        @java.lang.Override public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ThemeEffectType getAutoThemeEffect() {
          @SuppressWarnings("deprecation")
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ThemeEffectType result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ThemeEffectType.valueOf(autoThemeEffect_);
          return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ThemeEffectType.THEME_EFFECT_TYPE_OPENING : result;
        }

        public static final int TRANSITION_DURATION_FIELD_NUMBER = 103;
        private int transitionDuration_;
        /**
         * <code>optional int32 transition_duration = 103;</code>
         * @return Whether the transitionDuration field is set.
         */
        @java.lang.Override
        public boolean hasTransitionDuration() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional int32 transition_duration = 103;</code>
         * @return The transitionDuration.
         */
        @java.lang.Override
        public int getTransitionDuration() {
          return transitionDuration_;
        }

        public static final int TRANSITION_ENGINE_DURATION_FIELD_NUMBER = 104;
        private int transitionEngineDuration_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 transition_engine_duration = 104;</code>
         * @return Whether the transitionEngineDuration field is set.
         */
        @java.lang.Override
        public boolean hasTransitionEngineDuration() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 transition_engine_duration = 104;</code>
         * @return The transitionEngineDuration.
         */
        @java.lang.Override
        public int getTransitionEngineDuration() {
          return transitionEngineDuration_;
        }

        public static final int TRANSITION_OVERLAP_PERCENT_FIELD_NUMBER = 105;
        private int transitionOverlapPercent_;
        /**
         * <code>optional int32 transition_overlap_percent = 105;</code>
         * @return Whether the transitionOverlapPercent field is set.
         */
        @java.lang.Override
        public boolean hasTransitionOverlapPercent() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional int32 transition_overlap_percent = 105;</code>
         * @return The transitionOverlapPercent.
         */
        @java.lang.Override
        public int getTransitionOverlapPercent() {
          return transitionOverlapPercent_;
        }

        public static final int TRANSITION_OFFSET_PERCENT_FIELD_NUMBER = 106;
        private int transitionOffsetPercent_;
        /**
         * <code>optional int32 transition_offset_percent = 106;</code>
         * @return Whether the transitionOffsetPercent field is set.
         */
        @java.lang.Override
        public boolean hasTransitionOffsetPercent() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <code>optional int32 transition_offset_percent = 106;</code>
         * @return The transitionOffsetPercent.
         */
        @java.lang.Override
        public int getTransitionOffsetPercent() {
          return transitionOffsetPercent_;
        }

        public static final int DISABLED_FIELD_NUMBER = 107;
        private boolean disabled_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool disabled = 107;</code>
         * @return Whether the disabled field is set.
         */
        @java.lang.Override
        public boolean hasDisabled() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool disabled = 107;</code>
         * @return The disabled.
         */
        @java.lang.Override
        public boolean getDisabled() {
          return disabled_;
        }

        public static final int MINIMUM_DURATION_FIELD_NUMBER = 108;
        private int minimumDuration_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 minimum_duration = 108;</code>
         * @return Whether the minimumDuration field is set.
         */
        @java.lang.Override
        public boolean hasMinimumDuration() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 minimum_duration = 108;</code>
         * @return The minimumDuration.
         */
        @java.lang.Override
        public int getMinimumDuration() {
          return minimumDuration_;
        }

        public static final int MAXIMUM_DURATION_FIELD_NUMBER = 109;
        private int maximumDuration_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 maximum_duration = 109;</code>
         * @return Whether the maximumDuration field is set.
         */
        @java.lang.Override
        public boolean hasMaximumDuration() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 maximum_duration = 109;</code>
         * @return The maximumDuration.
         */
        @java.lang.Override
        public int getMaximumDuration() {
          return maximumDuration_;
        }

        public static final int EFFECT_OPTIONS_FIELD_NUMBER = 110;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap effectOptions_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.StringHashMap effect_options = 110;</code>
         * @return Whether the effectOptions field is set.
         */
        @java.lang.Override
        public boolean hasEffectOptions() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.StringHashMap effect_options = 110;</code>
         * @return The effectOptions.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap getEffectOptions() {
          return effectOptions_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.getDefaultInstance() : effectOptions_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.StringHashMap effect_options = 110;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapOrBuilder getEffectOptionsOrBuilder() {
          return effectOptions_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.getDefaultInstance() : effectOptions_;
        }

        public static final int DURATION_LIMIT_FIELD_NUMBER = 111;
        private int durationLimit_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 duration_limit = 111;</code>
         * @return Whether the durationLimit field is set.
         */
        @java.lang.Override
        public boolean hasDurationLimit() {
          return ((bitField0_ & 0x00000800) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 duration_limit = 111;</code>
         * @return The durationLimit.
         */
        @java.lang.Override
        public int getDurationLimit() {
          return durationLimit_;
        }

        public static final int ALLOW_OVERLAP_FIELD_NUMBER = 112;
        private boolean allowOverlap_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool allow_overlap = 112;</code>
         * @return Whether the allowOverlap field is set.
         */
        @java.lang.Override
        public boolean hasAllowOverlap() {
          return ((bitField0_ & 0x00001000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool allow_overlap = 112;</code>
         * @return The allowOverlap.
         */
        @java.lang.Override
        public boolean getAllowOverlap() {
          return allowOverlap_;
        }

        public static final int EFFECTOPTION_FIELD_NUMBER = 113;
        private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem> effectOption_;
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
         */
        @java.lang.Override
        public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem> getEffectOptionList() {
          return effectOption_;
        }
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
         */
        @java.lang.Override
        public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder> 
            getEffectOptionOrBuilderList() {
          return effectOption_;
        }
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
         */
        @java.lang.Override
        public int getEffectOptionCount() {
          return effectOption_.size();
        }
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem getEffectOption(int index) {
          return effectOption_.get(index);
        }
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder getEffectOptionOrBuilder(
            int index) {
          return effectOption_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 100, captureFilename_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 101, transitionEffectId_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeEnum(102, autoThemeEffect_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeInt32(103, transitionDuration_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            output.writeInt32(104, transitionEngineDuration_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            output.writeInt32(105, transitionOverlapPercent_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            output.writeInt32(106, transitionOffsetPercent_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            output.writeBool(107, disabled_);
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            output.writeInt32(108, minimumDuration_);
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            output.writeInt32(109, maximumDuration_);
          }
          if (((bitField0_ & 0x00000400) != 0)) {
            output.writeMessage(110, getEffectOptions());
          }
          if (((bitField0_ & 0x00000800) != 0)) {
            output.writeInt32(111, durationLimit_);
          }
          if (((bitField0_ & 0x00001000) != 0)) {
            output.writeBool(112, allowOverlap_);
          }
          for (int i = 0; i < effectOption_.size(); i++) {
            output.writeMessage(113, effectOption_.get(i));
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(100, captureFilename_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(101, transitionEffectId_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(102, autoThemeEffect_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(103, transitionDuration_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(104, transitionEngineDuration_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(105, transitionOverlapPercent_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(106, transitionOffsetPercent_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(107, disabled_);
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(108, minimumDuration_);
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(109, maximumDuration_);
          }
          if (((bitField0_ & 0x00000400) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(110, getEffectOptions());
          }
          if (((bitField0_ & 0x00000800) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(111, durationLimit_);
          }
          if (((bitField0_ & 0x00001000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(112, allowOverlap_);
          }
          for (int i = 0; i < effectOption_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(113, effectOption_.get(i));
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition) obj;

          if (hasCaptureFilename() != other.hasCaptureFilename()) return false;
          if (hasCaptureFilename()) {
            if (!getCaptureFilename()
                .equals(other.getCaptureFilename())) return false;
          }
          if (hasTransitionEffectId() != other.hasTransitionEffectId()) return false;
          if (hasTransitionEffectId()) {
            if (!getTransitionEffectId()
                .equals(other.getTransitionEffectId())) return false;
          }
          if (hasAutoThemeEffect() != other.hasAutoThemeEffect()) return false;
          if (hasAutoThemeEffect()) {
            if (autoThemeEffect_ != other.autoThemeEffect_) return false;
          }
          if (hasTransitionDuration() != other.hasTransitionDuration()) return false;
          if (hasTransitionDuration()) {
            if (getTransitionDuration()
                != other.getTransitionDuration()) return false;
          }
          if (hasTransitionEngineDuration() != other.hasTransitionEngineDuration()) return false;
          if (hasTransitionEngineDuration()) {
            if (getTransitionEngineDuration()
                != other.getTransitionEngineDuration()) return false;
          }
          if (hasTransitionOverlapPercent() != other.hasTransitionOverlapPercent()) return false;
          if (hasTransitionOverlapPercent()) {
            if (getTransitionOverlapPercent()
                != other.getTransitionOverlapPercent()) return false;
          }
          if (hasTransitionOffsetPercent() != other.hasTransitionOffsetPercent()) return false;
          if (hasTransitionOffsetPercent()) {
            if (getTransitionOffsetPercent()
                != other.getTransitionOffsetPercent()) return false;
          }
          if (hasDisabled() != other.hasDisabled()) return false;
          if (hasDisabled()) {
            if (getDisabled()
                != other.getDisabled()) return false;
          }
          if (hasMinimumDuration() != other.hasMinimumDuration()) return false;
          if (hasMinimumDuration()) {
            if (getMinimumDuration()
                != other.getMinimumDuration()) return false;
          }
          if (hasMaximumDuration() != other.hasMaximumDuration()) return false;
          if (hasMaximumDuration()) {
            if (getMaximumDuration()
                != other.getMaximumDuration()) return false;
          }
          if (hasEffectOptions() != other.hasEffectOptions()) return false;
          if (hasEffectOptions()) {
            if (!getEffectOptions()
                .equals(other.getEffectOptions())) return false;
          }
          if (hasDurationLimit() != other.hasDurationLimit()) return false;
          if (hasDurationLimit()) {
            if (getDurationLimit()
                != other.getDurationLimit()) return false;
          }
          if (hasAllowOverlap() != other.hasAllowOverlap()) return false;
          if (hasAllowOverlap()) {
            if (getAllowOverlap()
                != other.getAllowOverlap()) return false;
          }
          if (!getEffectOptionList()
              .equals(other.getEffectOptionList())) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasCaptureFilename()) {
            hash = (37 * hash) + CAPTUREFILENAME_FIELD_NUMBER;
            hash = (53 * hash) + getCaptureFilename().hashCode();
          }
          if (hasTransitionEffectId()) {
            hash = (37 * hash) + TRANSITION_EFFECT_ID_FIELD_NUMBER;
            hash = (53 * hash) + getTransitionEffectId().hashCode();
          }
          if (hasAutoThemeEffect()) {
            hash = (37 * hash) + AUTO_THEME_EFFECT_FIELD_NUMBER;
            hash = (53 * hash) + autoThemeEffect_;
          }
          if (hasTransitionDuration()) {
            hash = (37 * hash) + TRANSITION_DURATION_FIELD_NUMBER;
            hash = (53 * hash) + getTransitionDuration();
          }
          if (hasTransitionEngineDuration()) {
            hash = (37 * hash) + TRANSITION_ENGINE_DURATION_FIELD_NUMBER;
            hash = (53 * hash) + getTransitionEngineDuration();
          }
          if (hasTransitionOverlapPercent()) {
            hash = (37 * hash) + TRANSITION_OVERLAP_PERCENT_FIELD_NUMBER;
            hash = (53 * hash) + getTransitionOverlapPercent();
          }
          if (hasTransitionOffsetPercent()) {
            hash = (37 * hash) + TRANSITION_OFFSET_PERCENT_FIELD_NUMBER;
            hash = (53 * hash) + getTransitionOffsetPercent();
          }
          if (hasDisabled()) {
            hash = (37 * hash) + DISABLED_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getDisabled());
          }
          if (hasMinimumDuration()) {
            hash = (37 * hash) + MINIMUM_DURATION_FIELD_NUMBER;
            hash = (53 * hash) + getMinimumDuration();
          }
          if (hasMaximumDuration()) {
            hash = (37 * hash) + MAXIMUM_DURATION_FIELD_NUMBER;
            hash = (53 * hash) + getMaximumDuration();
          }
          if (hasEffectOptions()) {
            hash = (37 * hash) + EFFECT_OPTIONS_FIELD_NUMBER;
            hash = (53 * hash) + getEffectOptions().hashCode();
          }
          if (hasDurationLimit()) {
            hash = (37 * hash) + DURATION_LIMIT_FIELD_NUMBER;
            hash = (53 * hash) + getDurationLimit();
          }
          if (hasAllowOverlap()) {
            hash = (37 * hash) + ALLOW_OVERLAP_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getAllowOverlap());
          }
          if (getEffectOptionCount() > 0) {
            hash = (37 * hash) + EFFECTOPTION_FIELD_NUMBER;
            hash = (53 * hash) + getEffectOptionList().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code KMProto.KMProject.Transition}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.Transition)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TransitionOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_Transition_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_Transition_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
              getEffectOptionsFieldBuilder();
              getEffectOptionFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            captureFilename_ = "";
            bitField0_ = (bitField0_ & ~0x00000001);
            transitionEffectId_ = "";
            bitField0_ = (bitField0_ & ~0x00000002);
            autoThemeEffect_ = 1;
            bitField0_ = (bitField0_ & ~0x00000004);
            transitionDuration_ = 0;
            bitField0_ = (bitField0_ & ~0x00000008);
            transitionEngineDuration_ = 0;
            bitField0_ = (bitField0_ & ~0x00000010);
            transitionOverlapPercent_ = 0;
            bitField0_ = (bitField0_ & ~0x00000020);
            transitionOffsetPercent_ = 0;
            bitField0_ = (bitField0_ & ~0x00000040);
            disabled_ = false;
            bitField0_ = (bitField0_ & ~0x00000080);
            minimumDuration_ = 0;
            bitField0_ = (bitField0_ & ~0x00000100);
            maximumDuration_ = 0;
            bitField0_ = (bitField0_ & ~0x00000200);
            if (effectOptionsBuilder_ == null) {
              effectOptions_ = null;
            } else {
              effectOptionsBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000400);
            durationLimit_ = 0;
            bitField0_ = (bitField0_ & ~0x00000800);
            allowOverlap_ = false;
            bitField0_ = (bitField0_ & ~0x00001000);
            if (effectOptionBuilder_ == null) {
              effectOption_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              effectOptionBuilder_.clear();
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_Transition_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              to_bitField0_ |= 0x00000001;
            }
            result.captureFilename_ = captureFilename_;
            if (((from_bitField0_ & 0x00000002) != 0)) {
              to_bitField0_ |= 0x00000002;
            }
            result.transitionEffectId_ = transitionEffectId_;
            if (((from_bitField0_ & 0x00000004) != 0)) {
              to_bitField0_ |= 0x00000004;
            }
            result.autoThemeEffect_ = autoThemeEffect_;
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.transitionDuration_ = transitionDuration_;
              to_bitField0_ |= 0x00000008;
            }
            if (((from_bitField0_ & 0x00000010) != 0)) {
              result.transitionEngineDuration_ = transitionEngineDuration_;
              to_bitField0_ |= 0x00000010;
            }
            if (((from_bitField0_ & 0x00000020) != 0)) {
              result.transitionOverlapPercent_ = transitionOverlapPercent_;
              to_bitField0_ |= 0x00000020;
            }
            if (((from_bitField0_ & 0x00000040) != 0)) {
              result.transitionOffsetPercent_ = transitionOffsetPercent_;
              to_bitField0_ |= 0x00000040;
            }
            if (((from_bitField0_ & 0x00000080) != 0)) {
              result.disabled_ = disabled_;
              to_bitField0_ |= 0x00000080;
            }
            if (((from_bitField0_ & 0x00000100) != 0)) {
              result.minimumDuration_ = minimumDuration_;
              to_bitField0_ |= 0x00000100;
            }
            if (((from_bitField0_ & 0x00000200) != 0)) {
              result.maximumDuration_ = maximumDuration_;
              to_bitField0_ |= 0x00000200;
            }
            if (((from_bitField0_ & 0x00000400) != 0)) {
              if (effectOptionsBuilder_ == null) {
                result.effectOptions_ = effectOptions_;
              } else {
                result.effectOptions_ = effectOptionsBuilder_.build();
              }
              to_bitField0_ |= 0x00000400;
            }
            if (((from_bitField0_ & 0x00000800) != 0)) {
              result.durationLimit_ = durationLimit_;
              to_bitField0_ |= 0x00000800;
            }
            if (((from_bitField0_ & 0x00001000) != 0)) {
              result.allowOverlap_ = allowOverlap_;
              to_bitField0_ |= 0x00001000;
            }
            if (effectOptionBuilder_ == null) {
              if (((bitField0_ & 0x00002000) != 0)) {
                effectOption_ = java.util.Collections.unmodifiableList(effectOption_);
                bitField0_ = (bitField0_ & ~0x00002000);
              }
              result.effectOption_ = effectOption_;
            } else {
              result.effectOption_ = effectOptionBuilder_.build();
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition.getDefaultInstance()) return this;
            if (other.hasCaptureFilename()) {
              bitField0_ |= 0x00000001;
              captureFilename_ = other.captureFilename_;
              onChanged();
            }
            if (other.hasTransitionEffectId()) {
              bitField0_ |= 0x00000002;
              transitionEffectId_ = other.transitionEffectId_;
              onChanged();
            }
            if (other.hasAutoThemeEffect()) {
              setAutoThemeEffect(other.getAutoThemeEffect());
            }
            if (other.hasTransitionDuration()) {
              setTransitionDuration(other.getTransitionDuration());
            }
            if (other.hasTransitionEngineDuration()) {
              setTransitionEngineDuration(other.getTransitionEngineDuration());
            }
            if (other.hasTransitionOverlapPercent()) {
              setTransitionOverlapPercent(other.getTransitionOverlapPercent());
            }
            if (other.hasTransitionOffsetPercent()) {
              setTransitionOffsetPercent(other.getTransitionOffsetPercent());
            }
            if (other.hasDisabled()) {
              setDisabled(other.getDisabled());
            }
            if (other.hasMinimumDuration()) {
              setMinimumDuration(other.getMinimumDuration());
            }
            if (other.hasMaximumDuration()) {
              setMaximumDuration(other.getMaximumDuration());
            }
            if (other.hasEffectOptions()) {
              mergeEffectOptions(other.getEffectOptions());
            }
            if (other.hasDurationLimit()) {
              setDurationLimit(other.getDurationLimit());
            }
            if (other.hasAllowOverlap()) {
              setAllowOverlap(other.getAllowOverlap());
            }
            if (effectOptionBuilder_ == null) {
              if (!other.effectOption_.isEmpty()) {
                if (effectOption_.isEmpty()) {
                  effectOption_ = other.effectOption_;
                  bitField0_ = (bitField0_ & ~0x00002000);
                } else {
                  ensureEffectOptionIsMutable();
                  effectOption_.addAll(other.effectOption_);
                }
                onChanged();
              }
            } else {
              if (!other.effectOption_.isEmpty()) {
                if (effectOptionBuilder_.isEmpty()) {
                  effectOptionBuilder_.dispose();
                  effectOptionBuilder_ = null;
                  effectOption_ = other.effectOption_;
                  bitField0_ = (bitField0_ & ~0x00002000);
                  effectOptionBuilder_ = 
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                       getEffectOptionFieldBuilder() : null;
                } else {
                  effectOptionBuilder_.addAllMessages(other.effectOption_);
                }
              }
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object captureFilename_ = "";
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string captureFilename = 100;</code>
           * @return Whether the captureFilename field is set.
           */
          public boolean hasCaptureFilename() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string captureFilename = 100;</code>
           * @return The captureFilename.
           */
          public java.lang.String getCaptureFilename() {
            java.lang.Object ref = captureFilename_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                captureFilename_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string captureFilename = 100;</code>
           * @return The bytes for captureFilename.
           */
          public com.google.protobuf.ByteString
              getCaptureFilenameBytes() {
            java.lang.Object ref = captureFilename_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              captureFilename_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string captureFilename = 100;</code>
           * @param value The captureFilename to set.
           * @return This builder for chaining.
           */
          public Builder setCaptureFilename(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            captureFilename_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string captureFilename = 100;</code>
           * @return This builder for chaining.
           */
          public Builder clearCaptureFilename() {
            bitField0_ = (bitField0_ & ~0x00000001);
            captureFilename_ = getDefaultInstance().getCaptureFilename();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string captureFilename = 100;</code>
           * @param value The bytes for captureFilename to set.
           * @return This builder for chaining.
           */
          public Builder setCaptureFilenameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            captureFilename_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object transitionEffectId_ = "";
          /**
           * <code>optional string transition_effect_id = 101;</code>
           * @return Whether the transitionEffectId field is set.
           */
          public boolean hasTransitionEffectId() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional string transition_effect_id = 101;</code>
           * @return The transitionEffectId.
           */
          public java.lang.String getTransitionEffectId() {
            java.lang.Object ref = transitionEffectId_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                transitionEffectId_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string transition_effect_id = 101;</code>
           * @return The bytes for transitionEffectId.
           */
          public com.google.protobuf.ByteString
              getTransitionEffectIdBytes() {
            java.lang.Object ref = transitionEffectId_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              transitionEffectId_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string transition_effect_id = 101;</code>
           * @param value The transitionEffectId to set.
           * @return This builder for chaining.
           */
          public Builder setTransitionEffectId(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            transitionEffectId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string transition_effect_id = 101;</code>
           * @return This builder for chaining.
           */
          public Builder clearTransitionEffectId() {
            bitField0_ = (bitField0_ & ~0x00000002);
            transitionEffectId_ = getDefaultInstance().getTransitionEffectId();
            onChanged();
            return this;
          }
          /**
           * <code>optional string transition_effect_id = 101;</code>
           * @param value The bytes for transitionEffectId to set.
           * @return This builder for chaining.
           */
          public Builder setTransitionEffectIdBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            transitionEffectId_ = value;
            onChanged();
            return this;
          }

          private int autoThemeEffect_ = 1;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ThemeEffectType auto_theme_effect = 102;</code>
           * @return Whether the autoThemeEffect field is set.
           */
          @java.lang.Override public boolean hasAutoThemeEffect() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ThemeEffectType auto_theme_effect = 102;</code>
           * @return The autoThemeEffect.
           */
          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ThemeEffectType getAutoThemeEffect() {
            @SuppressWarnings("deprecation")
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ThemeEffectType result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ThemeEffectType.valueOf(autoThemeEffect_);
            return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ThemeEffectType.THEME_EFFECT_TYPE_OPENING : result;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ThemeEffectType auto_theme_effect = 102;</code>
           * @param value The autoThemeEffect to set.
           * @return This builder for chaining.
           */
          public Builder setAutoThemeEffect(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ThemeEffectType value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000004;
            autoThemeEffect_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ThemeEffectType auto_theme_effect = 102;</code>
           * @return This builder for chaining.
           */
          public Builder clearAutoThemeEffect() {
            bitField0_ = (bitField0_ & ~0x00000004);
            autoThemeEffect_ = 1;
            onChanged();
            return this;
          }

          private int transitionDuration_ ;
          /**
           * <code>optional int32 transition_duration = 103;</code>
           * @return Whether the transitionDuration field is set.
           */
          @java.lang.Override
          public boolean hasTransitionDuration() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <code>optional int32 transition_duration = 103;</code>
           * @return The transitionDuration.
           */
          @java.lang.Override
          public int getTransitionDuration() {
            return transitionDuration_;
          }
          /**
           * <code>optional int32 transition_duration = 103;</code>
           * @param value The transitionDuration to set.
           * @return This builder for chaining.
           */
          public Builder setTransitionDuration(int value) {
            bitField0_ |= 0x00000008;
            transitionDuration_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 transition_duration = 103;</code>
           * @return This builder for chaining.
           */
          public Builder clearTransitionDuration() {
            bitField0_ = (bitField0_ & ~0x00000008);
            transitionDuration_ = 0;
            onChanged();
            return this;
          }

          private int transitionEngineDuration_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 transition_engine_duration = 104;</code>
           * @return Whether the transitionEngineDuration field is set.
           */
          @java.lang.Override
          public boolean hasTransitionEngineDuration() {
            return ((bitField0_ & 0x00000010) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 transition_engine_duration = 104;</code>
           * @return The transitionEngineDuration.
           */
          @java.lang.Override
          public int getTransitionEngineDuration() {
            return transitionEngineDuration_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 transition_engine_duration = 104;</code>
           * @param value The transitionEngineDuration to set.
           * @return This builder for chaining.
           */
          public Builder setTransitionEngineDuration(int value) {
            bitField0_ |= 0x00000010;
            transitionEngineDuration_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 transition_engine_duration = 104;</code>
           * @return This builder for chaining.
           */
          public Builder clearTransitionEngineDuration() {
            bitField0_ = (bitField0_ & ~0x00000010);
            transitionEngineDuration_ = 0;
            onChanged();
            return this;
          }

          private int transitionOverlapPercent_ ;
          /**
           * <code>optional int32 transition_overlap_percent = 105;</code>
           * @return Whether the transitionOverlapPercent field is set.
           */
          @java.lang.Override
          public boolean hasTransitionOverlapPercent() {
            return ((bitField0_ & 0x00000020) != 0);
          }
          /**
           * <code>optional int32 transition_overlap_percent = 105;</code>
           * @return The transitionOverlapPercent.
           */
          @java.lang.Override
          public int getTransitionOverlapPercent() {
            return transitionOverlapPercent_;
          }
          /**
           * <code>optional int32 transition_overlap_percent = 105;</code>
           * @param value The transitionOverlapPercent to set.
           * @return This builder for chaining.
           */
          public Builder setTransitionOverlapPercent(int value) {
            bitField0_ |= 0x00000020;
            transitionOverlapPercent_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 transition_overlap_percent = 105;</code>
           * @return This builder for chaining.
           */
          public Builder clearTransitionOverlapPercent() {
            bitField0_ = (bitField0_ & ~0x00000020);
            transitionOverlapPercent_ = 0;
            onChanged();
            return this;
          }

          private int transitionOffsetPercent_ ;
          /**
           * <code>optional int32 transition_offset_percent = 106;</code>
           * @return Whether the transitionOffsetPercent field is set.
           */
          @java.lang.Override
          public boolean hasTransitionOffsetPercent() {
            return ((bitField0_ & 0x00000040) != 0);
          }
          /**
           * <code>optional int32 transition_offset_percent = 106;</code>
           * @return The transitionOffsetPercent.
           */
          @java.lang.Override
          public int getTransitionOffsetPercent() {
            return transitionOffsetPercent_;
          }
          /**
           * <code>optional int32 transition_offset_percent = 106;</code>
           * @param value The transitionOffsetPercent to set.
           * @return This builder for chaining.
           */
          public Builder setTransitionOffsetPercent(int value) {
            bitField0_ |= 0x00000040;
            transitionOffsetPercent_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 transition_offset_percent = 106;</code>
           * @return This builder for chaining.
           */
          public Builder clearTransitionOffsetPercent() {
            bitField0_ = (bitField0_ & ~0x00000040);
            transitionOffsetPercent_ = 0;
            onChanged();
            return this;
          }

          private boolean disabled_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool disabled = 107;</code>
           * @return Whether the disabled field is set.
           */
          @java.lang.Override
          public boolean hasDisabled() {
            return ((bitField0_ & 0x00000080) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool disabled = 107;</code>
           * @return The disabled.
           */
          @java.lang.Override
          public boolean getDisabled() {
            return disabled_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool disabled = 107;</code>
           * @param value The disabled to set.
           * @return This builder for chaining.
           */
          public Builder setDisabled(boolean value) {
            bitField0_ |= 0x00000080;
            disabled_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool disabled = 107;</code>
           * @return This builder for chaining.
           */
          public Builder clearDisabled() {
            bitField0_ = (bitField0_ & ~0x00000080);
            disabled_ = false;
            onChanged();
            return this;
          }

          private int minimumDuration_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 minimum_duration = 108;</code>
           * @return Whether the minimumDuration field is set.
           */
          @java.lang.Override
          public boolean hasMinimumDuration() {
            return ((bitField0_ & 0x00000100) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 minimum_duration = 108;</code>
           * @return The minimumDuration.
           */
          @java.lang.Override
          public int getMinimumDuration() {
            return minimumDuration_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 minimum_duration = 108;</code>
           * @param value The minimumDuration to set.
           * @return This builder for chaining.
           */
          public Builder setMinimumDuration(int value) {
            bitField0_ |= 0x00000100;
            minimumDuration_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 minimum_duration = 108;</code>
           * @return This builder for chaining.
           */
          public Builder clearMinimumDuration() {
            bitField0_ = (bitField0_ & ~0x00000100);
            minimumDuration_ = 0;
            onChanged();
            return this;
          }

          private int maximumDuration_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 maximum_duration = 109;</code>
           * @return Whether the maximumDuration field is set.
           */
          @java.lang.Override
          public boolean hasMaximumDuration() {
            return ((bitField0_ & 0x00000200) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 maximum_duration = 109;</code>
           * @return The maximumDuration.
           */
          @java.lang.Override
          public int getMaximumDuration() {
            return maximumDuration_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 maximum_duration = 109;</code>
           * @param value The maximumDuration to set.
           * @return This builder for chaining.
           */
          public Builder setMaximumDuration(int value) {
            bitField0_ |= 0x00000200;
            maximumDuration_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 maximum_duration = 109;</code>
           * @return This builder for chaining.
           */
          public Builder clearMaximumDuration() {
            bitField0_ = (bitField0_ & ~0x00000200);
            maximumDuration_ = 0;
            onChanged();
            return this;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap effectOptions_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapOrBuilder> effectOptionsBuilder_;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 110;</code>
           * @return Whether the effectOptions field is set.
           */
          public boolean hasEffectOptions() {
            return ((bitField0_ & 0x00000400) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 110;</code>
           * @return The effectOptions.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap getEffectOptions() {
            if (effectOptionsBuilder_ == null) {
              return effectOptions_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.getDefaultInstance() : effectOptions_;
            } else {
              return effectOptionsBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 110;</code>
           */
          public Builder setEffectOptions(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap value) {
            if (effectOptionsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              effectOptions_ = value;
              onChanged();
            } else {
              effectOptionsBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000400;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 110;</code>
           */
          public Builder setEffectOptions(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.Builder builderForValue) {
            if (effectOptionsBuilder_ == null) {
              effectOptions_ = builderForValue.build();
              onChanged();
            } else {
              effectOptionsBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000400;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 110;</code>
           */
          public Builder mergeEffectOptions(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap value) {
            if (effectOptionsBuilder_ == null) {
              if (((bitField0_ & 0x00000400) != 0) &&
                  effectOptions_ != null &&
                  effectOptions_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.getDefaultInstance()) {
                effectOptions_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.newBuilder(effectOptions_).mergeFrom(value).buildPartial();
              } else {
                effectOptions_ = value;
              }
              onChanged();
            } else {
              effectOptionsBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000400;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 110;</code>
           */
          public Builder clearEffectOptions() {
            if (effectOptionsBuilder_ == null) {
              effectOptions_ = null;
              onChanged();
            } else {
              effectOptionsBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000400);
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 110;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.Builder getEffectOptionsBuilder() {
            bitField0_ |= 0x00000400;
            onChanged();
            return getEffectOptionsFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 110;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapOrBuilder getEffectOptionsOrBuilder() {
            if (effectOptionsBuilder_ != null) {
              return effectOptionsBuilder_.getMessageOrBuilder();
            } else {
              return effectOptions_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.getDefaultInstance() : effectOptions_;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 110;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapOrBuilder> 
              getEffectOptionsFieldBuilder() {
            if (effectOptionsBuilder_ == null) {
              effectOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapOrBuilder>(
                      getEffectOptions(),
                      getParentForChildren(),
                      isClean());
              effectOptions_ = null;
            }
            return effectOptionsBuilder_;
          }

          private int durationLimit_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 duration_limit = 111;</code>
           * @return Whether the durationLimit field is set.
           */
          @java.lang.Override
          public boolean hasDurationLimit() {
            return ((bitField0_ & 0x00000800) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 duration_limit = 111;</code>
           * @return The durationLimit.
           */
          @java.lang.Override
          public int getDurationLimit() {
            return durationLimit_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 duration_limit = 111;</code>
           * @param value The durationLimit to set.
           * @return This builder for chaining.
           */
          public Builder setDurationLimit(int value) {
            bitField0_ |= 0x00000800;
            durationLimit_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 duration_limit = 111;</code>
           * @return This builder for chaining.
           */
          public Builder clearDurationLimit() {
            bitField0_ = (bitField0_ & ~0x00000800);
            durationLimit_ = 0;
            onChanged();
            return this;
          }

          private boolean allowOverlap_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool allow_overlap = 112;</code>
           * @return Whether the allowOverlap field is set.
           */
          @java.lang.Override
          public boolean hasAllowOverlap() {
            return ((bitField0_ & 0x00001000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool allow_overlap = 112;</code>
           * @return The allowOverlap.
           */
          @java.lang.Override
          public boolean getAllowOverlap() {
            return allowOverlap_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool allow_overlap = 112;</code>
           * @param value The allowOverlap to set.
           * @return This builder for chaining.
           */
          public Builder setAllowOverlap(boolean value) {
            bitField0_ |= 0x00001000;
            allowOverlap_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool allow_overlap = 112;</code>
           * @return This builder for chaining.
           */
          public Builder clearAllowOverlap() {
            bitField0_ = (bitField0_ & ~0x00001000);
            allowOverlap_ = false;
            onChanged();
            return this;
          }

          private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem> effectOption_ =
            java.util.Collections.emptyList();
          private void ensureEffectOptionIsMutable() {
            if (!((bitField0_ & 0x00002000) != 0)) {
              effectOption_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem>(effectOption_);
              bitField0_ |= 0x00002000;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder> effectOptionBuilder_;

          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
           */
          public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem> getEffectOptionList() {
            if (effectOptionBuilder_ == null) {
              return java.util.Collections.unmodifiableList(effectOption_);
            } else {
              return effectOptionBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
           */
          public int getEffectOptionCount() {
            if (effectOptionBuilder_ == null) {
              return effectOption_.size();
            } else {
              return effectOptionBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem getEffectOption(int index) {
            if (effectOptionBuilder_ == null) {
              return effectOption_.get(index);
            } else {
              return effectOptionBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
           */
          public Builder setEffectOption(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem value) {
            if (effectOptionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureEffectOptionIsMutable();
              effectOption_.set(index, value);
              onChanged();
            } else {
              effectOptionBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
           */
          public Builder setEffectOption(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder builderForValue) {
            if (effectOptionBuilder_ == null) {
              ensureEffectOptionIsMutable();
              effectOption_.set(index, builderForValue.build());
              onChanged();
            } else {
              effectOptionBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
           */
          public Builder addEffectOption(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem value) {
            if (effectOptionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureEffectOptionIsMutable();
              effectOption_.add(value);
              onChanged();
            } else {
              effectOptionBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
           */
          public Builder addEffectOption(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem value) {
            if (effectOptionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureEffectOptionIsMutable();
              effectOption_.add(index, value);
              onChanged();
            } else {
              effectOptionBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
           */
          public Builder addEffectOption(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder builderForValue) {
            if (effectOptionBuilder_ == null) {
              ensureEffectOptionIsMutable();
              effectOption_.add(builderForValue.build());
              onChanged();
            } else {
              effectOptionBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
           */
          public Builder addEffectOption(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder builderForValue) {
            if (effectOptionBuilder_ == null) {
              ensureEffectOptionIsMutable();
              effectOption_.add(index, builderForValue.build());
              onChanged();
            } else {
              effectOptionBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
           */
          public Builder addAllEffectOption(
              java.lang.Iterable<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem> values) {
            if (effectOptionBuilder_ == null) {
              ensureEffectOptionIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, effectOption_);
              onChanged();
            } else {
              effectOptionBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
           */
          public Builder clearEffectOption() {
            if (effectOptionBuilder_ == null) {
              effectOption_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00002000);
              onChanged();
            } else {
              effectOptionBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
           */
          public Builder removeEffectOption(int index) {
            if (effectOptionBuilder_ == null) {
              ensureEffectOptionIsMutable();
              effectOption_.remove(index);
              onChanged();
            } else {
              effectOptionBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder getEffectOptionBuilder(
              int index) {
            return getEffectOptionFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder getEffectOptionOrBuilder(
              int index) {
            if (effectOptionBuilder_ == null) {
              return effectOption_.get(index);  } else {
              return effectOptionBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
           */
          public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder> 
               getEffectOptionOrBuilderList() {
            if (effectOptionBuilder_ != null) {
              return effectOptionBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(effectOption_);
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder addEffectOptionBuilder() {
            return getEffectOptionFieldBuilder().addBuilder(
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.getDefaultInstance());
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder addEffectOptionBuilder(
              int index) {
            return getEffectOptionFieldBuilder().addBuilder(
                index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.getDefaultInstance());
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 113;</code>
           */
          public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder> 
               getEffectOptionBuilderList() {
            return getEffectOptionFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder> 
              getEffectOptionFieldBuilder() {
            if (effectOptionBuilder_ == null) {
              effectOptionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder>(
                      effectOption_,
                      ((bitField0_ & 0x00002000) != 0),
                      getParentForChildren(),
                      isClean());
              effectOption_ = null;
            }
            return effectOptionBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.Transition)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.Transition)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<Transition>
            PARSER = new com.google.protobuf.AbstractParser<Transition>() {
          @java.lang.Override
          public Transition parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Transition(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<Transition> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Transition> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Transition getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface AudioClipOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.AudioClip)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 extra_relative_start_time = 100;</code>
         * @return Whether the extraRelativeStartTime field is set.
         */
        boolean hasExtraRelativeStartTime();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 extra_relative_start_time = 100;</code>
         * @return The extraRelativeStartTime.
         */
        int getExtraRelativeStartTime();

        /**
         * <code>optional int32 relative_start_time = 101;</code>
         * @return Whether the relativeStartTime field is set.
         */
        boolean hasRelativeStartTime();
        /**
         * <code>optional int32 relative_start_time = 101;</code>
         * @return The relativeStartTime.
         */
        int getRelativeStartTime();

        /**
         * <code>optional int32 relative_end_time = 102;</code>
         * @return Whether the relativeEndTime field is set.
         */
        boolean hasRelativeEndTime();
        /**
         * <code>optional int32 relative_end_time = 102;</code>
         * @return The relativeEndTime.
         */
        int getRelativeEndTime();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 saved_relative_end_time = 103;</code>
         * @return Whether the savedRelativeEndTime field is set.
         */
        boolean hasSavedRelativeEndTime();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 saved_relative_end_time = 103;</code>
         * @return The savedRelativeEndTime.
         */
        int getSavedRelativeEndTime();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 saved_relative_start_time = 104;</code>
         * @return Whether the savedRelativeStartTime field is set.
         */
        boolean hasSavedRelativeStartTime();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 saved_relative_start_time = 104;</code>
         * @return The savedRelativeStartTime.
         */
        int getSavedRelativeStartTime();

        /**
         * <code>optional int32 engine_clip_id = 105;</code>
         * @return Whether the engineClipId field is set.
         */
        boolean hasEngineClipId();
        /**
         * <code>optional int32 engine_clip_id = 105;</code>
         * @return The engineClipId.
         */
        int getEngineClipId();

        /**
         * <code>optional int32 duration = 106;</code>
         * @return Whether the duration field is set.
         */
        boolean hasDuration();
        /**
         * <code>optional int32 duration = 106;</code>
         * @return The duration.
         */
        int getDuration();

        /**
         * <code>optional int32 trim_time_start = 107;</code>
         * @return Whether the trimTimeStart field is set.
         */
        boolean hasTrimTimeStart();
        /**
         * <code>optional int32 trim_time_start = 107;</code>
         * @return The trimTimeStart.
         */
        int getTrimTimeStart();

        /**
         * <code>optional int32 trim_time_end = 108;</code>
         * @return Whether the trimTimeEnd field is set.
         */
        boolean hasTrimTimeEnd();
        /**
         * <code>optional int32 trim_time_end = 108;</code>
         * @return The trimTimeEnd.
         */
        int getTrimTimeEnd();

        /**
         * <code>optional int32 saved_trim_time_start = 109;</code>
         * @return Whether the savedTrimTimeStart field is set.
         */
        boolean hasSavedTrimTimeStart();
        /**
         * <code>optional int32 saved_trim_time_start = 109;</code>
         * @return The savedTrimTimeStart.
         */
        int getSavedTrimTimeStart();

        /**
         * <code>optional int32 saved_trim_time_end = 110;</code>
         * @return Whether the savedTrimTimeEnd field is set.
         */
        boolean hasSavedTrimTimeEnd();
        /**
         * <code>optional int32 saved_trim_time_end = 110;</code>
         * @return The savedTrimTimeEnd.
         */
        int getSavedTrimTimeEnd();

        /**
         * <code>optional int32 clip_volume = 111;</code>
         * @return Whether the clipVolume field is set.
         */
        boolean hasClipVolume();
        /**
         * <code>optional int32 clip_volume = 111;</code>
         * @return The clipVolume.
         */
        int getClipVolume();

        /**
         * <code>optional string media_path = 112;</code>
         * @return Whether the mediaPath field is set.
         */
        boolean hasMediaPath();
        /**
         * <code>optional string media_path = 112;</code>
         * @return The mediaPath.
         */
        java.lang.String getMediaPath();
        /**
         * <code>optional string media_path = 112;</code>
         * @return The bytes for mediaPath.
         */
        com.google.protobuf.ByteString
            getMediaPathBytes();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string original_media_path = 113;</code>
         * @return Whether the originalMediaPath field is set.
         */
        boolean hasOriginalMediaPath();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string original_media_path = 113;</code>
         * @return The originalMediaPath.
         */
        java.lang.String getOriginalMediaPath();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string original_media_path = 113;</code>
         * @return The bytes for originalMediaPath.
         */
        com.google.protobuf.ByteString
            getOriginalMediaPathBytes();

        /**
         * <code>optional string media_title = 114;</code>
         * @return Whether the mediaTitle field is set.
         */
        boolean hasMediaTitle();
        /**
         * <code>optional string media_title = 114;</code>
         * @return The mediaTitle.
         */
        java.lang.String getMediaTitle();
        /**
         * <code>optional string media_title = 114;</code>
         * @return The bytes for mediaTitle.
         */
        com.google.protobuf.ByteString
            getMediaTitleBytes();

        /**
         * <code>optional bool mute_audio = 115;</code>
         * @return Whether the muteAudio field is set.
         */
        boolean hasMuteAudio();
        /**
         * <code>optional bool mute_audio = 115;</code>
         * @return The muteAudio.
         */
        boolean getMuteAudio();

        /**
         * <code>optional bool loop = 116;</code>
         * @return Whether the loop field is set.
         */
        boolean hasLoop();
        /**
         * <code>optional bool loop = 116;</code>
         * @return The loop.
         */
        boolean getLoop();

        /**
         * <code>optional bool is_voice_recording = 117;</code>
         * @return Whether the isVoiceRecording field is set.
         */
        boolean hasIsVoiceRecording();
        /**
         * <code>optional bool is_voice_recording = 117;</code>
         * @return The isVoiceRecording.
         */
        boolean getIsVoiceRecording();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool is_pending_voice_recording = 118;</code>
         * @return Whether the isPendingVoiceRecording field is set.
         */
        boolean hasIsPendingVoiceRecording();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool is_pending_voice_recording = 118;</code>
         * @return The isPendingVoiceRecording.
         */
        boolean getIsPendingVoiceRecording();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool is_extract_audio = 119;</code>
         * @return Whether the isExtractAudio field is set.
         */
        boolean hasIsExtractAudio();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool is_extract_audio = 119;</code>
         * @return The isExtractAudio.
         */
        boolean getIsExtractAudio();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional uint64 video_clip_item_uuid_lsb = 120;</code>
         * @return Whether the videoClipItemUuidLsb field is set.
         */
        boolean hasVideoClipItemUuidLsb();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional uint64 video_clip_item_uuid_lsb = 120;</code>
         * @return The videoClipItemUuidLsb.
         */
        long getVideoClipItemUuidLsb();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional uint64 video_clip_item_uuid_msb = 121;</code>
         * @return Whether the videoClipItemUuidMsb field is set.
         */
        boolean hasVideoClipItemUuidMsb();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional uint64 video_clip_item_uuid_msb = 121;</code>
         * @return The videoClipItemUuidMsb.
         */
        long getVideoClipItemUuidMsb();

        /**
         * <pre>
         * m_isUserChoiceBGMusic
         * </pre>
         *
         * <code>optional bool is_bg_music = 122;</code>
         * @return Whether the isBgMusic field is set.
         */
        boolean hasIsBgMusic();
        /**
         * <pre>
         * m_isUserChoiceBGMusic
         * </pre>
         *
         * <code>optional bool is_bg_music = 122;</code>
         * @return The isBgMusic.
         */
        boolean getIsBgMusic();

        /**
         * <code>repeated int32 volume_envelope_time = 123 [packed = true];</code>
         * @return A list containing the volumeEnvelopeTime.
         */
        java.util.List<java.lang.Integer> getVolumeEnvelopeTimeList();
        /**
         * <code>repeated int32 volume_envelope_time = 123 [packed = true];</code>
         * @return The count of volumeEnvelopeTime.
         */
        int getVolumeEnvelopeTimeCount();
        /**
         * <code>repeated int32 volume_envelope_time = 123 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The volumeEnvelopeTime at the given index.
         */
        int getVolumeEnvelopeTime(int index);

        /**
         * <code>repeated int32 volume_envelope_level = 124 [packed = true];</code>
         * @return A list containing the volumeEnvelopeLevel.
         */
        java.util.List<java.lang.Integer> getVolumeEnvelopeLevelList();
        /**
         * <code>repeated int32 volume_envelope_level = 124 [packed = true];</code>
         * @return The count of volumeEnvelopeLevel.
         */
        int getVolumeEnvelopeLevelCount();
        /**
         * <code>repeated int32 volume_envelope_level = 124 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The volumeEnvelopeLevel at the given index.
         */
        int getVolumeEnvelopeLevel(int index);

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float clip_width = 125;</code>
         * @return Whether the clipWidth field is set.
         */
        boolean hasClipWidth();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float clip_width = 125;</code>
         * @return The clipWidth.
         */
        float getClipWidth();

        /**
         * <code>optional bool pinned = 126;</code>
         * @return Whether the pinned field is set.
         */
        boolean hasPinned();
        /**
         * <code>optional bool pinned = 126;</code>
         * @return The pinned.
         */
        boolean getPinned();

        /**
         * <code>optional int32 saved_loop_duration = 127;</code>
         * @return Whether the savedLoopDuration field is set.
         */
        boolean hasSavedLoopDuration();
        /**
         * <code>optional int32 saved_loop_duration = 127;</code>
         * @return The savedLoopDuration.
         */
        int getSavedLoopDuration();

        /**
         * <code>optional bool extend_to_end = 128;</code>
         * @return Whether the extendToEnd field is set.
         */
        boolean hasExtendToEnd();
        /**
         * <code>optional bool extend_to_end = 128;</code>
         * @return The extendToEnd.
         */
        boolean getExtendToEnd();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 voice_changer = 129;</code>
         * @return Whether the voiceChanger field is set.
         */
        boolean hasVoiceChanger();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 voice_changer = 129;</code>
         * @return The voiceChanger.
         */
        int getVoiceChanger();

        /**
         * <code>optional int32 pan_left = 130;</code>
         * @return Whether the panLeft field is set.
         */
        boolean hasPanLeft();
        /**
         * <code>optional int32 pan_left = 130;</code>
         * @return The panLeft.
         */
        int getPanLeft();

        /**
         * <code>optional int32 pan_right = 131;</code>
         * @return Whether the panRight field is set.
         */
        boolean hasPanRight();
        /**
         * <code>optional int32 pan_right = 131;</code>
         * @return The panRight.
         */
        int getPanRight();

        /**
         * <pre>
         * 0: off, 4: on (default: 0)
         * </pre>
         *
         * <code>optional int32 compressor = 132;</code>
         * @return Whether the compressor field is set.
         */
        boolean hasCompressor();
        /**
         * <pre>
         * 0: off, 4: on (default: 0)
         * </pre>
         *
         * <code>optional int32 compressor = 132;</code>
         * @return The compressor.
         */
        int getCompressor();

        /**
         * <code>optional int32 pitch_factor = 133;</code>
         * @return Whether the pitchFactor field is set.
         */
        boolean hasPitchFactor();
        /**
         * <code>optional int32 pitch_factor = 133;</code>
         * @return The pitchFactor.
         */
        int getPitchFactor();

        /**
         * <code>optional string clip_name = 134;</code>
         * @return Whether the clipName field is set.
         */
        boolean hasClipName();
        /**
         * <code>optional string clip_name = 134;</code>
         * @return The clipName.
         */
        java.lang.String getClipName();
        /**
         * <code>optional string clip_name = 134;</code>
         * @return The bytes for clipName.
         */
        com.google.protobuf.ByteString
            getClipNameBytes();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string audio_asset_id_ios = 135;</code>
         * @return Whether the audioAssetIdIos field is set.
         */
        boolean hasAudioAssetIdIos();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string audio_asset_id_ios = 135;</code>
         * @return The audioAssetIdIos.
         */
        java.lang.String getAudioAssetIdIos();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string audio_asset_id_ios = 135;</code>
         * @return The bytes for audioAssetIdIos.
         */
        com.google.protobuf.ByteString
            getAudioAssetIdIosBytes();

        /**
         * <code>optional string enhancedAudioFilter = 136;</code>
         * @return Whether the enhancedAudioFilter field is set.
         */
        boolean hasEnhancedAudioFilter();
        /**
         * <code>optional string enhancedAudioFilter = 136;</code>
         * @return The enhancedAudioFilter.
         */
        java.lang.String getEnhancedAudioFilter();
        /**
         * <code>optional string enhancedAudioFilter = 136;</code>
         * @return The bytes for enhancedAudioFilter.
         */
        com.google.protobuf.ByteString
            getEnhancedAudioFilterBytes();

        /**
         * <code>optional string equalizer = 137;</code>
         * @return Whether the equalizer field is set.
         */
        boolean hasEqualizer();
        /**
         * <code>optional string equalizer = 137;</code>
         * @return The equalizer.
         */
        java.lang.String getEqualizer();
        /**
         * <code>optional string equalizer = 137;</code>
         * @return The bytes for equalizer.
         */
        com.google.protobuf.ByteString
            getEqualizerBytes();

        /**
         * <code>optional string reverb = 138;</code>
         * @return Whether the reverb field is set.
         */
        boolean hasReverb();
        /**
         * <code>optional string reverb = 138;</code>
         * @return The reverb.
         */
        java.lang.String getReverb();
        /**
         * <code>optional string reverb = 138;</code>
         * @return The bytes for reverb.
         */
        com.google.protobuf.ByteString
            getReverbBytes();
      }
      /**
       * Protobuf type {@code KMProto.KMProject.AudioClip}
       */
      public static final class AudioClip extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.AudioClip)
          AudioClipOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use AudioClip.newBuilder() to construct.
        private AudioClip(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private AudioClip() {
          mediaPath_ = "";
          originalMediaPath_ = "";
          mediaTitle_ = "";
          volumeEnvelopeTime_ = emptyIntList();
          volumeEnvelopeLevel_ = emptyIntList();
          clipName_ = "";
          audioAssetIdIos_ = "";
          enhancedAudioFilter_ = "";
          equalizer_ = "";
          reverb_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new AudioClip();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private AudioClip(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          int mutable_bitField1_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 800: {
                  bitField0_ |= 0x00000001;
                  extraRelativeStartTime_ = input.readInt32();
                  break;
                }
                case 808: {
                  bitField0_ |= 0x00000002;
                  relativeStartTime_ = input.readInt32();
                  break;
                }
                case 816: {
                  bitField0_ |= 0x00000004;
                  relativeEndTime_ = input.readInt32();
                  break;
                }
                case 824: {
                  bitField0_ |= 0x00000008;
                  savedRelativeEndTime_ = input.readInt32();
                  break;
                }
                case 832: {
                  bitField0_ |= 0x00000010;
                  savedRelativeStartTime_ = input.readInt32();
                  break;
                }
                case 840: {
                  bitField0_ |= 0x00000020;
                  engineClipId_ = input.readInt32();
                  break;
                }
                case 848: {
                  bitField0_ |= 0x00000040;
                  duration_ = input.readInt32();
                  break;
                }
                case 856: {
                  bitField0_ |= 0x00000080;
                  trimTimeStart_ = input.readInt32();
                  break;
                }
                case 864: {
                  bitField0_ |= 0x00000100;
                  trimTimeEnd_ = input.readInt32();
                  break;
                }
                case 872: {
                  bitField0_ |= 0x00000200;
                  savedTrimTimeStart_ = input.readInt32();
                  break;
                }
                case 880: {
                  bitField0_ |= 0x00000400;
                  savedTrimTimeEnd_ = input.readInt32();
                  break;
                }
                case 888: {
                  bitField0_ |= 0x00000800;
                  clipVolume_ = input.readInt32();
                  break;
                }
                case 898: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00001000;
                  mediaPath_ = bs;
                  break;
                }
                case 906: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00002000;
                  originalMediaPath_ = bs;
                  break;
                }
                case 914: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00004000;
                  mediaTitle_ = bs;
                  break;
                }
                case 920: {
                  bitField0_ |= 0x00008000;
                  muteAudio_ = input.readBool();
                  break;
                }
                case 928: {
                  bitField0_ |= 0x00010000;
                  loop_ = input.readBool();
                  break;
                }
                case 936: {
                  bitField0_ |= 0x00020000;
                  isVoiceRecording_ = input.readBool();
                  break;
                }
                case 944: {
                  bitField0_ |= 0x00040000;
                  isPendingVoiceRecording_ = input.readBool();
                  break;
                }
                case 952: {
                  bitField0_ |= 0x00080000;
                  isExtractAudio_ = input.readBool();
                  break;
                }
                case 960: {
                  bitField0_ |= 0x00100000;
                  videoClipItemUuidLsb_ = input.readUInt64();
                  break;
                }
                case 968: {
                  bitField0_ |= 0x00200000;
                  videoClipItemUuidMsb_ = input.readUInt64();
                  break;
                }
                case 976: {
                  bitField0_ |= 0x00400000;
                  isBgMusic_ = input.readBool();
                  break;
                }
                case 984: {
                  if (!((mutable_bitField0_ & 0x00800000) != 0)) {
                    volumeEnvelopeTime_ = newIntList();
                    mutable_bitField0_ |= 0x00800000;
                  }
                  volumeEnvelopeTime_.addInt(input.readInt32());
                  break;
                }
                case 986: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00800000) != 0) && input.getBytesUntilLimit() > 0) {
                    volumeEnvelopeTime_ = newIntList();
                    mutable_bitField0_ |= 0x00800000;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    volumeEnvelopeTime_.addInt(input.readInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 992: {
                  if (!((mutable_bitField0_ & 0x01000000) != 0)) {
                    volumeEnvelopeLevel_ = newIntList();
                    mutable_bitField0_ |= 0x01000000;
                  }
                  volumeEnvelopeLevel_.addInt(input.readInt32());
                  break;
                }
                case 994: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x01000000) != 0) && input.getBytesUntilLimit() > 0) {
                    volumeEnvelopeLevel_ = newIntList();
                    mutable_bitField0_ |= 0x01000000;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    volumeEnvelopeLevel_.addInt(input.readInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 1005: {
                  bitField0_ |= 0x00800000;
                  clipWidth_ = input.readFloat();
                  break;
                }
                case 1008: {
                  bitField0_ |= 0x01000000;
                  pinned_ = input.readBool();
                  break;
                }
                case 1016: {
                  bitField0_ |= 0x02000000;
                  savedLoopDuration_ = input.readInt32();
                  break;
                }
                case 1024: {
                  bitField0_ |= 0x04000000;
                  extendToEnd_ = input.readBool();
                  break;
                }
                case 1032: {
                  bitField0_ |= 0x08000000;
                  voiceChanger_ = input.readInt32();
                  break;
                }
                case 1040: {
                  bitField0_ |= 0x10000000;
                  panLeft_ = input.readInt32();
                  break;
                }
                case 1048: {
                  bitField0_ |= 0x20000000;
                  panRight_ = input.readInt32();
                  break;
                }
                case 1056: {
                  bitField0_ |= 0x40000000;
                  compressor_ = input.readInt32();
                  break;
                }
                case 1064: {
                  bitField0_ |= 0x80000000;
                  pitchFactor_ = input.readInt32();
                  break;
                }
                case 1074: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField1_ |= 0x00000001;
                  clipName_ = bs;
                  break;
                }
                case 1082: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField1_ |= 0x00000002;
                  audioAssetIdIos_ = bs;
                  break;
                }
                case 1090: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField1_ |= 0x00000004;
                  enhancedAudioFilter_ = bs;
                  break;
                }
                case 1098: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField1_ |= 0x00000008;
                  equalizer_ = bs;
                  break;
                }
                case 1106: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField1_ |= 0x00000010;
                  reverb_ = bs;
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00800000) != 0)) {
              volumeEnvelopeTime_.makeImmutable(); // C
            }
            if (((mutable_bitField0_ & 0x01000000) != 0)) {
              volumeEnvelopeLevel_.makeImmutable(); // C
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_AudioClip_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_AudioClip_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip.Builder.class);
        }

        private int bitField0_;
        private int bitField1_;
        public static final int EXTRA_RELATIVE_START_TIME_FIELD_NUMBER = 100;
        private int extraRelativeStartTime_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 extra_relative_start_time = 100;</code>
         * @return Whether the extraRelativeStartTime field is set.
         */
        @java.lang.Override
        public boolean hasExtraRelativeStartTime() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 extra_relative_start_time = 100;</code>
         * @return The extraRelativeStartTime.
         */
        @java.lang.Override
        public int getExtraRelativeStartTime() {
          return extraRelativeStartTime_;
        }

        public static final int RELATIVE_START_TIME_FIELD_NUMBER = 101;
        private int relativeStartTime_;
        /**
         * <code>optional int32 relative_start_time = 101;</code>
         * @return Whether the relativeStartTime field is set.
         */
        @java.lang.Override
        public boolean hasRelativeStartTime() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional int32 relative_start_time = 101;</code>
         * @return The relativeStartTime.
         */
        @java.lang.Override
        public int getRelativeStartTime() {
          return relativeStartTime_;
        }

        public static final int RELATIVE_END_TIME_FIELD_NUMBER = 102;
        private int relativeEndTime_;
        /**
         * <code>optional int32 relative_end_time = 102;</code>
         * @return Whether the relativeEndTime field is set.
         */
        @java.lang.Override
        public boolean hasRelativeEndTime() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional int32 relative_end_time = 102;</code>
         * @return The relativeEndTime.
         */
        @java.lang.Override
        public int getRelativeEndTime() {
          return relativeEndTime_;
        }

        public static final int SAVED_RELATIVE_END_TIME_FIELD_NUMBER = 103;
        private int savedRelativeEndTime_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 saved_relative_end_time = 103;</code>
         * @return Whether the savedRelativeEndTime field is set.
         */
        @java.lang.Override
        public boolean hasSavedRelativeEndTime() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 saved_relative_end_time = 103;</code>
         * @return The savedRelativeEndTime.
         */
        @java.lang.Override
        public int getSavedRelativeEndTime() {
          return savedRelativeEndTime_;
        }

        public static final int SAVED_RELATIVE_START_TIME_FIELD_NUMBER = 104;
        private int savedRelativeStartTime_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 saved_relative_start_time = 104;</code>
         * @return Whether the savedRelativeStartTime field is set.
         */
        @java.lang.Override
        public boolean hasSavedRelativeStartTime() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 saved_relative_start_time = 104;</code>
         * @return The savedRelativeStartTime.
         */
        @java.lang.Override
        public int getSavedRelativeStartTime() {
          return savedRelativeStartTime_;
        }

        public static final int ENGINE_CLIP_ID_FIELD_NUMBER = 105;
        private int engineClipId_;
        /**
         * <code>optional int32 engine_clip_id = 105;</code>
         * @return Whether the engineClipId field is set.
         */
        @java.lang.Override
        public boolean hasEngineClipId() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional int32 engine_clip_id = 105;</code>
         * @return The engineClipId.
         */
        @java.lang.Override
        public int getEngineClipId() {
          return engineClipId_;
        }

        public static final int DURATION_FIELD_NUMBER = 106;
        private int duration_;
        /**
         * <code>optional int32 duration = 106;</code>
         * @return Whether the duration field is set.
         */
        @java.lang.Override
        public boolean hasDuration() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <code>optional int32 duration = 106;</code>
         * @return The duration.
         */
        @java.lang.Override
        public int getDuration() {
          return duration_;
        }

        public static final int TRIM_TIME_START_FIELD_NUMBER = 107;
        private int trimTimeStart_;
        /**
         * <code>optional int32 trim_time_start = 107;</code>
         * @return Whether the trimTimeStart field is set.
         */
        @java.lang.Override
        public boolean hasTrimTimeStart() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <code>optional int32 trim_time_start = 107;</code>
         * @return The trimTimeStart.
         */
        @java.lang.Override
        public int getTrimTimeStart() {
          return trimTimeStart_;
        }

        public static final int TRIM_TIME_END_FIELD_NUMBER = 108;
        private int trimTimeEnd_;
        /**
         * <code>optional int32 trim_time_end = 108;</code>
         * @return Whether the trimTimeEnd field is set.
         */
        @java.lang.Override
        public boolean hasTrimTimeEnd() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <code>optional int32 trim_time_end = 108;</code>
         * @return The trimTimeEnd.
         */
        @java.lang.Override
        public int getTrimTimeEnd() {
          return trimTimeEnd_;
        }

        public static final int SAVED_TRIM_TIME_START_FIELD_NUMBER = 109;
        private int savedTrimTimeStart_;
        /**
         * <code>optional int32 saved_trim_time_start = 109;</code>
         * @return Whether the savedTrimTimeStart field is set.
         */
        @java.lang.Override
        public boolean hasSavedTrimTimeStart() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <code>optional int32 saved_trim_time_start = 109;</code>
         * @return The savedTrimTimeStart.
         */
        @java.lang.Override
        public int getSavedTrimTimeStart() {
          return savedTrimTimeStart_;
        }

        public static final int SAVED_TRIM_TIME_END_FIELD_NUMBER = 110;
        private int savedTrimTimeEnd_;
        /**
         * <code>optional int32 saved_trim_time_end = 110;</code>
         * @return Whether the savedTrimTimeEnd field is set.
         */
        @java.lang.Override
        public boolean hasSavedTrimTimeEnd() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <code>optional int32 saved_trim_time_end = 110;</code>
         * @return The savedTrimTimeEnd.
         */
        @java.lang.Override
        public int getSavedTrimTimeEnd() {
          return savedTrimTimeEnd_;
        }

        public static final int CLIP_VOLUME_FIELD_NUMBER = 111;
        private int clipVolume_;
        /**
         * <code>optional int32 clip_volume = 111;</code>
         * @return Whether the clipVolume field is set.
         */
        @java.lang.Override
        public boolean hasClipVolume() {
          return ((bitField0_ & 0x00000800) != 0);
        }
        /**
         * <code>optional int32 clip_volume = 111;</code>
         * @return The clipVolume.
         */
        @java.lang.Override
        public int getClipVolume() {
          return clipVolume_;
        }

        public static final int MEDIA_PATH_FIELD_NUMBER = 112;
        private volatile java.lang.Object mediaPath_;
        /**
         * <code>optional string media_path = 112;</code>
         * @return Whether the mediaPath field is set.
         */
        @java.lang.Override
        public boolean hasMediaPath() {
          return ((bitField0_ & 0x00001000) != 0);
        }
        /**
         * <code>optional string media_path = 112;</code>
         * @return The mediaPath.
         */
        @java.lang.Override
        public java.lang.String getMediaPath() {
          java.lang.Object ref = mediaPath_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              mediaPath_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string media_path = 112;</code>
         * @return The bytes for mediaPath.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getMediaPathBytes() {
          java.lang.Object ref = mediaPath_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            mediaPath_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int ORIGINAL_MEDIA_PATH_FIELD_NUMBER = 113;
        private volatile java.lang.Object originalMediaPath_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string original_media_path = 113;</code>
         * @return Whether the originalMediaPath field is set.
         */
        @java.lang.Override
        public boolean hasOriginalMediaPath() {
          return ((bitField0_ & 0x00002000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string original_media_path = 113;</code>
         * @return The originalMediaPath.
         */
        @java.lang.Override
        public java.lang.String getOriginalMediaPath() {
          java.lang.Object ref = originalMediaPath_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              originalMediaPath_ = s;
            }
            return s;
          }
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string original_media_path = 113;</code>
         * @return The bytes for originalMediaPath.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getOriginalMediaPathBytes() {
          java.lang.Object ref = originalMediaPath_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            originalMediaPath_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int MEDIA_TITLE_FIELD_NUMBER = 114;
        private volatile java.lang.Object mediaTitle_;
        /**
         * <code>optional string media_title = 114;</code>
         * @return Whether the mediaTitle field is set.
         */
        @java.lang.Override
        public boolean hasMediaTitle() {
          return ((bitField0_ & 0x00004000) != 0);
        }
        /**
         * <code>optional string media_title = 114;</code>
         * @return The mediaTitle.
         */
        @java.lang.Override
        public java.lang.String getMediaTitle() {
          java.lang.Object ref = mediaTitle_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              mediaTitle_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string media_title = 114;</code>
         * @return The bytes for mediaTitle.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getMediaTitleBytes() {
          java.lang.Object ref = mediaTitle_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            mediaTitle_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int MUTE_AUDIO_FIELD_NUMBER = 115;
        private boolean muteAudio_;
        /**
         * <code>optional bool mute_audio = 115;</code>
         * @return Whether the muteAudio field is set.
         */
        @java.lang.Override
        public boolean hasMuteAudio() {
          return ((bitField0_ & 0x00008000) != 0);
        }
        /**
         * <code>optional bool mute_audio = 115;</code>
         * @return The muteAudio.
         */
        @java.lang.Override
        public boolean getMuteAudio() {
          return muteAudio_;
        }

        public static final int LOOP_FIELD_NUMBER = 116;
        private boolean loop_;
        /**
         * <code>optional bool loop = 116;</code>
         * @return Whether the loop field is set.
         */
        @java.lang.Override
        public boolean hasLoop() {
          return ((bitField0_ & 0x00010000) != 0);
        }
        /**
         * <code>optional bool loop = 116;</code>
         * @return The loop.
         */
        @java.lang.Override
        public boolean getLoop() {
          return loop_;
        }

        public static final int IS_VOICE_RECORDING_FIELD_NUMBER = 117;
        private boolean isVoiceRecording_;
        /**
         * <code>optional bool is_voice_recording = 117;</code>
         * @return Whether the isVoiceRecording field is set.
         */
        @java.lang.Override
        public boolean hasIsVoiceRecording() {
          return ((bitField0_ & 0x00020000) != 0);
        }
        /**
         * <code>optional bool is_voice_recording = 117;</code>
         * @return The isVoiceRecording.
         */
        @java.lang.Override
        public boolean getIsVoiceRecording() {
          return isVoiceRecording_;
        }

        public static final int IS_PENDING_VOICE_RECORDING_FIELD_NUMBER = 118;
        private boolean isPendingVoiceRecording_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool is_pending_voice_recording = 118;</code>
         * @return Whether the isPendingVoiceRecording field is set.
         */
        @java.lang.Override
        public boolean hasIsPendingVoiceRecording() {
          return ((bitField0_ & 0x00040000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool is_pending_voice_recording = 118;</code>
         * @return The isPendingVoiceRecording.
         */
        @java.lang.Override
        public boolean getIsPendingVoiceRecording() {
          return isPendingVoiceRecording_;
        }

        public static final int IS_EXTRACT_AUDIO_FIELD_NUMBER = 119;
        private boolean isExtractAudio_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool is_extract_audio = 119;</code>
         * @return Whether the isExtractAudio field is set.
         */
        @java.lang.Override
        public boolean hasIsExtractAudio() {
          return ((bitField0_ & 0x00080000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool is_extract_audio = 119;</code>
         * @return The isExtractAudio.
         */
        @java.lang.Override
        public boolean getIsExtractAudio() {
          return isExtractAudio_;
        }

        public static final int VIDEO_CLIP_ITEM_UUID_LSB_FIELD_NUMBER = 120;
        private long videoClipItemUuidLsb_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional uint64 video_clip_item_uuid_lsb = 120;</code>
         * @return Whether the videoClipItemUuidLsb field is set.
         */
        @java.lang.Override
        public boolean hasVideoClipItemUuidLsb() {
          return ((bitField0_ & 0x00100000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional uint64 video_clip_item_uuid_lsb = 120;</code>
         * @return The videoClipItemUuidLsb.
         */
        @java.lang.Override
        public long getVideoClipItemUuidLsb() {
          return videoClipItemUuidLsb_;
        }

        public static final int VIDEO_CLIP_ITEM_UUID_MSB_FIELD_NUMBER = 121;
        private long videoClipItemUuidMsb_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional uint64 video_clip_item_uuid_msb = 121;</code>
         * @return Whether the videoClipItemUuidMsb field is set.
         */
        @java.lang.Override
        public boolean hasVideoClipItemUuidMsb() {
          return ((bitField0_ & 0x00200000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional uint64 video_clip_item_uuid_msb = 121;</code>
         * @return The videoClipItemUuidMsb.
         */
        @java.lang.Override
        public long getVideoClipItemUuidMsb() {
          return videoClipItemUuidMsb_;
        }

        public static final int IS_BG_MUSIC_FIELD_NUMBER = 122;
        private boolean isBgMusic_;
        /**
         * <pre>
         * m_isUserChoiceBGMusic
         * </pre>
         *
         * <code>optional bool is_bg_music = 122;</code>
         * @return Whether the isBgMusic field is set.
         */
        @java.lang.Override
        public boolean hasIsBgMusic() {
          return ((bitField0_ & 0x00400000) != 0);
        }
        /**
         * <pre>
         * m_isUserChoiceBGMusic
         * </pre>
         *
         * <code>optional bool is_bg_music = 122;</code>
         * @return The isBgMusic.
         */
        @java.lang.Override
        public boolean getIsBgMusic() {
          return isBgMusic_;
        }

        public static final int VOLUME_ENVELOPE_TIME_FIELD_NUMBER = 123;
        private com.google.protobuf.Internal.IntList volumeEnvelopeTime_;
        /**
         * <code>repeated int32 volume_envelope_time = 123 [packed = true];</code>
         * @return A list containing the volumeEnvelopeTime.
         */
        @java.lang.Override
        public java.util.List<java.lang.Integer>
            getVolumeEnvelopeTimeList() {
          return volumeEnvelopeTime_;
        }
        /**
         * <code>repeated int32 volume_envelope_time = 123 [packed = true];</code>
         * @return The count of volumeEnvelopeTime.
         */
        public int getVolumeEnvelopeTimeCount() {
          return volumeEnvelopeTime_.size();
        }
        /**
         * <code>repeated int32 volume_envelope_time = 123 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The volumeEnvelopeTime at the given index.
         */
        public int getVolumeEnvelopeTime(int index) {
          return volumeEnvelopeTime_.getInt(index);
        }
        private int volumeEnvelopeTimeMemoizedSerializedSize = -1;

        public static final int VOLUME_ENVELOPE_LEVEL_FIELD_NUMBER = 124;
        private com.google.protobuf.Internal.IntList volumeEnvelopeLevel_;
        /**
         * <code>repeated int32 volume_envelope_level = 124 [packed = true];</code>
         * @return A list containing the volumeEnvelopeLevel.
         */
        @java.lang.Override
        public java.util.List<java.lang.Integer>
            getVolumeEnvelopeLevelList() {
          return volumeEnvelopeLevel_;
        }
        /**
         * <code>repeated int32 volume_envelope_level = 124 [packed = true];</code>
         * @return The count of volumeEnvelopeLevel.
         */
        public int getVolumeEnvelopeLevelCount() {
          return volumeEnvelopeLevel_.size();
        }
        /**
         * <code>repeated int32 volume_envelope_level = 124 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The volumeEnvelopeLevel at the given index.
         */
        public int getVolumeEnvelopeLevel(int index) {
          return volumeEnvelopeLevel_.getInt(index);
        }
        private int volumeEnvelopeLevelMemoizedSerializedSize = -1;

        public static final int CLIP_WIDTH_FIELD_NUMBER = 125;
        private float clipWidth_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float clip_width = 125;</code>
         * @return Whether the clipWidth field is set.
         */
        @java.lang.Override
        public boolean hasClipWidth() {
          return ((bitField0_ & 0x00800000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float clip_width = 125;</code>
         * @return The clipWidth.
         */
        @java.lang.Override
        public float getClipWidth() {
          return clipWidth_;
        }

        public static final int PINNED_FIELD_NUMBER = 126;
        private boolean pinned_;
        /**
         * <code>optional bool pinned = 126;</code>
         * @return Whether the pinned field is set.
         */
        @java.lang.Override
        public boolean hasPinned() {
          return ((bitField0_ & 0x01000000) != 0);
        }
        /**
         * <code>optional bool pinned = 126;</code>
         * @return The pinned.
         */
        @java.lang.Override
        public boolean getPinned() {
          return pinned_;
        }

        public static final int SAVED_LOOP_DURATION_FIELD_NUMBER = 127;
        private int savedLoopDuration_;
        /**
         * <code>optional int32 saved_loop_duration = 127;</code>
         * @return Whether the savedLoopDuration field is set.
         */
        @java.lang.Override
        public boolean hasSavedLoopDuration() {
          return ((bitField0_ & 0x02000000) != 0);
        }
        /**
         * <code>optional int32 saved_loop_duration = 127;</code>
         * @return The savedLoopDuration.
         */
        @java.lang.Override
        public int getSavedLoopDuration() {
          return savedLoopDuration_;
        }

        public static final int EXTEND_TO_END_FIELD_NUMBER = 128;
        private boolean extendToEnd_;
        /**
         * <code>optional bool extend_to_end = 128;</code>
         * @return Whether the extendToEnd field is set.
         */
        @java.lang.Override
        public boolean hasExtendToEnd() {
          return ((bitField0_ & 0x04000000) != 0);
        }
        /**
         * <code>optional bool extend_to_end = 128;</code>
         * @return The extendToEnd.
         */
        @java.lang.Override
        public boolean getExtendToEnd() {
          return extendToEnd_;
        }

        public static final int VOICE_CHANGER_FIELD_NUMBER = 129;
        private int voiceChanger_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 voice_changer = 129;</code>
         * @return Whether the voiceChanger field is set.
         */
        @java.lang.Override
        public boolean hasVoiceChanger() {
          return ((bitField0_ & 0x08000000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 voice_changer = 129;</code>
         * @return The voiceChanger.
         */
        @java.lang.Override
        public int getVoiceChanger() {
          return voiceChanger_;
        }

        public static final int PAN_LEFT_FIELD_NUMBER = 130;
        private int panLeft_;
        /**
         * <code>optional int32 pan_left = 130;</code>
         * @return Whether the panLeft field is set.
         */
        @java.lang.Override
        public boolean hasPanLeft() {
          return ((bitField0_ & 0x10000000) != 0);
        }
        /**
         * <code>optional int32 pan_left = 130;</code>
         * @return The panLeft.
         */
        @java.lang.Override
        public int getPanLeft() {
          return panLeft_;
        }

        public static final int PAN_RIGHT_FIELD_NUMBER = 131;
        private int panRight_;
        /**
         * <code>optional int32 pan_right = 131;</code>
         * @return Whether the panRight field is set.
         */
        @java.lang.Override
        public boolean hasPanRight() {
          return ((bitField0_ & 0x20000000) != 0);
        }
        /**
         * <code>optional int32 pan_right = 131;</code>
         * @return The panRight.
         */
        @java.lang.Override
        public int getPanRight() {
          return panRight_;
        }

        public static final int COMPRESSOR_FIELD_NUMBER = 132;
        private int compressor_;
        /**
         * <pre>
         * 0: off, 4: on (default: 0)
         * </pre>
         *
         * <code>optional int32 compressor = 132;</code>
         * @return Whether the compressor field is set.
         */
        @java.lang.Override
        public boolean hasCompressor() {
          return ((bitField0_ & 0x40000000) != 0);
        }
        /**
         * <pre>
         * 0: off, 4: on (default: 0)
         * </pre>
         *
         * <code>optional int32 compressor = 132;</code>
         * @return The compressor.
         */
        @java.lang.Override
        public int getCompressor() {
          return compressor_;
        }

        public static final int PITCH_FACTOR_FIELD_NUMBER = 133;
        private int pitchFactor_;
        /**
         * <code>optional int32 pitch_factor = 133;</code>
         * @return Whether the pitchFactor field is set.
         */
        @java.lang.Override
        public boolean hasPitchFactor() {
          return ((bitField0_ & 0x80000000) != 0);
        }
        /**
         * <code>optional int32 pitch_factor = 133;</code>
         * @return The pitchFactor.
         */
        @java.lang.Override
        public int getPitchFactor() {
          return pitchFactor_;
        }

        public static final int CLIP_NAME_FIELD_NUMBER = 134;
        private volatile java.lang.Object clipName_;
        /**
         * <code>optional string clip_name = 134;</code>
         * @return Whether the clipName field is set.
         */
        @java.lang.Override
        public boolean hasClipName() {
          return ((bitField1_ & 0x00000001) != 0);
        }
        /**
         * <code>optional string clip_name = 134;</code>
         * @return The clipName.
         */
        @java.lang.Override
        public java.lang.String getClipName() {
          java.lang.Object ref = clipName_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              clipName_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string clip_name = 134;</code>
         * @return The bytes for clipName.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getClipNameBytes() {
          java.lang.Object ref = clipName_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            clipName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int AUDIO_ASSET_ID_IOS_FIELD_NUMBER = 135;
        private volatile java.lang.Object audioAssetIdIos_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string audio_asset_id_ios = 135;</code>
         * @return Whether the audioAssetIdIos field is set.
         */
        @java.lang.Override
        public boolean hasAudioAssetIdIos() {
          return ((bitField1_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string audio_asset_id_ios = 135;</code>
         * @return The audioAssetIdIos.
         */
        @java.lang.Override
        public java.lang.String getAudioAssetIdIos() {
          java.lang.Object ref = audioAssetIdIos_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              audioAssetIdIos_ = s;
            }
            return s;
          }
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string audio_asset_id_ios = 135;</code>
         * @return The bytes for audioAssetIdIos.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getAudioAssetIdIosBytes() {
          java.lang.Object ref = audioAssetIdIos_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            audioAssetIdIos_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int ENHANCEDAUDIOFILTER_FIELD_NUMBER = 136;
        private volatile java.lang.Object enhancedAudioFilter_;
        /**
         * <code>optional string enhancedAudioFilter = 136;</code>
         * @return Whether the enhancedAudioFilter field is set.
         */
        @java.lang.Override
        public boolean hasEnhancedAudioFilter() {
          return ((bitField1_ & 0x00000004) != 0);
        }
        /**
         * <code>optional string enhancedAudioFilter = 136;</code>
         * @return The enhancedAudioFilter.
         */
        @java.lang.Override
        public java.lang.String getEnhancedAudioFilter() {
          java.lang.Object ref = enhancedAudioFilter_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              enhancedAudioFilter_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string enhancedAudioFilter = 136;</code>
         * @return The bytes for enhancedAudioFilter.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getEnhancedAudioFilterBytes() {
          java.lang.Object ref = enhancedAudioFilter_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            enhancedAudioFilter_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int EQUALIZER_FIELD_NUMBER = 137;
        private volatile java.lang.Object equalizer_;
        /**
         * <code>optional string equalizer = 137;</code>
         * @return Whether the equalizer field is set.
         */
        @java.lang.Override
        public boolean hasEqualizer() {
          return ((bitField1_ & 0x00000008) != 0);
        }
        /**
         * <code>optional string equalizer = 137;</code>
         * @return The equalizer.
         */
        @java.lang.Override
        public java.lang.String getEqualizer() {
          java.lang.Object ref = equalizer_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              equalizer_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string equalizer = 137;</code>
         * @return The bytes for equalizer.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getEqualizerBytes() {
          java.lang.Object ref = equalizer_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            equalizer_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int REVERB_FIELD_NUMBER = 138;
        private volatile java.lang.Object reverb_;
        /**
         * <code>optional string reverb = 138;</code>
         * @return Whether the reverb field is set.
         */
        @java.lang.Override
        public boolean hasReverb() {
          return ((bitField1_ & 0x00000010) != 0);
        }
        /**
         * <code>optional string reverb = 138;</code>
         * @return The reverb.
         */
        @java.lang.Override
        public java.lang.String getReverb() {
          java.lang.Object ref = reverb_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              reverb_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string reverb = 138;</code>
         * @return The bytes for reverb.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getReverbBytes() {
          java.lang.Object ref = reverb_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            reverb_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeInt32(100, extraRelativeStartTime_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeInt32(101, relativeStartTime_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeInt32(102, relativeEndTime_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeInt32(103, savedRelativeEndTime_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            output.writeInt32(104, savedRelativeStartTime_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            output.writeInt32(105, engineClipId_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            output.writeInt32(106, duration_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            output.writeInt32(107, trimTimeStart_);
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            output.writeInt32(108, trimTimeEnd_);
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            output.writeInt32(109, savedTrimTimeStart_);
          }
          if (((bitField0_ & 0x00000400) != 0)) {
            output.writeInt32(110, savedTrimTimeEnd_);
          }
          if (((bitField0_ & 0x00000800) != 0)) {
            output.writeInt32(111, clipVolume_);
          }
          if (((bitField0_ & 0x00001000) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 112, mediaPath_);
          }
          if (((bitField0_ & 0x00002000) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 113, originalMediaPath_);
          }
          if (((bitField0_ & 0x00004000) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 114, mediaTitle_);
          }
          if (((bitField0_ & 0x00008000) != 0)) {
            output.writeBool(115, muteAudio_);
          }
          if (((bitField0_ & 0x00010000) != 0)) {
            output.writeBool(116, loop_);
          }
          if (((bitField0_ & 0x00020000) != 0)) {
            output.writeBool(117, isVoiceRecording_);
          }
          if (((bitField0_ & 0x00040000) != 0)) {
            output.writeBool(118, isPendingVoiceRecording_);
          }
          if (((bitField0_ & 0x00080000) != 0)) {
            output.writeBool(119, isExtractAudio_);
          }
          if (((bitField0_ & 0x00100000) != 0)) {
            output.writeUInt64(120, videoClipItemUuidLsb_);
          }
          if (((bitField0_ & 0x00200000) != 0)) {
            output.writeUInt64(121, videoClipItemUuidMsb_);
          }
          if (((bitField0_ & 0x00400000) != 0)) {
            output.writeBool(122, isBgMusic_);
          }
          if (getVolumeEnvelopeTimeList().size() > 0) {
            output.writeUInt32NoTag(986);
            output.writeUInt32NoTag(volumeEnvelopeTimeMemoizedSerializedSize);
          }
          for (int i = 0; i < volumeEnvelopeTime_.size(); i++) {
            output.writeInt32NoTag(volumeEnvelopeTime_.getInt(i));
          }
          if (getVolumeEnvelopeLevelList().size() > 0) {
            output.writeUInt32NoTag(994);
            output.writeUInt32NoTag(volumeEnvelopeLevelMemoizedSerializedSize);
          }
          for (int i = 0; i < volumeEnvelopeLevel_.size(); i++) {
            output.writeInt32NoTag(volumeEnvelopeLevel_.getInt(i));
          }
          if (((bitField0_ & 0x00800000) != 0)) {
            output.writeFloat(125, clipWidth_);
          }
          if (((bitField0_ & 0x01000000) != 0)) {
            output.writeBool(126, pinned_);
          }
          if (((bitField0_ & 0x02000000) != 0)) {
            output.writeInt32(127, savedLoopDuration_);
          }
          if (((bitField0_ & 0x04000000) != 0)) {
            output.writeBool(128, extendToEnd_);
          }
          if (((bitField0_ & 0x08000000) != 0)) {
            output.writeInt32(129, voiceChanger_);
          }
          if (((bitField0_ & 0x10000000) != 0)) {
            output.writeInt32(130, panLeft_);
          }
          if (((bitField0_ & 0x20000000) != 0)) {
            output.writeInt32(131, panRight_);
          }
          if (((bitField0_ & 0x40000000) != 0)) {
            output.writeInt32(132, compressor_);
          }
          if (((bitField0_ & 0x80000000) != 0)) {
            output.writeInt32(133, pitchFactor_);
          }
          if (((bitField1_ & 0x00000001) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 134, clipName_);
          }
          if (((bitField1_ & 0x00000002) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 135, audioAssetIdIos_);
          }
          if (((bitField1_ & 0x00000004) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 136, enhancedAudioFilter_);
          }
          if (((bitField1_ & 0x00000008) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 137, equalizer_);
          }
          if (((bitField1_ & 0x00000010) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 138, reverb_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(100, extraRelativeStartTime_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(101, relativeStartTime_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(102, relativeEndTime_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(103, savedRelativeEndTime_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(104, savedRelativeStartTime_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(105, engineClipId_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(106, duration_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(107, trimTimeStart_);
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(108, trimTimeEnd_);
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(109, savedTrimTimeStart_);
          }
          if (((bitField0_ & 0x00000400) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(110, savedTrimTimeEnd_);
          }
          if (((bitField0_ & 0x00000800) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(111, clipVolume_);
          }
          if (((bitField0_ & 0x00001000) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(112, mediaPath_);
          }
          if (((bitField0_ & 0x00002000) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(113, originalMediaPath_);
          }
          if (((bitField0_ & 0x00004000) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(114, mediaTitle_);
          }
          if (((bitField0_ & 0x00008000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(115, muteAudio_);
          }
          if (((bitField0_ & 0x00010000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(116, loop_);
          }
          if (((bitField0_ & 0x00020000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(117, isVoiceRecording_);
          }
          if (((bitField0_ & 0x00040000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(118, isPendingVoiceRecording_);
          }
          if (((bitField0_ & 0x00080000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(119, isExtractAudio_);
          }
          if (((bitField0_ & 0x00100000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(120, videoClipItemUuidLsb_);
          }
          if (((bitField0_ & 0x00200000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(121, videoClipItemUuidMsb_);
          }
          if (((bitField0_ & 0x00400000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(122, isBgMusic_);
          }
          {
            int dataSize = 0;
            for (int i = 0; i < volumeEnvelopeTime_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(volumeEnvelopeTime_.getInt(i));
            }
            size += dataSize;
            if (!getVolumeEnvelopeTimeList().isEmpty()) {
              size += 2;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            volumeEnvelopeTimeMemoizedSerializedSize = dataSize;
          }
          {
            int dataSize = 0;
            for (int i = 0; i < volumeEnvelopeLevel_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(volumeEnvelopeLevel_.getInt(i));
            }
            size += dataSize;
            if (!getVolumeEnvelopeLevelList().isEmpty()) {
              size += 2;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            volumeEnvelopeLevelMemoizedSerializedSize = dataSize;
          }
          if (((bitField0_ & 0x00800000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(125, clipWidth_);
          }
          if (((bitField0_ & 0x01000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(126, pinned_);
          }
          if (((bitField0_ & 0x02000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(127, savedLoopDuration_);
          }
          if (((bitField0_ & 0x04000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(128, extendToEnd_);
          }
          if (((bitField0_ & 0x08000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(129, voiceChanger_);
          }
          if (((bitField0_ & 0x10000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(130, panLeft_);
          }
          if (((bitField0_ & 0x20000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(131, panRight_);
          }
          if (((bitField0_ & 0x40000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(132, compressor_);
          }
          if (((bitField0_ & 0x80000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(133, pitchFactor_);
          }
          if (((bitField1_ & 0x00000001) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(134, clipName_);
          }
          if (((bitField1_ & 0x00000002) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(135, audioAssetIdIos_);
          }
          if (((bitField1_ & 0x00000004) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(136, enhancedAudioFilter_);
          }
          if (((bitField1_ & 0x00000008) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(137, equalizer_);
          }
          if (((bitField1_ & 0x00000010) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(138, reverb_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip) obj;

          if (hasExtraRelativeStartTime() != other.hasExtraRelativeStartTime()) return false;
          if (hasExtraRelativeStartTime()) {
            if (getExtraRelativeStartTime()
                != other.getExtraRelativeStartTime()) return false;
          }
          if (hasRelativeStartTime() != other.hasRelativeStartTime()) return false;
          if (hasRelativeStartTime()) {
            if (getRelativeStartTime()
                != other.getRelativeStartTime()) return false;
          }
          if (hasRelativeEndTime() != other.hasRelativeEndTime()) return false;
          if (hasRelativeEndTime()) {
            if (getRelativeEndTime()
                != other.getRelativeEndTime()) return false;
          }
          if (hasSavedRelativeEndTime() != other.hasSavedRelativeEndTime()) return false;
          if (hasSavedRelativeEndTime()) {
            if (getSavedRelativeEndTime()
                != other.getSavedRelativeEndTime()) return false;
          }
          if (hasSavedRelativeStartTime() != other.hasSavedRelativeStartTime()) return false;
          if (hasSavedRelativeStartTime()) {
            if (getSavedRelativeStartTime()
                != other.getSavedRelativeStartTime()) return false;
          }
          if (hasEngineClipId() != other.hasEngineClipId()) return false;
          if (hasEngineClipId()) {
            if (getEngineClipId()
                != other.getEngineClipId()) return false;
          }
          if (hasDuration() != other.hasDuration()) return false;
          if (hasDuration()) {
            if (getDuration()
                != other.getDuration()) return false;
          }
          if (hasTrimTimeStart() != other.hasTrimTimeStart()) return false;
          if (hasTrimTimeStart()) {
            if (getTrimTimeStart()
                != other.getTrimTimeStart()) return false;
          }
          if (hasTrimTimeEnd() != other.hasTrimTimeEnd()) return false;
          if (hasTrimTimeEnd()) {
            if (getTrimTimeEnd()
                != other.getTrimTimeEnd()) return false;
          }
          if (hasSavedTrimTimeStart() != other.hasSavedTrimTimeStart()) return false;
          if (hasSavedTrimTimeStart()) {
            if (getSavedTrimTimeStart()
                != other.getSavedTrimTimeStart()) return false;
          }
          if (hasSavedTrimTimeEnd() != other.hasSavedTrimTimeEnd()) return false;
          if (hasSavedTrimTimeEnd()) {
            if (getSavedTrimTimeEnd()
                != other.getSavedTrimTimeEnd()) return false;
          }
          if (hasClipVolume() != other.hasClipVolume()) return false;
          if (hasClipVolume()) {
            if (getClipVolume()
                != other.getClipVolume()) return false;
          }
          if (hasMediaPath() != other.hasMediaPath()) return false;
          if (hasMediaPath()) {
            if (!getMediaPath()
                .equals(other.getMediaPath())) return false;
          }
          if (hasOriginalMediaPath() != other.hasOriginalMediaPath()) return false;
          if (hasOriginalMediaPath()) {
            if (!getOriginalMediaPath()
                .equals(other.getOriginalMediaPath())) return false;
          }
          if (hasMediaTitle() != other.hasMediaTitle()) return false;
          if (hasMediaTitle()) {
            if (!getMediaTitle()
                .equals(other.getMediaTitle())) return false;
          }
          if (hasMuteAudio() != other.hasMuteAudio()) return false;
          if (hasMuteAudio()) {
            if (getMuteAudio()
                != other.getMuteAudio()) return false;
          }
          if (hasLoop() != other.hasLoop()) return false;
          if (hasLoop()) {
            if (getLoop()
                != other.getLoop()) return false;
          }
          if (hasIsVoiceRecording() != other.hasIsVoiceRecording()) return false;
          if (hasIsVoiceRecording()) {
            if (getIsVoiceRecording()
                != other.getIsVoiceRecording()) return false;
          }
          if (hasIsPendingVoiceRecording() != other.hasIsPendingVoiceRecording()) return false;
          if (hasIsPendingVoiceRecording()) {
            if (getIsPendingVoiceRecording()
                != other.getIsPendingVoiceRecording()) return false;
          }
          if (hasIsExtractAudio() != other.hasIsExtractAudio()) return false;
          if (hasIsExtractAudio()) {
            if (getIsExtractAudio()
                != other.getIsExtractAudio()) return false;
          }
          if (hasVideoClipItemUuidLsb() != other.hasVideoClipItemUuidLsb()) return false;
          if (hasVideoClipItemUuidLsb()) {
            if (getVideoClipItemUuidLsb()
                != other.getVideoClipItemUuidLsb()) return false;
          }
          if (hasVideoClipItemUuidMsb() != other.hasVideoClipItemUuidMsb()) return false;
          if (hasVideoClipItemUuidMsb()) {
            if (getVideoClipItemUuidMsb()
                != other.getVideoClipItemUuidMsb()) return false;
          }
          if (hasIsBgMusic() != other.hasIsBgMusic()) return false;
          if (hasIsBgMusic()) {
            if (getIsBgMusic()
                != other.getIsBgMusic()) return false;
          }
          if (!getVolumeEnvelopeTimeList()
              .equals(other.getVolumeEnvelopeTimeList())) return false;
          if (!getVolumeEnvelopeLevelList()
              .equals(other.getVolumeEnvelopeLevelList())) return false;
          if (hasClipWidth() != other.hasClipWidth()) return false;
          if (hasClipWidth()) {
            if (java.lang.Float.floatToIntBits(getClipWidth())
                != java.lang.Float.floatToIntBits(
                    other.getClipWidth())) return false;
          }
          if (hasPinned() != other.hasPinned()) return false;
          if (hasPinned()) {
            if (getPinned()
                != other.getPinned()) return false;
          }
          if (hasSavedLoopDuration() != other.hasSavedLoopDuration()) return false;
          if (hasSavedLoopDuration()) {
            if (getSavedLoopDuration()
                != other.getSavedLoopDuration()) return false;
          }
          if (hasExtendToEnd() != other.hasExtendToEnd()) return false;
          if (hasExtendToEnd()) {
            if (getExtendToEnd()
                != other.getExtendToEnd()) return false;
          }
          if (hasVoiceChanger() != other.hasVoiceChanger()) return false;
          if (hasVoiceChanger()) {
            if (getVoiceChanger()
                != other.getVoiceChanger()) return false;
          }
          if (hasPanLeft() != other.hasPanLeft()) return false;
          if (hasPanLeft()) {
            if (getPanLeft()
                != other.getPanLeft()) return false;
          }
          if (hasPanRight() != other.hasPanRight()) return false;
          if (hasPanRight()) {
            if (getPanRight()
                != other.getPanRight()) return false;
          }
          if (hasCompressor() != other.hasCompressor()) return false;
          if (hasCompressor()) {
            if (getCompressor()
                != other.getCompressor()) return false;
          }
          if (hasPitchFactor() != other.hasPitchFactor()) return false;
          if (hasPitchFactor()) {
            if (getPitchFactor()
                != other.getPitchFactor()) return false;
          }
          if (hasClipName() != other.hasClipName()) return false;
          if (hasClipName()) {
            if (!getClipName()
                .equals(other.getClipName())) return false;
          }
          if (hasAudioAssetIdIos() != other.hasAudioAssetIdIos()) return false;
          if (hasAudioAssetIdIos()) {
            if (!getAudioAssetIdIos()
                .equals(other.getAudioAssetIdIos())) return false;
          }
          if (hasEnhancedAudioFilter() != other.hasEnhancedAudioFilter()) return false;
          if (hasEnhancedAudioFilter()) {
            if (!getEnhancedAudioFilter()
                .equals(other.getEnhancedAudioFilter())) return false;
          }
          if (hasEqualizer() != other.hasEqualizer()) return false;
          if (hasEqualizer()) {
            if (!getEqualizer()
                .equals(other.getEqualizer())) return false;
          }
          if (hasReverb() != other.hasReverb()) return false;
          if (hasReverb()) {
            if (!getReverb()
                .equals(other.getReverb())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasExtraRelativeStartTime()) {
            hash = (37 * hash) + EXTRA_RELATIVE_START_TIME_FIELD_NUMBER;
            hash = (53 * hash) + getExtraRelativeStartTime();
          }
          if (hasRelativeStartTime()) {
            hash = (37 * hash) + RELATIVE_START_TIME_FIELD_NUMBER;
            hash = (53 * hash) + getRelativeStartTime();
          }
          if (hasRelativeEndTime()) {
            hash = (37 * hash) + RELATIVE_END_TIME_FIELD_NUMBER;
            hash = (53 * hash) + getRelativeEndTime();
          }
          if (hasSavedRelativeEndTime()) {
            hash = (37 * hash) + SAVED_RELATIVE_END_TIME_FIELD_NUMBER;
            hash = (53 * hash) + getSavedRelativeEndTime();
          }
          if (hasSavedRelativeStartTime()) {
            hash = (37 * hash) + SAVED_RELATIVE_START_TIME_FIELD_NUMBER;
            hash = (53 * hash) + getSavedRelativeStartTime();
          }
          if (hasEngineClipId()) {
            hash = (37 * hash) + ENGINE_CLIP_ID_FIELD_NUMBER;
            hash = (53 * hash) + getEngineClipId();
          }
          if (hasDuration()) {
            hash = (37 * hash) + DURATION_FIELD_NUMBER;
            hash = (53 * hash) + getDuration();
          }
          if (hasTrimTimeStart()) {
            hash = (37 * hash) + TRIM_TIME_START_FIELD_NUMBER;
            hash = (53 * hash) + getTrimTimeStart();
          }
          if (hasTrimTimeEnd()) {
            hash = (37 * hash) + TRIM_TIME_END_FIELD_NUMBER;
            hash = (53 * hash) + getTrimTimeEnd();
          }
          if (hasSavedTrimTimeStart()) {
            hash = (37 * hash) + SAVED_TRIM_TIME_START_FIELD_NUMBER;
            hash = (53 * hash) + getSavedTrimTimeStart();
          }
          if (hasSavedTrimTimeEnd()) {
            hash = (37 * hash) + SAVED_TRIM_TIME_END_FIELD_NUMBER;
            hash = (53 * hash) + getSavedTrimTimeEnd();
          }
          if (hasClipVolume()) {
            hash = (37 * hash) + CLIP_VOLUME_FIELD_NUMBER;
            hash = (53 * hash) + getClipVolume();
          }
          if (hasMediaPath()) {
            hash = (37 * hash) + MEDIA_PATH_FIELD_NUMBER;
            hash = (53 * hash) + getMediaPath().hashCode();
          }
          if (hasOriginalMediaPath()) {
            hash = (37 * hash) + ORIGINAL_MEDIA_PATH_FIELD_NUMBER;
            hash = (53 * hash) + getOriginalMediaPath().hashCode();
          }
          if (hasMediaTitle()) {
            hash = (37 * hash) + MEDIA_TITLE_FIELD_NUMBER;
            hash = (53 * hash) + getMediaTitle().hashCode();
          }
          if (hasMuteAudio()) {
            hash = (37 * hash) + MUTE_AUDIO_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getMuteAudio());
          }
          if (hasLoop()) {
            hash = (37 * hash) + LOOP_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getLoop());
          }
          if (hasIsVoiceRecording()) {
            hash = (37 * hash) + IS_VOICE_RECORDING_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getIsVoiceRecording());
          }
          if (hasIsPendingVoiceRecording()) {
            hash = (37 * hash) + IS_PENDING_VOICE_RECORDING_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getIsPendingVoiceRecording());
          }
          if (hasIsExtractAudio()) {
            hash = (37 * hash) + IS_EXTRACT_AUDIO_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getIsExtractAudio());
          }
          if (hasVideoClipItemUuidLsb()) {
            hash = (37 * hash) + VIDEO_CLIP_ITEM_UUID_LSB_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getVideoClipItemUuidLsb());
          }
          if (hasVideoClipItemUuidMsb()) {
            hash = (37 * hash) + VIDEO_CLIP_ITEM_UUID_MSB_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getVideoClipItemUuidMsb());
          }
          if (hasIsBgMusic()) {
            hash = (37 * hash) + IS_BG_MUSIC_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getIsBgMusic());
          }
          if (getVolumeEnvelopeTimeCount() > 0) {
            hash = (37 * hash) + VOLUME_ENVELOPE_TIME_FIELD_NUMBER;
            hash = (53 * hash) + getVolumeEnvelopeTimeList().hashCode();
          }
          if (getVolumeEnvelopeLevelCount() > 0) {
            hash = (37 * hash) + VOLUME_ENVELOPE_LEVEL_FIELD_NUMBER;
            hash = (53 * hash) + getVolumeEnvelopeLevelList().hashCode();
          }
          if (hasClipWidth()) {
            hash = (37 * hash) + CLIP_WIDTH_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getClipWidth());
          }
          if (hasPinned()) {
            hash = (37 * hash) + PINNED_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getPinned());
          }
          if (hasSavedLoopDuration()) {
            hash = (37 * hash) + SAVED_LOOP_DURATION_FIELD_NUMBER;
            hash = (53 * hash) + getSavedLoopDuration();
          }
          if (hasExtendToEnd()) {
            hash = (37 * hash) + EXTEND_TO_END_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getExtendToEnd());
          }
          if (hasVoiceChanger()) {
            hash = (37 * hash) + VOICE_CHANGER_FIELD_NUMBER;
            hash = (53 * hash) + getVoiceChanger();
          }
          if (hasPanLeft()) {
            hash = (37 * hash) + PAN_LEFT_FIELD_NUMBER;
            hash = (53 * hash) + getPanLeft();
          }
          if (hasPanRight()) {
            hash = (37 * hash) + PAN_RIGHT_FIELD_NUMBER;
            hash = (53 * hash) + getPanRight();
          }
          if (hasCompressor()) {
            hash = (37 * hash) + COMPRESSOR_FIELD_NUMBER;
            hash = (53 * hash) + getCompressor();
          }
          if (hasPitchFactor()) {
            hash = (37 * hash) + PITCH_FACTOR_FIELD_NUMBER;
            hash = (53 * hash) + getPitchFactor();
          }
          if (hasClipName()) {
            hash = (37 * hash) + CLIP_NAME_FIELD_NUMBER;
            hash = (53 * hash) + getClipName().hashCode();
          }
          if (hasAudioAssetIdIos()) {
            hash = (37 * hash) + AUDIO_ASSET_ID_IOS_FIELD_NUMBER;
            hash = (53 * hash) + getAudioAssetIdIos().hashCode();
          }
          if (hasEnhancedAudioFilter()) {
            hash = (37 * hash) + ENHANCEDAUDIOFILTER_FIELD_NUMBER;
            hash = (53 * hash) + getEnhancedAudioFilter().hashCode();
          }
          if (hasEqualizer()) {
            hash = (37 * hash) + EQUALIZER_FIELD_NUMBER;
            hash = (53 * hash) + getEqualizer().hashCode();
          }
          if (hasReverb()) {
            hash = (37 * hash) + REVERB_FIELD_NUMBER;
            hash = (53 * hash) + getReverb().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code KMProto.KMProject.AudioClip}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.AudioClip)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClipOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_AudioClip_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_AudioClip_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            extraRelativeStartTime_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            relativeStartTime_ = 0;
            bitField0_ = (bitField0_ & ~0x00000002);
            relativeEndTime_ = 0;
            bitField0_ = (bitField0_ & ~0x00000004);
            savedRelativeEndTime_ = 0;
            bitField0_ = (bitField0_ & ~0x00000008);
            savedRelativeStartTime_ = 0;
            bitField0_ = (bitField0_ & ~0x00000010);
            engineClipId_ = 0;
            bitField0_ = (bitField0_ & ~0x00000020);
            duration_ = 0;
            bitField0_ = (bitField0_ & ~0x00000040);
            trimTimeStart_ = 0;
            bitField0_ = (bitField0_ & ~0x00000080);
            trimTimeEnd_ = 0;
            bitField0_ = (bitField0_ & ~0x00000100);
            savedTrimTimeStart_ = 0;
            bitField0_ = (bitField0_ & ~0x00000200);
            savedTrimTimeEnd_ = 0;
            bitField0_ = (bitField0_ & ~0x00000400);
            clipVolume_ = 0;
            bitField0_ = (bitField0_ & ~0x00000800);
            mediaPath_ = "";
            bitField0_ = (bitField0_ & ~0x00001000);
            originalMediaPath_ = "";
            bitField0_ = (bitField0_ & ~0x00002000);
            mediaTitle_ = "";
            bitField0_ = (bitField0_ & ~0x00004000);
            muteAudio_ = false;
            bitField0_ = (bitField0_ & ~0x00008000);
            loop_ = false;
            bitField0_ = (bitField0_ & ~0x00010000);
            isVoiceRecording_ = false;
            bitField0_ = (bitField0_ & ~0x00020000);
            isPendingVoiceRecording_ = false;
            bitField0_ = (bitField0_ & ~0x00040000);
            isExtractAudio_ = false;
            bitField0_ = (bitField0_ & ~0x00080000);
            videoClipItemUuidLsb_ = 0L;
            bitField0_ = (bitField0_ & ~0x00100000);
            videoClipItemUuidMsb_ = 0L;
            bitField0_ = (bitField0_ & ~0x00200000);
            isBgMusic_ = false;
            bitField0_ = (bitField0_ & ~0x00400000);
            volumeEnvelopeTime_ = emptyIntList();
            bitField0_ = (bitField0_ & ~0x00800000);
            volumeEnvelopeLevel_ = emptyIntList();
            bitField0_ = (bitField0_ & ~0x01000000);
            clipWidth_ = 0F;
            bitField0_ = (bitField0_ & ~0x02000000);
            pinned_ = false;
            bitField0_ = (bitField0_ & ~0x04000000);
            savedLoopDuration_ = 0;
            bitField0_ = (bitField0_ & ~0x08000000);
            extendToEnd_ = false;
            bitField0_ = (bitField0_ & ~0x10000000);
            voiceChanger_ = 0;
            bitField0_ = (bitField0_ & ~0x20000000);
            panLeft_ = 0;
            bitField0_ = (bitField0_ & ~0x40000000);
            panRight_ = 0;
            bitField0_ = (bitField0_ & ~0x80000000);
            compressor_ = 0;
            bitField1_ = (bitField1_ & ~0x00000001);
            pitchFactor_ = 0;
            bitField1_ = (bitField1_ & ~0x00000002);
            clipName_ = "";
            bitField1_ = (bitField1_ & ~0x00000004);
            audioAssetIdIos_ = "";
            bitField1_ = (bitField1_ & ~0x00000008);
            enhancedAudioFilter_ = "";
            bitField1_ = (bitField1_ & ~0x00000010);
            equalizer_ = "";
            bitField1_ = (bitField1_ & ~0x00000020);
            reverb_ = "";
            bitField1_ = (bitField1_ & ~0x00000040);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_AudioClip_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip(this);
            int from_bitField0_ = bitField0_;
            int from_bitField1_ = bitField1_;
            int to_bitField0_ = 0;
            int to_bitField1_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.extraRelativeStartTime_ = extraRelativeStartTime_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.relativeStartTime_ = relativeStartTime_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.relativeEndTime_ = relativeEndTime_;
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.savedRelativeEndTime_ = savedRelativeEndTime_;
              to_bitField0_ |= 0x00000008;
            }
            if (((from_bitField0_ & 0x00000010) != 0)) {
              result.savedRelativeStartTime_ = savedRelativeStartTime_;
              to_bitField0_ |= 0x00000010;
            }
            if (((from_bitField0_ & 0x00000020) != 0)) {
              result.engineClipId_ = engineClipId_;
              to_bitField0_ |= 0x00000020;
            }
            if (((from_bitField0_ & 0x00000040) != 0)) {
              result.duration_ = duration_;
              to_bitField0_ |= 0x00000040;
            }
            if (((from_bitField0_ & 0x00000080) != 0)) {
              result.trimTimeStart_ = trimTimeStart_;
              to_bitField0_ |= 0x00000080;
            }
            if (((from_bitField0_ & 0x00000100) != 0)) {
              result.trimTimeEnd_ = trimTimeEnd_;
              to_bitField0_ |= 0x00000100;
            }
            if (((from_bitField0_ & 0x00000200) != 0)) {
              result.savedTrimTimeStart_ = savedTrimTimeStart_;
              to_bitField0_ |= 0x00000200;
            }
            if (((from_bitField0_ & 0x00000400) != 0)) {
              result.savedTrimTimeEnd_ = savedTrimTimeEnd_;
              to_bitField0_ |= 0x00000400;
            }
            if (((from_bitField0_ & 0x00000800) != 0)) {
              result.clipVolume_ = clipVolume_;
              to_bitField0_ |= 0x00000800;
            }
            if (((from_bitField0_ & 0x00001000) != 0)) {
              to_bitField0_ |= 0x00001000;
            }
            result.mediaPath_ = mediaPath_;
            if (((from_bitField0_ & 0x00002000) != 0)) {
              to_bitField0_ |= 0x00002000;
            }
            result.originalMediaPath_ = originalMediaPath_;
            if (((from_bitField0_ & 0x00004000) != 0)) {
              to_bitField0_ |= 0x00004000;
            }
            result.mediaTitle_ = mediaTitle_;
            if (((from_bitField0_ & 0x00008000) != 0)) {
              result.muteAudio_ = muteAudio_;
              to_bitField0_ |= 0x00008000;
            }
            if (((from_bitField0_ & 0x00010000) != 0)) {
              result.loop_ = loop_;
              to_bitField0_ |= 0x00010000;
            }
            if (((from_bitField0_ & 0x00020000) != 0)) {
              result.isVoiceRecording_ = isVoiceRecording_;
              to_bitField0_ |= 0x00020000;
            }
            if (((from_bitField0_ & 0x00040000) != 0)) {
              result.isPendingVoiceRecording_ = isPendingVoiceRecording_;
              to_bitField0_ |= 0x00040000;
            }
            if (((from_bitField0_ & 0x00080000) != 0)) {
              result.isExtractAudio_ = isExtractAudio_;
              to_bitField0_ |= 0x00080000;
            }
            if (((from_bitField0_ & 0x00100000) != 0)) {
              result.videoClipItemUuidLsb_ = videoClipItemUuidLsb_;
              to_bitField0_ |= 0x00100000;
            }
            if (((from_bitField0_ & 0x00200000) != 0)) {
              result.videoClipItemUuidMsb_ = videoClipItemUuidMsb_;
              to_bitField0_ |= 0x00200000;
            }
            if (((from_bitField0_ & 0x00400000) != 0)) {
              result.isBgMusic_ = isBgMusic_;
              to_bitField0_ |= 0x00400000;
            }
            if (((bitField0_ & 0x00800000) != 0)) {
              volumeEnvelopeTime_.makeImmutable();
              bitField0_ = (bitField0_ & ~0x00800000);
            }
            result.volumeEnvelopeTime_ = volumeEnvelopeTime_;
            if (((bitField0_ & 0x01000000) != 0)) {
              volumeEnvelopeLevel_.makeImmutable();
              bitField0_ = (bitField0_ & ~0x01000000);
            }
            result.volumeEnvelopeLevel_ = volumeEnvelopeLevel_;
            if (((from_bitField0_ & 0x02000000) != 0)) {
              result.clipWidth_ = clipWidth_;
              to_bitField0_ |= 0x00800000;
            }
            if (((from_bitField0_ & 0x04000000) != 0)) {
              result.pinned_ = pinned_;
              to_bitField0_ |= 0x01000000;
            }
            if (((from_bitField0_ & 0x08000000) != 0)) {
              result.savedLoopDuration_ = savedLoopDuration_;
              to_bitField0_ |= 0x02000000;
            }
            if (((from_bitField0_ & 0x10000000) != 0)) {
              result.extendToEnd_ = extendToEnd_;
              to_bitField0_ |= 0x04000000;
            }
            if (((from_bitField0_ & 0x20000000) != 0)) {
              result.voiceChanger_ = voiceChanger_;
              to_bitField0_ |= 0x08000000;
            }
            if (((from_bitField0_ & 0x40000000) != 0)) {
              result.panLeft_ = panLeft_;
              to_bitField0_ |= 0x10000000;
            }
            if (((from_bitField0_ & 0x80000000) != 0)) {
              result.panRight_ = panRight_;
              to_bitField0_ |= 0x20000000;
            }
            if (((from_bitField1_ & 0x00000001) != 0)) {
              result.compressor_ = compressor_;
              to_bitField0_ |= 0x40000000;
            }
            if (((from_bitField1_ & 0x00000002) != 0)) {
              result.pitchFactor_ = pitchFactor_;
              to_bitField0_ |= 0x80000000;
            }
            if (((from_bitField1_ & 0x00000004) != 0)) {
              to_bitField1_ |= 0x00000001;
            }
            result.clipName_ = clipName_;
            if (((from_bitField1_ & 0x00000008) != 0)) {
              to_bitField1_ |= 0x00000002;
            }
            result.audioAssetIdIos_ = audioAssetIdIos_;
            if (((from_bitField1_ & 0x00000010) != 0)) {
              to_bitField1_ |= 0x00000004;
            }
            result.enhancedAudioFilter_ = enhancedAudioFilter_;
            if (((from_bitField1_ & 0x00000020) != 0)) {
              to_bitField1_ |= 0x00000008;
            }
            result.equalizer_ = equalizer_;
            if (((from_bitField1_ & 0x00000040) != 0)) {
              to_bitField1_ |= 0x00000010;
            }
            result.reverb_ = reverb_;
            result.bitField0_ = to_bitField0_;
            result.bitField1_ = to_bitField1_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip.getDefaultInstance()) return this;
            if (other.hasExtraRelativeStartTime()) {
              setExtraRelativeStartTime(other.getExtraRelativeStartTime());
            }
            if (other.hasRelativeStartTime()) {
              setRelativeStartTime(other.getRelativeStartTime());
            }
            if (other.hasRelativeEndTime()) {
              setRelativeEndTime(other.getRelativeEndTime());
            }
            if (other.hasSavedRelativeEndTime()) {
              setSavedRelativeEndTime(other.getSavedRelativeEndTime());
            }
            if (other.hasSavedRelativeStartTime()) {
              setSavedRelativeStartTime(other.getSavedRelativeStartTime());
            }
            if (other.hasEngineClipId()) {
              setEngineClipId(other.getEngineClipId());
            }
            if (other.hasDuration()) {
              setDuration(other.getDuration());
            }
            if (other.hasTrimTimeStart()) {
              setTrimTimeStart(other.getTrimTimeStart());
            }
            if (other.hasTrimTimeEnd()) {
              setTrimTimeEnd(other.getTrimTimeEnd());
            }
            if (other.hasSavedTrimTimeStart()) {
              setSavedTrimTimeStart(other.getSavedTrimTimeStart());
            }
            if (other.hasSavedTrimTimeEnd()) {
              setSavedTrimTimeEnd(other.getSavedTrimTimeEnd());
            }
            if (other.hasClipVolume()) {
              setClipVolume(other.getClipVolume());
            }
            if (other.hasMediaPath()) {
              bitField0_ |= 0x00001000;
              mediaPath_ = other.mediaPath_;
              onChanged();
            }
            if (other.hasOriginalMediaPath()) {
              bitField0_ |= 0x00002000;
              originalMediaPath_ = other.originalMediaPath_;
              onChanged();
            }
            if (other.hasMediaTitle()) {
              bitField0_ |= 0x00004000;
              mediaTitle_ = other.mediaTitle_;
              onChanged();
            }
            if (other.hasMuteAudio()) {
              setMuteAudio(other.getMuteAudio());
            }
            if (other.hasLoop()) {
              setLoop(other.getLoop());
            }
            if (other.hasIsVoiceRecording()) {
              setIsVoiceRecording(other.getIsVoiceRecording());
            }
            if (other.hasIsPendingVoiceRecording()) {
              setIsPendingVoiceRecording(other.getIsPendingVoiceRecording());
            }
            if (other.hasIsExtractAudio()) {
              setIsExtractAudio(other.getIsExtractAudio());
            }
            if (other.hasVideoClipItemUuidLsb()) {
              setVideoClipItemUuidLsb(other.getVideoClipItemUuidLsb());
            }
            if (other.hasVideoClipItemUuidMsb()) {
              setVideoClipItemUuidMsb(other.getVideoClipItemUuidMsb());
            }
            if (other.hasIsBgMusic()) {
              setIsBgMusic(other.getIsBgMusic());
            }
            if (!other.volumeEnvelopeTime_.isEmpty()) {
              if (volumeEnvelopeTime_.isEmpty()) {
                volumeEnvelopeTime_ = other.volumeEnvelopeTime_;
                bitField0_ = (bitField0_ & ~0x00800000);
              } else {
                ensureVolumeEnvelopeTimeIsMutable();
                volumeEnvelopeTime_.addAll(other.volumeEnvelopeTime_);
              }
              onChanged();
            }
            if (!other.volumeEnvelopeLevel_.isEmpty()) {
              if (volumeEnvelopeLevel_.isEmpty()) {
                volumeEnvelopeLevel_ = other.volumeEnvelopeLevel_;
                bitField0_ = (bitField0_ & ~0x01000000);
              } else {
                ensureVolumeEnvelopeLevelIsMutable();
                volumeEnvelopeLevel_.addAll(other.volumeEnvelopeLevel_);
              }
              onChanged();
            }
            if (other.hasClipWidth()) {
              setClipWidth(other.getClipWidth());
            }
            if (other.hasPinned()) {
              setPinned(other.getPinned());
            }
            if (other.hasSavedLoopDuration()) {
              setSavedLoopDuration(other.getSavedLoopDuration());
            }
            if (other.hasExtendToEnd()) {
              setExtendToEnd(other.getExtendToEnd());
            }
            if (other.hasVoiceChanger()) {
              setVoiceChanger(other.getVoiceChanger());
            }
            if (other.hasPanLeft()) {
              setPanLeft(other.getPanLeft());
            }
            if (other.hasPanRight()) {
              setPanRight(other.getPanRight());
            }
            if (other.hasCompressor()) {
              setCompressor(other.getCompressor());
            }
            if (other.hasPitchFactor()) {
              setPitchFactor(other.getPitchFactor());
            }
            if (other.hasClipName()) {
              bitField1_ |= 0x00000004;
              clipName_ = other.clipName_;
              onChanged();
            }
            if (other.hasAudioAssetIdIos()) {
              bitField1_ |= 0x00000008;
              audioAssetIdIos_ = other.audioAssetIdIos_;
              onChanged();
            }
            if (other.hasEnhancedAudioFilter()) {
              bitField1_ |= 0x00000010;
              enhancedAudioFilter_ = other.enhancedAudioFilter_;
              onChanged();
            }
            if (other.hasEqualizer()) {
              bitField1_ |= 0x00000020;
              equalizer_ = other.equalizer_;
              onChanged();
            }
            if (other.hasReverb()) {
              bitField1_ |= 0x00000040;
              reverb_ = other.reverb_;
              onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;
          private int bitField1_;

          private int extraRelativeStartTime_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 extra_relative_start_time = 100;</code>
           * @return Whether the extraRelativeStartTime field is set.
           */
          @java.lang.Override
          public boolean hasExtraRelativeStartTime() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 extra_relative_start_time = 100;</code>
           * @return The extraRelativeStartTime.
           */
          @java.lang.Override
          public int getExtraRelativeStartTime() {
            return extraRelativeStartTime_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 extra_relative_start_time = 100;</code>
           * @param value The extraRelativeStartTime to set.
           * @return This builder for chaining.
           */
          public Builder setExtraRelativeStartTime(int value) {
            bitField0_ |= 0x00000001;
            extraRelativeStartTime_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 extra_relative_start_time = 100;</code>
           * @return This builder for chaining.
           */
          public Builder clearExtraRelativeStartTime() {
            bitField0_ = (bitField0_ & ~0x00000001);
            extraRelativeStartTime_ = 0;
            onChanged();
            return this;
          }

          private int relativeStartTime_ ;
          /**
           * <code>optional int32 relative_start_time = 101;</code>
           * @return Whether the relativeStartTime field is set.
           */
          @java.lang.Override
          public boolean hasRelativeStartTime() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional int32 relative_start_time = 101;</code>
           * @return The relativeStartTime.
           */
          @java.lang.Override
          public int getRelativeStartTime() {
            return relativeStartTime_;
          }
          /**
           * <code>optional int32 relative_start_time = 101;</code>
           * @param value The relativeStartTime to set.
           * @return This builder for chaining.
           */
          public Builder setRelativeStartTime(int value) {
            bitField0_ |= 0x00000002;
            relativeStartTime_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 relative_start_time = 101;</code>
           * @return This builder for chaining.
           */
          public Builder clearRelativeStartTime() {
            bitField0_ = (bitField0_ & ~0x00000002);
            relativeStartTime_ = 0;
            onChanged();
            return this;
          }

          private int relativeEndTime_ ;
          /**
           * <code>optional int32 relative_end_time = 102;</code>
           * @return Whether the relativeEndTime field is set.
           */
          @java.lang.Override
          public boolean hasRelativeEndTime() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <code>optional int32 relative_end_time = 102;</code>
           * @return The relativeEndTime.
           */
          @java.lang.Override
          public int getRelativeEndTime() {
            return relativeEndTime_;
          }
          /**
           * <code>optional int32 relative_end_time = 102;</code>
           * @param value The relativeEndTime to set.
           * @return This builder for chaining.
           */
          public Builder setRelativeEndTime(int value) {
            bitField0_ |= 0x00000004;
            relativeEndTime_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 relative_end_time = 102;</code>
           * @return This builder for chaining.
           */
          public Builder clearRelativeEndTime() {
            bitField0_ = (bitField0_ & ~0x00000004);
            relativeEndTime_ = 0;
            onChanged();
            return this;
          }

          private int savedRelativeEndTime_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 saved_relative_end_time = 103;</code>
           * @return Whether the savedRelativeEndTime field is set.
           */
          @java.lang.Override
          public boolean hasSavedRelativeEndTime() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 saved_relative_end_time = 103;</code>
           * @return The savedRelativeEndTime.
           */
          @java.lang.Override
          public int getSavedRelativeEndTime() {
            return savedRelativeEndTime_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 saved_relative_end_time = 103;</code>
           * @param value The savedRelativeEndTime to set.
           * @return This builder for chaining.
           */
          public Builder setSavedRelativeEndTime(int value) {
            bitField0_ |= 0x00000008;
            savedRelativeEndTime_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 saved_relative_end_time = 103;</code>
           * @return This builder for chaining.
           */
          public Builder clearSavedRelativeEndTime() {
            bitField0_ = (bitField0_ & ~0x00000008);
            savedRelativeEndTime_ = 0;
            onChanged();
            return this;
          }

          private int savedRelativeStartTime_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 saved_relative_start_time = 104;</code>
           * @return Whether the savedRelativeStartTime field is set.
           */
          @java.lang.Override
          public boolean hasSavedRelativeStartTime() {
            return ((bitField0_ & 0x00000010) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 saved_relative_start_time = 104;</code>
           * @return The savedRelativeStartTime.
           */
          @java.lang.Override
          public int getSavedRelativeStartTime() {
            return savedRelativeStartTime_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 saved_relative_start_time = 104;</code>
           * @param value The savedRelativeStartTime to set.
           * @return This builder for chaining.
           */
          public Builder setSavedRelativeStartTime(int value) {
            bitField0_ |= 0x00000010;
            savedRelativeStartTime_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 saved_relative_start_time = 104;</code>
           * @return This builder for chaining.
           */
          public Builder clearSavedRelativeStartTime() {
            bitField0_ = (bitField0_ & ~0x00000010);
            savedRelativeStartTime_ = 0;
            onChanged();
            return this;
          }

          private int engineClipId_ ;
          /**
           * <code>optional int32 engine_clip_id = 105;</code>
           * @return Whether the engineClipId field is set.
           */
          @java.lang.Override
          public boolean hasEngineClipId() {
            return ((bitField0_ & 0x00000020) != 0);
          }
          /**
           * <code>optional int32 engine_clip_id = 105;</code>
           * @return The engineClipId.
           */
          @java.lang.Override
          public int getEngineClipId() {
            return engineClipId_;
          }
          /**
           * <code>optional int32 engine_clip_id = 105;</code>
           * @param value The engineClipId to set.
           * @return This builder for chaining.
           */
          public Builder setEngineClipId(int value) {
            bitField0_ |= 0x00000020;
            engineClipId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 engine_clip_id = 105;</code>
           * @return This builder for chaining.
           */
          public Builder clearEngineClipId() {
            bitField0_ = (bitField0_ & ~0x00000020);
            engineClipId_ = 0;
            onChanged();
            return this;
          }

          private int duration_ ;
          /**
           * <code>optional int32 duration = 106;</code>
           * @return Whether the duration field is set.
           */
          @java.lang.Override
          public boolean hasDuration() {
            return ((bitField0_ & 0x00000040) != 0);
          }
          /**
           * <code>optional int32 duration = 106;</code>
           * @return The duration.
           */
          @java.lang.Override
          public int getDuration() {
            return duration_;
          }
          /**
           * <code>optional int32 duration = 106;</code>
           * @param value The duration to set.
           * @return This builder for chaining.
           */
          public Builder setDuration(int value) {
            bitField0_ |= 0x00000040;
            duration_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 duration = 106;</code>
           * @return This builder for chaining.
           */
          public Builder clearDuration() {
            bitField0_ = (bitField0_ & ~0x00000040);
            duration_ = 0;
            onChanged();
            return this;
          }

          private int trimTimeStart_ ;
          /**
           * <code>optional int32 trim_time_start = 107;</code>
           * @return Whether the trimTimeStart field is set.
           */
          @java.lang.Override
          public boolean hasTrimTimeStart() {
            return ((bitField0_ & 0x00000080) != 0);
          }
          /**
           * <code>optional int32 trim_time_start = 107;</code>
           * @return The trimTimeStart.
           */
          @java.lang.Override
          public int getTrimTimeStart() {
            return trimTimeStart_;
          }
          /**
           * <code>optional int32 trim_time_start = 107;</code>
           * @param value The trimTimeStart to set.
           * @return This builder for chaining.
           */
          public Builder setTrimTimeStart(int value) {
            bitField0_ |= 0x00000080;
            trimTimeStart_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 trim_time_start = 107;</code>
           * @return This builder for chaining.
           */
          public Builder clearTrimTimeStart() {
            bitField0_ = (bitField0_ & ~0x00000080);
            trimTimeStart_ = 0;
            onChanged();
            return this;
          }

          private int trimTimeEnd_ ;
          /**
           * <code>optional int32 trim_time_end = 108;</code>
           * @return Whether the trimTimeEnd field is set.
           */
          @java.lang.Override
          public boolean hasTrimTimeEnd() {
            return ((bitField0_ & 0x00000100) != 0);
          }
          /**
           * <code>optional int32 trim_time_end = 108;</code>
           * @return The trimTimeEnd.
           */
          @java.lang.Override
          public int getTrimTimeEnd() {
            return trimTimeEnd_;
          }
          /**
           * <code>optional int32 trim_time_end = 108;</code>
           * @param value The trimTimeEnd to set.
           * @return This builder for chaining.
           */
          public Builder setTrimTimeEnd(int value) {
            bitField0_ |= 0x00000100;
            trimTimeEnd_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 trim_time_end = 108;</code>
           * @return This builder for chaining.
           */
          public Builder clearTrimTimeEnd() {
            bitField0_ = (bitField0_ & ~0x00000100);
            trimTimeEnd_ = 0;
            onChanged();
            return this;
          }

          private int savedTrimTimeStart_ ;
          /**
           * <code>optional int32 saved_trim_time_start = 109;</code>
           * @return Whether the savedTrimTimeStart field is set.
           */
          @java.lang.Override
          public boolean hasSavedTrimTimeStart() {
            return ((bitField0_ & 0x00000200) != 0);
          }
          /**
           * <code>optional int32 saved_trim_time_start = 109;</code>
           * @return The savedTrimTimeStart.
           */
          @java.lang.Override
          public int getSavedTrimTimeStart() {
            return savedTrimTimeStart_;
          }
          /**
           * <code>optional int32 saved_trim_time_start = 109;</code>
           * @param value The savedTrimTimeStart to set.
           * @return This builder for chaining.
           */
          public Builder setSavedTrimTimeStart(int value) {
            bitField0_ |= 0x00000200;
            savedTrimTimeStart_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 saved_trim_time_start = 109;</code>
           * @return This builder for chaining.
           */
          public Builder clearSavedTrimTimeStart() {
            bitField0_ = (bitField0_ & ~0x00000200);
            savedTrimTimeStart_ = 0;
            onChanged();
            return this;
          }

          private int savedTrimTimeEnd_ ;
          /**
           * <code>optional int32 saved_trim_time_end = 110;</code>
           * @return Whether the savedTrimTimeEnd field is set.
           */
          @java.lang.Override
          public boolean hasSavedTrimTimeEnd() {
            return ((bitField0_ & 0x00000400) != 0);
          }
          /**
           * <code>optional int32 saved_trim_time_end = 110;</code>
           * @return The savedTrimTimeEnd.
           */
          @java.lang.Override
          public int getSavedTrimTimeEnd() {
            return savedTrimTimeEnd_;
          }
          /**
           * <code>optional int32 saved_trim_time_end = 110;</code>
           * @param value The savedTrimTimeEnd to set.
           * @return This builder for chaining.
           */
          public Builder setSavedTrimTimeEnd(int value) {
            bitField0_ |= 0x00000400;
            savedTrimTimeEnd_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 saved_trim_time_end = 110;</code>
           * @return This builder for chaining.
           */
          public Builder clearSavedTrimTimeEnd() {
            bitField0_ = (bitField0_ & ~0x00000400);
            savedTrimTimeEnd_ = 0;
            onChanged();
            return this;
          }

          private int clipVolume_ ;
          /**
           * <code>optional int32 clip_volume = 111;</code>
           * @return Whether the clipVolume field is set.
           */
          @java.lang.Override
          public boolean hasClipVolume() {
            return ((bitField0_ & 0x00000800) != 0);
          }
          /**
           * <code>optional int32 clip_volume = 111;</code>
           * @return The clipVolume.
           */
          @java.lang.Override
          public int getClipVolume() {
            return clipVolume_;
          }
          /**
           * <code>optional int32 clip_volume = 111;</code>
           * @param value The clipVolume to set.
           * @return This builder for chaining.
           */
          public Builder setClipVolume(int value) {
            bitField0_ |= 0x00000800;
            clipVolume_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 clip_volume = 111;</code>
           * @return This builder for chaining.
           */
          public Builder clearClipVolume() {
            bitField0_ = (bitField0_ & ~0x00000800);
            clipVolume_ = 0;
            onChanged();
            return this;
          }

          private java.lang.Object mediaPath_ = "";
          /**
           * <code>optional string media_path = 112;</code>
           * @return Whether the mediaPath field is set.
           */
          public boolean hasMediaPath() {
            return ((bitField0_ & 0x00001000) != 0);
          }
          /**
           * <code>optional string media_path = 112;</code>
           * @return The mediaPath.
           */
          public java.lang.String getMediaPath() {
            java.lang.Object ref = mediaPath_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                mediaPath_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string media_path = 112;</code>
           * @return The bytes for mediaPath.
           */
          public com.google.protobuf.ByteString
              getMediaPathBytes() {
            java.lang.Object ref = mediaPath_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              mediaPath_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string media_path = 112;</code>
           * @param value The mediaPath to set.
           * @return This builder for chaining.
           */
          public Builder setMediaPath(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
            mediaPath_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string media_path = 112;</code>
           * @return This builder for chaining.
           */
          public Builder clearMediaPath() {
            bitField0_ = (bitField0_ & ~0x00001000);
            mediaPath_ = getDefaultInstance().getMediaPath();
            onChanged();
            return this;
          }
          /**
           * <code>optional string media_path = 112;</code>
           * @param value The bytes for mediaPath to set.
           * @return This builder for chaining.
           */
          public Builder setMediaPathBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
            mediaPath_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object originalMediaPath_ = "";
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string original_media_path = 113;</code>
           * @return Whether the originalMediaPath field is set.
           */
          public boolean hasOriginalMediaPath() {
            return ((bitField0_ & 0x00002000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string original_media_path = 113;</code>
           * @return The originalMediaPath.
           */
          public java.lang.String getOriginalMediaPath() {
            java.lang.Object ref = originalMediaPath_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                originalMediaPath_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string original_media_path = 113;</code>
           * @return The bytes for originalMediaPath.
           */
          public com.google.protobuf.ByteString
              getOriginalMediaPathBytes() {
            java.lang.Object ref = originalMediaPath_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              originalMediaPath_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string original_media_path = 113;</code>
           * @param value The originalMediaPath to set.
           * @return This builder for chaining.
           */
          public Builder setOriginalMediaPath(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
            originalMediaPath_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string original_media_path = 113;</code>
           * @return This builder for chaining.
           */
          public Builder clearOriginalMediaPath() {
            bitField0_ = (bitField0_ & ~0x00002000);
            originalMediaPath_ = getDefaultInstance().getOriginalMediaPath();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string original_media_path = 113;</code>
           * @param value The bytes for originalMediaPath to set.
           * @return This builder for chaining.
           */
          public Builder setOriginalMediaPathBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
            originalMediaPath_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object mediaTitle_ = "";
          /**
           * <code>optional string media_title = 114;</code>
           * @return Whether the mediaTitle field is set.
           */
          public boolean hasMediaTitle() {
            return ((bitField0_ & 0x00004000) != 0);
          }
          /**
           * <code>optional string media_title = 114;</code>
           * @return The mediaTitle.
           */
          public java.lang.String getMediaTitle() {
            java.lang.Object ref = mediaTitle_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                mediaTitle_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string media_title = 114;</code>
           * @return The bytes for mediaTitle.
           */
          public com.google.protobuf.ByteString
              getMediaTitleBytes() {
            java.lang.Object ref = mediaTitle_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              mediaTitle_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string media_title = 114;</code>
           * @param value The mediaTitle to set.
           * @return This builder for chaining.
           */
          public Builder setMediaTitle(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
            mediaTitle_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string media_title = 114;</code>
           * @return This builder for chaining.
           */
          public Builder clearMediaTitle() {
            bitField0_ = (bitField0_ & ~0x00004000);
            mediaTitle_ = getDefaultInstance().getMediaTitle();
            onChanged();
            return this;
          }
          /**
           * <code>optional string media_title = 114;</code>
           * @param value The bytes for mediaTitle to set.
           * @return This builder for chaining.
           */
          public Builder setMediaTitleBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
            mediaTitle_ = value;
            onChanged();
            return this;
          }

          private boolean muteAudio_ ;
          /**
           * <code>optional bool mute_audio = 115;</code>
           * @return Whether the muteAudio field is set.
           */
          @java.lang.Override
          public boolean hasMuteAudio() {
            return ((bitField0_ & 0x00008000) != 0);
          }
          /**
           * <code>optional bool mute_audio = 115;</code>
           * @return The muteAudio.
           */
          @java.lang.Override
          public boolean getMuteAudio() {
            return muteAudio_;
          }
          /**
           * <code>optional bool mute_audio = 115;</code>
           * @param value The muteAudio to set.
           * @return This builder for chaining.
           */
          public Builder setMuteAudio(boolean value) {
            bitField0_ |= 0x00008000;
            muteAudio_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool mute_audio = 115;</code>
           * @return This builder for chaining.
           */
          public Builder clearMuteAudio() {
            bitField0_ = (bitField0_ & ~0x00008000);
            muteAudio_ = false;
            onChanged();
            return this;
          }

          private boolean loop_ ;
          /**
           * <code>optional bool loop = 116;</code>
           * @return Whether the loop field is set.
           */
          @java.lang.Override
          public boolean hasLoop() {
            return ((bitField0_ & 0x00010000) != 0);
          }
          /**
           * <code>optional bool loop = 116;</code>
           * @return The loop.
           */
          @java.lang.Override
          public boolean getLoop() {
            return loop_;
          }
          /**
           * <code>optional bool loop = 116;</code>
           * @param value The loop to set.
           * @return This builder for chaining.
           */
          public Builder setLoop(boolean value) {
            bitField0_ |= 0x00010000;
            loop_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool loop = 116;</code>
           * @return This builder for chaining.
           */
          public Builder clearLoop() {
            bitField0_ = (bitField0_ & ~0x00010000);
            loop_ = false;
            onChanged();
            return this;
          }

          private boolean isVoiceRecording_ ;
          /**
           * <code>optional bool is_voice_recording = 117;</code>
           * @return Whether the isVoiceRecording field is set.
           */
          @java.lang.Override
          public boolean hasIsVoiceRecording() {
            return ((bitField0_ & 0x00020000) != 0);
          }
          /**
           * <code>optional bool is_voice_recording = 117;</code>
           * @return The isVoiceRecording.
           */
          @java.lang.Override
          public boolean getIsVoiceRecording() {
            return isVoiceRecording_;
          }
          /**
           * <code>optional bool is_voice_recording = 117;</code>
           * @param value The isVoiceRecording to set.
           * @return This builder for chaining.
           */
          public Builder setIsVoiceRecording(boolean value) {
            bitField0_ |= 0x00020000;
            isVoiceRecording_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool is_voice_recording = 117;</code>
           * @return This builder for chaining.
           */
          public Builder clearIsVoiceRecording() {
            bitField0_ = (bitField0_ & ~0x00020000);
            isVoiceRecording_ = false;
            onChanged();
            return this;
          }

          private boolean isPendingVoiceRecording_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool is_pending_voice_recording = 118;</code>
           * @return Whether the isPendingVoiceRecording field is set.
           */
          @java.lang.Override
          public boolean hasIsPendingVoiceRecording() {
            return ((bitField0_ & 0x00040000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool is_pending_voice_recording = 118;</code>
           * @return The isPendingVoiceRecording.
           */
          @java.lang.Override
          public boolean getIsPendingVoiceRecording() {
            return isPendingVoiceRecording_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool is_pending_voice_recording = 118;</code>
           * @param value The isPendingVoiceRecording to set.
           * @return This builder for chaining.
           */
          public Builder setIsPendingVoiceRecording(boolean value) {
            bitField0_ |= 0x00040000;
            isPendingVoiceRecording_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool is_pending_voice_recording = 118;</code>
           * @return This builder for chaining.
           */
          public Builder clearIsPendingVoiceRecording() {
            bitField0_ = (bitField0_ & ~0x00040000);
            isPendingVoiceRecording_ = false;
            onChanged();
            return this;
          }

          private boolean isExtractAudio_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool is_extract_audio = 119;</code>
           * @return Whether the isExtractAudio field is set.
           */
          @java.lang.Override
          public boolean hasIsExtractAudio() {
            return ((bitField0_ & 0x00080000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool is_extract_audio = 119;</code>
           * @return The isExtractAudio.
           */
          @java.lang.Override
          public boolean getIsExtractAudio() {
            return isExtractAudio_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool is_extract_audio = 119;</code>
           * @param value The isExtractAudio to set.
           * @return This builder for chaining.
           */
          public Builder setIsExtractAudio(boolean value) {
            bitField0_ |= 0x00080000;
            isExtractAudio_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool is_extract_audio = 119;</code>
           * @return This builder for chaining.
           */
          public Builder clearIsExtractAudio() {
            bitField0_ = (bitField0_ & ~0x00080000);
            isExtractAudio_ = false;
            onChanged();
            return this;
          }

          private long videoClipItemUuidLsb_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional uint64 video_clip_item_uuid_lsb = 120;</code>
           * @return Whether the videoClipItemUuidLsb field is set.
           */
          @java.lang.Override
          public boolean hasVideoClipItemUuidLsb() {
            return ((bitField0_ & 0x00100000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional uint64 video_clip_item_uuid_lsb = 120;</code>
           * @return The videoClipItemUuidLsb.
           */
          @java.lang.Override
          public long getVideoClipItemUuidLsb() {
            return videoClipItemUuidLsb_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional uint64 video_clip_item_uuid_lsb = 120;</code>
           * @param value The videoClipItemUuidLsb to set.
           * @return This builder for chaining.
           */
          public Builder setVideoClipItemUuidLsb(long value) {
            bitField0_ |= 0x00100000;
            videoClipItemUuidLsb_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional uint64 video_clip_item_uuid_lsb = 120;</code>
           * @return This builder for chaining.
           */
          public Builder clearVideoClipItemUuidLsb() {
            bitField0_ = (bitField0_ & ~0x00100000);
            videoClipItemUuidLsb_ = 0L;
            onChanged();
            return this;
          }

          private long videoClipItemUuidMsb_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional uint64 video_clip_item_uuid_msb = 121;</code>
           * @return Whether the videoClipItemUuidMsb field is set.
           */
          @java.lang.Override
          public boolean hasVideoClipItemUuidMsb() {
            return ((bitField0_ & 0x00200000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional uint64 video_clip_item_uuid_msb = 121;</code>
           * @return The videoClipItemUuidMsb.
           */
          @java.lang.Override
          public long getVideoClipItemUuidMsb() {
            return videoClipItemUuidMsb_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional uint64 video_clip_item_uuid_msb = 121;</code>
           * @param value The videoClipItemUuidMsb to set.
           * @return This builder for chaining.
           */
          public Builder setVideoClipItemUuidMsb(long value) {
            bitField0_ |= 0x00200000;
            videoClipItemUuidMsb_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional uint64 video_clip_item_uuid_msb = 121;</code>
           * @return This builder for chaining.
           */
          public Builder clearVideoClipItemUuidMsb() {
            bitField0_ = (bitField0_ & ~0x00200000);
            videoClipItemUuidMsb_ = 0L;
            onChanged();
            return this;
          }

          private boolean isBgMusic_ ;
          /**
           * <pre>
           * m_isUserChoiceBGMusic
           * </pre>
           *
           * <code>optional bool is_bg_music = 122;</code>
           * @return Whether the isBgMusic field is set.
           */
          @java.lang.Override
          public boolean hasIsBgMusic() {
            return ((bitField0_ & 0x00400000) != 0);
          }
          /**
           * <pre>
           * m_isUserChoiceBGMusic
           * </pre>
           *
           * <code>optional bool is_bg_music = 122;</code>
           * @return The isBgMusic.
           */
          @java.lang.Override
          public boolean getIsBgMusic() {
            return isBgMusic_;
          }
          /**
           * <pre>
           * m_isUserChoiceBGMusic
           * </pre>
           *
           * <code>optional bool is_bg_music = 122;</code>
           * @param value The isBgMusic to set.
           * @return This builder for chaining.
           */
          public Builder setIsBgMusic(boolean value) {
            bitField0_ |= 0x00400000;
            isBgMusic_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * m_isUserChoiceBGMusic
           * </pre>
           *
           * <code>optional bool is_bg_music = 122;</code>
           * @return This builder for chaining.
           */
          public Builder clearIsBgMusic() {
            bitField0_ = (bitField0_ & ~0x00400000);
            isBgMusic_ = false;
            onChanged();
            return this;
          }

          private com.google.protobuf.Internal.IntList volumeEnvelopeTime_ = emptyIntList();
          private void ensureVolumeEnvelopeTimeIsMutable() {
            if (!((bitField0_ & 0x00800000) != 0)) {
              volumeEnvelopeTime_ = mutableCopy(volumeEnvelopeTime_);
              bitField0_ |= 0x00800000;
             }
          }
          /**
           * <code>repeated int32 volume_envelope_time = 123 [packed = true];</code>
           * @return A list containing the volumeEnvelopeTime.
           */
          public java.util.List<java.lang.Integer>
              getVolumeEnvelopeTimeList() {
            return ((bitField0_ & 0x00800000) != 0) ?
                     java.util.Collections.unmodifiableList(volumeEnvelopeTime_) : volumeEnvelopeTime_;
          }
          /**
           * <code>repeated int32 volume_envelope_time = 123 [packed = true];</code>
           * @return The count of volumeEnvelopeTime.
           */
          public int getVolumeEnvelopeTimeCount() {
            return volumeEnvelopeTime_.size();
          }
          /**
           * <code>repeated int32 volume_envelope_time = 123 [packed = true];</code>
           * @param index The index of the element to return.
           * @return The volumeEnvelopeTime at the given index.
           */
          public int getVolumeEnvelopeTime(int index) {
            return volumeEnvelopeTime_.getInt(index);
          }
          /**
           * <code>repeated int32 volume_envelope_time = 123 [packed = true];</code>
           * @param index The index to set the value at.
           * @param value The volumeEnvelopeTime to set.
           * @return This builder for chaining.
           */
          public Builder setVolumeEnvelopeTime(
              int index, int value) {
            ensureVolumeEnvelopeTimeIsMutable();
            volumeEnvelopeTime_.setInt(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated int32 volume_envelope_time = 123 [packed = true];</code>
           * @param value The volumeEnvelopeTime to add.
           * @return This builder for chaining.
           */
          public Builder addVolumeEnvelopeTime(int value) {
            ensureVolumeEnvelopeTimeIsMutable();
            volumeEnvelopeTime_.addInt(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated int32 volume_envelope_time = 123 [packed = true];</code>
           * @param values The volumeEnvelopeTime to add.
           * @return This builder for chaining.
           */
          public Builder addAllVolumeEnvelopeTime(
              java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureVolumeEnvelopeTimeIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, volumeEnvelopeTime_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated int32 volume_envelope_time = 123 [packed = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearVolumeEnvelopeTime() {
            volumeEnvelopeTime_ = emptyIntList();
            bitField0_ = (bitField0_ & ~0x00800000);
            onChanged();
            return this;
          }

          private com.google.protobuf.Internal.IntList volumeEnvelopeLevel_ = emptyIntList();
          private void ensureVolumeEnvelopeLevelIsMutable() {
            if (!((bitField0_ & 0x01000000) != 0)) {
              volumeEnvelopeLevel_ = mutableCopy(volumeEnvelopeLevel_);
              bitField0_ |= 0x01000000;
             }
          }
          /**
           * <code>repeated int32 volume_envelope_level = 124 [packed = true];</code>
           * @return A list containing the volumeEnvelopeLevel.
           */
          public java.util.List<java.lang.Integer>
              getVolumeEnvelopeLevelList() {
            return ((bitField0_ & 0x01000000) != 0) ?
                     java.util.Collections.unmodifiableList(volumeEnvelopeLevel_) : volumeEnvelopeLevel_;
          }
          /**
           * <code>repeated int32 volume_envelope_level = 124 [packed = true];</code>
           * @return The count of volumeEnvelopeLevel.
           */
          public int getVolumeEnvelopeLevelCount() {
            return volumeEnvelopeLevel_.size();
          }
          /**
           * <code>repeated int32 volume_envelope_level = 124 [packed = true];</code>
           * @param index The index of the element to return.
           * @return The volumeEnvelopeLevel at the given index.
           */
          public int getVolumeEnvelopeLevel(int index) {
            return volumeEnvelopeLevel_.getInt(index);
          }
          /**
           * <code>repeated int32 volume_envelope_level = 124 [packed = true];</code>
           * @param index The index to set the value at.
           * @param value The volumeEnvelopeLevel to set.
           * @return This builder for chaining.
           */
          public Builder setVolumeEnvelopeLevel(
              int index, int value) {
            ensureVolumeEnvelopeLevelIsMutable();
            volumeEnvelopeLevel_.setInt(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated int32 volume_envelope_level = 124 [packed = true];</code>
           * @param value The volumeEnvelopeLevel to add.
           * @return This builder for chaining.
           */
          public Builder addVolumeEnvelopeLevel(int value) {
            ensureVolumeEnvelopeLevelIsMutable();
            volumeEnvelopeLevel_.addInt(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated int32 volume_envelope_level = 124 [packed = true];</code>
           * @param values The volumeEnvelopeLevel to add.
           * @return This builder for chaining.
           */
          public Builder addAllVolumeEnvelopeLevel(
              java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureVolumeEnvelopeLevelIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, volumeEnvelopeLevel_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated int32 volume_envelope_level = 124 [packed = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearVolumeEnvelopeLevel() {
            volumeEnvelopeLevel_ = emptyIntList();
            bitField0_ = (bitField0_ & ~0x01000000);
            onChanged();
            return this;
          }

          private float clipWidth_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float clip_width = 125;</code>
           * @return Whether the clipWidth field is set.
           */
          @java.lang.Override
          public boolean hasClipWidth() {
            return ((bitField0_ & 0x02000000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float clip_width = 125;</code>
           * @return The clipWidth.
           */
          @java.lang.Override
          public float getClipWidth() {
            return clipWidth_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float clip_width = 125;</code>
           * @param value The clipWidth to set.
           * @return This builder for chaining.
           */
          public Builder setClipWidth(float value) {
            bitField0_ |= 0x02000000;
            clipWidth_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float clip_width = 125;</code>
           * @return This builder for chaining.
           */
          public Builder clearClipWidth() {
            bitField0_ = (bitField0_ & ~0x02000000);
            clipWidth_ = 0F;
            onChanged();
            return this;
          }

          private boolean pinned_ ;
          /**
           * <code>optional bool pinned = 126;</code>
           * @return Whether the pinned field is set.
           */
          @java.lang.Override
          public boolean hasPinned() {
            return ((bitField0_ & 0x04000000) != 0);
          }
          /**
           * <code>optional bool pinned = 126;</code>
           * @return The pinned.
           */
          @java.lang.Override
          public boolean getPinned() {
            return pinned_;
          }
          /**
           * <code>optional bool pinned = 126;</code>
           * @param value The pinned to set.
           * @return This builder for chaining.
           */
          public Builder setPinned(boolean value) {
            bitField0_ |= 0x04000000;
            pinned_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool pinned = 126;</code>
           * @return This builder for chaining.
           */
          public Builder clearPinned() {
            bitField0_ = (bitField0_ & ~0x04000000);
            pinned_ = false;
            onChanged();
            return this;
          }

          private int savedLoopDuration_ ;
          /**
           * <code>optional int32 saved_loop_duration = 127;</code>
           * @return Whether the savedLoopDuration field is set.
           */
          @java.lang.Override
          public boolean hasSavedLoopDuration() {
            return ((bitField0_ & 0x08000000) != 0);
          }
          /**
           * <code>optional int32 saved_loop_duration = 127;</code>
           * @return The savedLoopDuration.
           */
          @java.lang.Override
          public int getSavedLoopDuration() {
            return savedLoopDuration_;
          }
          /**
           * <code>optional int32 saved_loop_duration = 127;</code>
           * @param value The savedLoopDuration to set.
           * @return This builder for chaining.
           */
          public Builder setSavedLoopDuration(int value) {
            bitField0_ |= 0x08000000;
            savedLoopDuration_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 saved_loop_duration = 127;</code>
           * @return This builder for chaining.
           */
          public Builder clearSavedLoopDuration() {
            bitField0_ = (bitField0_ & ~0x08000000);
            savedLoopDuration_ = 0;
            onChanged();
            return this;
          }

          private boolean extendToEnd_ ;
          /**
           * <code>optional bool extend_to_end = 128;</code>
           * @return Whether the extendToEnd field is set.
           */
          @java.lang.Override
          public boolean hasExtendToEnd() {
            return ((bitField0_ & 0x10000000) != 0);
          }
          /**
           * <code>optional bool extend_to_end = 128;</code>
           * @return The extendToEnd.
           */
          @java.lang.Override
          public boolean getExtendToEnd() {
            return extendToEnd_;
          }
          /**
           * <code>optional bool extend_to_end = 128;</code>
           * @param value The extendToEnd to set.
           * @return This builder for chaining.
           */
          public Builder setExtendToEnd(boolean value) {
            bitField0_ |= 0x10000000;
            extendToEnd_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool extend_to_end = 128;</code>
           * @return This builder for chaining.
           */
          public Builder clearExtendToEnd() {
            bitField0_ = (bitField0_ & ~0x10000000);
            extendToEnd_ = false;
            onChanged();
            return this;
          }

          private int voiceChanger_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 voice_changer = 129;</code>
           * @return Whether the voiceChanger field is set.
           */
          @java.lang.Override
          public boolean hasVoiceChanger() {
            return ((bitField0_ & 0x20000000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 voice_changer = 129;</code>
           * @return The voiceChanger.
           */
          @java.lang.Override
          public int getVoiceChanger() {
            return voiceChanger_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 voice_changer = 129;</code>
           * @param value The voiceChanger to set.
           * @return This builder for chaining.
           */
          public Builder setVoiceChanger(int value) {
            bitField0_ |= 0x20000000;
            voiceChanger_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 voice_changer = 129;</code>
           * @return This builder for chaining.
           */
          public Builder clearVoiceChanger() {
            bitField0_ = (bitField0_ & ~0x20000000);
            voiceChanger_ = 0;
            onChanged();
            return this;
          }

          private int panLeft_ ;
          /**
           * <code>optional int32 pan_left = 130;</code>
           * @return Whether the panLeft field is set.
           */
          @java.lang.Override
          public boolean hasPanLeft() {
            return ((bitField0_ & 0x40000000) != 0);
          }
          /**
           * <code>optional int32 pan_left = 130;</code>
           * @return The panLeft.
           */
          @java.lang.Override
          public int getPanLeft() {
            return panLeft_;
          }
          /**
           * <code>optional int32 pan_left = 130;</code>
           * @param value The panLeft to set.
           * @return This builder for chaining.
           */
          public Builder setPanLeft(int value) {
            bitField0_ |= 0x40000000;
            panLeft_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 pan_left = 130;</code>
           * @return This builder for chaining.
           */
          public Builder clearPanLeft() {
            bitField0_ = (bitField0_ & ~0x40000000);
            panLeft_ = 0;
            onChanged();
            return this;
          }

          private int panRight_ ;
          /**
           * <code>optional int32 pan_right = 131;</code>
           * @return Whether the panRight field is set.
           */
          @java.lang.Override
          public boolean hasPanRight() {
            return ((bitField0_ & 0x80000000) != 0);
          }
          /**
           * <code>optional int32 pan_right = 131;</code>
           * @return The panRight.
           */
          @java.lang.Override
          public int getPanRight() {
            return panRight_;
          }
          /**
           * <code>optional int32 pan_right = 131;</code>
           * @param value The panRight to set.
           * @return This builder for chaining.
           */
          public Builder setPanRight(int value) {
            bitField0_ |= 0x80000000;
            panRight_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 pan_right = 131;</code>
           * @return This builder for chaining.
           */
          public Builder clearPanRight() {
            bitField0_ = (bitField0_ & ~0x80000000);
            panRight_ = 0;
            onChanged();
            return this;
          }

          private int compressor_ ;
          /**
           * <pre>
           * 0: off, 4: on (default: 0)
           * </pre>
           *
           * <code>optional int32 compressor = 132;</code>
           * @return Whether the compressor field is set.
           */
          @java.lang.Override
          public boolean hasCompressor() {
            return ((bitField1_ & 0x00000001) != 0);
          }
          /**
           * <pre>
           * 0: off, 4: on (default: 0)
           * </pre>
           *
           * <code>optional int32 compressor = 132;</code>
           * @return The compressor.
           */
          @java.lang.Override
          public int getCompressor() {
            return compressor_;
          }
          /**
           * <pre>
           * 0: off, 4: on (default: 0)
           * </pre>
           *
           * <code>optional int32 compressor = 132;</code>
           * @param value The compressor to set.
           * @return This builder for chaining.
           */
          public Builder setCompressor(int value) {
            bitField1_ |= 0x00000001;
            compressor_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * 0: off, 4: on (default: 0)
           * </pre>
           *
           * <code>optional int32 compressor = 132;</code>
           * @return This builder for chaining.
           */
          public Builder clearCompressor() {
            bitField1_ = (bitField1_ & ~0x00000001);
            compressor_ = 0;
            onChanged();
            return this;
          }

          private int pitchFactor_ ;
          /**
           * <code>optional int32 pitch_factor = 133;</code>
           * @return Whether the pitchFactor field is set.
           */
          @java.lang.Override
          public boolean hasPitchFactor() {
            return ((bitField1_ & 0x00000002) != 0);
          }
          /**
           * <code>optional int32 pitch_factor = 133;</code>
           * @return The pitchFactor.
           */
          @java.lang.Override
          public int getPitchFactor() {
            return pitchFactor_;
          }
          /**
           * <code>optional int32 pitch_factor = 133;</code>
           * @param value The pitchFactor to set.
           * @return This builder for chaining.
           */
          public Builder setPitchFactor(int value) {
            bitField1_ |= 0x00000002;
            pitchFactor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 pitch_factor = 133;</code>
           * @return This builder for chaining.
           */
          public Builder clearPitchFactor() {
            bitField1_ = (bitField1_ & ~0x00000002);
            pitchFactor_ = 0;
            onChanged();
            return this;
          }

          private java.lang.Object clipName_ = "";
          /**
           * <code>optional string clip_name = 134;</code>
           * @return Whether the clipName field is set.
           */
          public boolean hasClipName() {
            return ((bitField1_ & 0x00000004) != 0);
          }
          /**
           * <code>optional string clip_name = 134;</code>
           * @return The clipName.
           */
          public java.lang.String getClipName() {
            java.lang.Object ref = clipName_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                clipName_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string clip_name = 134;</code>
           * @return The bytes for clipName.
           */
          public com.google.protobuf.ByteString
              getClipNameBytes() {
            java.lang.Object ref = clipName_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              clipName_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string clip_name = 134;</code>
           * @param value The clipName to set.
           * @return This builder for chaining.
           */
          public Builder setClipName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000004;
            clipName_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string clip_name = 134;</code>
           * @return This builder for chaining.
           */
          public Builder clearClipName() {
            bitField1_ = (bitField1_ & ~0x00000004);
            clipName_ = getDefaultInstance().getClipName();
            onChanged();
            return this;
          }
          /**
           * <code>optional string clip_name = 134;</code>
           * @param value The bytes for clipName to set.
           * @return This builder for chaining.
           */
          public Builder setClipNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000004;
            clipName_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object audioAssetIdIos_ = "";
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string audio_asset_id_ios = 135;</code>
           * @return Whether the audioAssetIdIos field is set.
           */
          public boolean hasAudioAssetIdIos() {
            return ((bitField1_ & 0x00000008) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string audio_asset_id_ios = 135;</code>
           * @return The audioAssetIdIos.
           */
          public java.lang.String getAudioAssetIdIos() {
            java.lang.Object ref = audioAssetIdIos_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                audioAssetIdIos_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string audio_asset_id_ios = 135;</code>
           * @return The bytes for audioAssetIdIos.
           */
          public com.google.protobuf.ByteString
              getAudioAssetIdIosBytes() {
            java.lang.Object ref = audioAssetIdIos_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              audioAssetIdIos_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string audio_asset_id_ios = 135;</code>
           * @param value The audioAssetIdIos to set.
           * @return This builder for chaining.
           */
          public Builder setAudioAssetIdIos(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000008;
            audioAssetIdIos_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string audio_asset_id_ios = 135;</code>
           * @return This builder for chaining.
           */
          public Builder clearAudioAssetIdIos() {
            bitField1_ = (bitField1_ & ~0x00000008);
            audioAssetIdIos_ = getDefaultInstance().getAudioAssetIdIos();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string audio_asset_id_ios = 135;</code>
           * @param value The bytes for audioAssetIdIos to set.
           * @return This builder for chaining.
           */
          public Builder setAudioAssetIdIosBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000008;
            audioAssetIdIos_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object enhancedAudioFilter_ = "";
          /**
           * <code>optional string enhancedAudioFilter = 136;</code>
           * @return Whether the enhancedAudioFilter field is set.
           */
          public boolean hasEnhancedAudioFilter() {
            return ((bitField1_ & 0x00000010) != 0);
          }
          /**
           * <code>optional string enhancedAudioFilter = 136;</code>
           * @return The enhancedAudioFilter.
           */
          public java.lang.String getEnhancedAudioFilter() {
            java.lang.Object ref = enhancedAudioFilter_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                enhancedAudioFilter_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string enhancedAudioFilter = 136;</code>
           * @return The bytes for enhancedAudioFilter.
           */
          public com.google.protobuf.ByteString
              getEnhancedAudioFilterBytes() {
            java.lang.Object ref = enhancedAudioFilter_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              enhancedAudioFilter_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string enhancedAudioFilter = 136;</code>
           * @param value The enhancedAudioFilter to set.
           * @return This builder for chaining.
           */
          public Builder setEnhancedAudioFilter(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000010;
            enhancedAudioFilter_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string enhancedAudioFilter = 136;</code>
           * @return This builder for chaining.
           */
          public Builder clearEnhancedAudioFilter() {
            bitField1_ = (bitField1_ & ~0x00000010);
            enhancedAudioFilter_ = getDefaultInstance().getEnhancedAudioFilter();
            onChanged();
            return this;
          }
          /**
           * <code>optional string enhancedAudioFilter = 136;</code>
           * @param value The bytes for enhancedAudioFilter to set.
           * @return This builder for chaining.
           */
          public Builder setEnhancedAudioFilterBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000010;
            enhancedAudioFilter_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object equalizer_ = "";
          /**
           * <code>optional string equalizer = 137;</code>
           * @return Whether the equalizer field is set.
           */
          public boolean hasEqualizer() {
            return ((bitField1_ & 0x00000020) != 0);
          }
          /**
           * <code>optional string equalizer = 137;</code>
           * @return The equalizer.
           */
          public java.lang.String getEqualizer() {
            java.lang.Object ref = equalizer_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                equalizer_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string equalizer = 137;</code>
           * @return The bytes for equalizer.
           */
          public com.google.protobuf.ByteString
              getEqualizerBytes() {
            java.lang.Object ref = equalizer_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              equalizer_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string equalizer = 137;</code>
           * @param value The equalizer to set.
           * @return This builder for chaining.
           */
          public Builder setEqualizer(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000020;
            equalizer_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string equalizer = 137;</code>
           * @return This builder for chaining.
           */
          public Builder clearEqualizer() {
            bitField1_ = (bitField1_ & ~0x00000020);
            equalizer_ = getDefaultInstance().getEqualizer();
            onChanged();
            return this;
          }
          /**
           * <code>optional string equalizer = 137;</code>
           * @param value The bytes for equalizer to set.
           * @return This builder for chaining.
           */
          public Builder setEqualizerBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000020;
            equalizer_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object reverb_ = "";
          /**
           * <code>optional string reverb = 138;</code>
           * @return Whether the reverb field is set.
           */
          public boolean hasReverb() {
            return ((bitField1_ & 0x00000040) != 0);
          }
          /**
           * <code>optional string reverb = 138;</code>
           * @return The reverb.
           */
          public java.lang.String getReverb() {
            java.lang.Object ref = reverb_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                reverb_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string reverb = 138;</code>
           * @return The bytes for reverb.
           */
          public com.google.protobuf.ByteString
              getReverbBytes() {
            java.lang.Object ref = reverb_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              reverb_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string reverb = 138;</code>
           * @param value The reverb to set.
           * @return This builder for chaining.
           */
          public Builder setReverb(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000040;
            reverb_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string reverb = 138;</code>
           * @return This builder for chaining.
           */
          public Builder clearReverb() {
            bitField1_ = (bitField1_ & ~0x00000040);
            reverb_ = getDefaultInstance().getReverb();
            onChanged();
            return this;
          }
          /**
           * <code>optional string reverb = 138;</code>
           * @param value The bytes for reverb to set.
           * @return This builder for chaining.
           */
          public Builder setReverbBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000040;
            reverb_ = value;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.AudioClip)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.AudioClip)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<AudioClip>
            PARSER = new com.google.protobuf.AbstractParser<AudioClip>() {
          @java.lang.Override
          public AudioClip parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new AudioClip(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<AudioClip> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<AudioClip> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AudioClip getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface LayerCommonOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.LayerCommon)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional int32 start_time = 100;</code>
         * @return Whether the startTime field is set.
         */
        boolean hasStartTime();
        /**
         * <code>optional int32 start_time = 100;</code>
         * @return The startTime.
         */
        int getStartTime();

        /**
         * <code>optional int32 end_time = 101;</code>
         * @return Whether the endTime field is set.
         */
        boolean hasEndTime();
        /**
         * <code>optional int32 end_time = 101;</code>
         * @return The endTime.
         */
        int getEndTime();

        /**
         * <code>optional bool pinned = 102;</code>
         * @return Whether the pinned field is set.
         */
        boolean hasPinned();
        /**
         * <code>optional bool pinned = 102;</code>
         * @return The pinned.
         */
        boolean getPinned();

        /**
         * <code>optional int32 start_trim = 103;</code>
         * @return Whether the startTrim field is set.
         */
        boolean hasStartTrim();
        /**
         * <code>optional int32 start_trim = 103;</code>
         * @return The startTrim.
         */
        int getStartTrim();

        /**
         * <code>optional int32 end_trim = 104;</code>
         * @return Whether the endTrim field is set.
         */
        boolean hasEndTrim();
        /**
         * <code>optional int32 end_trim = 104;</code>
         * @return The endTrim.
         */
        int getEndTrim();

        /**
         * <code>optional int64 z_order = 105;</code>
         * @return Whether the zOrder field is set.
         */
        boolean hasZOrder();
        /**
         * <code>optional int64 z_order = 105;</code>
         * @return The zOrder.
         */
        long getZOrder();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 layer_expression = 106;</code>
         * @return Whether the layerExpression field is set.
         */
        boolean hasLayerExpression();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 layer_expression = 106;</code>
         * @return The layerExpression.
         */
        int getLayerExpression();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 layer_expression_duration = 107;</code>
         * @return Whether the layerExpressionDuration field is set.
         */
        boolean hasLayerExpressionDuration();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 layer_expression_duration = 107;</code>
         * @return The layerExpressionDuration.
         */
        int getLayerExpressionDuration();

        /**
         * <code>optional int32 layer_in_expression = 109;</code>
         * @return Whether the layerInExpression field is set.
         */
        boolean hasLayerInExpression();
        /**
         * <code>optional int32 layer_in_expression = 109;</code>
         * @return The layerInExpression.
         */
        int getLayerInExpression();

        /**
         * <code>optional int32 layer_in_expression_duration = 110;</code>
         * @return Whether the layerInExpressionDuration field is set.
         */
        boolean hasLayerInExpressionDuration();
        /**
         * <code>optional int32 layer_in_expression_duration = 110;</code>
         * @return The layerInExpressionDuration.
         */
        int getLayerInExpressionDuration();

        /**
         * <code>optional int32 layer_out_expression = 111;</code>
         * @return Whether the layerOutExpression field is set.
         */
        boolean hasLayerOutExpression();
        /**
         * <code>optional int32 layer_out_expression = 111;</code>
         * @return The layerOutExpression.
         */
        int getLayerOutExpression();

        /**
         * <code>optional int32 layer_out_expression_duration = 112;</code>
         * @return Whether the layerOutExpressionDuration field is set.
         */
        boolean hasLayerOutExpressionDuration();
        /**
         * <code>optional int32 layer_out_expression_duration = 112;</code>
         * @return The layerOutExpressionDuration.
         */
        int getLayerOutExpressionDuration();

        /**
         * <code>optional int32 layer_overall_expression = 113;</code>
         * @return Whether the layerOverallExpression field is set.
         */
        boolean hasLayerOverallExpression();
        /**
         * <code>optional int32 layer_overall_expression = 113;</code>
         * @return The layerOverallExpression.
         */
        int getLayerOverallExpression();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float layer_overall_expression_speed = 114;</code>
         * @return Whether the layerOverallExpressionSpeed field is set.
         */
        boolean hasLayerOverallExpressionSpeed();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float layer_overall_expression_speed = 114;</code>
         * @return The layerOverallExpressionSpeed.
         */
        float getLayerOverallExpressionSpeed();

        /**
         * <code>optional .KMProto.KMProject.SplitScreenType split_screen_type = 116;</code>
         * @return Whether the splitScreenType field is set.
         */
        boolean hasSplitScreenType();
        /**
         * <code>optional .KMProto.KMProject.SplitScreenType split_screen_type = 116;</code>
         * @return The splitScreenType.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.SplitScreenType getSplitScreenType();

        /**
         * <code>optional int32 split_size_left = 117;</code>
         * @return Whether the splitSizeLeft field is set.
         */
        boolean hasSplitSizeLeft();
        /**
         * <code>optional int32 split_size_left = 117;</code>
         * @return The splitSizeLeft.
         */
        int getSplitSizeLeft();

        /**
         * <code>optional int32 split_size_right = 118;</code>
         * @return Whether the splitSizeRight field is set.
         */
        boolean hasSplitSizeRight();
        /**
         * <code>optional int32 split_size_right = 118;</code>
         * @return The splitSizeRight.
         */
        int getSplitSizeRight();

        /**
         * <code>optional int32 split_size_top = 119;</code>
         * @return Whether the splitSizeTop field is set.
         */
        boolean hasSplitSizeTop();
        /**
         * <code>optional int32 split_size_top = 119;</code>
         * @return The splitSizeTop.
         */
        int getSplitSizeTop();

        /**
         * <code>optional int32 split_size_bottom = 120;</code>
         * @return Whether the splitSizeBottom field is set.
         */
        boolean hasSplitSizeBottom();
        /**
         * <code>optional int32 split_size_bottom = 120;</code>
         * @return The splitSizeBottom.
         */
        int getSplitSizeBottom();

        /**
         * <code>optional bool flip_h = 122;</code>
         * @return Whether the flipH field is set.
         */
        boolean hasFlipH();
        /**
         * <code>optional bool flip_h = 122;</code>
         * @return The flipH.
         */
        boolean getFlipH();

        /**
         * <code>optional bool flip_v = 123;</code>
         * @return Whether the flipV field is set.
         */
        boolean hasFlipV();
        /**
         * <code>optional bool flip_v = 123;</code>
         * @return The flipV.
         */
        boolean getFlipV();

        /**
         * <code>optional .KMProto.KMProject.KeyFrame split_keyframe = 115;</code>
         * @return Whether the splitKeyframe field is set.
         */
        boolean hasSplitKeyframe();
        /**
         * <code>optional .KMProto.KMProject.KeyFrame split_keyframe = 115;</code>
         * @return The splitKeyframe.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame getSplitKeyframe();
        /**
         * <code>optional .KMProto.KMProject.KeyFrame split_keyframe = 115;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrameOrBuilder getSplitKeyframeOrBuilder();

        /**
         * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
         */
        java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame> 
            getKeyframesList();
        /**
         * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame getKeyframes(int index);
        /**
         * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
         */
        int getKeyframesCount();
        /**
         * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
         */
        java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrameOrBuilder> 
            getKeyframesOrBuilderList();
        /**
         * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrameOrBuilder getKeyframesOrBuilder(
            int index);

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 overall_alpha = 121;</code>
         * @return Whether the overallAlpha field is set.
         */
        boolean hasOverallAlpha();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 overall_alpha = 121;</code>
         * @return The overallAlpha.
         */
        int getOverallAlpha();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool layermask_enabled = 124;</code>
         * @return Whether the layermaskEnabled field is set.
         */
        boolean hasLayermaskEnabled();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool layermask_enabled = 124;</code>
         * @return The layermaskEnabled.
         */
        boolean getLayermaskEnabled();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 layermask_type = 125;</code>
         * @return Whether the layermaskType field is set.
         */
        boolean hasLayermaskType();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 layermask_type = 125;</code>
         * @return The layermaskType.
         */
        int getLayermaskType();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 layermask_index = 126;</code>
         * @return Whether the layermaskIndex field is set.
         */
        boolean hasLayermaskIndex();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 layermask_index = 126;</code>
         * @return The layermaskIndex.
         */
        int getLayermaskIndex();

        /**
         * <code>optional string layer_name = 127;</code>
         * @return Whether the layerName field is set.
         */
        boolean hasLayerName();
        /**
         * <code>optional string layer_name = 127;</code>
         * @return The layerName.
         */
        java.lang.String getLayerName();
        /**
         * <code>optional string layer_name = 127;</code>
         * @return The bytes for layerName.
         */
        com.google.protobuf.ByteString
            getLayerNameBytes();

        /**
         * <code>optional float crop_bounds_left = 128;</code>
         * @return Whether the cropBoundsLeft field is set.
         */
        boolean hasCropBoundsLeft();
        /**
         * <code>optional float crop_bounds_left = 128;</code>
         * @return The cropBoundsLeft.
         */
        float getCropBoundsLeft();

        /**
         * <code>optional float crop_bounds_top = 129;</code>
         * @return Whether the cropBoundsTop field is set.
         */
        boolean hasCropBoundsTop();
        /**
         * <code>optional float crop_bounds_top = 129;</code>
         * @return The cropBoundsTop.
         */
        float getCropBoundsTop();

        /**
         * <code>optional float crop_bounds_right = 130;</code>
         * @return Whether the cropBoundsRight field is set.
         */
        boolean hasCropBoundsRight();
        /**
         * <code>optional float crop_bounds_right = 130;</code>
         * @return The cropBoundsRight.
         */
        float getCropBoundsRight();

        /**
         * <code>optional float crop_bounds_bottom = 131;</code>
         * @return Whether the cropBoundsBottom field is set.
         */
        boolean hasCropBoundsBottom();
        /**
         * <code>optional float crop_bounds_bottom = 131;</code>
         * @return The cropBoundsBottom.
         */
        float getCropBoundsBottom();

        /**
         * <code>optional int32 crop_bounds_shape = 132;</code>
         * @return Whether the cropBoundsShape field is set.
         */
        boolean hasCropBoundsShape();
        /**
         * <code>optional int32 crop_bounds_shape = 132;</code>
         * @return The cropBoundsShape.
         */
        int getCropBoundsShape();

        /**
         * <code>optional float crop_mask_feather = 133;</code>
         * @return Whether the cropMaskFeather field is set.
         */
        boolean hasCropMaskFeather();
        /**
         * <code>optional float crop_mask_feather = 133;</code>
         * @return The cropMaskFeather.
         */
        float getCropMaskFeather();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 natural_orientation = 134;</code>
         * @return Whether the naturalOrientation field is set.
         */
        boolean hasNaturalOrientation();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 natural_orientation = 134;</code>
         * @return The naturalOrientation.
         */
        int getNaturalOrientation();

        /**
         * <code>optional bool use_crop_mask = 135;</code>
         * @return Whether the useCropMask field is set.
         */
        boolean hasUseCropMask();
        /**
         * <code>optional bool use_crop_mask = 135;</code>
         * @return The useCropMask.
         */
        boolean getUseCropMask();

        /**
         * <code>optional .KMProto.KMProject.LayerBlendModeType blend_mode = 136 [default = LAYER_BLEND_NORMAL];</code>
         * @return Whether the blendMode field is set.
         */
        boolean hasBlendMode();
        /**
         * <code>optional .KMProto.KMProject.LayerBlendModeType blend_mode = 136 [default = LAYER_BLEND_NORMAL];</code>
         * @return The blendMode.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerBlendModeType getBlendMode();

        /**
         * <code>optional float render_size_scale_x = 137;</code>
         * @return Whether the renderSizeScaleX field is set.
         */
        boolean hasRenderSizeScaleX();
        /**
         * <code>optional float render_size_scale_x = 137;</code>
         * @return The renderSizeScaleX.
         */
        float getRenderSizeScaleX();

        /**
         * <code>optional float render_size_scale_y = 138;</code>
         * @return Whether the renderSizeScaleY field is set.
         */
        boolean hasRenderSizeScaleY();
        /**
         * <code>optional float render_size_scale_y = 138;</code>
         * @return The renderSizeScaleY.
         */
        float getRenderSizeScaleY();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 videoUprightOrientation = 139;</code>
         * @return Whether the videoUprightOrientation field is set.
         */
        boolean hasVideoUprightOrientation();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 videoUprightOrientation = 139;</code>
         * @return The videoUprightOrientation.
         */
        int getVideoUprightOrientation();
      }
      /**
       * Protobuf type {@code KMProto.KMProject.LayerCommon}
       */
      public static final class LayerCommon extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.LayerCommon)
          LayerCommonOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use LayerCommon.newBuilder() to construct.
        private LayerCommon(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private LayerCommon() {
          splitScreenType_ = 0;
          keyframes_ = java.util.Collections.emptyList();
          layerName_ = "";
          blendMode_ = 17;
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new LayerCommon();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private LayerCommon(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          int mutable_bitField1_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 800: {
                  bitField0_ |= 0x00000001;
                  startTime_ = input.readInt32();
                  break;
                }
                case 808: {
                  bitField0_ |= 0x00000002;
                  endTime_ = input.readInt32();
                  break;
                }
                case 816: {
                  bitField0_ |= 0x00000004;
                  pinned_ = input.readBool();
                  break;
                }
                case 824: {
                  bitField0_ |= 0x00000008;
                  startTrim_ = input.readInt32();
                  break;
                }
                case 832: {
                  bitField0_ |= 0x00000010;
                  endTrim_ = input.readInt32();
                  break;
                }
                case 840: {
                  bitField0_ |= 0x00000020;
                  zOrder_ = input.readInt64();
                  break;
                }
                case 848: {
                  bitField0_ |= 0x00000040;
                  layerExpression_ = input.readInt32();
                  break;
                }
                case 856: {
                  bitField0_ |= 0x00000080;
                  layerExpressionDuration_ = input.readInt32();
                  break;
                }
                case 866: {
                  if (!((mutable_bitField0_ & 0x00400000) != 0)) {
                    keyframes_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame>();
                    mutable_bitField0_ |= 0x00400000;
                  }
                  keyframes_.add(
                      input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.PARSER, extensionRegistry));
                  break;
                }
                case 872: {
                  bitField0_ |= 0x00000100;
                  layerInExpression_ = input.readInt32();
                  break;
                }
                case 880: {
                  bitField0_ |= 0x00000200;
                  layerInExpressionDuration_ = input.readInt32();
                  break;
                }
                case 888: {
                  bitField0_ |= 0x00000400;
                  layerOutExpression_ = input.readInt32();
                  break;
                }
                case 896: {
                  bitField0_ |= 0x00000800;
                  layerOutExpressionDuration_ = input.readInt32();
                  break;
                }
                case 904: {
                  bitField0_ |= 0x00001000;
                  layerOverallExpression_ = input.readInt32();
                  break;
                }
                case 917: {
                  bitField0_ |= 0x00002000;
                  layerOverallExpressionSpeed_ = input.readFloat();
                  break;
                }
                case 922: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.Builder subBuilder = null;
                  if (((bitField0_ & 0x00200000) != 0)) {
                    subBuilder = splitKeyframe_.toBuilder();
                  }
                  splitKeyframe_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(splitKeyframe_);
                    splitKeyframe_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00200000;
                  break;
                }
                case 928: {
                  int rawValue = input.readEnum();
                    @SuppressWarnings("deprecation")
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.SplitScreenType value = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.SplitScreenType.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(116, rawValue);
                  } else {
                    bitField0_ |= 0x00004000;
                    splitScreenType_ = rawValue;
                  }
                  break;
                }
                case 936: {
                  bitField0_ |= 0x00008000;
                  splitSizeLeft_ = input.readInt32();
                  break;
                }
                case 944: {
                  bitField0_ |= 0x00010000;
                  splitSizeRight_ = input.readInt32();
                  break;
                }
                case 952: {
                  bitField0_ |= 0x00020000;
                  splitSizeTop_ = input.readInt32();
                  break;
                }
                case 960: {
                  bitField0_ |= 0x00040000;
                  splitSizeBottom_ = input.readInt32();
                  break;
                }
                case 968: {
                  bitField0_ |= 0x00400000;
                  overallAlpha_ = input.readInt32();
                  break;
                }
                case 976: {
                  bitField0_ |= 0x00080000;
                  flipH_ = input.readBool();
                  break;
                }
                case 984: {
                  bitField0_ |= 0x00100000;
                  flipV_ = input.readBool();
                  break;
                }
                case 992: {
                  bitField0_ |= 0x00800000;
                  layermaskEnabled_ = input.readBool();
                  break;
                }
                case 1000: {
                  bitField0_ |= 0x01000000;
                  layermaskType_ = input.readInt32();
                  break;
                }
                case 1008: {
                  bitField0_ |= 0x02000000;
                  layermaskIndex_ = input.readInt32();
                  break;
                }
                case 1018: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x04000000;
                  layerName_ = bs;
                  break;
                }
                case 1029: {
                  bitField0_ |= 0x08000000;
                  cropBoundsLeft_ = input.readFloat();
                  break;
                }
                case 1037: {
                  bitField0_ |= 0x10000000;
                  cropBoundsTop_ = input.readFloat();
                  break;
                }
                case 1045: {
                  bitField0_ |= 0x20000000;
                  cropBoundsRight_ = input.readFloat();
                  break;
                }
                case 1053: {
                  bitField0_ |= 0x40000000;
                  cropBoundsBottom_ = input.readFloat();
                  break;
                }
                case 1056: {
                  bitField0_ |= 0x80000000;
                  cropBoundsShape_ = input.readInt32();
                  break;
                }
                case 1069: {
                  bitField1_ |= 0x00000001;
                  cropMaskFeather_ = input.readFloat();
                  break;
                }
                case 1072: {
                  bitField1_ |= 0x00000002;
                  naturalOrientation_ = input.readInt32();
                  break;
                }
                case 1080: {
                  bitField1_ |= 0x00000004;
                  useCropMask_ = input.readBool();
                  break;
                }
                case 1088: {
                  int rawValue = input.readEnum();
                    @SuppressWarnings("deprecation")
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerBlendModeType value = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerBlendModeType.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(136, rawValue);
                  } else {
                    bitField1_ |= 0x00000008;
                    blendMode_ = rawValue;
                  }
                  break;
                }
                case 1101: {
                  bitField1_ |= 0x00000010;
                  renderSizeScaleX_ = input.readFloat();
                  break;
                }
                case 1109: {
                  bitField1_ |= 0x00000020;
                  renderSizeScaleY_ = input.readFloat();
                  break;
                }
                case 1112: {
                  bitField1_ |= 0x00000040;
                  videoUprightOrientation_ = input.readInt32();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00400000) != 0)) {
              keyframes_ = java.util.Collections.unmodifiableList(keyframes_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_LayerCommon_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_LayerCommon_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder.class);
        }

        private int bitField0_;
        private int bitField1_;
        public static final int START_TIME_FIELD_NUMBER = 100;
        private int startTime_;
        /**
         * <code>optional int32 start_time = 100;</code>
         * @return Whether the startTime field is set.
         */
        @java.lang.Override
        public boolean hasStartTime() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional int32 start_time = 100;</code>
         * @return The startTime.
         */
        @java.lang.Override
        public int getStartTime() {
          return startTime_;
        }

        public static final int END_TIME_FIELD_NUMBER = 101;
        private int endTime_;
        /**
         * <code>optional int32 end_time = 101;</code>
         * @return Whether the endTime field is set.
         */
        @java.lang.Override
        public boolean hasEndTime() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional int32 end_time = 101;</code>
         * @return The endTime.
         */
        @java.lang.Override
        public int getEndTime() {
          return endTime_;
        }

        public static final int PINNED_FIELD_NUMBER = 102;
        private boolean pinned_;
        /**
         * <code>optional bool pinned = 102;</code>
         * @return Whether the pinned field is set.
         */
        @java.lang.Override
        public boolean hasPinned() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional bool pinned = 102;</code>
         * @return The pinned.
         */
        @java.lang.Override
        public boolean getPinned() {
          return pinned_;
        }

        public static final int START_TRIM_FIELD_NUMBER = 103;
        private int startTrim_;
        /**
         * <code>optional int32 start_trim = 103;</code>
         * @return Whether the startTrim field is set.
         */
        @java.lang.Override
        public boolean hasStartTrim() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional int32 start_trim = 103;</code>
         * @return The startTrim.
         */
        @java.lang.Override
        public int getStartTrim() {
          return startTrim_;
        }

        public static final int END_TRIM_FIELD_NUMBER = 104;
        private int endTrim_;
        /**
         * <code>optional int32 end_trim = 104;</code>
         * @return Whether the endTrim field is set.
         */
        @java.lang.Override
        public boolean hasEndTrim() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional int32 end_trim = 104;</code>
         * @return The endTrim.
         */
        @java.lang.Override
        public int getEndTrim() {
          return endTrim_;
        }

        public static final int Z_ORDER_FIELD_NUMBER = 105;
        private long zOrder_;
        /**
         * <code>optional int64 z_order = 105;</code>
         * @return Whether the zOrder field is set.
         */
        @java.lang.Override
        public boolean hasZOrder() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional int64 z_order = 105;</code>
         * @return The zOrder.
         */
        @java.lang.Override
        public long getZOrder() {
          return zOrder_;
        }

        public static final int LAYER_EXPRESSION_FIELD_NUMBER = 106;
        private int layerExpression_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 layer_expression = 106;</code>
         * @return Whether the layerExpression field is set.
         */
        @java.lang.Override
        public boolean hasLayerExpression() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 layer_expression = 106;</code>
         * @return The layerExpression.
         */
        @java.lang.Override
        public int getLayerExpression() {
          return layerExpression_;
        }

        public static final int LAYER_EXPRESSION_DURATION_FIELD_NUMBER = 107;
        private int layerExpressionDuration_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 layer_expression_duration = 107;</code>
         * @return Whether the layerExpressionDuration field is set.
         */
        @java.lang.Override
        public boolean hasLayerExpressionDuration() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 layer_expression_duration = 107;</code>
         * @return The layerExpressionDuration.
         */
        @java.lang.Override
        public int getLayerExpressionDuration() {
          return layerExpressionDuration_;
        }

        public static final int LAYER_IN_EXPRESSION_FIELD_NUMBER = 109;
        private int layerInExpression_;
        /**
         * <code>optional int32 layer_in_expression = 109;</code>
         * @return Whether the layerInExpression field is set.
         */
        @java.lang.Override
        public boolean hasLayerInExpression() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <code>optional int32 layer_in_expression = 109;</code>
         * @return The layerInExpression.
         */
        @java.lang.Override
        public int getLayerInExpression() {
          return layerInExpression_;
        }

        public static final int LAYER_IN_EXPRESSION_DURATION_FIELD_NUMBER = 110;
        private int layerInExpressionDuration_;
        /**
         * <code>optional int32 layer_in_expression_duration = 110;</code>
         * @return Whether the layerInExpressionDuration field is set.
         */
        @java.lang.Override
        public boolean hasLayerInExpressionDuration() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <code>optional int32 layer_in_expression_duration = 110;</code>
         * @return The layerInExpressionDuration.
         */
        @java.lang.Override
        public int getLayerInExpressionDuration() {
          return layerInExpressionDuration_;
        }

        public static final int LAYER_OUT_EXPRESSION_FIELD_NUMBER = 111;
        private int layerOutExpression_;
        /**
         * <code>optional int32 layer_out_expression = 111;</code>
         * @return Whether the layerOutExpression field is set.
         */
        @java.lang.Override
        public boolean hasLayerOutExpression() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <code>optional int32 layer_out_expression = 111;</code>
         * @return The layerOutExpression.
         */
        @java.lang.Override
        public int getLayerOutExpression() {
          return layerOutExpression_;
        }

        public static final int LAYER_OUT_EXPRESSION_DURATION_FIELD_NUMBER = 112;
        private int layerOutExpressionDuration_;
        /**
         * <code>optional int32 layer_out_expression_duration = 112;</code>
         * @return Whether the layerOutExpressionDuration field is set.
         */
        @java.lang.Override
        public boolean hasLayerOutExpressionDuration() {
          return ((bitField0_ & 0x00000800) != 0);
        }
        /**
         * <code>optional int32 layer_out_expression_duration = 112;</code>
         * @return The layerOutExpressionDuration.
         */
        @java.lang.Override
        public int getLayerOutExpressionDuration() {
          return layerOutExpressionDuration_;
        }

        public static final int LAYER_OVERALL_EXPRESSION_FIELD_NUMBER = 113;
        private int layerOverallExpression_;
        /**
         * <code>optional int32 layer_overall_expression = 113;</code>
         * @return Whether the layerOverallExpression field is set.
         */
        @java.lang.Override
        public boolean hasLayerOverallExpression() {
          return ((bitField0_ & 0x00001000) != 0);
        }
        /**
         * <code>optional int32 layer_overall_expression = 113;</code>
         * @return The layerOverallExpression.
         */
        @java.lang.Override
        public int getLayerOverallExpression() {
          return layerOverallExpression_;
        }

        public static final int LAYER_OVERALL_EXPRESSION_SPEED_FIELD_NUMBER = 114;
        private float layerOverallExpressionSpeed_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float layer_overall_expression_speed = 114;</code>
         * @return Whether the layerOverallExpressionSpeed field is set.
         */
        @java.lang.Override
        public boolean hasLayerOverallExpressionSpeed() {
          return ((bitField0_ & 0x00002000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float layer_overall_expression_speed = 114;</code>
         * @return The layerOverallExpressionSpeed.
         */
        @java.lang.Override
        public float getLayerOverallExpressionSpeed() {
          return layerOverallExpressionSpeed_;
        }

        public static final int SPLIT_SCREEN_TYPE_FIELD_NUMBER = 116;
        private int splitScreenType_;
        /**
         * <code>optional .KMProto.KMProject.SplitScreenType split_screen_type = 116;</code>
         * @return Whether the splitScreenType field is set.
         */
        @java.lang.Override public boolean hasSplitScreenType() {
          return ((bitField0_ & 0x00004000) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.SplitScreenType split_screen_type = 116;</code>
         * @return The splitScreenType.
         */
        @java.lang.Override public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.SplitScreenType getSplitScreenType() {
          @SuppressWarnings("deprecation")
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.SplitScreenType result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.SplitScreenType.valueOf(splitScreenType_);
          return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.SplitScreenType.OFF : result;
        }

        public static final int SPLIT_SIZE_LEFT_FIELD_NUMBER = 117;
        private int splitSizeLeft_;
        /**
         * <code>optional int32 split_size_left = 117;</code>
         * @return Whether the splitSizeLeft field is set.
         */
        @java.lang.Override
        public boolean hasSplitSizeLeft() {
          return ((bitField0_ & 0x00008000) != 0);
        }
        /**
         * <code>optional int32 split_size_left = 117;</code>
         * @return The splitSizeLeft.
         */
        @java.lang.Override
        public int getSplitSizeLeft() {
          return splitSizeLeft_;
        }

        public static final int SPLIT_SIZE_RIGHT_FIELD_NUMBER = 118;
        private int splitSizeRight_;
        /**
         * <code>optional int32 split_size_right = 118;</code>
         * @return Whether the splitSizeRight field is set.
         */
        @java.lang.Override
        public boolean hasSplitSizeRight() {
          return ((bitField0_ & 0x00010000) != 0);
        }
        /**
         * <code>optional int32 split_size_right = 118;</code>
         * @return The splitSizeRight.
         */
        @java.lang.Override
        public int getSplitSizeRight() {
          return splitSizeRight_;
        }

        public static final int SPLIT_SIZE_TOP_FIELD_NUMBER = 119;
        private int splitSizeTop_;
        /**
         * <code>optional int32 split_size_top = 119;</code>
         * @return Whether the splitSizeTop field is set.
         */
        @java.lang.Override
        public boolean hasSplitSizeTop() {
          return ((bitField0_ & 0x00020000) != 0);
        }
        /**
         * <code>optional int32 split_size_top = 119;</code>
         * @return The splitSizeTop.
         */
        @java.lang.Override
        public int getSplitSizeTop() {
          return splitSizeTop_;
        }

        public static final int SPLIT_SIZE_BOTTOM_FIELD_NUMBER = 120;
        private int splitSizeBottom_;
        /**
         * <code>optional int32 split_size_bottom = 120;</code>
         * @return Whether the splitSizeBottom field is set.
         */
        @java.lang.Override
        public boolean hasSplitSizeBottom() {
          return ((bitField0_ & 0x00040000) != 0);
        }
        /**
         * <code>optional int32 split_size_bottom = 120;</code>
         * @return The splitSizeBottom.
         */
        @java.lang.Override
        public int getSplitSizeBottom() {
          return splitSizeBottom_;
        }

        public static final int FLIP_H_FIELD_NUMBER = 122;
        private boolean flipH_;
        /**
         * <code>optional bool flip_h = 122;</code>
         * @return Whether the flipH field is set.
         */
        @java.lang.Override
        public boolean hasFlipH() {
          return ((bitField0_ & 0x00080000) != 0);
        }
        /**
         * <code>optional bool flip_h = 122;</code>
         * @return The flipH.
         */
        @java.lang.Override
        public boolean getFlipH() {
          return flipH_;
        }

        public static final int FLIP_V_FIELD_NUMBER = 123;
        private boolean flipV_;
        /**
         * <code>optional bool flip_v = 123;</code>
         * @return Whether the flipV field is set.
         */
        @java.lang.Override
        public boolean hasFlipV() {
          return ((bitField0_ & 0x00100000) != 0);
        }
        /**
         * <code>optional bool flip_v = 123;</code>
         * @return The flipV.
         */
        @java.lang.Override
        public boolean getFlipV() {
          return flipV_;
        }

        public static final int SPLIT_KEYFRAME_FIELD_NUMBER = 115;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame splitKeyframe_;
        /**
         * <code>optional .KMProto.KMProject.KeyFrame split_keyframe = 115;</code>
         * @return Whether the splitKeyframe field is set.
         */
        @java.lang.Override
        public boolean hasSplitKeyframe() {
          return ((bitField0_ & 0x00200000) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.KeyFrame split_keyframe = 115;</code>
         * @return The splitKeyframe.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame getSplitKeyframe() {
          return splitKeyframe_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.getDefaultInstance() : splitKeyframe_;
        }
        /**
         * <code>optional .KMProto.KMProject.KeyFrame split_keyframe = 115;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrameOrBuilder getSplitKeyframeOrBuilder() {
          return splitKeyframe_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.getDefaultInstance() : splitKeyframe_;
        }

        public static final int KEYFRAMES_FIELD_NUMBER = 108;
        private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame> keyframes_;
        /**
         * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
         */
        @java.lang.Override
        public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame> getKeyframesList() {
          return keyframes_;
        }
        /**
         * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
         */
        @java.lang.Override
        public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrameOrBuilder> 
            getKeyframesOrBuilderList() {
          return keyframes_;
        }
        /**
         * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
         */
        @java.lang.Override
        public int getKeyframesCount() {
          return keyframes_.size();
        }
        /**
         * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame getKeyframes(int index) {
          return keyframes_.get(index);
        }
        /**
         * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrameOrBuilder getKeyframesOrBuilder(
            int index) {
          return keyframes_.get(index);
        }

        public static final int OVERALL_ALPHA_FIELD_NUMBER = 121;
        private int overallAlpha_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 overall_alpha = 121;</code>
         * @return Whether the overallAlpha field is set.
         */
        @java.lang.Override
        public boolean hasOverallAlpha() {
          return ((bitField0_ & 0x00400000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 overall_alpha = 121;</code>
         * @return The overallAlpha.
         */
        @java.lang.Override
        public int getOverallAlpha() {
          return overallAlpha_;
        }

        public static final int LAYERMASK_ENABLED_FIELD_NUMBER = 124;
        private boolean layermaskEnabled_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool layermask_enabled = 124;</code>
         * @return Whether the layermaskEnabled field is set.
         */
        @java.lang.Override
        public boolean hasLayermaskEnabled() {
          return ((bitField0_ & 0x00800000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool layermask_enabled = 124;</code>
         * @return The layermaskEnabled.
         */
        @java.lang.Override
        public boolean getLayermaskEnabled() {
          return layermaskEnabled_;
        }

        public static final int LAYERMASK_TYPE_FIELD_NUMBER = 125;
        private int layermaskType_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 layermask_type = 125;</code>
         * @return Whether the layermaskType field is set.
         */
        @java.lang.Override
        public boolean hasLayermaskType() {
          return ((bitField0_ & 0x01000000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 layermask_type = 125;</code>
         * @return The layermaskType.
         */
        @java.lang.Override
        public int getLayermaskType() {
          return layermaskType_;
        }

        public static final int LAYERMASK_INDEX_FIELD_NUMBER = 126;
        private int layermaskIndex_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 layermask_index = 126;</code>
         * @return Whether the layermaskIndex field is set.
         */
        @java.lang.Override
        public boolean hasLayermaskIndex() {
          return ((bitField0_ & 0x02000000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 layermask_index = 126;</code>
         * @return The layermaskIndex.
         */
        @java.lang.Override
        public int getLayermaskIndex() {
          return layermaskIndex_;
        }

        public static final int LAYER_NAME_FIELD_NUMBER = 127;
        private volatile java.lang.Object layerName_;
        /**
         * <code>optional string layer_name = 127;</code>
         * @return Whether the layerName field is set.
         */
        @java.lang.Override
        public boolean hasLayerName() {
          return ((bitField0_ & 0x04000000) != 0);
        }
        /**
         * <code>optional string layer_name = 127;</code>
         * @return The layerName.
         */
        @java.lang.Override
        public java.lang.String getLayerName() {
          java.lang.Object ref = layerName_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              layerName_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string layer_name = 127;</code>
         * @return The bytes for layerName.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getLayerNameBytes() {
          java.lang.Object ref = layerName_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            layerName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int CROP_BOUNDS_LEFT_FIELD_NUMBER = 128;
        private float cropBoundsLeft_;
        /**
         * <code>optional float crop_bounds_left = 128;</code>
         * @return Whether the cropBoundsLeft field is set.
         */
        @java.lang.Override
        public boolean hasCropBoundsLeft() {
          return ((bitField0_ & 0x08000000) != 0);
        }
        /**
         * <code>optional float crop_bounds_left = 128;</code>
         * @return The cropBoundsLeft.
         */
        @java.lang.Override
        public float getCropBoundsLeft() {
          return cropBoundsLeft_;
        }

        public static final int CROP_BOUNDS_TOP_FIELD_NUMBER = 129;
        private float cropBoundsTop_;
        /**
         * <code>optional float crop_bounds_top = 129;</code>
         * @return Whether the cropBoundsTop field is set.
         */
        @java.lang.Override
        public boolean hasCropBoundsTop() {
          return ((bitField0_ & 0x10000000) != 0);
        }
        /**
         * <code>optional float crop_bounds_top = 129;</code>
         * @return The cropBoundsTop.
         */
        @java.lang.Override
        public float getCropBoundsTop() {
          return cropBoundsTop_;
        }

        public static final int CROP_BOUNDS_RIGHT_FIELD_NUMBER = 130;
        private float cropBoundsRight_;
        /**
         * <code>optional float crop_bounds_right = 130;</code>
         * @return Whether the cropBoundsRight field is set.
         */
        @java.lang.Override
        public boolean hasCropBoundsRight() {
          return ((bitField0_ & 0x20000000) != 0);
        }
        /**
         * <code>optional float crop_bounds_right = 130;</code>
         * @return The cropBoundsRight.
         */
        @java.lang.Override
        public float getCropBoundsRight() {
          return cropBoundsRight_;
        }

        public static final int CROP_BOUNDS_BOTTOM_FIELD_NUMBER = 131;
        private float cropBoundsBottom_;
        /**
         * <code>optional float crop_bounds_bottom = 131;</code>
         * @return Whether the cropBoundsBottom field is set.
         */
        @java.lang.Override
        public boolean hasCropBoundsBottom() {
          return ((bitField0_ & 0x40000000) != 0);
        }
        /**
         * <code>optional float crop_bounds_bottom = 131;</code>
         * @return The cropBoundsBottom.
         */
        @java.lang.Override
        public float getCropBoundsBottom() {
          return cropBoundsBottom_;
        }

        public static final int CROP_BOUNDS_SHAPE_FIELD_NUMBER = 132;
        private int cropBoundsShape_;
        /**
         * <code>optional int32 crop_bounds_shape = 132;</code>
         * @return Whether the cropBoundsShape field is set.
         */
        @java.lang.Override
        public boolean hasCropBoundsShape() {
          return ((bitField0_ & 0x80000000) != 0);
        }
        /**
         * <code>optional int32 crop_bounds_shape = 132;</code>
         * @return The cropBoundsShape.
         */
        @java.lang.Override
        public int getCropBoundsShape() {
          return cropBoundsShape_;
        }

        public static final int CROP_MASK_FEATHER_FIELD_NUMBER = 133;
        private float cropMaskFeather_;
        /**
         * <code>optional float crop_mask_feather = 133;</code>
         * @return Whether the cropMaskFeather field is set.
         */
        @java.lang.Override
        public boolean hasCropMaskFeather() {
          return ((bitField1_ & 0x00000001) != 0);
        }
        /**
         * <code>optional float crop_mask_feather = 133;</code>
         * @return The cropMaskFeather.
         */
        @java.lang.Override
        public float getCropMaskFeather() {
          return cropMaskFeather_;
        }

        public static final int NATURAL_ORIENTATION_FIELD_NUMBER = 134;
        private int naturalOrientation_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 natural_orientation = 134;</code>
         * @return Whether the naturalOrientation field is set.
         */
        @java.lang.Override
        public boolean hasNaturalOrientation() {
          return ((bitField1_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 natural_orientation = 134;</code>
         * @return The naturalOrientation.
         */
        @java.lang.Override
        public int getNaturalOrientation() {
          return naturalOrientation_;
        }

        public static final int USE_CROP_MASK_FIELD_NUMBER = 135;
        private boolean useCropMask_;
        /**
         * <code>optional bool use_crop_mask = 135;</code>
         * @return Whether the useCropMask field is set.
         */
        @java.lang.Override
        public boolean hasUseCropMask() {
          return ((bitField1_ & 0x00000004) != 0);
        }
        /**
         * <code>optional bool use_crop_mask = 135;</code>
         * @return The useCropMask.
         */
        @java.lang.Override
        public boolean getUseCropMask() {
          return useCropMask_;
        }

        public static final int BLEND_MODE_FIELD_NUMBER = 136;
        private int blendMode_;
        /**
         * <code>optional .KMProto.KMProject.LayerBlendModeType blend_mode = 136 [default = LAYER_BLEND_NORMAL];</code>
         * @return Whether the blendMode field is set.
         */
        @java.lang.Override public boolean hasBlendMode() {
          return ((bitField1_ & 0x00000008) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.LayerBlendModeType blend_mode = 136 [default = LAYER_BLEND_NORMAL];</code>
         * @return The blendMode.
         */
        @java.lang.Override public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerBlendModeType getBlendMode() {
          @SuppressWarnings("deprecation")
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerBlendModeType result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerBlendModeType.valueOf(blendMode_);
          return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerBlendModeType.LAYER_BLEND_NORMAL : result;
        }

        public static final int RENDER_SIZE_SCALE_X_FIELD_NUMBER = 137;
        private float renderSizeScaleX_;
        /**
         * <code>optional float render_size_scale_x = 137;</code>
         * @return Whether the renderSizeScaleX field is set.
         */
        @java.lang.Override
        public boolean hasRenderSizeScaleX() {
          return ((bitField1_ & 0x00000010) != 0);
        }
        /**
         * <code>optional float render_size_scale_x = 137;</code>
         * @return The renderSizeScaleX.
         */
        @java.lang.Override
        public float getRenderSizeScaleX() {
          return renderSizeScaleX_;
        }

        public static final int RENDER_SIZE_SCALE_Y_FIELD_NUMBER = 138;
        private float renderSizeScaleY_;
        /**
         * <code>optional float render_size_scale_y = 138;</code>
         * @return Whether the renderSizeScaleY field is set.
         */
        @java.lang.Override
        public boolean hasRenderSizeScaleY() {
          return ((bitField1_ & 0x00000020) != 0);
        }
        /**
         * <code>optional float render_size_scale_y = 138;</code>
         * @return The renderSizeScaleY.
         */
        @java.lang.Override
        public float getRenderSizeScaleY() {
          return renderSizeScaleY_;
        }

        public static final int VIDEOUPRIGHTORIENTATION_FIELD_NUMBER = 139;
        private int videoUprightOrientation_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 videoUprightOrientation = 139;</code>
         * @return Whether the videoUprightOrientation field is set.
         */
        @java.lang.Override
        public boolean hasVideoUprightOrientation() {
          return ((bitField1_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 videoUprightOrientation = 139;</code>
         * @return The videoUprightOrientation.
         */
        @java.lang.Override
        public int getVideoUprightOrientation() {
          return videoUprightOrientation_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeInt32(100, startTime_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeInt32(101, endTime_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeBool(102, pinned_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeInt32(103, startTrim_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            output.writeInt32(104, endTrim_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            output.writeInt64(105, zOrder_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            output.writeInt32(106, layerExpression_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            output.writeInt32(107, layerExpressionDuration_);
          }
          for (int i = 0; i < keyframes_.size(); i++) {
            output.writeMessage(108, keyframes_.get(i));
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            output.writeInt32(109, layerInExpression_);
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            output.writeInt32(110, layerInExpressionDuration_);
          }
          if (((bitField0_ & 0x00000400) != 0)) {
            output.writeInt32(111, layerOutExpression_);
          }
          if (((bitField0_ & 0x00000800) != 0)) {
            output.writeInt32(112, layerOutExpressionDuration_);
          }
          if (((bitField0_ & 0x00001000) != 0)) {
            output.writeInt32(113, layerOverallExpression_);
          }
          if (((bitField0_ & 0x00002000) != 0)) {
            output.writeFloat(114, layerOverallExpressionSpeed_);
          }
          if (((bitField0_ & 0x00200000) != 0)) {
            output.writeMessage(115, getSplitKeyframe());
          }
          if (((bitField0_ & 0x00004000) != 0)) {
            output.writeEnum(116, splitScreenType_);
          }
          if (((bitField0_ & 0x00008000) != 0)) {
            output.writeInt32(117, splitSizeLeft_);
          }
          if (((bitField0_ & 0x00010000) != 0)) {
            output.writeInt32(118, splitSizeRight_);
          }
          if (((bitField0_ & 0x00020000) != 0)) {
            output.writeInt32(119, splitSizeTop_);
          }
          if (((bitField0_ & 0x00040000) != 0)) {
            output.writeInt32(120, splitSizeBottom_);
          }
          if (((bitField0_ & 0x00400000) != 0)) {
            output.writeInt32(121, overallAlpha_);
          }
          if (((bitField0_ & 0x00080000) != 0)) {
            output.writeBool(122, flipH_);
          }
          if (((bitField0_ & 0x00100000) != 0)) {
            output.writeBool(123, flipV_);
          }
          if (((bitField0_ & 0x00800000) != 0)) {
            output.writeBool(124, layermaskEnabled_);
          }
          if (((bitField0_ & 0x01000000) != 0)) {
            output.writeInt32(125, layermaskType_);
          }
          if (((bitField0_ & 0x02000000) != 0)) {
            output.writeInt32(126, layermaskIndex_);
          }
          if (((bitField0_ & 0x04000000) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 127, layerName_);
          }
          if (((bitField0_ & 0x08000000) != 0)) {
            output.writeFloat(128, cropBoundsLeft_);
          }
          if (((bitField0_ & 0x10000000) != 0)) {
            output.writeFloat(129, cropBoundsTop_);
          }
          if (((bitField0_ & 0x20000000) != 0)) {
            output.writeFloat(130, cropBoundsRight_);
          }
          if (((bitField0_ & 0x40000000) != 0)) {
            output.writeFloat(131, cropBoundsBottom_);
          }
          if (((bitField0_ & 0x80000000) != 0)) {
            output.writeInt32(132, cropBoundsShape_);
          }
          if (((bitField1_ & 0x00000001) != 0)) {
            output.writeFloat(133, cropMaskFeather_);
          }
          if (((bitField1_ & 0x00000002) != 0)) {
            output.writeInt32(134, naturalOrientation_);
          }
          if (((bitField1_ & 0x00000004) != 0)) {
            output.writeBool(135, useCropMask_);
          }
          if (((bitField1_ & 0x00000008) != 0)) {
            output.writeEnum(136, blendMode_);
          }
          if (((bitField1_ & 0x00000010) != 0)) {
            output.writeFloat(137, renderSizeScaleX_);
          }
          if (((bitField1_ & 0x00000020) != 0)) {
            output.writeFloat(138, renderSizeScaleY_);
          }
          if (((bitField1_ & 0x00000040) != 0)) {
            output.writeInt32(139, videoUprightOrientation_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(100, startTime_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(101, endTime_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(102, pinned_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(103, startTrim_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(104, endTrim_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt64Size(105, zOrder_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(106, layerExpression_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(107, layerExpressionDuration_);
          }
          for (int i = 0; i < keyframes_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(108, keyframes_.get(i));
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(109, layerInExpression_);
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(110, layerInExpressionDuration_);
          }
          if (((bitField0_ & 0x00000400) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(111, layerOutExpression_);
          }
          if (((bitField0_ & 0x00000800) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(112, layerOutExpressionDuration_);
          }
          if (((bitField0_ & 0x00001000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(113, layerOverallExpression_);
          }
          if (((bitField0_ & 0x00002000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(114, layerOverallExpressionSpeed_);
          }
          if (((bitField0_ & 0x00200000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(115, getSplitKeyframe());
          }
          if (((bitField0_ & 0x00004000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(116, splitScreenType_);
          }
          if (((bitField0_ & 0x00008000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(117, splitSizeLeft_);
          }
          if (((bitField0_ & 0x00010000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(118, splitSizeRight_);
          }
          if (((bitField0_ & 0x00020000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(119, splitSizeTop_);
          }
          if (((bitField0_ & 0x00040000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(120, splitSizeBottom_);
          }
          if (((bitField0_ & 0x00400000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(121, overallAlpha_);
          }
          if (((bitField0_ & 0x00080000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(122, flipH_);
          }
          if (((bitField0_ & 0x00100000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(123, flipV_);
          }
          if (((bitField0_ & 0x00800000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(124, layermaskEnabled_);
          }
          if (((bitField0_ & 0x01000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(125, layermaskType_);
          }
          if (((bitField0_ & 0x02000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(126, layermaskIndex_);
          }
          if (((bitField0_ & 0x04000000) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(127, layerName_);
          }
          if (((bitField0_ & 0x08000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(128, cropBoundsLeft_);
          }
          if (((bitField0_ & 0x10000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(129, cropBoundsTop_);
          }
          if (((bitField0_ & 0x20000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(130, cropBoundsRight_);
          }
          if (((bitField0_ & 0x40000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(131, cropBoundsBottom_);
          }
          if (((bitField0_ & 0x80000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(132, cropBoundsShape_);
          }
          if (((bitField1_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(133, cropMaskFeather_);
          }
          if (((bitField1_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(134, naturalOrientation_);
          }
          if (((bitField1_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(135, useCropMask_);
          }
          if (((bitField1_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(136, blendMode_);
          }
          if (((bitField1_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(137, renderSizeScaleX_);
          }
          if (((bitField1_ & 0x00000020) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(138, renderSizeScaleY_);
          }
          if (((bitField1_ & 0x00000040) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(139, videoUprightOrientation_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon) obj;

          if (hasStartTime() != other.hasStartTime()) return false;
          if (hasStartTime()) {
            if (getStartTime()
                != other.getStartTime()) return false;
          }
          if (hasEndTime() != other.hasEndTime()) return false;
          if (hasEndTime()) {
            if (getEndTime()
                != other.getEndTime()) return false;
          }
          if (hasPinned() != other.hasPinned()) return false;
          if (hasPinned()) {
            if (getPinned()
                != other.getPinned()) return false;
          }
          if (hasStartTrim() != other.hasStartTrim()) return false;
          if (hasStartTrim()) {
            if (getStartTrim()
                != other.getStartTrim()) return false;
          }
          if (hasEndTrim() != other.hasEndTrim()) return false;
          if (hasEndTrim()) {
            if (getEndTrim()
                != other.getEndTrim()) return false;
          }
          if (hasZOrder() != other.hasZOrder()) return false;
          if (hasZOrder()) {
            if (getZOrder()
                != other.getZOrder()) return false;
          }
          if (hasLayerExpression() != other.hasLayerExpression()) return false;
          if (hasLayerExpression()) {
            if (getLayerExpression()
                != other.getLayerExpression()) return false;
          }
          if (hasLayerExpressionDuration() != other.hasLayerExpressionDuration()) return false;
          if (hasLayerExpressionDuration()) {
            if (getLayerExpressionDuration()
                != other.getLayerExpressionDuration()) return false;
          }
          if (hasLayerInExpression() != other.hasLayerInExpression()) return false;
          if (hasLayerInExpression()) {
            if (getLayerInExpression()
                != other.getLayerInExpression()) return false;
          }
          if (hasLayerInExpressionDuration() != other.hasLayerInExpressionDuration()) return false;
          if (hasLayerInExpressionDuration()) {
            if (getLayerInExpressionDuration()
                != other.getLayerInExpressionDuration()) return false;
          }
          if (hasLayerOutExpression() != other.hasLayerOutExpression()) return false;
          if (hasLayerOutExpression()) {
            if (getLayerOutExpression()
                != other.getLayerOutExpression()) return false;
          }
          if (hasLayerOutExpressionDuration() != other.hasLayerOutExpressionDuration()) return false;
          if (hasLayerOutExpressionDuration()) {
            if (getLayerOutExpressionDuration()
                != other.getLayerOutExpressionDuration()) return false;
          }
          if (hasLayerOverallExpression() != other.hasLayerOverallExpression()) return false;
          if (hasLayerOverallExpression()) {
            if (getLayerOverallExpression()
                != other.getLayerOverallExpression()) return false;
          }
          if (hasLayerOverallExpressionSpeed() != other.hasLayerOverallExpressionSpeed()) return false;
          if (hasLayerOverallExpressionSpeed()) {
            if (java.lang.Float.floatToIntBits(getLayerOverallExpressionSpeed())
                != java.lang.Float.floatToIntBits(
                    other.getLayerOverallExpressionSpeed())) return false;
          }
          if (hasSplitScreenType() != other.hasSplitScreenType()) return false;
          if (hasSplitScreenType()) {
            if (splitScreenType_ != other.splitScreenType_) return false;
          }
          if (hasSplitSizeLeft() != other.hasSplitSizeLeft()) return false;
          if (hasSplitSizeLeft()) {
            if (getSplitSizeLeft()
                != other.getSplitSizeLeft()) return false;
          }
          if (hasSplitSizeRight() != other.hasSplitSizeRight()) return false;
          if (hasSplitSizeRight()) {
            if (getSplitSizeRight()
                != other.getSplitSizeRight()) return false;
          }
          if (hasSplitSizeTop() != other.hasSplitSizeTop()) return false;
          if (hasSplitSizeTop()) {
            if (getSplitSizeTop()
                != other.getSplitSizeTop()) return false;
          }
          if (hasSplitSizeBottom() != other.hasSplitSizeBottom()) return false;
          if (hasSplitSizeBottom()) {
            if (getSplitSizeBottom()
                != other.getSplitSizeBottom()) return false;
          }
          if (hasFlipH() != other.hasFlipH()) return false;
          if (hasFlipH()) {
            if (getFlipH()
                != other.getFlipH()) return false;
          }
          if (hasFlipV() != other.hasFlipV()) return false;
          if (hasFlipV()) {
            if (getFlipV()
                != other.getFlipV()) return false;
          }
          if (hasSplitKeyframe() != other.hasSplitKeyframe()) return false;
          if (hasSplitKeyframe()) {
            if (!getSplitKeyframe()
                .equals(other.getSplitKeyframe())) return false;
          }
          if (!getKeyframesList()
              .equals(other.getKeyframesList())) return false;
          if (hasOverallAlpha() != other.hasOverallAlpha()) return false;
          if (hasOverallAlpha()) {
            if (getOverallAlpha()
                != other.getOverallAlpha()) return false;
          }
          if (hasLayermaskEnabled() != other.hasLayermaskEnabled()) return false;
          if (hasLayermaskEnabled()) {
            if (getLayermaskEnabled()
                != other.getLayermaskEnabled()) return false;
          }
          if (hasLayermaskType() != other.hasLayermaskType()) return false;
          if (hasLayermaskType()) {
            if (getLayermaskType()
                != other.getLayermaskType()) return false;
          }
          if (hasLayermaskIndex() != other.hasLayermaskIndex()) return false;
          if (hasLayermaskIndex()) {
            if (getLayermaskIndex()
                != other.getLayermaskIndex()) return false;
          }
          if (hasLayerName() != other.hasLayerName()) return false;
          if (hasLayerName()) {
            if (!getLayerName()
                .equals(other.getLayerName())) return false;
          }
          if (hasCropBoundsLeft() != other.hasCropBoundsLeft()) return false;
          if (hasCropBoundsLeft()) {
            if (java.lang.Float.floatToIntBits(getCropBoundsLeft())
                != java.lang.Float.floatToIntBits(
                    other.getCropBoundsLeft())) return false;
          }
          if (hasCropBoundsTop() != other.hasCropBoundsTop()) return false;
          if (hasCropBoundsTop()) {
            if (java.lang.Float.floatToIntBits(getCropBoundsTop())
                != java.lang.Float.floatToIntBits(
                    other.getCropBoundsTop())) return false;
          }
          if (hasCropBoundsRight() != other.hasCropBoundsRight()) return false;
          if (hasCropBoundsRight()) {
            if (java.lang.Float.floatToIntBits(getCropBoundsRight())
                != java.lang.Float.floatToIntBits(
                    other.getCropBoundsRight())) return false;
          }
          if (hasCropBoundsBottom() != other.hasCropBoundsBottom()) return false;
          if (hasCropBoundsBottom()) {
            if (java.lang.Float.floatToIntBits(getCropBoundsBottom())
                != java.lang.Float.floatToIntBits(
                    other.getCropBoundsBottom())) return false;
          }
          if (hasCropBoundsShape() != other.hasCropBoundsShape()) return false;
          if (hasCropBoundsShape()) {
            if (getCropBoundsShape()
                != other.getCropBoundsShape()) return false;
          }
          if (hasCropMaskFeather() != other.hasCropMaskFeather()) return false;
          if (hasCropMaskFeather()) {
            if (java.lang.Float.floatToIntBits(getCropMaskFeather())
                != java.lang.Float.floatToIntBits(
                    other.getCropMaskFeather())) return false;
          }
          if (hasNaturalOrientation() != other.hasNaturalOrientation()) return false;
          if (hasNaturalOrientation()) {
            if (getNaturalOrientation()
                != other.getNaturalOrientation()) return false;
          }
          if (hasUseCropMask() != other.hasUseCropMask()) return false;
          if (hasUseCropMask()) {
            if (getUseCropMask()
                != other.getUseCropMask()) return false;
          }
          if (hasBlendMode() != other.hasBlendMode()) return false;
          if (hasBlendMode()) {
            if (blendMode_ != other.blendMode_) return false;
          }
          if (hasRenderSizeScaleX() != other.hasRenderSizeScaleX()) return false;
          if (hasRenderSizeScaleX()) {
            if (java.lang.Float.floatToIntBits(getRenderSizeScaleX())
                != java.lang.Float.floatToIntBits(
                    other.getRenderSizeScaleX())) return false;
          }
          if (hasRenderSizeScaleY() != other.hasRenderSizeScaleY()) return false;
          if (hasRenderSizeScaleY()) {
            if (java.lang.Float.floatToIntBits(getRenderSizeScaleY())
                != java.lang.Float.floatToIntBits(
                    other.getRenderSizeScaleY())) return false;
          }
          if (hasVideoUprightOrientation() != other.hasVideoUprightOrientation()) return false;
          if (hasVideoUprightOrientation()) {
            if (getVideoUprightOrientation()
                != other.getVideoUprightOrientation()) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasStartTime()) {
            hash = (37 * hash) + START_TIME_FIELD_NUMBER;
            hash = (53 * hash) + getStartTime();
          }
          if (hasEndTime()) {
            hash = (37 * hash) + END_TIME_FIELD_NUMBER;
            hash = (53 * hash) + getEndTime();
          }
          if (hasPinned()) {
            hash = (37 * hash) + PINNED_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getPinned());
          }
          if (hasStartTrim()) {
            hash = (37 * hash) + START_TRIM_FIELD_NUMBER;
            hash = (53 * hash) + getStartTrim();
          }
          if (hasEndTrim()) {
            hash = (37 * hash) + END_TRIM_FIELD_NUMBER;
            hash = (53 * hash) + getEndTrim();
          }
          if (hasZOrder()) {
            hash = (37 * hash) + Z_ORDER_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getZOrder());
          }
          if (hasLayerExpression()) {
            hash = (37 * hash) + LAYER_EXPRESSION_FIELD_NUMBER;
            hash = (53 * hash) + getLayerExpression();
          }
          if (hasLayerExpressionDuration()) {
            hash = (37 * hash) + LAYER_EXPRESSION_DURATION_FIELD_NUMBER;
            hash = (53 * hash) + getLayerExpressionDuration();
          }
          if (hasLayerInExpression()) {
            hash = (37 * hash) + LAYER_IN_EXPRESSION_FIELD_NUMBER;
            hash = (53 * hash) + getLayerInExpression();
          }
          if (hasLayerInExpressionDuration()) {
            hash = (37 * hash) + LAYER_IN_EXPRESSION_DURATION_FIELD_NUMBER;
            hash = (53 * hash) + getLayerInExpressionDuration();
          }
          if (hasLayerOutExpression()) {
            hash = (37 * hash) + LAYER_OUT_EXPRESSION_FIELD_NUMBER;
            hash = (53 * hash) + getLayerOutExpression();
          }
          if (hasLayerOutExpressionDuration()) {
            hash = (37 * hash) + LAYER_OUT_EXPRESSION_DURATION_FIELD_NUMBER;
            hash = (53 * hash) + getLayerOutExpressionDuration();
          }
          if (hasLayerOverallExpression()) {
            hash = (37 * hash) + LAYER_OVERALL_EXPRESSION_FIELD_NUMBER;
            hash = (53 * hash) + getLayerOverallExpression();
          }
          if (hasLayerOverallExpressionSpeed()) {
            hash = (37 * hash) + LAYER_OVERALL_EXPRESSION_SPEED_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getLayerOverallExpressionSpeed());
          }
          if (hasSplitScreenType()) {
            hash = (37 * hash) + SPLIT_SCREEN_TYPE_FIELD_NUMBER;
            hash = (53 * hash) + splitScreenType_;
          }
          if (hasSplitSizeLeft()) {
            hash = (37 * hash) + SPLIT_SIZE_LEFT_FIELD_NUMBER;
            hash = (53 * hash) + getSplitSizeLeft();
          }
          if (hasSplitSizeRight()) {
            hash = (37 * hash) + SPLIT_SIZE_RIGHT_FIELD_NUMBER;
            hash = (53 * hash) + getSplitSizeRight();
          }
          if (hasSplitSizeTop()) {
            hash = (37 * hash) + SPLIT_SIZE_TOP_FIELD_NUMBER;
            hash = (53 * hash) + getSplitSizeTop();
          }
          if (hasSplitSizeBottom()) {
            hash = (37 * hash) + SPLIT_SIZE_BOTTOM_FIELD_NUMBER;
            hash = (53 * hash) + getSplitSizeBottom();
          }
          if (hasFlipH()) {
            hash = (37 * hash) + FLIP_H_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getFlipH());
          }
          if (hasFlipV()) {
            hash = (37 * hash) + FLIP_V_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getFlipV());
          }
          if (hasSplitKeyframe()) {
            hash = (37 * hash) + SPLIT_KEYFRAME_FIELD_NUMBER;
            hash = (53 * hash) + getSplitKeyframe().hashCode();
          }
          if (getKeyframesCount() > 0) {
            hash = (37 * hash) + KEYFRAMES_FIELD_NUMBER;
            hash = (53 * hash) + getKeyframesList().hashCode();
          }
          if (hasOverallAlpha()) {
            hash = (37 * hash) + OVERALL_ALPHA_FIELD_NUMBER;
            hash = (53 * hash) + getOverallAlpha();
          }
          if (hasLayermaskEnabled()) {
            hash = (37 * hash) + LAYERMASK_ENABLED_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getLayermaskEnabled());
          }
          if (hasLayermaskType()) {
            hash = (37 * hash) + LAYERMASK_TYPE_FIELD_NUMBER;
            hash = (53 * hash) + getLayermaskType();
          }
          if (hasLayermaskIndex()) {
            hash = (37 * hash) + LAYERMASK_INDEX_FIELD_NUMBER;
            hash = (53 * hash) + getLayermaskIndex();
          }
          if (hasLayerName()) {
            hash = (37 * hash) + LAYER_NAME_FIELD_NUMBER;
            hash = (53 * hash) + getLayerName().hashCode();
          }
          if (hasCropBoundsLeft()) {
            hash = (37 * hash) + CROP_BOUNDS_LEFT_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getCropBoundsLeft());
          }
          if (hasCropBoundsTop()) {
            hash = (37 * hash) + CROP_BOUNDS_TOP_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getCropBoundsTop());
          }
          if (hasCropBoundsRight()) {
            hash = (37 * hash) + CROP_BOUNDS_RIGHT_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getCropBoundsRight());
          }
          if (hasCropBoundsBottom()) {
            hash = (37 * hash) + CROP_BOUNDS_BOTTOM_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getCropBoundsBottom());
          }
          if (hasCropBoundsShape()) {
            hash = (37 * hash) + CROP_BOUNDS_SHAPE_FIELD_NUMBER;
            hash = (53 * hash) + getCropBoundsShape();
          }
          if (hasCropMaskFeather()) {
            hash = (37 * hash) + CROP_MASK_FEATHER_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getCropMaskFeather());
          }
          if (hasNaturalOrientation()) {
            hash = (37 * hash) + NATURAL_ORIENTATION_FIELD_NUMBER;
            hash = (53 * hash) + getNaturalOrientation();
          }
          if (hasUseCropMask()) {
            hash = (37 * hash) + USE_CROP_MASK_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getUseCropMask());
          }
          if (hasBlendMode()) {
            hash = (37 * hash) + BLEND_MODE_FIELD_NUMBER;
            hash = (53 * hash) + blendMode_;
          }
          if (hasRenderSizeScaleX()) {
            hash = (37 * hash) + RENDER_SIZE_SCALE_X_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getRenderSizeScaleX());
          }
          if (hasRenderSizeScaleY()) {
            hash = (37 * hash) + RENDER_SIZE_SCALE_Y_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getRenderSizeScaleY());
          }
          if (hasVideoUprightOrientation()) {
            hash = (37 * hash) + VIDEOUPRIGHTORIENTATION_FIELD_NUMBER;
            hash = (53 * hash) + getVideoUprightOrientation();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code KMProto.KMProject.LayerCommon}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.LayerCommon)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_LayerCommon_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_LayerCommon_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
              getSplitKeyframeFieldBuilder();
              getKeyframesFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            startTime_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            endTime_ = 0;
            bitField0_ = (bitField0_ & ~0x00000002);
            pinned_ = false;
            bitField0_ = (bitField0_ & ~0x00000004);
            startTrim_ = 0;
            bitField0_ = (bitField0_ & ~0x00000008);
            endTrim_ = 0;
            bitField0_ = (bitField0_ & ~0x00000010);
            zOrder_ = 0L;
            bitField0_ = (bitField0_ & ~0x00000020);
            layerExpression_ = 0;
            bitField0_ = (bitField0_ & ~0x00000040);
            layerExpressionDuration_ = 0;
            bitField0_ = (bitField0_ & ~0x00000080);
            layerInExpression_ = 0;
            bitField0_ = (bitField0_ & ~0x00000100);
            layerInExpressionDuration_ = 0;
            bitField0_ = (bitField0_ & ~0x00000200);
            layerOutExpression_ = 0;
            bitField0_ = (bitField0_ & ~0x00000400);
            layerOutExpressionDuration_ = 0;
            bitField0_ = (bitField0_ & ~0x00000800);
            layerOverallExpression_ = 0;
            bitField0_ = (bitField0_ & ~0x00001000);
            layerOverallExpressionSpeed_ = 0F;
            bitField0_ = (bitField0_ & ~0x00002000);
            splitScreenType_ = 0;
            bitField0_ = (bitField0_ & ~0x00004000);
            splitSizeLeft_ = 0;
            bitField0_ = (bitField0_ & ~0x00008000);
            splitSizeRight_ = 0;
            bitField0_ = (bitField0_ & ~0x00010000);
            splitSizeTop_ = 0;
            bitField0_ = (bitField0_ & ~0x00020000);
            splitSizeBottom_ = 0;
            bitField0_ = (bitField0_ & ~0x00040000);
            flipH_ = false;
            bitField0_ = (bitField0_ & ~0x00080000);
            flipV_ = false;
            bitField0_ = (bitField0_ & ~0x00100000);
            if (splitKeyframeBuilder_ == null) {
              splitKeyframe_ = null;
            } else {
              splitKeyframeBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00200000);
            if (keyframesBuilder_ == null) {
              keyframes_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00400000);
            } else {
              keyframesBuilder_.clear();
            }
            overallAlpha_ = 0;
            bitField0_ = (bitField0_ & ~0x00800000);
            layermaskEnabled_ = false;
            bitField0_ = (bitField0_ & ~0x01000000);
            layermaskType_ = 0;
            bitField0_ = (bitField0_ & ~0x02000000);
            layermaskIndex_ = 0;
            bitField0_ = (bitField0_ & ~0x04000000);
            layerName_ = "";
            bitField0_ = (bitField0_ & ~0x08000000);
            cropBoundsLeft_ = 0F;
            bitField0_ = (bitField0_ & ~0x10000000);
            cropBoundsTop_ = 0F;
            bitField0_ = (bitField0_ & ~0x20000000);
            cropBoundsRight_ = 0F;
            bitField0_ = (bitField0_ & ~0x40000000);
            cropBoundsBottom_ = 0F;
            bitField0_ = (bitField0_ & ~0x80000000);
            cropBoundsShape_ = 0;
            bitField1_ = (bitField1_ & ~0x00000001);
            cropMaskFeather_ = 0F;
            bitField1_ = (bitField1_ & ~0x00000002);
            naturalOrientation_ = 0;
            bitField1_ = (bitField1_ & ~0x00000004);
            useCropMask_ = false;
            bitField1_ = (bitField1_ & ~0x00000008);
            blendMode_ = 17;
            bitField1_ = (bitField1_ & ~0x00000010);
            renderSizeScaleX_ = 0F;
            bitField1_ = (bitField1_ & ~0x00000020);
            renderSizeScaleY_ = 0F;
            bitField1_ = (bitField1_ & ~0x00000040);
            videoUprightOrientation_ = 0;
            bitField1_ = (bitField1_ & ~0x00000080);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_LayerCommon_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon(this);
            int from_bitField0_ = bitField0_;
            int from_bitField1_ = bitField1_;
            int to_bitField0_ = 0;
            int to_bitField1_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.startTime_ = startTime_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.endTime_ = endTime_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.pinned_ = pinned_;
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.startTrim_ = startTrim_;
              to_bitField0_ |= 0x00000008;
            }
            if (((from_bitField0_ & 0x00000010) != 0)) {
              result.endTrim_ = endTrim_;
              to_bitField0_ |= 0x00000010;
            }
            if (((from_bitField0_ & 0x00000020) != 0)) {
              result.zOrder_ = zOrder_;
              to_bitField0_ |= 0x00000020;
            }
            if (((from_bitField0_ & 0x00000040) != 0)) {
              result.layerExpression_ = layerExpression_;
              to_bitField0_ |= 0x00000040;
            }
            if (((from_bitField0_ & 0x00000080) != 0)) {
              result.layerExpressionDuration_ = layerExpressionDuration_;
              to_bitField0_ |= 0x00000080;
            }
            if (((from_bitField0_ & 0x00000100) != 0)) {
              result.layerInExpression_ = layerInExpression_;
              to_bitField0_ |= 0x00000100;
            }
            if (((from_bitField0_ & 0x00000200) != 0)) {
              result.layerInExpressionDuration_ = layerInExpressionDuration_;
              to_bitField0_ |= 0x00000200;
            }
            if (((from_bitField0_ & 0x00000400) != 0)) {
              result.layerOutExpression_ = layerOutExpression_;
              to_bitField0_ |= 0x00000400;
            }
            if (((from_bitField0_ & 0x00000800) != 0)) {
              result.layerOutExpressionDuration_ = layerOutExpressionDuration_;
              to_bitField0_ |= 0x00000800;
            }
            if (((from_bitField0_ & 0x00001000) != 0)) {
              result.layerOverallExpression_ = layerOverallExpression_;
              to_bitField0_ |= 0x00001000;
            }
            if (((from_bitField0_ & 0x00002000) != 0)) {
              result.layerOverallExpressionSpeed_ = layerOverallExpressionSpeed_;
              to_bitField0_ |= 0x00002000;
            }
            if (((from_bitField0_ & 0x00004000) != 0)) {
              to_bitField0_ |= 0x00004000;
            }
            result.splitScreenType_ = splitScreenType_;
            if (((from_bitField0_ & 0x00008000) != 0)) {
              result.splitSizeLeft_ = splitSizeLeft_;
              to_bitField0_ |= 0x00008000;
            }
            if (((from_bitField0_ & 0x00010000) != 0)) {
              result.splitSizeRight_ = splitSizeRight_;
              to_bitField0_ |= 0x00010000;
            }
            if (((from_bitField0_ & 0x00020000) != 0)) {
              result.splitSizeTop_ = splitSizeTop_;
              to_bitField0_ |= 0x00020000;
            }
            if (((from_bitField0_ & 0x00040000) != 0)) {
              result.splitSizeBottom_ = splitSizeBottom_;
              to_bitField0_ |= 0x00040000;
            }
            if (((from_bitField0_ & 0x00080000) != 0)) {
              result.flipH_ = flipH_;
              to_bitField0_ |= 0x00080000;
            }
            if (((from_bitField0_ & 0x00100000) != 0)) {
              result.flipV_ = flipV_;
              to_bitField0_ |= 0x00100000;
            }
            if (((from_bitField0_ & 0x00200000) != 0)) {
              if (splitKeyframeBuilder_ == null) {
                result.splitKeyframe_ = splitKeyframe_;
              } else {
                result.splitKeyframe_ = splitKeyframeBuilder_.build();
              }
              to_bitField0_ |= 0x00200000;
            }
            if (keyframesBuilder_ == null) {
              if (((bitField0_ & 0x00400000) != 0)) {
                keyframes_ = java.util.Collections.unmodifiableList(keyframes_);
                bitField0_ = (bitField0_ & ~0x00400000);
              }
              result.keyframes_ = keyframes_;
            } else {
              result.keyframes_ = keyframesBuilder_.build();
            }
            if (((from_bitField0_ & 0x00800000) != 0)) {
              result.overallAlpha_ = overallAlpha_;
              to_bitField0_ |= 0x00400000;
            }
            if (((from_bitField0_ & 0x01000000) != 0)) {
              result.layermaskEnabled_ = layermaskEnabled_;
              to_bitField0_ |= 0x00800000;
            }
            if (((from_bitField0_ & 0x02000000) != 0)) {
              result.layermaskType_ = layermaskType_;
              to_bitField0_ |= 0x01000000;
            }
            if (((from_bitField0_ & 0x04000000) != 0)) {
              result.layermaskIndex_ = layermaskIndex_;
              to_bitField0_ |= 0x02000000;
            }
            if (((from_bitField0_ & 0x08000000) != 0)) {
              to_bitField0_ |= 0x04000000;
            }
            result.layerName_ = layerName_;
            if (((from_bitField0_ & 0x10000000) != 0)) {
              result.cropBoundsLeft_ = cropBoundsLeft_;
              to_bitField0_ |= 0x08000000;
            }
            if (((from_bitField0_ & 0x20000000) != 0)) {
              result.cropBoundsTop_ = cropBoundsTop_;
              to_bitField0_ |= 0x10000000;
            }
            if (((from_bitField0_ & 0x40000000) != 0)) {
              result.cropBoundsRight_ = cropBoundsRight_;
              to_bitField0_ |= 0x20000000;
            }
            if (((from_bitField0_ & 0x80000000) != 0)) {
              result.cropBoundsBottom_ = cropBoundsBottom_;
              to_bitField0_ |= 0x40000000;
            }
            if (((from_bitField1_ & 0x00000001) != 0)) {
              result.cropBoundsShape_ = cropBoundsShape_;
              to_bitField0_ |= 0x80000000;
            }
            if (((from_bitField1_ & 0x00000002) != 0)) {
              result.cropMaskFeather_ = cropMaskFeather_;
              to_bitField1_ |= 0x00000001;
            }
            if (((from_bitField1_ & 0x00000004) != 0)) {
              result.naturalOrientation_ = naturalOrientation_;
              to_bitField1_ |= 0x00000002;
            }
            if (((from_bitField1_ & 0x00000008) != 0)) {
              result.useCropMask_ = useCropMask_;
              to_bitField1_ |= 0x00000004;
            }
            if (((from_bitField1_ & 0x00000010) != 0)) {
              to_bitField1_ |= 0x00000008;
            }
            result.blendMode_ = blendMode_;
            if (((from_bitField1_ & 0x00000020) != 0)) {
              result.renderSizeScaleX_ = renderSizeScaleX_;
              to_bitField1_ |= 0x00000010;
            }
            if (((from_bitField1_ & 0x00000040) != 0)) {
              result.renderSizeScaleY_ = renderSizeScaleY_;
              to_bitField1_ |= 0x00000020;
            }
            if (((from_bitField1_ & 0x00000080) != 0)) {
              result.videoUprightOrientation_ = videoUprightOrientation_;
              to_bitField1_ |= 0x00000040;
            }
            result.bitField0_ = to_bitField0_;
            result.bitField1_ = to_bitField1_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance()) return this;
            if (other.hasStartTime()) {
              setStartTime(other.getStartTime());
            }
            if (other.hasEndTime()) {
              setEndTime(other.getEndTime());
            }
            if (other.hasPinned()) {
              setPinned(other.getPinned());
            }
            if (other.hasStartTrim()) {
              setStartTrim(other.getStartTrim());
            }
            if (other.hasEndTrim()) {
              setEndTrim(other.getEndTrim());
            }
            if (other.hasZOrder()) {
              setZOrder(other.getZOrder());
            }
            if (other.hasLayerExpression()) {
              setLayerExpression(other.getLayerExpression());
            }
            if (other.hasLayerExpressionDuration()) {
              setLayerExpressionDuration(other.getLayerExpressionDuration());
            }
            if (other.hasLayerInExpression()) {
              setLayerInExpression(other.getLayerInExpression());
            }
            if (other.hasLayerInExpressionDuration()) {
              setLayerInExpressionDuration(other.getLayerInExpressionDuration());
            }
            if (other.hasLayerOutExpression()) {
              setLayerOutExpression(other.getLayerOutExpression());
            }
            if (other.hasLayerOutExpressionDuration()) {
              setLayerOutExpressionDuration(other.getLayerOutExpressionDuration());
            }
            if (other.hasLayerOverallExpression()) {
              setLayerOverallExpression(other.getLayerOverallExpression());
            }
            if (other.hasLayerOverallExpressionSpeed()) {
              setLayerOverallExpressionSpeed(other.getLayerOverallExpressionSpeed());
            }
            if (other.hasSplitScreenType()) {
              setSplitScreenType(other.getSplitScreenType());
            }
            if (other.hasSplitSizeLeft()) {
              setSplitSizeLeft(other.getSplitSizeLeft());
            }
            if (other.hasSplitSizeRight()) {
              setSplitSizeRight(other.getSplitSizeRight());
            }
            if (other.hasSplitSizeTop()) {
              setSplitSizeTop(other.getSplitSizeTop());
            }
            if (other.hasSplitSizeBottom()) {
              setSplitSizeBottom(other.getSplitSizeBottom());
            }
            if (other.hasFlipH()) {
              setFlipH(other.getFlipH());
            }
            if (other.hasFlipV()) {
              setFlipV(other.getFlipV());
            }
            if (other.hasSplitKeyframe()) {
              mergeSplitKeyframe(other.getSplitKeyframe());
            }
            if (keyframesBuilder_ == null) {
              if (!other.keyframes_.isEmpty()) {
                if (keyframes_.isEmpty()) {
                  keyframes_ = other.keyframes_;
                  bitField0_ = (bitField0_ & ~0x00400000);
                } else {
                  ensureKeyframesIsMutable();
                  keyframes_.addAll(other.keyframes_);
                }
                onChanged();
              }
            } else {
              if (!other.keyframes_.isEmpty()) {
                if (keyframesBuilder_.isEmpty()) {
                  keyframesBuilder_.dispose();
                  keyframesBuilder_ = null;
                  keyframes_ = other.keyframes_;
                  bitField0_ = (bitField0_ & ~0x00400000);
                  keyframesBuilder_ = 
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                       getKeyframesFieldBuilder() : null;
                } else {
                  keyframesBuilder_.addAllMessages(other.keyframes_);
                }
              }
            }
            if (other.hasOverallAlpha()) {
              setOverallAlpha(other.getOverallAlpha());
            }
            if (other.hasLayermaskEnabled()) {
              setLayermaskEnabled(other.getLayermaskEnabled());
            }
            if (other.hasLayermaskType()) {
              setLayermaskType(other.getLayermaskType());
            }
            if (other.hasLayermaskIndex()) {
              setLayermaskIndex(other.getLayermaskIndex());
            }
            if (other.hasLayerName()) {
              bitField0_ |= 0x08000000;
              layerName_ = other.layerName_;
              onChanged();
            }
            if (other.hasCropBoundsLeft()) {
              setCropBoundsLeft(other.getCropBoundsLeft());
            }
            if (other.hasCropBoundsTop()) {
              setCropBoundsTop(other.getCropBoundsTop());
            }
            if (other.hasCropBoundsRight()) {
              setCropBoundsRight(other.getCropBoundsRight());
            }
            if (other.hasCropBoundsBottom()) {
              setCropBoundsBottom(other.getCropBoundsBottom());
            }
            if (other.hasCropBoundsShape()) {
              setCropBoundsShape(other.getCropBoundsShape());
            }
            if (other.hasCropMaskFeather()) {
              setCropMaskFeather(other.getCropMaskFeather());
            }
            if (other.hasNaturalOrientation()) {
              setNaturalOrientation(other.getNaturalOrientation());
            }
            if (other.hasUseCropMask()) {
              setUseCropMask(other.getUseCropMask());
            }
            if (other.hasBlendMode()) {
              setBlendMode(other.getBlendMode());
            }
            if (other.hasRenderSizeScaleX()) {
              setRenderSizeScaleX(other.getRenderSizeScaleX());
            }
            if (other.hasRenderSizeScaleY()) {
              setRenderSizeScaleY(other.getRenderSizeScaleY());
            }
            if (other.hasVideoUprightOrientation()) {
              setVideoUprightOrientation(other.getVideoUprightOrientation());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;
          private int bitField1_;

          private int startTime_ ;
          /**
           * <code>optional int32 start_time = 100;</code>
           * @return Whether the startTime field is set.
           */
          @java.lang.Override
          public boolean hasStartTime() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional int32 start_time = 100;</code>
           * @return The startTime.
           */
          @java.lang.Override
          public int getStartTime() {
            return startTime_;
          }
          /**
           * <code>optional int32 start_time = 100;</code>
           * @param value The startTime to set.
           * @return This builder for chaining.
           */
          public Builder setStartTime(int value) {
            bitField0_ |= 0x00000001;
            startTime_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 start_time = 100;</code>
           * @return This builder for chaining.
           */
          public Builder clearStartTime() {
            bitField0_ = (bitField0_ & ~0x00000001);
            startTime_ = 0;
            onChanged();
            return this;
          }

          private int endTime_ ;
          /**
           * <code>optional int32 end_time = 101;</code>
           * @return Whether the endTime field is set.
           */
          @java.lang.Override
          public boolean hasEndTime() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional int32 end_time = 101;</code>
           * @return The endTime.
           */
          @java.lang.Override
          public int getEndTime() {
            return endTime_;
          }
          /**
           * <code>optional int32 end_time = 101;</code>
           * @param value The endTime to set.
           * @return This builder for chaining.
           */
          public Builder setEndTime(int value) {
            bitField0_ |= 0x00000002;
            endTime_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 end_time = 101;</code>
           * @return This builder for chaining.
           */
          public Builder clearEndTime() {
            bitField0_ = (bitField0_ & ~0x00000002);
            endTime_ = 0;
            onChanged();
            return this;
          }

          private boolean pinned_ ;
          /**
           * <code>optional bool pinned = 102;</code>
           * @return Whether the pinned field is set.
           */
          @java.lang.Override
          public boolean hasPinned() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <code>optional bool pinned = 102;</code>
           * @return The pinned.
           */
          @java.lang.Override
          public boolean getPinned() {
            return pinned_;
          }
          /**
           * <code>optional bool pinned = 102;</code>
           * @param value The pinned to set.
           * @return This builder for chaining.
           */
          public Builder setPinned(boolean value) {
            bitField0_ |= 0x00000004;
            pinned_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool pinned = 102;</code>
           * @return This builder for chaining.
           */
          public Builder clearPinned() {
            bitField0_ = (bitField0_ & ~0x00000004);
            pinned_ = false;
            onChanged();
            return this;
          }

          private int startTrim_ ;
          /**
           * <code>optional int32 start_trim = 103;</code>
           * @return Whether the startTrim field is set.
           */
          @java.lang.Override
          public boolean hasStartTrim() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <code>optional int32 start_trim = 103;</code>
           * @return The startTrim.
           */
          @java.lang.Override
          public int getStartTrim() {
            return startTrim_;
          }
          /**
           * <code>optional int32 start_trim = 103;</code>
           * @param value The startTrim to set.
           * @return This builder for chaining.
           */
          public Builder setStartTrim(int value) {
            bitField0_ |= 0x00000008;
            startTrim_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 start_trim = 103;</code>
           * @return This builder for chaining.
           */
          public Builder clearStartTrim() {
            bitField0_ = (bitField0_ & ~0x00000008);
            startTrim_ = 0;
            onChanged();
            return this;
          }

          private int endTrim_ ;
          /**
           * <code>optional int32 end_trim = 104;</code>
           * @return Whether the endTrim field is set.
           */
          @java.lang.Override
          public boolean hasEndTrim() {
            return ((bitField0_ & 0x00000010) != 0);
          }
          /**
           * <code>optional int32 end_trim = 104;</code>
           * @return The endTrim.
           */
          @java.lang.Override
          public int getEndTrim() {
            return endTrim_;
          }
          /**
           * <code>optional int32 end_trim = 104;</code>
           * @param value The endTrim to set.
           * @return This builder for chaining.
           */
          public Builder setEndTrim(int value) {
            bitField0_ |= 0x00000010;
            endTrim_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 end_trim = 104;</code>
           * @return This builder for chaining.
           */
          public Builder clearEndTrim() {
            bitField0_ = (bitField0_ & ~0x00000010);
            endTrim_ = 0;
            onChanged();
            return this;
          }

          private long zOrder_ ;
          /**
           * <code>optional int64 z_order = 105;</code>
           * @return Whether the zOrder field is set.
           */
          @java.lang.Override
          public boolean hasZOrder() {
            return ((bitField0_ & 0x00000020) != 0);
          }
          /**
           * <code>optional int64 z_order = 105;</code>
           * @return The zOrder.
           */
          @java.lang.Override
          public long getZOrder() {
            return zOrder_;
          }
          /**
           * <code>optional int64 z_order = 105;</code>
           * @param value The zOrder to set.
           * @return This builder for chaining.
           */
          public Builder setZOrder(long value) {
            bitField0_ |= 0x00000020;
            zOrder_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int64 z_order = 105;</code>
           * @return This builder for chaining.
           */
          public Builder clearZOrder() {
            bitField0_ = (bitField0_ & ~0x00000020);
            zOrder_ = 0L;
            onChanged();
            return this;
          }

          private int layerExpression_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 layer_expression = 106;</code>
           * @return Whether the layerExpression field is set.
           */
          @java.lang.Override
          public boolean hasLayerExpression() {
            return ((bitField0_ & 0x00000040) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 layer_expression = 106;</code>
           * @return The layerExpression.
           */
          @java.lang.Override
          public int getLayerExpression() {
            return layerExpression_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 layer_expression = 106;</code>
           * @param value The layerExpression to set.
           * @return This builder for chaining.
           */
          public Builder setLayerExpression(int value) {
            bitField0_ |= 0x00000040;
            layerExpression_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 layer_expression = 106;</code>
           * @return This builder for chaining.
           */
          public Builder clearLayerExpression() {
            bitField0_ = (bitField0_ & ~0x00000040);
            layerExpression_ = 0;
            onChanged();
            return this;
          }

          private int layerExpressionDuration_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 layer_expression_duration = 107;</code>
           * @return Whether the layerExpressionDuration field is set.
           */
          @java.lang.Override
          public boolean hasLayerExpressionDuration() {
            return ((bitField0_ & 0x00000080) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 layer_expression_duration = 107;</code>
           * @return The layerExpressionDuration.
           */
          @java.lang.Override
          public int getLayerExpressionDuration() {
            return layerExpressionDuration_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 layer_expression_duration = 107;</code>
           * @param value The layerExpressionDuration to set.
           * @return This builder for chaining.
           */
          public Builder setLayerExpressionDuration(int value) {
            bitField0_ |= 0x00000080;
            layerExpressionDuration_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 layer_expression_duration = 107;</code>
           * @return This builder for chaining.
           */
          public Builder clearLayerExpressionDuration() {
            bitField0_ = (bitField0_ & ~0x00000080);
            layerExpressionDuration_ = 0;
            onChanged();
            return this;
          }

          private int layerInExpression_ ;
          /**
           * <code>optional int32 layer_in_expression = 109;</code>
           * @return Whether the layerInExpression field is set.
           */
          @java.lang.Override
          public boolean hasLayerInExpression() {
            return ((bitField0_ & 0x00000100) != 0);
          }
          /**
           * <code>optional int32 layer_in_expression = 109;</code>
           * @return The layerInExpression.
           */
          @java.lang.Override
          public int getLayerInExpression() {
            return layerInExpression_;
          }
          /**
           * <code>optional int32 layer_in_expression = 109;</code>
           * @param value The layerInExpression to set.
           * @return This builder for chaining.
           */
          public Builder setLayerInExpression(int value) {
            bitField0_ |= 0x00000100;
            layerInExpression_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 layer_in_expression = 109;</code>
           * @return This builder for chaining.
           */
          public Builder clearLayerInExpression() {
            bitField0_ = (bitField0_ & ~0x00000100);
            layerInExpression_ = 0;
            onChanged();
            return this;
          }

          private int layerInExpressionDuration_ ;
          /**
           * <code>optional int32 layer_in_expression_duration = 110;</code>
           * @return Whether the layerInExpressionDuration field is set.
           */
          @java.lang.Override
          public boolean hasLayerInExpressionDuration() {
            return ((bitField0_ & 0x00000200) != 0);
          }
          /**
           * <code>optional int32 layer_in_expression_duration = 110;</code>
           * @return The layerInExpressionDuration.
           */
          @java.lang.Override
          public int getLayerInExpressionDuration() {
            return layerInExpressionDuration_;
          }
          /**
           * <code>optional int32 layer_in_expression_duration = 110;</code>
           * @param value The layerInExpressionDuration to set.
           * @return This builder for chaining.
           */
          public Builder setLayerInExpressionDuration(int value) {
            bitField0_ |= 0x00000200;
            layerInExpressionDuration_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 layer_in_expression_duration = 110;</code>
           * @return This builder for chaining.
           */
          public Builder clearLayerInExpressionDuration() {
            bitField0_ = (bitField0_ & ~0x00000200);
            layerInExpressionDuration_ = 0;
            onChanged();
            return this;
          }

          private int layerOutExpression_ ;
          /**
           * <code>optional int32 layer_out_expression = 111;</code>
           * @return Whether the layerOutExpression field is set.
           */
          @java.lang.Override
          public boolean hasLayerOutExpression() {
            return ((bitField0_ & 0x00000400) != 0);
          }
          /**
           * <code>optional int32 layer_out_expression = 111;</code>
           * @return The layerOutExpression.
           */
          @java.lang.Override
          public int getLayerOutExpression() {
            return layerOutExpression_;
          }
          /**
           * <code>optional int32 layer_out_expression = 111;</code>
           * @param value The layerOutExpression to set.
           * @return This builder for chaining.
           */
          public Builder setLayerOutExpression(int value) {
            bitField0_ |= 0x00000400;
            layerOutExpression_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 layer_out_expression = 111;</code>
           * @return This builder for chaining.
           */
          public Builder clearLayerOutExpression() {
            bitField0_ = (bitField0_ & ~0x00000400);
            layerOutExpression_ = 0;
            onChanged();
            return this;
          }

          private int layerOutExpressionDuration_ ;
          /**
           * <code>optional int32 layer_out_expression_duration = 112;</code>
           * @return Whether the layerOutExpressionDuration field is set.
           */
          @java.lang.Override
          public boolean hasLayerOutExpressionDuration() {
            return ((bitField0_ & 0x00000800) != 0);
          }
          /**
           * <code>optional int32 layer_out_expression_duration = 112;</code>
           * @return The layerOutExpressionDuration.
           */
          @java.lang.Override
          public int getLayerOutExpressionDuration() {
            return layerOutExpressionDuration_;
          }
          /**
           * <code>optional int32 layer_out_expression_duration = 112;</code>
           * @param value The layerOutExpressionDuration to set.
           * @return This builder for chaining.
           */
          public Builder setLayerOutExpressionDuration(int value) {
            bitField0_ |= 0x00000800;
            layerOutExpressionDuration_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 layer_out_expression_duration = 112;</code>
           * @return This builder for chaining.
           */
          public Builder clearLayerOutExpressionDuration() {
            bitField0_ = (bitField0_ & ~0x00000800);
            layerOutExpressionDuration_ = 0;
            onChanged();
            return this;
          }

          private int layerOverallExpression_ ;
          /**
           * <code>optional int32 layer_overall_expression = 113;</code>
           * @return Whether the layerOverallExpression field is set.
           */
          @java.lang.Override
          public boolean hasLayerOverallExpression() {
            return ((bitField0_ & 0x00001000) != 0);
          }
          /**
           * <code>optional int32 layer_overall_expression = 113;</code>
           * @return The layerOverallExpression.
           */
          @java.lang.Override
          public int getLayerOverallExpression() {
            return layerOverallExpression_;
          }
          /**
           * <code>optional int32 layer_overall_expression = 113;</code>
           * @param value The layerOverallExpression to set.
           * @return This builder for chaining.
           */
          public Builder setLayerOverallExpression(int value) {
            bitField0_ |= 0x00001000;
            layerOverallExpression_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 layer_overall_expression = 113;</code>
           * @return This builder for chaining.
           */
          public Builder clearLayerOverallExpression() {
            bitField0_ = (bitField0_ & ~0x00001000);
            layerOverallExpression_ = 0;
            onChanged();
            return this;
          }

          private float layerOverallExpressionSpeed_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float layer_overall_expression_speed = 114;</code>
           * @return Whether the layerOverallExpressionSpeed field is set.
           */
          @java.lang.Override
          public boolean hasLayerOverallExpressionSpeed() {
            return ((bitField0_ & 0x00002000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float layer_overall_expression_speed = 114;</code>
           * @return The layerOverallExpressionSpeed.
           */
          @java.lang.Override
          public float getLayerOverallExpressionSpeed() {
            return layerOverallExpressionSpeed_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float layer_overall_expression_speed = 114;</code>
           * @param value The layerOverallExpressionSpeed to set.
           * @return This builder for chaining.
           */
          public Builder setLayerOverallExpressionSpeed(float value) {
            bitField0_ |= 0x00002000;
            layerOverallExpressionSpeed_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float layer_overall_expression_speed = 114;</code>
           * @return This builder for chaining.
           */
          public Builder clearLayerOverallExpressionSpeed() {
            bitField0_ = (bitField0_ & ~0x00002000);
            layerOverallExpressionSpeed_ = 0F;
            onChanged();
            return this;
          }

          private int splitScreenType_ = 0;
          /**
           * <code>optional .KMProto.KMProject.SplitScreenType split_screen_type = 116;</code>
           * @return Whether the splitScreenType field is set.
           */
          @java.lang.Override public boolean hasSplitScreenType() {
            return ((bitField0_ & 0x00004000) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.SplitScreenType split_screen_type = 116;</code>
           * @return The splitScreenType.
           */
          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.SplitScreenType getSplitScreenType() {
            @SuppressWarnings("deprecation")
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.SplitScreenType result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.SplitScreenType.valueOf(splitScreenType_);
            return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.SplitScreenType.OFF : result;
          }
          /**
           * <code>optional .KMProto.KMProject.SplitScreenType split_screen_type = 116;</code>
           * @param value The splitScreenType to set.
           * @return This builder for chaining.
           */
          public Builder setSplitScreenType(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.SplitScreenType value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00004000;
            splitScreenType_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.SplitScreenType split_screen_type = 116;</code>
           * @return This builder for chaining.
           */
          public Builder clearSplitScreenType() {
            bitField0_ = (bitField0_ & ~0x00004000);
            splitScreenType_ = 0;
            onChanged();
            return this;
          }

          private int splitSizeLeft_ ;
          /**
           * <code>optional int32 split_size_left = 117;</code>
           * @return Whether the splitSizeLeft field is set.
           */
          @java.lang.Override
          public boolean hasSplitSizeLeft() {
            return ((bitField0_ & 0x00008000) != 0);
          }
          /**
           * <code>optional int32 split_size_left = 117;</code>
           * @return The splitSizeLeft.
           */
          @java.lang.Override
          public int getSplitSizeLeft() {
            return splitSizeLeft_;
          }
          /**
           * <code>optional int32 split_size_left = 117;</code>
           * @param value The splitSizeLeft to set.
           * @return This builder for chaining.
           */
          public Builder setSplitSizeLeft(int value) {
            bitField0_ |= 0x00008000;
            splitSizeLeft_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 split_size_left = 117;</code>
           * @return This builder for chaining.
           */
          public Builder clearSplitSizeLeft() {
            bitField0_ = (bitField0_ & ~0x00008000);
            splitSizeLeft_ = 0;
            onChanged();
            return this;
          }

          private int splitSizeRight_ ;
          /**
           * <code>optional int32 split_size_right = 118;</code>
           * @return Whether the splitSizeRight field is set.
           */
          @java.lang.Override
          public boolean hasSplitSizeRight() {
            return ((bitField0_ & 0x00010000) != 0);
          }
          /**
           * <code>optional int32 split_size_right = 118;</code>
           * @return The splitSizeRight.
           */
          @java.lang.Override
          public int getSplitSizeRight() {
            return splitSizeRight_;
          }
          /**
           * <code>optional int32 split_size_right = 118;</code>
           * @param value The splitSizeRight to set.
           * @return This builder for chaining.
           */
          public Builder setSplitSizeRight(int value) {
            bitField0_ |= 0x00010000;
            splitSizeRight_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 split_size_right = 118;</code>
           * @return This builder for chaining.
           */
          public Builder clearSplitSizeRight() {
            bitField0_ = (bitField0_ & ~0x00010000);
            splitSizeRight_ = 0;
            onChanged();
            return this;
          }

          private int splitSizeTop_ ;
          /**
           * <code>optional int32 split_size_top = 119;</code>
           * @return Whether the splitSizeTop field is set.
           */
          @java.lang.Override
          public boolean hasSplitSizeTop() {
            return ((bitField0_ & 0x00020000) != 0);
          }
          /**
           * <code>optional int32 split_size_top = 119;</code>
           * @return The splitSizeTop.
           */
          @java.lang.Override
          public int getSplitSizeTop() {
            return splitSizeTop_;
          }
          /**
           * <code>optional int32 split_size_top = 119;</code>
           * @param value The splitSizeTop to set.
           * @return This builder for chaining.
           */
          public Builder setSplitSizeTop(int value) {
            bitField0_ |= 0x00020000;
            splitSizeTop_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 split_size_top = 119;</code>
           * @return This builder for chaining.
           */
          public Builder clearSplitSizeTop() {
            bitField0_ = (bitField0_ & ~0x00020000);
            splitSizeTop_ = 0;
            onChanged();
            return this;
          }

          private int splitSizeBottom_ ;
          /**
           * <code>optional int32 split_size_bottom = 120;</code>
           * @return Whether the splitSizeBottom field is set.
           */
          @java.lang.Override
          public boolean hasSplitSizeBottom() {
            return ((bitField0_ & 0x00040000) != 0);
          }
          /**
           * <code>optional int32 split_size_bottom = 120;</code>
           * @return The splitSizeBottom.
           */
          @java.lang.Override
          public int getSplitSizeBottom() {
            return splitSizeBottom_;
          }
          /**
           * <code>optional int32 split_size_bottom = 120;</code>
           * @param value The splitSizeBottom to set.
           * @return This builder for chaining.
           */
          public Builder setSplitSizeBottom(int value) {
            bitField0_ |= 0x00040000;
            splitSizeBottom_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 split_size_bottom = 120;</code>
           * @return This builder for chaining.
           */
          public Builder clearSplitSizeBottom() {
            bitField0_ = (bitField0_ & ~0x00040000);
            splitSizeBottom_ = 0;
            onChanged();
            return this;
          }

          private boolean flipH_ ;
          /**
           * <code>optional bool flip_h = 122;</code>
           * @return Whether the flipH field is set.
           */
          @java.lang.Override
          public boolean hasFlipH() {
            return ((bitField0_ & 0x00080000) != 0);
          }
          /**
           * <code>optional bool flip_h = 122;</code>
           * @return The flipH.
           */
          @java.lang.Override
          public boolean getFlipH() {
            return flipH_;
          }
          /**
           * <code>optional bool flip_h = 122;</code>
           * @param value The flipH to set.
           * @return This builder for chaining.
           */
          public Builder setFlipH(boolean value) {
            bitField0_ |= 0x00080000;
            flipH_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool flip_h = 122;</code>
           * @return This builder for chaining.
           */
          public Builder clearFlipH() {
            bitField0_ = (bitField0_ & ~0x00080000);
            flipH_ = false;
            onChanged();
            return this;
          }

          private boolean flipV_ ;
          /**
           * <code>optional bool flip_v = 123;</code>
           * @return Whether the flipV field is set.
           */
          @java.lang.Override
          public boolean hasFlipV() {
            return ((bitField0_ & 0x00100000) != 0);
          }
          /**
           * <code>optional bool flip_v = 123;</code>
           * @return The flipV.
           */
          @java.lang.Override
          public boolean getFlipV() {
            return flipV_;
          }
          /**
           * <code>optional bool flip_v = 123;</code>
           * @param value The flipV to set.
           * @return This builder for chaining.
           */
          public Builder setFlipV(boolean value) {
            bitField0_ |= 0x00100000;
            flipV_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool flip_v = 123;</code>
           * @return This builder for chaining.
           */
          public Builder clearFlipV() {
            bitField0_ = (bitField0_ & ~0x00100000);
            flipV_ = false;
            onChanged();
            return this;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame splitKeyframe_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrameOrBuilder> splitKeyframeBuilder_;
          /**
           * <code>optional .KMProto.KMProject.KeyFrame split_keyframe = 115;</code>
           * @return Whether the splitKeyframe field is set.
           */
          public boolean hasSplitKeyframe() {
            return ((bitField0_ & 0x00200000) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.KeyFrame split_keyframe = 115;</code>
           * @return The splitKeyframe.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame getSplitKeyframe() {
            if (splitKeyframeBuilder_ == null) {
              return splitKeyframe_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.getDefaultInstance() : splitKeyframe_;
            } else {
              return splitKeyframeBuilder_.getMessage();
            }
          }
          /**
           * <code>optional .KMProto.KMProject.KeyFrame split_keyframe = 115;</code>
           */
          public Builder setSplitKeyframe(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame value) {
            if (splitKeyframeBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              splitKeyframe_ = value;
              onChanged();
            } else {
              splitKeyframeBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00200000;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.KeyFrame split_keyframe = 115;</code>
           */
          public Builder setSplitKeyframe(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.Builder builderForValue) {
            if (splitKeyframeBuilder_ == null) {
              splitKeyframe_ = builderForValue.build();
              onChanged();
            } else {
              splitKeyframeBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00200000;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.KeyFrame split_keyframe = 115;</code>
           */
          public Builder mergeSplitKeyframe(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame value) {
            if (splitKeyframeBuilder_ == null) {
              if (((bitField0_ & 0x00200000) != 0) &&
                  splitKeyframe_ != null &&
                  splitKeyframe_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.getDefaultInstance()) {
                splitKeyframe_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.newBuilder(splitKeyframe_).mergeFrom(value).buildPartial();
              } else {
                splitKeyframe_ = value;
              }
              onChanged();
            } else {
              splitKeyframeBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00200000;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.KeyFrame split_keyframe = 115;</code>
           */
          public Builder clearSplitKeyframe() {
            if (splitKeyframeBuilder_ == null) {
              splitKeyframe_ = null;
              onChanged();
            } else {
              splitKeyframeBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00200000);
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.KeyFrame split_keyframe = 115;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.Builder getSplitKeyframeBuilder() {
            bitField0_ |= 0x00200000;
            onChanged();
            return getSplitKeyframeFieldBuilder().getBuilder();
          }
          /**
           * <code>optional .KMProto.KMProject.KeyFrame split_keyframe = 115;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrameOrBuilder getSplitKeyframeOrBuilder() {
            if (splitKeyframeBuilder_ != null) {
              return splitKeyframeBuilder_.getMessageOrBuilder();
            } else {
              return splitKeyframe_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.getDefaultInstance() : splitKeyframe_;
            }
          }
          /**
           * <code>optional .KMProto.KMProject.KeyFrame split_keyframe = 115;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrameOrBuilder> 
              getSplitKeyframeFieldBuilder() {
            if (splitKeyframeBuilder_ == null) {
              splitKeyframeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrameOrBuilder>(
                      getSplitKeyframe(),
                      getParentForChildren(),
                      isClean());
              splitKeyframe_ = null;
            }
            return splitKeyframeBuilder_;
          }

          private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame> keyframes_ =
            java.util.Collections.emptyList();
          private void ensureKeyframesIsMutable() {
            if (!((bitField0_ & 0x00400000) != 0)) {
              keyframes_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame>(keyframes_);
              bitField0_ |= 0x00400000;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrameOrBuilder> keyframesBuilder_;

          /**
           * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
           */
          public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame> getKeyframesList() {
            if (keyframesBuilder_ == null) {
              return java.util.Collections.unmodifiableList(keyframes_);
            } else {
              return keyframesBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
           */
          public int getKeyframesCount() {
            if (keyframesBuilder_ == null) {
              return keyframes_.size();
            } else {
              return keyframesBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame getKeyframes(int index) {
            if (keyframesBuilder_ == null) {
              return keyframes_.get(index);
            } else {
              return keyframesBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
           */
          public Builder setKeyframes(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame value) {
            if (keyframesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureKeyframesIsMutable();
              keyframes_.set(index, value);
              onChanged();
            } else {
              keyframesBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
           */
          public Builder setKeyframes(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.Builder builderForValue) {
            if (keyframesBuilder_ == null) {
              ensureKeyframesIsMutable();
              keyframes_.set(index, builderForValue.build());
              onChanged();
            } else {
              keyframesBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
           */
          public Builder addKeyframes(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame value) {
            if (keyframesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureKeyframesIsMutable();
              keyframes_.add(value);
              onChanged();
            } else {
              keyframesBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
           */
          public Builder addKeyframes(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame value) {
            if (keyframesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureKeyframesIsMutable();
              keyframes_.add(index, value);
              onChanged();
            } else {
              keyframesBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
           */
          public Builder addKeyframes(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.Builder builderForValue) {
            if (keyframesBuilder_ == null) {
              ensureKeyframesIsMutable();
              keyframes_.add(builderForValue.build());
              onChanged();
            } else {
              keyframesBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
           */
          public Builder addKeyframes(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.Builder builderForValue) {
            if (keyframesBuilder_ == null) {
              ensureKeyframesIsMutable();
              keyframes_.add(index, builderForValue.build());
              onChanged();
            } else {
              keyframesBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
           */
          public Builder addAllKeyframes(
              java.lang.Iterable<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame> values) {
            if (keyframesBuilder_ == null) {
              ensureKeyframesIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, keyframes_);
              onChanged();
            } else {
              keyframesBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
           */
          public Builder clearKeyframes() {
            if (keyframesBuilder_ == null) {
              keyframes_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00400000);
              onChanged();
            } else {
              keyframesBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
           */
          public Builder removeKeyframes(int index) {
            if (keyframesBuilder_ == null) {
              ensureKeyframesIsMutable();
              keyframes_.remove(index);
              onChanged();
            } else {
              keyframesBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.Builder getKeyframesBuilder(
              int index) {
            return getKeyframesFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrameOrBuilder getKeyframesOrBuilder(
              int index) {
            if (keyframesBuilder_ == null) {
              return keyframes_.get(index);  } else {
              return keyframesBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
           */
          public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrameOrBuilder> 
               getKeyframesOrBuilderList() {
            if (keyframesBuilder_ != null) {
              return keyframesBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(keyframes_);
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.Builder addKeyframesBuilder() {
            return getKeyframesFieldBuilder().addBuilder(
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.getDefaultInstance());
          }
          /**
           * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.Builder addKeyframesBuilder(
              int index) {
            return getKeyframesFieldBuilder().addBuilder(
                index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.getDefaultInstance());
          }
          /**
           * <code>repeated .KMProto.KMProject.KeyFrame keyframes = 108;</code>
           */
          public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.Builder> 
               getKeyframesBuilderList() {
            return getKeyframesFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrameOrBuilder> 
              getKeyframesFieldBuilder() {
            if (keyframesBuilder_ == null) {
              keyframesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrameOrBuilder>(
                      keyframes_,
                      ((bitField0_ & 0x00400000) != 0),
                      getParentForChildren(),
                      isClean());
              keyframes_ = null;
            }
            return keyframesBuilder_;
          }

          private int overallAlpha_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 overall_alpha = 121;</code>
           * @return Whether the overallAlpha field is set.
           */
          @java.lang.Override
          public boolean hasOverallAlpha() {
            return ((bitField0_ & 0x00800000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 overall_alpha = 121;</code>
           * @return The overallAlpha.
           */
          @java.lang.Override
          public int getOverallAlpha() {
            return overallAlpha_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 overall_alpha = 121;</code>
           * @param value The overallAlpha to set.
           * @return This builder for chaining.
           */
          public Builder setOverallAlpha(int value) {
            bitField0_ |= 0x00800000;
            overallAlpha_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 overall_alpha = 121;</code>
           * @return This builder for chaining.
           */
          public Builder clearOverallAlpha() {
            bitField0_ = (bitField0_ & ~0x00800000);
            overallAlpha_ = 0;
            onChanged();
            return this;
          }

          private boolean layermaskEnabled_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool layermask_enabled = 124;</code>
           * @return Whether the layermaskEnabled field is set.
           */
          @java.lang.Override
          public boolean hasLayermaskEnabled() {
            return ((bitField0_ & 0x01000000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool layermask_enabled = 124;</code>
           * @return The layermaskEnabled.
           */
          @java.lang.Override
          public boolean getLayermaskEnabled() {
            return layermaskEnabled_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool layermask_enabled = 124;</code>
           * @param value The layermaskEnabled to set.
           * @return This builder for chaining.
           */
          public Builder setLayermaskEnabled(boolean value) {
            bitField0_ |= 0x01000000;
            layermaskEnabled_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool layermask_enabled = 124;</code>
           * @return This builder for chaining.
           */
          public Builder clearLayermaskEnabled() {
            bitField0_ = (bitField0_ & ~0x01000000);
            layermaskEnabled_ = false;
            onChanged();
            return this;
          }

          private int layermaskType_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 layermask_type = 125;</code>
           * @return Whether the layermaskType field is set.
           */
          @java.lang.Override
          public boolean hasLayermaskType() {
            return ((bitField0_ & 0x02000000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 layermask_type = 125;</code>
           * @return The layermaskType.
           */
          @java.lang.Override
          public int getLayermaskType() {
            return layermaskType_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 layermask_type = 125;</code>
           * @param value The layermaskType to set.
           * @return This builder for chaining.
           */
          public Builder setLayermaskType(int value) {
            bitField0_ |= 0x02000000;
            layermaskType_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 layermask_type = 125;</code>
           * @return This builder for chaining.
           */
          public Builder clearLayermaskType() {
            bitField0_ = (bitField0_ & ~0x02000000);
            layermaskType_ = 0;
            onChanged();
            return this;
          }

          private int layermaskIndex_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 layermask_index = 126;</code>
           * @return Whether the layermaskIndex field is set.
           */
          @java.lang.Override
          public boolean hasLayermaskIndex() {
            return ((bitField0_ & 0x04000000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 layermask_index = 126;</code>
           * @return The layermaskIndex.
           */
          @java.lang.Override
          public int getLayermaskIndex() {
            return layermaskIndex_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 layermask_index = 126;</code>
           * @param value The layermaskIndex to set.
           * @return This builder for chaining.
           */
          public Builder setLayermaskIndex(int value) {
            bitField0_ |= 0x04000000;
            layermaskIndex_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 layermask_index = 126;</code>
           * @return This builder for chaining.
           */
          public Builder clearLayermaskIndex() {
            bitField0_ = (bitField0_ & ~0x04000000);
            layermaskIndex_ = 0;
            onChanged();
            return this;
          }

          private java.lang.Object layerName_ = "";
          /**
           * <code>optional string layer_name = 127;</code>
           * @return Whether the layerName field is set.
           */
          public boolean hasLayerName() {
            return ((bitField0_ & 0x08000000) != 0);
          }
          /**
           * <code>optional string layer_name = 127;</code>
           * @return The layerName.
           */
          public java.lang.String getLayerName() {
            java.lang.Object ref = layerName_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                layerName_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string layer_name = 127;</code>
           * @return The bytes for layerName.
           */
          public com.google.protobuf.ByteString
              getLayerNameBytes() {
            java.lang.Object ref = layerName_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              layerName_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string layer_name = 127;</code>
           * @param value The layerName to set.
           * @return This builder for chaining.
           */
          public Builder setLayerName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x08000000;
            layerName_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string layer_name = 127;</code>
           * @return This builder for chaining.
           */
          public Builder clearLayerName() {
            bitField0_ = (bitField0_ & ~0x08000000);
            layerName_ = getDefaultInstance().getLayerName();
            onChanged();
            return this;
          }
          /**
           * <code>optional string layer_name = 127;</code>
           * @param value The bytes for layerName to set.
           * @return This builder for chaining.
           */
          public Builder setLayerNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x08000000;
            layerName_ = value;
            onChanged();
            return this;
          }

          private float cropBoundsLeft_ ;
          /**
           * <code>optional float crop_bounds_left = 128;</code>
           * @return Whether the cropBoundsLeft field is set.
           */
          @java.lang.Override
          public boolean hasCropBoundsLeft() {
            return ((bitField0_ & 0x10000000) != 0);
          }
          /**
           * <code>optional float crop_bounds_left = 128;</code>
           * @return The cropBoundsLeft.
           */
          @java.lang.Override
          public float getCropBoundsLeft() {
            return cropBoundsLeft_;
          }
          /**
           * <code>optional float crop_bounds_left = 128;</code>
           * @param value The cropBoundsLeft to set.
           * @return This builder for chaining.
           */
          public Builder setCropBoundsLeft(float value) {
            bitField0_ |= 0x10000000;
            cropBoundsLeft_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float crop_bounds_left = 128;</code>
           * @return This builder for chaining.
           */
          public Builder clearCropBoundsLeft() {
            bitField0_ = (bitField0_ & ~0x10000000);
            cropBoundsLeft_ = 0F;
            onChanged();
            return this;
          }

          private float cropBoundsTop_ ;
          /**
           * <code>optional float crop_bounds_top = 129;</code>
           * @return Whether the cropBoundsTop field is set.
           */
          @java.lang.Override
          public boolean hasCropBoundsTop() {
            return ((bitField0_ & 0x20000000) != 0);
          }
          /**
           * <code>optional float crop_bounds_top = 129;</code>
           * @return The cropBoundsTop.
           */
          @java.lang.Override
          public float getCropBoundsTop() {
            return cropBoundsTop_;
          }
          /**
           * <code>optional float crop_bounds_top = 129;</code>
           * @param value The cropBoundsTop to set.
           * @return This builder for chaining.
           */
          public Builder setCropBoundsTop(float value) {
            bitField0_ |= 0x20000000;
            cropBoundsTop_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float crop_bounds_top = 129;</code>
           * @return This builder for chaining.
           */
          public Builder clearCropBoundsTop() {
            bitField0_ = (bitField0_ & ~0x20000000);
            cropBoundsTop_ = 0F;
            onChanged();
            return this;
          }

          private float cropBoundsRight_ ;
          /**
           * <code>optional float crop_bounds_right = 130;</code>
           * @return Whether the cropBoundsRight field is set.
           */
          @java.lang.Override
          public boolean hasCropBoundsRight() {
            return ((bitField0_ & 0x40000000) != 0);
          }
          /**
           * <code>optional float crop_bounds_right = 130;</code>
           * @return The cropBoundsRight.
           */
          @java.lang.Override
          public float getCropBoundsRight() {
            return cropBoundsRight_;
          }
          /**
           * <code>optional float crop_bounds_right = 130;</code>
           * @param value The cropBoundsRight to set.
           * @return This builder for chaining.
           */
          public Builder setCropBoundsRight(float value) {
            bitField0_ |= 0x40000000;
            cropBoundsRight_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float crop_bounds_right = 130;</code>
           * @return This builder for chaining.
           */
          public Builder clearCropBoundsRight() {
            bitField0_ = (bitField0_ & ~0x40000000);
            cropBoundsRight_ = 0F;
            onChanged();
            return this;
          }

          private float cropBoundsBottom_ ;
          /**
           * <code>optional float crop_bounds_bottom = 131;</code>
           * @return Whether the cropBoundsBottom field is set.
           */
          @java.lang.Override
          public boolean hasCropBoundsBottom() {
            return ((bitField0_ & 0x80000000) != 0);
          }
          /**
           * <code>optional float crop_bounds_bottom = 131;</code>
           * @return The cropBoundsBottom.
           */
          @java.lang.Override
          public float getCropBoundsBottom() {
            return cropBoundsBottom_;
          }
          /**
           * <code>optional float crop_bounds_bottom = 131;</code>
           * @param value The cropBoundsBottom to set.
           * @return This builder for chaining.
           */
          public Builder setCropBoundsBottom(float value) {
            bitField0_ |= 0x80000000;
            cropBoundsBottom_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float crop_bounds_bottom = 131;</code>
           * @return This builder for chaining.
           */
          public Builder clearCropBoundsBottom() {
            bitField0_ = (bitField0_ & ~0x80000000);
            cropBoundsBottom_ = 0F;
            onChanged();
            return this;
          }

          private int cropBoundsShape_ ;
          /**
           * <code>optional int32 crop_bounds_shape = 132;</code>
           * @return Whether the cropBoundsShape field is set.
           */
          @java.lang.Override
          public boolean hasCropBoundsShape() {
            return ((bitField1_ & 0x00000001) != 0);
          }
          /**
           * <code>optional int32 crop_bounds_shape = 132;</code>
           * @return The cropBoundsShape.
           */
          @java.lang.Override
          public int getCropBoundsShape() {
            return cropBoundsShape_;
          }
          /**
           * <code>optional int32 crop_bounds_shape = 132;</code>
           * @param value The cropBoundsShape to set.
           * @return This builder for chaining.
           */
          public Builder setCropBoundsShape(int value) {
            bitField1_ |= 0x00000001;
            cropBoundsShape_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 crop_bounds_shape = 132;</code>
           * @return This builder for chaining.
           */
          public Builder clearCropBoundsShape() {
            bitField1_ = (bitField1_ & ~0x00000001);
            cropBoundsShape_ = 0;
            onChanged();
            return this;
          }

          private float cropMaskFeather_ ;
          /**
           * <code>optional float crop_mask_feather = 133;</code>
           * @return Whether the cropMaskFeather field is set.
           */
          @java.lang.Override
          public boolean hasCropMaskFeather() {
            return ((bitField1_ & 0x00000002) != 0);
          }
          /**
           * <code>optional float crop_mask_feather = 133;</code>
           * @return The cropMaskFeather.
           */
          @java.lang.Override
          public float getCropMaskFeather() {
            return cropMaskFeather_;
          }
          /**
           * <code>optional float crop_mask_feather = 133;</code>
           * @param value The cropMaskFeather to set.
           * @return This builder for chaining.
           */
          public Builder setCropMaskFeather(float value) {
            bitField1_ |= 0x00000002;
            cropMaskFeather_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float crop_mask_feather = 133;</code>
           * @return This builder for chaining.
           */
          public Builder clearCropMaskFeather() {
            bitField1_ = (bitField1_ & ~0x00000002);
            cropMaskFeather_ = 0F;
            onChanged();
            return this;
          }

          private int naturalOrientation_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 natural_orientation = 134;</code>
           * @return Whether the naturalOrientation field is set.
           */
          @java.lang.Override
          public boolean hasNaturalOrientation() {
            return ((bitField1_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 natural_orientation = 134;</code>
           * @return The naturalOrientation.
           */
          @java.lang.Override
          public int getNaturalOrientation() {
            return naturalOrientation_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 natural_orientation = 134;</code>
           * @param value The naturalOrientation to set.
           * @return This builder for chaining.
           */
          public Builder setNaturalOrientation(int value) {
            bitField1_ |= 0x00000004;
            naturalOrientation_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 natural_orientation = 134;</code>
           * @return This builder for chaining.
           */
          public Builder clearNaturalOrientation() {
            bitField1_ = (bitField1_ & ~0x00000004);
            naturalOrientation_ = 0;
            onChanged();
            return this;
          }

          private boolean useCropMask_ ;
          /**
           * <code>optional bool use_crop_mask = 135;</code>
           * @return Whether the useCropMask field is set.
           */
          @java.lang.Override
          public boolean hasUseCropMask() {
            return ((bitField1_ & 0x00000008) != 0);
          }
          /**
           * <code>optional bool use_crop_mask = 135;</code>
           * @return The useCropMask.
           */
          @java.lang.Override
          public boolean getUseCropMask() {
            return useCropMask_;
          }
          /**
           * <code>optional bool use_crop_mask = 135;</code>
           * @param value The useCropMask to set.
           * @return This builder for chaining.
           */
          public Builder setUseCropMask(boolean value) {
            bitField1_ |= 0x00000008;
            useCropMask_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool use_crop_mask = 135;</code>
           * @return This builder for chaining.
           */
          public Builder clearUseCropMask() {
            bitField1_ = (bitField1_ & ~0x00000008);
            useCropMask_ = false;
            onChanged();
            return this;
          }

          private int blendMode_ = 17;
          /**
           * <code>optional .KMProto.KMProject.LayerBlendModeType blend_mode = 136 [default = LAYER_BLEND_NORMAL];</code>
           * @return Whether the blendMode field is set.
           */
          @java.lang.Override public boolean hasBlendMode() {
            return ((bitField1_ & 0x00000010) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.LayerBlendModeType blend_mode = 136 [default = LAYER_BLEND_NORMAL];</code>
           * @return The blendMode.
           */
          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerBlendModeType getBlendMode() {
            @SuppressWarnings("deprecation")
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerBlendModeType result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerBlendModeType.valueOf(blendMode_);
            return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerBlendModeType.LAYER_BLEND_NORMAL : result;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerBlendModeType blend_mode = 136 [default = LAYER_BLEND_NORMAL];</code>
           * @param value The blendMode to set.
           * @return This builder for chaining.
           */
          public Builder setBlendMode(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerBlendModeType value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField1_ |= 0x00000010;
            blendMode_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerBlendModeType blend_mode = 136 [default = LAYER_BLEND_NORMAL];</code>
           * @return This builder for chaining.
           */
          public Builder clearBlendMode() {
            bitField1_ = (bitField1_ & ~0x00000010);
            blendMode_ = 17;
            onChanged();
            return this;
          }

          private float renderSizeScaleX_ ;
          /**
           * <code>optional float render_size_scale_x = 137;</code>
           * @return Whether the renderSizeScaleX field is set.
           */
          @java.lang.Override
          public boolean hasRenderSizeScaleX() {
            return ((bitField1_ & 0x00000020) != 0);
          }
          /**
           * <code>optional float render_size_scale_x = 137;</code>
           * @return The renderSizeScaleX.
           */
          @java.lang.Override
          public float getRenderSizeScaleX() {
            return renderSizeScaleX_;
          }
          /**
           * <code>optional float render_size_scale_x = 137;</code>
           * @param value The renderSizeScaleX to set.
           * @return This builder for chaining.
           */
          public Builder setRenderSizeScaleX(float value) {
            bitField1_ |= 0x00000020;
            renderSizeScaleX_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float render_size_scale_x = 137;</code>
           * @return This builder for chaining.
           */
          public Builder clearRenderSizeScaleX() {
            bitField1_ = (bitField1_ & ~0x00000020);
            renderSizeScaleX_ = 0F;
            onChanged();
            return this;
          }

          private float renderSizeScaleY_ ;
          /**
           * <code>optional float render_size_scale_y = 138;</code>
           * @return Whether the renderSizeScaleY field is set.
           */
          @java.lang.Override
          public boolean hasRenderSizeScaleY() {
            return ((bitField1_ & 0x00000040) != 0);
          }
          /**
           * <code>optional float render_size_scale_y = 138;</code>
           * @return The renderSizeScaleY.
           */
          @java.lang.Override
          public float getRenderSizeScaleY() {
            return renderSizeScaleY_;
          }
          /**
           * <code>optional float render_size_scale_y = 138;</code>
           * @param value The renderSizeScaleY to set.
           * @return This builder for chaining.
           */
          public Builder setRenderSizeScaleY(float value) {
            bitField1_ |= 0x00000040;
            renderSizeScaleY_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float render_size_scale_y = 138;</code>
           * @return This builder for chaining.
           */
          public Builder clearRenderSizeScaleY() {
            bitField1_ = (bitField1_ & ~0x00000040);
            renderSizeScaleY_ = 0F;
            onChanged();
            return this;
          }

          private int videoUprightOrientation_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 videoUprightOrientation = 139;</code>
           * @return Whether the videoUprightOrientation field is set.
           */
          @java.lang.Override
          public boolean hasVideoUprightOrientation() {
            return ((bitField1_ & 0x00000080) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 videoUprightOrientation = 139;</code>
           * @return The videoUprightOrientation.
           */
          @java.lang.Override
          public int getVideoUprightOrientation() {
            return videoUprightOrientation_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 videoUprightOrientation = 139;</code>
           * @param value The videoUprightOrientation to set.
           * @return This builder for chaining.
           */
          public Builder setVideoUprightOrientation(int value) {
            bitField1_ |= 0x00000080;
            videoUprightOrientation_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 videoUprightOrientation = 139;</code>
           * @return This builder for chaining.
           */
          public Builder clearVideoUprightOrientation() {
            bitField1_ = (bitField1_ & ~0x00000080);
            videoUprightOrientation_ = 0;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.LayerCommon)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.LayerCommon)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<LayerCommon>
            PARSER = new com.google.protobuf.AbstractParser<LayerCommon>() {
          @java.lang.Override
          public LayerCommon parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new LayerCommon(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<LayerCommon> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<LayerCommon> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface KeyFrameOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.KeyFrame)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional float time = 101;</code>
         * @return Whether the time field is set.
         */
        boolean hasTime();
        /**
         * <code>optional float time = 101;</code>
         * @return The time.
         */
        float getTime();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float scale = 102;</code>
         * @return Whether the scale field is set.
         */
        boolean hasScale();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float scale = 102;</code>
         * @return The scale.
         */
        float getScale();

        /**
         * <code>optional float x = 103;</code>
         * @return Whether the x field is set.
         */
        boolean hasX();
        /**
         * <code>optional float x = 103;</code>
         * @return The x.
         */
        float getX();

        /**
         * <code>optional float y = 104;</code>
         * @return Whether the y field is set.
         */
        boolean hasY();
        /**
         * <code>optional float y = 104;</code>
         * @return The y.
         */
        float getY();

        /**
         * <code>optional float angle = 105;</code>
         * @return Whether the angle field is set.
         */
        boolean hasAngle();
        /**
         * <code>optional float angle = 105;</code>
         * @return The angle.
         */
        float getAngle();

        /**
         * <code>optional float alpha = 106;</code>
         * @return Whether the alpha field is set.
         */
        boolean hasAlpha();
        /**
         * <code>optional float alpha = 106;</code>
         * @return The alpha.
         */
        float getAlpha();

        /**
         * <code>optional float scalex = 107;</code>
         * @return Whether the scalex field is set.
         */
        boolean hasScalex();
        /**
         * <code>optional float scalex = 107;</code>
         * @return The scalex.
         */
        float getScalex();

        /**
         * <code>optional float scaley = 108;</code>
         * @return Whether the scaley field is set.
         */
        boolean hasScaley();
        /**
         * <code>optional float scaley = 108;</code>
         * @return The scaley.
         */
        float getScaley();
      }
      /**
       * Protobuf type {@code KMProto.KMProject.KeyFrame}
       */
      public static final class KeyFrame extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.KeyFrame)
          KeyFrameOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use KeyFrame.newBuilder() to construct.
        private KeyFrame(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private KeyFrame() {
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new KeyFrame();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private KeyFrame(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 813: {
                  bitField0_ |= 0x00000001;
                  time_ = input.readFloat();
                  break;
                }
                case 821: {
                  bitField0_ |= 0x00000002;
                  scale_ = input.readFloat();
                  break;
                }
                case 829: {
                  bitField0_ |= 0x00000004;
                  x_ = input.readFloat();
                  break;
                }
                case 837: {
                  bitField0_ |= 0x00000008;
                  y_ = input.readFloat();
                  break;
                }
                case 845: {
                  bitField0_ |= 0x00000010;
                  angle_ = input.readFloat();
                  break;
                }
                case 853: {
                  bitField0_ |= 0x00000020;
                  alpha_ = input.readFloat();
                  break;
                }
                case 861: {
                  bitField0_ |= 0x00000040;
                  scalex_ = input.readFloat();
                  break;
                }
                case 869: {
                  bitField0_ |= 0x00000080;
                  scaley_ = input.readFloat();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_KeyFrame_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_KeyFrame_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.Builder.class);
        }

        private int bitField0_;
        public static final int TIME_FIELD_NUMBER = 101;
        private float time_;
        /**
         * <code>optional float time = 101;</code>
         * @return Whether the time field is set.
         */
        @java.lang.Override
        public boolean hasTime() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional float time = 101;</code>
         * @return The time.
         */
        @java.lang.Override
        public float getTime() {
          return time_;
        }

        public static final int SCALE_FIELD_NUMBER = 102;
        private float scale_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float scale = 102;</code>
         * @return Whether the scale field is set.
         */
        @java.lang.Override
        public boolean hasScale() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float scale = 102;</code>
         * @return The scale.
         */
        @java.lang.Override
        public float getScale() {
          return scale_;
        }

        public static final int X_FIELD_NUMBER = 103;
        private float x_;
        /**
         * <code>optional float x = 103;</code>
         * @return Whether the x field is set.
         */
        @java.lang.Override
        public boolean hasX() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional float x = 103;</code>
         * @return The x.
         */
        @java.lang.Override
        public float getX() {
          return x_;
        }

        public static final int Y_FIELD_NUMBER = 104;
        private float y_;
        /**
         * <code>optional float y = 104;</code>
         * @return Whether the y field is set.
         */
        @java.lang.Override
        public boolean hasY() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional float y = 104;</code>
         * @return The y.
         */
        @java.lang.Override
        public float getY() {
          return y_;
        }

        public static final int ANGLE_FIELD_NUMBER = 105;
        private float angle_;
        /**
         * <code>optional float angle = 105;</code>
         * @return Whether the angle field is set.
         */
        @java.lang.Override
        public boolean hasAngle() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional float angle = 105;</code>
         * @return The angle.
         */
        @java.lang.Override
        public float getAngle() {
          return angle_;
        }

        public static final int ALPHA_FIELD_NUMBER = 106;
        private float alpha_;
        /**
         * <code>optional float alpha = 106;</code>
         * @return Whether the alpha field is set.
         */
        @java.lang.Override
        public boolean hasAlpha() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional float alpha = 106;</code>
         * @return The alpha.
         */
        @java.lang.Override
        public float getAlpha() {
          return alpha_;
        }

        public static final int SCALEX_FIELD_NUMBER = 107;
        private float scalex_;
        /**
         * <code>optional float scalex = 107;</code>
         * @return Whether the scalex field is set.
         */
        @java.lang.Override
        public boolean hasScalex() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <code>optional float scalex = 107;</code>
         * @return The scalex.
         */
        @java.lang.Override
        public float getScalex() {
          return scalex_;
        }

        public static final int SCALEY_FIELD_NUMBER = 108;
        private float scaley_;
        /**
         * <code>optional float scaley = 108;</code>
         * @return Whether the scaley field is set.
         */
        @java.lang.Override
        public boolean hasScaley() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <code>optional float scaley = 108;</code>
         * @return The scaley.
         */
        @java.lang.Override
        public float getScaley() {
          return scaley_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeFloat(101, time_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeFloat(102, scale_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeFloat(103, x_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeFloat(104, y_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            output.writeFloat(105, angle_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            output.writeFloat(106, alpha_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            output.writeFloat(107, scalex_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            output.writeFloat(108, scaley_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(101, time_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(102, scale_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(103, x_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(104, y_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(105, angle_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(106, alpha_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(107, scalex_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(108, scaley_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame) obj;

          if (hasTime() != other.hasTime()) return false;
          if (hasTime()) {
            if (java.lang.Float.floatToIntBits(getTime())
                != java.lang.Float.floatToIntBits(
                    other.getTime())) return false;
          }
          if (hasScale() != other.hasScale()) return false;
          if (hasScale()) {
            if (java.lang.Float.floatToIntBits(getScale())
                != java.lang.Float.floatToIntBits(
                    other.getScale())) return false;
          }
          if (hasX() != other.hasX()) return false;
          if (hasX()) {
            if (java.lang.Float.floatToIntBits(getX())
                != java.lang.Float.floatToIntBits(
                    other.getX())) return false;
          }
          if (hasY() != other.hasY()) return false;
          if (hasY()) {
            if (java.lang.Float.floatToIntBits(getY())
                != java.lang.Float.floatToIntBits(
                    other.getY())) return false;
          }
          if (hasAngle() != other.hasAngle()) return false;
          if (hasAngle()) {
            if (java.lang.Float.floatToIntBits(getAngle())
                != java.lang.Float.floatToIntBits(
                    other.getAngle())) return false;
          }
          if (hasAlpha() != other.hasAlpha()) return false;
          if (hasAlpha()) {
            if (java.lang.Float.floatToIntBits(getAlpha())
                != java.lang.Float.floatToIntBits(
                    other.getAlpha())) return false;
          }
          if (hasScalex() != other.hasScalex()) return false;
          if (hasScalex()) {
            if (java.lang.Float.floatToIntBits(getScalex())
                != java.lang.Float.floatToIntBits(
                    other.getScalex())) return false;
          }
          if (hasScaley() != other.hasScaley()) return false;
          if (hasScaley()) {
            if (java.lang.Float.floatToIntBits(getScaley())
                != java.lang.Float.floatToIntBits(
                    other.getScaley())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasTime()) {
            hash = (37 * hash) + TIME_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getTime());
          }
          if (hasScale()) {
            hash = (37 * hash) + SCALE_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getScale());
          }
          if (hasX()) {
            hash = (37 * hash) + X_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getX());
          }
          if (hasY()) {
            hash = (37 * hash) + Y_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getY());
          }
          if (hasAngle()) {
            hash = (37 * hash) + ANGLE_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getAngle());
          }
          if (hasAlpha()) {
            hash = (37 * hash) + ALPHA_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getAlpha());
          }
          if (hasScalex()) {
            hash = (37 * hash) + SCALEX_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getScalex());
          }
          if (hasScaley()) {
            hash = (37 * hash) + SCALEY_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getScaley());
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code KMProto.KMProject.KeyFrame}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.KeyFrame)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrameOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_KeyFrame_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_KeyFrame_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            time_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000001);
            scale_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000002);
            x_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000004);
            y_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000008);
            angle_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000010);
            alpha_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000020);
            scalex_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000040);
            scaley_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000080);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_KeyFrame_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.time_ = time_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.scale_ = scale_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.x_ = x_;
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.y_ = y_;
              to_bitField0_ |= 0x00000008;
            }
            if (((from_bitField0_ & 0x00000010) != 0)) {
              result.angle_ = angle_;
              to_bitField0_ |= 0x00000010;
            }
            if (((from_bitField0_ & 0x00000020) != 0)) {
              result.alpha_ = alpha_;
              to_bitField0_ |= 0x00000020;
            }
            if (((from_bitField0_ & 0x00000040) != 0)) {
              result.scalex_ = scalex_;
              to_bitField0_ |= 0x00000040;
            }
            if (((from_bitField0_ & 0x00000080) != 0)) {
              result.scaley_ = scaley_;
              to_bitField0_ |= 0x00000080;
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame.getDefaultInstance()) return this;
            if (other.hasTime()) {
              setTime(other.getTime());
            }
            if (other.hasScale()) {
              setScale(other.getScale());
            }
            if (other.hasX()) {
              setX(other.getX());
            }
            if (other.hasY()) {
              setY(other.getY());
            }
            if (other.hasAngle()) {
              setAngle(other.getAngle());
            }
            if (other.hasAlpha()) {
              setAlpha(other.getAlpha());
            }
            if (other.hasScalex()) {
              setScalex(other.getScalex());
            }
            if (other.hasScaley()) {
              setScaley(other.getScaley());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private float time_ ;
          /**
           * <code>optional float time = 101;</code>
           * @return Whether the time field is set.
           */
          @java.lang.Override
          public boolean hasTime() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional float time = 101;</code>
           * @return The time.
           */
          @java.lang.Override
          public float getTime() {
            return time_;
          }
          /**
           * <code>optional float time = 101;</code>
           * @param value The time to set.
           * @return This builder for chaining.
           */
          public Builder setTime(float value) {
            bitField0_ |= 0x00000001;
            time_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float time = 101;</code>
           * @return This builder for chaining.
           */
          public Builder clearTime() {
            bitField0_ = (bitField0_ & ~0x00000001);
            time_ = 0F;
            onChanged();
            return this;
          }

          private float scale_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float scale = 102;</code>
           * @return Whether the scale field is set.
           */
          @java.lang.Override
          public boolean hasScale() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float scale = 102;</code>
           * @return The scale.
           */
          @java.lang.Override
          public float getScale() {
            return scale_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float scale = 102;</code>
           * @param value The scale to set.
           * @return This builder for chaining.
           */
          public Builder setScale(float value) {
            bitField0_ |= 0x00000002;
            scale_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float scale = 102;</code>
           * @return This builder for chaining.
           */
          public Builder clearScale() {
            bitField0_ = (bitField0_ & ~0x00000002);
            scale_ = 0F;
            onChanged();
            return this;
          }

          private float x_ ;
          /**
           * <code>optional float x = 103;</code>
           * @return Whether the x field is set.
           */
          @java.lang.Override
          public boolean hasX() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <code>optional float x = 103;</code>
           * @return The x.
           */
          @java.lang.Override
          public float getX() {
            return x_;
          }
          /**
           * <code>optional float x = 103;</code>
           * @param value The x to set.
           * @return This builder for chaining.
           */
          public Builder setX(float value) {
            bitField0_ |= 0x00000004;
            x_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float x = 103;</code>
           * @return This builder for chaining.
           */
          public Builder clearX() {
            bitField0_ = (bitField0_ & ~0x00000004);
            x_ = 0F;
            onChanged();
            return this;
          }

          private float y_ ;
          /**
           * <code>optional float y = 104;</code>
           * @return Whether the y field is set.
           */
          @java.lang.Override
          public boolean hasY() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <code>optional float y = 104;</code>
           * @return The y.
           */
          @java.lang.Override
          public float getY() {
            return y_;
          }
          /**
           * <code>optional float y = 104;</code>
           * @param value The y to set.
           * @return This builder for chaining.
           */
          public Builder setY(float value) {
            bitField0_ |= 0x00000008;
            y_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float y = 104;</code>
           * @return This builder for chaining.
           */
          public Builder clearY() {
            bitField0_ = (bitField0_ & ~0x00000008);
            y_ = 0F;
            onChanged();
            return this;
          }

          private float angle_ ;
          /**
           * <code>optional float angle = 105;</code>
           * @return Whether the angle field is set.
           */
          @java.lang.Override
          public boolean hasAngle() {
            return ((bitField0_ & 0x00000010) != 0);
          }
          /**
           * <code>optional float angle = 105;</code>
           * @return The angle.
           */
          @java.lang.Override
          public float getAngle() {
            return angle_;
          }
          /**
           * <code>optional float angle = 105;</code>
           * @param value The angle to set.
           * @return This builder for chaining.
           */
          public Builder setAngle(float value) {
            bitField0_ |= 0x00000010;
            angle_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float angle = 105;</code>
           * @return This builder for chaining.
           */
          public Builder clearAngle() {
            bitField0_ = (bitField0_ & ~0x00000010);
            angle_ = 0F;
            onChanged();
            return this;
          }

          private float alpha_ ;
          /**
           * <code>optional float alpha = 106;</code>
           * @return Whether the alpha field is set.
           */
          @java.lang.Override
          public boolean hasAlpha() {
            return ((bitField0_ & 0x00000020) != 0);
          }
          /**
           * <code>optional float alpha = 106;</code>
           * @return The alpha.
           */
          @java.lang.Override
          public float getAlpha() {
            return alpha_;
          }
          /**
           * <code>optional float alpha = 106;</code>
           * @param value The alpha to set.
           * @return This builder for chaining.
           */
          public Builder setAlpha(float value) {
            bitField0_ |= 0x00000020;
            alpha_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float alpha = 106;</code>
           * @return This builder for chaining.
           */
          public Builder clearAlpha() {
            bitField0_ = (bitField0_ & ~0x00000020);
            alpha_ = 0F;
            onChanged();
            return this;
          }

          private float scalex_ ;
          /**
           * <code>optional float scalex = 107;</code>
           * @return Whether the scalex field is set.
           */
          @java.lang.Override
          public boolean hasScalex() {
            return ((bitField0_ & 0x00000040) != 0);
          }
          /**
           * <code>optional float scalex = 107;</code>
           * @return The scalex.
           */
          @java.lang.Override
          public float getScalex() {
            return scalex_;
          }
          /**
           * <code>optional float scalex = 107;</code>
           * @param value The scalex to set.
           * @return This builder for chaining.
           */
          public Builder setScalex(float value) {
            bitField0_ |= 0x00000040;
            scalex_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float scalex = 107;</code>
           * @return This builder for chaining.
           */
          public Builder clearScalex() {
            bitField0_ = (bitField0_ & ~0x00000040);
            scalex_ = 0F;
            onChanged();
            return this;
          }

          private float scaley_ ;
          /**
           * <code>optional float scaley = 108;</code>
           * @return Whether the scaley field is set.
           */
          @java.lang.Override
          public boolean hasScaley() {
            return ((bitField0_ & 0x00000080) != 0);
          }
          /**
           * <code>optional float scaley = 108;</code>
           * @return The scaley.
           */
          @java.lang.Override
          public float getScaley() {
            return scaley_;
          }
          /**
           * <code>optional float scaley = 108;</code>
           * @param value The scaley to set.
           * @return This builder for chaining.
           */
          public Builder setScaley(float value) {
            bitField0_ |= 0x00000080;
            scaley_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float scaley = 108;</code>
           * @return This builder for chaining.
           */
          public Builder clearScaley() {
            bitField0_ = (bitField0_ & ~0x00000080);
            scaley_ = 0F;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.KeyFrame)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.KeyFrame)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<KeyFrame>
            PARSER = new com.google.protobuf.AbstractParser<KeyFrame>() {
          @java.lang.Override
          public KeyFrame parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new KeyFrame(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<KeyFrame> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<KeyFrame> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.KeyFrame getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface TextLayerOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.TextLayer)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return Whether the layerCommon field is set.
         */
        boolean hasLayerCommon();
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return The layerCommon.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getLayerCommon();
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder getLayerCommonOrBuilder();

        /**
         * <code>optional string layer_text = 101;</code>
         * @return Whether the layerText field is set.
         */
        boolean hasLayerText();
        /**
         * <code>optional string layer_text = 101;</code>
         * @return The layerText.
         */
        java.lang.String getLayerText();
        /**
         * <code>optional string layer_text = 101;</code>
         * @return The bytes for layerText.
         */
        com.google.protobuf.ByteString
            getLayerTextBytes();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float text_size = 102;</code>
         * @return Whether the textSize field is set.
         */
        boolean hasTextSize();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float text_size = 102;</code>
         * @return The textSize.
         */
        float getTextSize();

        /**
         * <code>optional string font_id = 103;</code>
         * @return Whether the fontId field is set.
         */
        boolean hasFontId();
        /**
         * <code>optional string font_id = 103;</code>
         * @return The fontId.
         */
        java.lang.String getFontId();
        /**
         * <code>optional string font_id = 103;</code>
         * @return The bytes for fontId.
         */
        com.google.protobuf.ByteString
            getFontIdBytes();

        /**
         * <code>optional uint32 text_color = 104;</code>
         * @return Whether the textColor field is set.
         */
        boolean hasTextColor();
        /**
         * <code>optional uint32 text_color = 104;</code>
         * @return The textColor.
         */
        int getTextColor();

        /**
         * <code>optional bool enable_shadow = 105;</code>
         * @return Whether the enableShadow field is set.
         */
        boolean hasEnableShadow();
        /**
         * <code>optional bool enable_shadow = 105;</code>
         * @return The enableShadow.
         */
        boolean getEnableShadow();

        /**
         * <code>optional uint32 shadow_color = 106;</code>
         * @return Whether the shadowColor field is set.
         */
        boolean hasShadowColor();
        /**
         * <code>optional uint32 shadow_color = 106;</code>
         * @return The shadowColor.
         */
        int getShadowColor();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float shadow_radius = 107;</code>
         * @return Whether the shadowRadius field is set.
         */
        boolean hasShadowRadius();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float shadow_radius = 107;</code>
         * @return The shadowRadius.
         */
        float getShadowRadius();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float shadow_dx = 108;</code>
         * @return Whether the shadowDx field is set.
         */
        boolean hasShadowDx();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float shadow_dx = 108;</code>
         * @return The shadowDx.
         */
        float getShadowDx();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float shadow_dy = 109;</code>
         * @return Whether the shadowDy field is set.
         */
        boolean hasShadowDy();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float shadow_dy = 109;</code>
         * @return The shadowDy.
         */
        float getShadowDy();

        /**
         * <code>optional bool enable_glow = 110;</code>
         * @return Whether the enableGlow field is set.
         */
        boolean hasEnableGlow();
        /**
         * <code>optional bool enable_glow = 110;</code>
         * @return The enableGlow.
         */
        boolean getEnableGlow();

        /**
         * <code>optional uint32 glow_color = 111;</code>
         * @return Whether the glowColor field is set.
         */
        boolean hasGlowColor();
        /**
         * <code>optional uint32 glow_color = 111;</code>
         * @return The glowColor.
         */
        int getGlowColor();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float glow_radius = 112;</code>
         * @return Whether the glowRadius field is set.
         */
        boolean hasGlowRadius();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float glow_radius = 112;</code>
         * @return The glowRadius.
         */
        float getGlowRadius();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 glow_type = 113;</code>
         * @return Whether the glowType field is set.
         */
        boolean hasGlowType();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 glow_type = 113;</code>
         * @return The glowType.
         */
        int getGlowType();

        /**
         * <code>optional bool enable_outline = 114;</code>
         * @return Whether the enableOutline field is set.
         */
        boolean hasEnableOutline();
        /**
         * <code>optional bool enable_outline = 114;</code>
         * @return The enableOutline.
         */
        boolean getEnableOutline();

        /**
         * <code>optional uint32 outline_color = 115;</code>
         * @return Whether the outlineColor field is set.
         */
        boolean hasOutlineColor();
        /**
         * <code>optional uint32 outline_color = 115;</code>
         * @return The outlineColor.
         */
        int getOutlineColor();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float outline_width = 116;</code>
         * @return Whether the outlineWidth field is set.
         */
        boolean hasOutlineWidth();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float outline_width = 116;</code>
         * @return The outlineWidth.
         */
        float getOutlineWidth();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool enable_gradient = 117;</code>
         * @return Whether the enableGradient field is set.
         */
        boolean hasEnableGradient();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool enable_gradient = 117;</code>
         * @return The enableGradient.
         */
        boolean getEnableGradient();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated int32 gradient_colors = 118;</code>
         * @return A list containing the gradientColors.
         */
        java.util.List<java.lang.Integer> getGradientColorsList();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated int32 gradient_colors = 118;</code>
         * @return The count of gradientColors.
         */
        int getGradientColorsCount();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated int32 gradient_colors = 118;</code>
         * @param index The index of the element to return.
         * @return The gradientColors at the given index.
         */
        int getGradientColors(int index);

        /**
         * <code>optional bool enable_background = 119;</code>
         * @return Whether the enableBackground field is set.
         */
        boolean hasEnableBackground();
        /**
         * <code>optional bool enable_background = 119;</code>
         * @return The enableBackground.
         */
        boolean getEnableBackground();

        /**
         * <code>optional uint32 background_color = 120;</code>
         * @return Whether the backgroundColor field is set.
         */
        boolean hasBackgroundColor();
        /**
         * <code>optional uint32 background_color = 120;</code>
         * @return The backgroundColor.
         */
        int getBackgroundColor();

        /**
         * <code>optional bool extend_background = 121;</code>
         * @return Whether the extendBackground field is set.
         */
        boolean hasExtendBackground();
        /**
         * <code>optional bool extend_background = 121;</code>
         * @return The extendBackground.
         */
        boolean getExtendBackground();

        /**
         * <pre>
         * 0: center 1: left 2: right
         * </pre>
         *
         * <code>optional int32 text_align = 122;</code>
         * @return Whether the textAlign field is set.
         */
        boolean hasTextAlign();
        /**
         * <pre>
         * 0: center 1: left 2: right
         * </pre>
         *
         * <code>optional int32 text_align = 122;</code>
         * @return The textAlign.
         */
        int getTextAlign();

        /**
         * <code>optional float shadow_angle = 123;</code>
         * @return Whether the shadowAngle field is set.
         */
        boolean hasShadowAngle();
        /**
         * <code>optional float shadow_angle = 123;</code>
         * @return The shadowAngle.
         */
        float getShadowAngle();

        /**
         * <code>optional float shadow_distance = 124;</code>
         * @return Whether the shadowDistance field is set.
         */
        boolean hasShadowDistance();
        /**
         * <code>optional float shadow_distance = 124;</code>
         * @return The shadowDistance.
         */
        float getShadowDistance();

        /**
         * <code>optional float shadow_spread = 125;</code>
         * @return Whether the shadowSpread field is set.
         */
        boolean hasShadowSpread();
        /**
         * <code>optional float shadow_spread = 125;</code>
         * @return The shadowSpread.
         */
        float getShadowSpread();

        /**
         * <code>optional float shadow_size = 126;</code>
         * @return Whether the shadowSize field is set.
         */
        boolean hasShadowSize();
        /**
         * <code>optional float shadow_size = 126;</code>
         * @return The shadowSize.
         */
        float getShadowSize();

        /**
         * <code>optional float glow_spread = 127;</code>
         * @return Whether the glowSpread field is set.
         */
        boolean hasGlowSpread();
        /**
         * <code>optional float glow_spread = 127;</code>
         * @return The glowSpread.
         */
        float getGlowSpread();

        /**
         * <code>optional float glow_size = 128;</code>
         * @return Whether the glowSize field is set.
         */
        boolean hasGlowSize();
        /**
         * <code>optional float glow_size = 128;</code>
         * @return The glowSize.
         */
        float getGlowSize();

        /**
         * <pre>
         * 0: center 1: top 2: bottom
         * </pre>
         *
         * <code>optional int32 vertical_align = 129;</code>
         * @return Whether the verticalAlign field is set.
         */
        boolean hasVerticalAlign();
        /**
         * <pre>
         * 0: center 1: top 2: bottom
         * </pre>
         *
         * <code>optional int32 vertical_align = 129;</code>
         * @return The verticalAlign.
         */
        int getVerticalAlign();

        /**
         * <code>optional bool underline = 130;</code>
         * @return Whether the underline field is set.
         */
        boolean hasUnderline();
        /**
         * <code>optional bool underline = 130;</code>
         * @return The underline.
         */
        boolean getUnderline();

        /**
         * <code>optional float space_between_characters = 131;</code>
         * @return Whether the spaceBetweenCharacters field is set.
         */
        boolean hasSpaceBetweenCharacters();
        /**
         * <code>optional float space_between_characters = 131;</code>
         * @return The spaceBetweenCharacters.
         */
        float getSpaceBetweenCharacters();

        /**
         * <code>optional float space_between_lines = 132;</code>
         * @return Whether the spaceBetweenLines field is set.
         */
        boolean hasSpaceBetweenLines();
        /**
         * <code>optional float space_between_lines = 132;</code>
         * @return The spaceBetweenLines.
         */
        float getSpaceBetweenLines();

        /**
         * <code>optional bool strike_through = 133;</code>
         * @return Whether the strikeThrough field is set.
         */
        boolean hasStrikeThrough();
        /**
         * <code>optional bool strike_through = 133;</code>
         * @return The strikeThrough.
         */
        boolean getStrikeThrough();

        /**
         * <code>optional float outline_weight = 134;</code>
         * @return Whether the outlineWeight field is set.
         */
        boolean hasOutlineWeight();
        /**
         * <code>optional float outline_weight = 134;</code>
         * @return The outlineWeight.
         */
        float getOutlineWeight();
      }
      /**
       * Protobuf type {@code KMProto.KMProject.TextLayer}
       */
      public static final class TextLayer extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.TextLayer)
          TextLayerOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use TextLayer.newBuilder() to construct.
        private TextLayer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private TextLayer() {
          layerText_ = "";
          fontId_ = "";
          gradientColors_ = emptyIntList();
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new TextLayer();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private TextLayer(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          int mutable_bitField1_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 802: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000001) != 0)) {
                    subBuilder = layerCommon_.toBuilder();
                  }
                  layerCommon_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(layerCommon_);
                    layerCommon_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000001;
                  break;
                }
                case 810: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000002;
                  layerText_ = bs;
                  break;
                }
                case 821: {
                  bitField0_ |= 0x00000004;
                  textSize_ = input.readFloat();
                  break;
                }
                case 826: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000008;
                  fontId_ = bs;
                  break;
                }
                case 832: {
                  bitField0_ |= 0x00000010;
                  textColor_ = input.readUInt32();
                  break;
                }
                case 840: {
                  bitField0_ |= 0x00000020;
                  enableShadow_ = input.readBool();
                  break;
                }
                case 848: {
                  bitField0_ |= 0x00000040;
                  shadowColor_ = input.readUInt32();
                  break;
                }
                case 861: {
                  bitField0_ |= 0x00000080;
                  shadowRadius_ = input.readFloat();
                  break;
                }
                case 869: {
                  bitField0_ |= 0x00000100;
                  shadowDx_ = input.readFloat();
                  break;
                }
                case 877: {
                  bitField0_ |= 0x00000200;
                  shadowDy_ = input.readFloat();
                  break;
                }
                case 880: {
                  bitField0_ |= 0x00000400;
                  enableGlow_ = input.readBool();
                  break;
                }
                case 888: {
                  bitField0_ |= 0x00000800;
                  glowColor_ = input.readUInt32();
                  break;
                }
                case 901: {
                  bitField0_ |= 0x00001000;
                  glowRadius_ = input.readFloat();
                  break;
                }
                case 904: {
                  bitField0_ |= 0x00002000;
                  glowType_ = input.readInt32();
                  break;
                }
                case 912: {
                  bitField0_ |= 0x00004000;
                  enableOutline_ = input.readBool();
                  break;
                }
                case 920: {
                  bitField0_ |= 0x00008000;
                  outlineColor_ = input.readUInt32();
                  break;
                }
                case 933: {
                  bitField0_ |= 0x00010000;
                  outlineWidth_ = input.readFloat();
                  break;
                }
                case 936: {
                  bitField0_ |= 0x00020000;
                  enableGradient_ = input.readBool();
                  break;
                }
                case 944: {
                  if (!((mutable_bitField0_ & 0x00040000) != 0)) {
                    gradientColors_ = newIntList();
                    mutable_bitField0_ |= 0x00040000;
                  }
                  gradientColors_.addInt(input.readInt32());
                  break;
                }
                case 946: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00040000) != 0) && input.getBytesUntilLimit() > 0) {
                    gradientColors_ = newIntList();
                    mutable_bitField0_ |= 0x00040000;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    gradientColors_.addInt(input.readInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 952: {
                  bitField0_ |= 0x00040000;
                  enableBackground_ = input.readBool();
                  break;
                }
                case 960: {
                  bitField0_ |= 0x00080000;
                  backgroundColor_ = input.readUInt32();
                  break;
                }
                case 968: {
                  bitField0_ |= 0x00100000;
                  extendBackground_ = input.readBool();
                  break;
                }
                case 976: {
                  bitField0_ |= 0x00200000;
                  textAlign_ = input.readInt32();
                  break;
                }
                case 989: {
                  bitField0_ |= 0x00400000;
                  shadowAngle_ = input.readFloat();
                  break;
                }
                case 997: {
                  bitField0_ |= 0x00800000;
                  shadowDistance_ = input.readFloat();
                  break;
                }
                case 1005: {
                  bitField0_ |= 0x01000000;
                  shadowSpread_ = input.readFloat();
                  break;
                }
                case 1013: {
                  bitField0_ |= 0x02000000;
                  shadowSize_ = input.readFloat();
                  break;
                }
                case 1021: {
                  bitField0_ |= 0x04000000;
                  glowSpread_ = input.readFloat();
                  break;
                }
                case 1029: {
                  bitField0_ |= 0x08000000;
                  glowSize_ = input.readFloat();
                  break;
                }
                case 1032: {
                  bitField0_ |= 0x10000000;
                  verticalAlign_ = input.readInt32();
                  break;
                }
                case 1040: {
                  bitField0_ |= 0x20000000;
                  underline_ = input.readBool();
                  break;
                }
                case 1053: {
                  bitField0_ |= 0x40000000;
                  spaceBetweenCharacters_ = input.readFloat();
                  break;
                }
                case 1061: {
                  bitField0_ |= 0x80000000;
                  spaceBetweenLines_ = input.readFloat();
                  break;
                }
                case 1064: {
                  bitField1_ |= 0x00000001;
                  strikeThrough_ = input.readBool();
                  break;
                }
                case 1077: {
                  bitField1_ |= 0x00000002;
                  outlineWeight_ = input.readFloat();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00040000) != 0)) {
              gradientColors_.makeImmutable(); // C
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_TextLayer_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_TextLayer_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer.Builder.class);
        }

        private int bitField0_;
        private int bitField1_;
        public static final int LAYER_COMMON_FIELD_NUMBER = 100;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon layerCommon_;
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return Whether the layerCommon field is set.
         */
        @java.lang.Override
        public boolean hasLayerCommon() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return The layerCommon.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getLayerCommon() {
          return layerCommon_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
        }
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder getLayerCommonOrBuilder() {
          return layerCommon_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
        }

        public static final int LAYER_TEXT_FIELD_NUMBER = 101;
        private volatile java.lang.Object layerText_;
        /**
         * <code>optional string layer_text = 101;</code>
         * @return Whether the layerText field is set.
         */
        @java.lang.Override
        public boolean hasLayerText() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional string layer_text = 101;</code>
         * @return The layerText.
         */
        @java.lang.Override
        public java.lang.String getLayerText() {
          java.lang.Object ref = layerText_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              layerText_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string layer_text = 101;</code>
         * @return The bytes for layerText.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getLayerTextBytes() {
          java.lang.Object ref = layerText_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            layerText_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int TEXT_SIZE_FIELD_NUMBER = 102;
        private float textSize_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float text_size = 102;</code>
         * @return Whether the textSize field is set.
         */
        @java.lang.Override
        public boolean hasTextSize() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float text_size = 102;</code>
         * @return The textSize.
         */
        @java.lang.Override
        public float getTextSize() {
          return textSize_;
        }

        public static final int FONT_ID_FIELD_NUMBER = 103;
        private volatile java.lang.Object fontId_;
        /**
         * <code>optional string font_id = 103;</code>
         * @return Whether the fontId field is set.
         */
        @java.lang.Override
        public boolean hasFontId() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional string font_id = 103;</code>
         * @return The fontId.
         */
        @java.lang.Override
        public java.lang.String getFontId() {
          java.lang.Object ref = fontId_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              fontId_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string font_id = 103;</code>
         * @return The bytes for fontId.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getFontIdBytes() {
          java.lang.Object ref = fontId_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            fontId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int TEXT_COLOR_FIELD_NUMBER = 104;
        private int textColor_;
        /**
         * <code>optional uint32 text_color = 104;</code>
         * @return Whether the textColor field is set.
         */
        @java.lang.Override
        public boolean hasTextColor() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional uint32 text_color = 104;</code>
         * @return The textColor.
         */
        @java.lang.Override
        public int getTextColor() {
          return textColor_;
        }

        public static final int ENABLE_SHADOW_FIELD_NUMBER = 105;
        private boolean enableShadow_;
        /**
         * <code>optional bool enable_shadow = 105;</code>
         * @return Whether the enableShadow field is set.
         */
        @java.lang.Override
        public boolean hasEnableShadow() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional bool enable_shadow = 105;</code>
         * @return The enableShadow.
         */
        @java.lang.Override
        public boolean getEnableShadow() {
          return enableShadow_;
        }

        public static final int SHADOW_COLOR_FIELD_NUMBER = 106;
        private int shadowColor_;
        /**
         * <code>optional uint32 shadow_color = 106;</code>
         * @return Whether the shadowColor field is set.
         */
        @java.lang.Override
        public boolean hasShadowColor() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <code>optional uint32 shadow_color = 106;</code>
         * @return The shadowColor.
         */
        @java.lang.Override
        public int getShadowColor() {
          return shadowColor_;
        }

        public static final int SHADOW_RADIUS_FIELD_NUMBER = 107;
        private float shadowRadius_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float shadow_radius = 107;</code>
         * @return Whether the shadowRadius field is set.
         */
        @java.lang.Override
        public boolean hasShadowRadius() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float shadow_radius = 107;</code>
         * @return The shadowRadius.
         */
        @java.lang.Override
        public float getShadowRadius() {
          return shadowRadius_;
        }

        public static final int SHADOW_DX_FIELD_NUMBER = 108;
        private float shadowDx_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float shadow_dx = 108;</code>
         * @return Whether the shadowDx field is set.
         */
        @java.lang.Override
        public boolean hasShadowDx() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float shadow_dx = 108;</code>
         * @return The shadowDx.
         */
        @java.lang.Override
        public float getShadowDx() {
          return shadowDx_;
        }

        public static final int SHADOW_DY_FIELD_NUMBER = 109;
        private float shadowDy_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float shadow_dy = 109;</code>
         * @return Whether the shadowDy field is set.
         */
        @java.lang.Override
        public boolean hasShadowDy() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float shadow_dy = 109;</code>
         * @return The shadowDy.
         */
        @java.lang.Override
        public float getShadowDy() {
          return shadowDy_;
        }

        public static final int ENABLE_GLOW_FIELD_NUMBER = 110;
        private boolean enableGlow_;
        /**
         * <code>optional bool enable_glow = 110;</code>
         * @return Whether the enableGlow field is set.
         */
        @java.lang.Override
        public boolean hasEnableGlow() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <code>optional bool enable_glow = 110;</code>
         * @return The enableGlow.
         */
        @java.lang.Override
        public boolean getEnableGlow() {
          return enableGlow_;
        }

        public static final int GLOW_COLOR_FIELD_NUMBER = 111;
        private int glowColor_;
        /**
         * <code>optional uint32 glow_color = 111;</code>
         * @return Whether the glowColor field is set.
         */
        @java.lang.Override
        public boolean hasGlowColor() {
          return ((bitField0_ & 0x00000800) != 0);
        }
        /**
         * <code>optional uint32 glow_color = 111;</code>
         * @return The glowColor.
         */
        @java.lang.Override
        public int getGlowColor() {
          return glowColor_;
        }

        public static final int GLOW_RADIUS_FIELD_NUMBER = 112;
        private float glowRadius_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float glow_radius = 112;</code>
         * @return Whether the glowRadius field is set.
         */
        @java.lang.Override
        public boolean hasGlowRadius() {
          return ((bitField0_ & 0x00001000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float glow_radius = 112;</code>
         * @return The glowRadius.
         */
        @java.lang.Override
        public float getGlowRadius() {
          return glowRadius_;
        }

        public static final int GLOW_TYPE_FIELD_NUMBER = 113;
        private int glowType_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 glow_type = 113;</code>
         * @return Whether the glowType field is set.
         */
        @java.lang.Override
        public boolean hasGlowType() {
          return ((bitField0_ & 0x00002000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 glow_type = 113;</code>
         * @return The glowType.
         */
        @java.lang.Override
        public int getGlowType() {
          return glowType_;
        }

        public static final int ENABLE_OUTLINE_FIELD_NUMBER = 114;
        private boolean enableOutline_;
        /**
         * <code>optional bool enable_outline = 114;</code>
         * @return Whether the enableOutline field is set.
         */
        @java.lang.Override
        public boolean hasEnableOutline() {
          return ((bitField0_ & 0x00004000) != 0);
        }
        /**
         * <code>optional bool enable_outline = 114;</code>
         * @return The enableOutline.
         */
        @java.lang.Override
        public boolean getEnableOutline() {
          return enableOutline_;
        }

        public static final int OUTLINE_COLOR_FIELD_NUMBER = 115;
        private int outlineColor_;
        /**
         * <code>optional uint32 outline_color = 115;</code>
         * @return Whether the outlineColor field is set.
         */
        @java.lang.Override
        public boolean hasOutlineColor() {
          return ((bitField0_ & 0x00008000) != 0);
        }
        /**
         * <code>optional uint32 outline_color = 115;</code>
         * @return The outlineColor.
         */
        @java.lang.Override
        public int getOutlineColor() {
          return outlineColor_;
        }

        public static final int OUTLINE_WIDTH_FIELD_NUMBER = 116;
        private float outlineWidth_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float outline_width = 116;</code>
         * @return Whether the outlineWidth field is set.
         */
        @java.lang.Override
        public boolean hasOutlineWidth() {
          return ((bitField0_ & 0x00010000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float outline_width = 116;</code>
         * @return The outlineWidth.
         */
        @java.lang.Override
        public float getOutlineWidth() {
          return outlineWidth_;
        }

        public static final int ENABLE_GRADIENT_FIELD_NUMBER = 117;
        private boolean enableGradient_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool enable_gradient = 117;</code>
         * @return Whether the enableGradient field is set.
         */
        @java.lang.Override
        public boolean hasEnableGradient() {
          return ((bitField0_ & 0x00020000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool enable_gradient = 117;</code>
         * @return The enableGradient.
         */
        @java.lang.Override
        public boolean getEnableGradient() {
          return enableGradient_;
        }

        public static final int GRADIENT_COLORS_FIELD_NUMBER = 118;
        private com.google.protobuf.Internal.IntList gradientColors_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated int32 gradient_colors = 118;</code>
         * @return A list containing the gradientColors.
         */
        @java.lang.Override
        public java.util.List<java.lang.Integer>
            getGradientColorsList() {
          return gradientColors_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated int32 gradient_colors = 118;</code>
         * @return The count of gradientColors.
         */
        public int getGradientColorsCount() {
          return gradientColors_.size();
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated int32 gradient_colors = 118;</code>
         * @param index The index of the element to return.
         * @return The gradientColors at the given index.
         */
        public int getGradientColors(int index) {
          return gradientColors_.getInt(index);
        }

        public static final int ENABLE_BACKGROUND_FIELD_NUMBER = 119;
        private boolean enableBackground_;
        /**
         * <code>optional bool enable_background = 119;</code>
         * @return Whether the enableBackground field is set.
         */
        @java.lang.Override
        public boolean hasEnableBackground() {
          return ((bitField0_ & 0x00040000) != 0);
        }
        /**
         * <code>optional bool enable_background = 119;</code>
         * @return The enableBackground.
         */
        @java.lang.Override
        public boolean getEnableBackground() {
          return enableBackground_;
        }

        public static final int BACKGROUND_COLOR_FIELD_NUMBER = 120;
        private int backgroundColor_;
        /**
         * <code>optional uint32 background_color = 120;</code>
         * @return Whether the backgroundColor field is set.
         */
        @java.lang.Override
        public boolean hasBackgroundColor() {
          return ((bitField0_ & 0x00080000) != 0);
        }
        /**
         * <code>optional uint32 background_color = 120;</code>
         * @return The backgroundColor.
         */
        @java.lang.Override
        public int getBackgroundColor() {
          return backgroundColor_;
        }

        public static final int EXTEND_BACKGROUND_FIELD_NUMBER = 121;
        private boolean extendBackground_;
        /**
         * <code>optional bool extend_background = 121;</code>
         * @return Whether the extendBackground field is set.
         */
        @java.lang.Override
        public boolean hasExtendBackground() {
          return ((bitField0_ & 0x00100000) != 0);
        }
        /**
         * <code>optional bool extend_background = 121;</code>
         * @return The extendBackground.
         */
        @java.lang.Override
        public boolean getExtendBackground() {
          return extendBackground_;
        }

        public static final int TEXT_ALIGN_FIELD_NUMBER = 122;
        private int textAlign_;
        /**
         * <pre>
         * 0: center 1: left 2: right
         * </pre>
         *
         * <code>optional int32 text_align = 122;</code>
         * @return Whether the textAlign field is set.
         */
        @java.lang.Override
        public boolean hasTextAlign() {
          return ((bitField0_ & 0x00200000) != 0);
        }
        /**
         * <pre>
         * 0: center 1: left 2: right
         * </pre>
         *
         * <code>optional int32 text_align = 122;</code>
         * @return The textAlign.
         */
        @java.lang.Override
        public int getTextAlign() {
          return textAlign_;
        }

        public static final int SHADOW_ANGLE_FIELD_NUMBER = 123;
        private float shadowAngle_;
        /**
         * <code>optional float shadow_angle = 123;</code>
         * @return Whether the shadowAngle field is set.
         */
        @java.lang.Override
        public boolean hasShadowAngle() {
          return ((bitField0_ & 0x00400000) != 0);
        }
        /**
         * <code>optional float shadow_angle = 123;</code>
         * @return The shadowAngle.
         */
        @java.lang.Override
        public float getShadowAngle() {
          return shadowAngle_;
        }

        public static final int SHADOW_DISTANCE_FIELD_NUMBER = 124;
        private float shadowDistance_;
        /**
         * <code>optional float shadow_distance = 124;</code>
         * @return Whether the shadowDistance field is set.
         */
        @java.lang.Override
        public boolean hasShadowDistance() {
          return ((bitField0_ & 0x00800000) != 0);
        }
        /**
         * <code>optional float shadow_distance = 124;</code>
         * @return The shadowDistance.
         */
        @java.lang.Override
        public float getShadowDistance() {
          return shadowDistance_;
        }

        public static final int SHADOW_SPREAD_FIELD_NUMBER = 125;
        private float shadowSpread_;
        /**
         * <code>optional float shadow_spread = 125;</code>
         * @return Whether the shadowSpread field is set.
         */
        @java.lang.Override
        public boolean hasShadowSpread() {
          return ((bitField0_ & 0x01000000) != 0);
        }
        /**
         * <code>optional float shadow_spread = 125;</code>
         * @return The shadowSpread.
         */
        @java.lang.Override
        public float getShadowSpread() {
          return shadowSpread_;
        }

        public static final int SHADOW_SIZE_FIELD_NUMBER = 126;
        private float shadowSize_;
        /**
         * <code>optional float shadow_size = 126;</code>
         * @return Whether the shadowSize field is set.
         */
        @java.lang.Override
        public boolean hasShadowSize() {
          return ((bitField0_ & 0x02000000) != 0);
        }
        /**
         * <code>optional float shadow_size = 126;</code>
         * @return The shadowSize.
         */
        @java.lang.Override
        public float getShadowSize() {
          return shadowSize_;
        }

        public static final int GLOW_SPREAD_FIELD_NUMBER = 127;
        private float glowSpread_;
        /**
         * <code>optional float glow_spread = 127;</code>
         * @return Whether the glowSpread field is set.
         */
        @java.lang.Override
        public boolean hasGlowSpread() {
          return ((bitField0_ & 0x04000000) != 0);
        }
        /**
         * <code>optional float glow_spread = 127;</code>
         * @return The glowSpread.
         */
        @java.lang.Override
        public float getGlowSpread() {
          return glowSpread_;
        }

        public static final int GLOW_SIZE_FIELD_NUMBER = 128;
        private float glowSize_;
        /**
         * <code>optional float glow_size = 128;</code>
         * @return Whether the glowSize field is set.
         */
        @java.lang.Override
        public boolean hasGlowSize() {
          return ((bitField0_ & 0x08000000) != 0);
        }
        /**
         * <code>optional float glow_size = 128;</code>
         * @return The glowSize.
         */
        @java.lang.Override
        public float getGlowSize() {
          return glowSize_;
        }

        public static final int VERTICAL_ALIGN_FIELD_NUMBER = 129;
        private int verticalAlign_;
        /**
         * <pre>
         * 0: center 1: top 2: bottom
         * </pre>
         *
         * <code>optional int32 vertical_align = 129;</code>
         * @return Whether the verticalAlign field is set.
         */
        @java.lang.Override
        public boolean hasVerticalAlign() {
          return ((bitField0_ & 0x10000000) != 0);
        }
        /**
         * <pre>
         * 0: center 1: top 2: bottom
         * </pre>
         *
         * <code>optional int32 vertical_align = 129;</code>
         * @return The verticalAlign.
         */
        @java.lang.Override
        public int getVerticalAlign() {
          return verticalAlign_;
        }

        public static final int UNDERLINE_FIELD_NUMBER = 130;
        private boolean underline_;
        /**
         * <code>optional bool underline = 130;</code>
         * @return Whether the underline field is set.
         */
        @java.lang.Override
        public boolean hasUnderline() {
          return ((bitField0_ & 0x20000000) != 0);
        }
        /**
         * <code>optional bool underline = 130;</code>
         * @return The underline.
         */
        @java.lang.Override
        public boolean getUnderline() {
          return underline_;
        }

        public static final int SPACE_BETWEEN_CHARACTERS_FIELD_NUMBER = 131;
        private float spaceBetweenCharacters_;
        /**
         * <code>optional float space_between_characters = 131;</code>
         * @return Whether the spaceBetweenCharacters field is set.
         */
        @java.lang.Override
        public boolean hasSpaceBetweenCharacters() {
          return ((bitField0_ & 0x40000000) != 0);
        }
        /**
         * <code>optional float space_between_characters = 131;</code>
         * @return The spaceBetweenCharacters.
         */
        @java.lang.Override
        public float getSpaceBetweenCharacters() {
          return spaceBetweenCharacters_;
        }

        public static final int SPACE_BETWEEN_LINES_FIELD_NUMBER = 132;
        private float spaceBetweenLines_;
        /**
         * <code>optional float space_between_lines = 132;</code>
         * @return Whether the spaceBetweenLines field is set.
         */
        @java.lang.Override
        public boolean hasSpaceBetweenLines() {
          return ((bitField0_ & 0x80000000) != 0);
        }
        /**
         * <code>optional float space_between_lines = 132;</code>
         * @return The spaceBetweenLines.
         */
        @java.lang.Override
        public float getSpaceBetweenLines() {
          return spaceBetweenLines_;
        }

        public static final int STRIKE_THROUGH_FIELD_NUMBER = 133;
        private boolean strikeThrough_;
        /**
         * <code>optional bool strike_through = 133;</code>
         * @return Whether the strikeThrough field is set.
         */
        @java.lang.Override
        public boolean hasStrikeThrough() {
          return ((bitField1_ & 0x00000001) != 0);
        }
        /**
         * <code>optional bool strike_through = 133;</code>
         * @return The strikeThrough.
         */
        @java.lang.Override
        public boolean getStrikeThrough() {
          return strikeThrough_;
        }

        public static final int OUTLINE_WEIGHT_FIELD_NUMBER = 134;
        private float outlineWeight_;
        /**
         * <code>optional float outline_weight = 134;</code>
         * @return Whether the outlineWeight field is set.
         */
        @java.lang.Override
        public boolean hasOutlineWeight() {
          return ((bitField1_ & 0x00000002) != 0);
        }
        /**
         * <code>optional float outline_weight = 134;</code>
         * @return The outlineWeight.
         */
        @java.lang.Override
        public float getOutlineWeight() {
          return outlineWeight_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeMessage(100, getLayerCommon());
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 101, layerText_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeFloat(102, textSize_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 103, fontId_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            output.writeUInt32(104, textColor_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            output.writeBool(105, enableShadow_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            output.writeUInt32(106, shadowColor_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            output.writeFloat(107, shadowRadius_);
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            output.writeFloat(108, shadowDx_);
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            output.writeFloat(109, shadowDy_);
          }
          if (((bitField0_ & 0x00000400) != 0)) {
            output.writeBool(110, enableGlow_);
          }
          if (((bitField0_ & 0x00000800) != 0)) {
            output.writeUInt32(111, glowColor_);
          }
          if (((bitField0_ & 0x00001000) != 0)) {
            output.writeFloat(112, glowRadius_);
          }
          if (((bitField0_ & 0x00002000) != 0)) {
            output.writeInt32(113, glowType_);
          }
          if (((bitField0_ & 0x00004000) != 0)) {
            output.writeBool(114, enableOutline_);
          }
          if (((bitField0_ & 0x00008000) != 0)) {
            output.writeUInt32(115, outlineColor_);
          }
          if (((bitField0_ & 0x00010000) != 0)) {
            output.writeFloat(116, outlineWidth_);
          }
          if (((bitField0_ & 0x00020000) != 0)) {
            output.writeBool(117, enableGradient_);
          }
          for (int i = 0; i < gradientColors_.size(); i++) {
            output.writeInt32(118, gradientColors_.getInt(i));
          }
          if (((bitField0_ & 0x00040000) != 0)) {
            output.writeBool(119, enableBackground_);
          }
          if (((bitField0_ & 0x00080000) != 0)) {
            output.writeUInt32(120, backgroundColor_);
          }
          if (((bitField0_ & 0x00100000) != 0)) {
            output.writeBool(121, extendBackground_);
          }
          if (((bitField0_ & 0x00200000) != 0)) {
            output.writeInt32(122, textAlign_);
          }
          if (((bitField0_ & 0x00400000) != 0)) {
            output.writeFloat(123, shadowAngle_);
          }
          if (((bitField0_ & 0x00800000) != 0)) {
            output.writeFloat(124, shadowDistance_);
          }
          if (((bitField0_ & 0x01000000) != 0)) {
            output.writeFloat(125, shadowSpread_);
          }
          if (((bitField0_ & 0x02000000) != 0)) {
            output.writeFloat(126, shadowSize_);
          }
          if (((bitField0_ & 0x04000000) != 0)) {
            output.writeFloat(127, glowSpread_);
          }
          if (((bitField0_ & 0x08000000) != 0)) {
            output.writeFloat(128, glowSize_);
          }
          if (((bitField0_ & 0x10000000) != 0)) {
            output.writeInt32(129, verticalAlign_);
          }
          if (((bitField0_ & 0x20000000) != 0)) {
            output.writeBool(130, underline_);
          }
          if (((bitField0_ & 0x40000000) != 0)) {
            output.writeFloat(131, spaceBetweenCharacters_);
          }
          if (((bitField0_ & 0x80000000) != 0)) {
            output.writeFloat(132, spaceBetweenLines_);
          }
          if (((bitField1_ & 0x00000001) != 0)) {
            output.writeBool(133, strikeThrough_);
          }
          if (((bitField1_ & 0x00000002) != 0)) {
            output.writeFloat(134, outlineWeight_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(100, getLayerCommon());
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(101, layerText_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(102, textSize_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(103, fontId_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(104, textColor_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(105, enableShadow_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(106, shadowColor_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(107, shadowRadius_);
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(108, shadowDx_);
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(109, shadowDy_);
          }
          if (((bitField0_ & 0x00000400) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(110, enableGlow_);
          }
          if (((bitField0_ & 0x00000800) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(111, glowColor_);
          }
          if (((bitField0_ & 0x00001000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(112, glowRadius_);
          }
          if (((bitField0_ & 0x00002000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(113, glowType_);
          }
          if (((bitField0_ & 0x00004000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(114, enableOutline_);
          }
          if (((bitField0_ & 0x00008000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(115, outlineColor_);
          }
          if (((bitField0_ & 0x00010000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(116, outlineWidth_);
          }
          if (((bitField0_ & 0x00020000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(117, enableGradient_);
          }
          {
            int dataSize = 0;
            for (int i = 0; i < gradientColors_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(gradientColors_.getInt(i));
            }
            size += dataSize;
            size += 2 * getGradientColorsList().size();
          }
          if (((bitField0_ & 0x00040000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(119, enableBackground_);
          }
          if (((bitField0_ & 0x00080000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(120, backgroundColor_);
          }
          if (((bitField0_ & 0x00100000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(121, extendBackground_);
          }
          if (((bitField0_ & 0x00200000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(122, textAlign_);
          }
          if (((bitField0_ & 0x00400000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(123, shadowAngle_);
          }
          if (((bitField0_ & 0x00800000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(124, shadowDistance_);
          }
          if (((bitField0_ & 0x01000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(125, shadowSpread_);
          }
          if (((bitField0_ & 0x02000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(126, shadowSize_);
          }
          if (((bitField0_ & 0x04000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(127, glowSpread_);
          }
          if (((bitField0_ & 0x08000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(128, glowSize_);
          }
          if (((bitField0_ & 0x10000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(129, verticalAlign_);
          }
          if (((bitField0_ & 0x20000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(130, underline_);
          }
          if (((bitField0_ & 0x40000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(131, spaceBetweenCharacters_);
          }
          if (((bitField0_ & 0x80000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(132, spaceBetweenLines_);
          }
          if (((bitField1_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(133, strikeThrough_);
          }
          if (((bitField1_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(134, outlineWeight_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer) obj;

          if (hasLayerCommon() != other.hasLayerCommon()) return false;
          if (hasLayerCommon()) {
            if (!getLayerCommon()
                .equals(other.getLayerCommon())) return false;
          }
          if (hasLayerText() != other.hasLayerText()) return false;
          if (hasLayerText()) {
            if (!getLayerText()
                .equals(other.getLayerText())) return false;
          }
          if (hasTextSize() != other.hasTextSize()) return false;
          if (hasTextSize()) {
            if (java.lang.Float.floatToIntBits(getTextSize())
                != java.lang.Float.floatToIntBits(
                    other.getTextSize())) return false;
          }
          if (hasFontId() != other.hasFontId()) return false;
          if (hasFontId()) {
            if (!getFontId()
                .equals(other.getFontId())) return false;
          }
          if (hasTextColor() != other.hasTextColor()) return false;
          if (hasTextColor()) {
            if (getTextColor()
                != other.getTextColor()) return false;
          }
          if (hasEnableShadow() != other.hasEnableShadow()) return false;
          if (hasEnableShadow()) {
            if (getEnableShadow()
                != other.getEnableShadow()) return false;
          }
          if (hasShadowColor() != other.hasShadowColor()) return false;
          if (hasShadowColor()) {
            if (getShadowColor()
                != other.getShadowColor()) return false;
          }
          if (hasShadowRadius() != other.hasShadowRadius()) return false;
          if (hasShadowRadius()) {
            if (java.lang.Float.floatToIntBits(getShadowRadius())
                != java.lang.Float.floatToIntBits(
                    other.getShadowRadius())) return false;
          }
          if (hasShadowDx() != other.hasShadowDx()) return false;
          if (hasShadowDx()) {
            if (java.lang.Float.floatToIntBits(getShadowDx())
                != java.lang.Float.floatToIntBits(
                    other.getShadowDx())) return false;
          }
          if (hasShadowDy() != other.hasShadowDy()) return false;
          if (hasShadowDy()) {
            if (java.lang.Float.floatToIntBits(getShadowDy())
                != java.lang.Float.floatToIntBits(
                    other.getShadowDy())) return false;
          }
          if (hasEnableGlow() != other.hasEnableGlow()) return false;
          if (hasEnableGlow()) {
            if (getEnableGlow()
                != other.getEnableGlow()) return false;
          }
          if (hasGlowColor() != other.hasGlowColor()) return false;
          if (hasGlowColor()) {
            if (getGlowColor()
                != other.getGlowColor()) return false;
          }
          if (hasGlowRadius() != other.hasGlowRadius()) return false;
          if (hasGlowRadius()) {
            if (java.lang.Float.floatToIntBits(getGlowRadius())
                != java.lang.Float.floatToIntBits(
                    other.getGlowRadius())) return false;
          }
          if (hasGlowType() != other.hasGlowType()) return false;
          if (hasGlowType()) {
            if (getGlowType()
                != other.getGlowType()) return false;
          }
          if (hasEnableOutline() != other.hasEnableOutline()) return false;
          if (hasEnableOutline()) {
            if (getEnableOutline()
                != other.getEnableOutline()) return false;
          }
          if (hasOutlineColor() != other.hasOutlineColor()) return false;
          if (hasOutlineColor()) {
            if (getOutlineColor()
                != other.getOutlineColor()) return false;
          }
          if (hasOutlineWidth() != other.hasOutlineWidth()) return false;
          if (hasOutlineWidth()) {
            if (java.lang.Float.floatToIntBits(getOutlineWidth())
                != java.lang.Float.floatToIntBits(
                    other.getOutlineWidth())) return false;
          }
          if (hasEnableGradient() != other.hasEnableGradient()) return false;
          if (hasEnableGradient()) {
            if (getEnableGradient()
                != other.getEnableGradient()) return false;
          }
          if (!getGradientColorsList()
              .equals(other.getGradientColorsList())) return false;
          if (hasEnableBackground() != other.hasEnableBackground()) return false;
          if (hasEnableBackground()) {
            if (getEnableBackground()
                != other.getEnableBackground()) return false;
          }
          if (hasBackgroundColor() != other.hasBackgroundColor()) return false;
          if (hasBackgroundColor()) {
            if (getBackgroundColor()
                != other.getBackgroundColor()) return false;
          }
          if (hasExtendBackground() != other.hasExtendBackground()) return false;
          if (hasExtendBackground()) {
            if (getExtendBackground()
                != other.getExtendBackground()) return false;
          }
          if (hasTextAlign() != other.hasTextAlign()) return false;
          if (hasTextAlign()) {
            if (getTextAlign()
                != other.getTextAlign()) return false;
          }
          if (hasShadowAngle() != other.hasShadowAngle()) return false;
          if (hasShadowAngle()) {
            if (java.lang.Float.floatToIntBits(getShadowAngle())
                != java.lang.Float.floatToIntBits(
                    other.getShadowAngle())) return false;
          }
          if (hasShadowDistance() != other.hasShadowDistance()) return false;
          if (hasShadowDistance()) {
            if (java.lang.Float.floatToIntBits(getShadowDistance())
                != java.lang.Float.floatToIntBits(
                    other.getShadowDistance())) return false;
          }
          if (hasShadowSpread() != other.hasShadowSpread()) return false;
          if (hasShadowSpread()) {
            if (java.lang.Float.floatToIntBits(getShadowSpread())
                != java.lang.Float.floatToIntBits(
                    other.getShadowSpread())) return false;
          }
          if (hasShadowSize() != other.hasShadowSize()) return false;
          if (hasShadowSize()) {
            if (java.lang.Float.floatToIntBits(getShadowSize())
                != java.lang.Float.floatToIntBits(
                    other.getShadowSize())) return false;
          }
          if (hasGlowSpread() != other.hasGlowSpread()) return false;
          if (hasGlowSpread()) {
            if (java.lang.Float.floatToIntBits(getGlowSpread())
                != java.lang.Float.floatToIntBits(
                    other.getGlowSpread())) return false;
          }
          if (hasGlowSize() != other.hasGlowSize()) return false;
          if (hasGlowSize()) {
            if (java.lang.Float.floatToIntBits(getGlowSize())
                != java.lang.Float.floatToIntBits(
                    other.getGlowSize())) return false;
          }
          if (hasVerticalAlign() != other.hasVerticalAlign()) return false;
          if (hasVerticalAlign()) {
            if (getVerticalAlign()
                != other.getVerticalAlign()) return false;
          }
          if (hasUnderline() != other.hasUnderline()) return false;
          if (hasUnderline()) {
            if (getUnderline()
                != other.getUnderline()) return false;
          }
          if (hasSpaceBetweenCharacters() != other.hasSpaceBetweenCharacters()) return false;
          if (hasSpaceBetweenCharacters()) {
            if (java.lang.Float.floatToIntBits(getSpaceBetweenCharacters())
                != java.lang.Float.floatToIntBits(
                    other.getSpaceBetweenCharacters())) return false;
          }
          if (hasSpaceBetweenLines() != other.hasSpaceBetweenLines()) return false;
          if (hasSpaceBetweenLines()) {
            if (java.lang.Float.floatToIntBits(getSpaceBetweenLines())
                != java.lang.Float.floatToIntBits(
                    other.getSpaceBetweenLines())) return false;
          }
          if (hasStrikeThrough() != other.hasStrikeThrough()) return false;
          if (hasStrikeThrough()) {
            if (getStrikeThrough()
                != other.getStrikeThrough()) return false;
          }
          if (hasOutlineWeight() != other.hasOutlineWeight()) return false;
          if (hasOutlineWeight()) {
            if (java.lang.Float.floatToIntBits(getOutlineWeight())
                != java.lang.Float.floatToIntBits(
                    other.getOutlineWeight())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasLayerCommon()) {
            hash = (37 * hash) + LAYER_COMMON_FIELD_NUMBER;
            hash = (53 * hash) + getLayerCommon().hashCode();
          }
          if (hasLayerText()) {
            hash = (37 * hash) + LAYER_TEXT_FIELD_NUMBER;
            hash = (53 * hash) + getLayerText().hashCode();
          }
          if (hasTextSize()) {
            hash = (37 * hash) + TEXT_SIZE_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getTextSize());
          }
          if (hasFontId()) {
            hash = (37 * hash) + FONT_ID_FIELD_NUMBER;
            hash = (53 * hash) + getFontId().hashCode();
          }
          if (hasTextColor()) {
            hash = (37 * hash) + TEXT_COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getTextColor();
          }
          if (hasEnableShadow()) {
            hash = (37 * hash) + ENABLE_SHADOW_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getEnableShadow());
          }
          if (hasShadowColor()) {
            hash = (37 * hash) + SHADOW_COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getShadowColor();
          }
          if (hasShadowRadius()) {
            hash = (37 * hash) + SHADOW_RADIUS_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getShadowRadius());
          }
          if (hasShadowDx()) {
            hash = (37 * hash) + SHADOW_DX_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getShadowDx());
          }
          if (hasShadowDy()) {
            hash = (37 * hash) + SHADOW_DY_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getShadowDy());
          }
          if (hasEnableGlow()) {
            hash = (37 * hash) + ENABLE_GLOW_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getEnableGlow());
          }
          if (hasGlowColor()) {
            hash = (37 * hash) + GLOW_COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getGlowColor();
          }
          if (hasGlowRadius()) {
            hash = (37 * hash) + GLOW_RADIUS_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGlowRadius());
          }
          if (hasGlowType()) {
            hash = (37 * hash) + GLOW_TYPE_FIELD_NUMBER;
            hash = (53 * hash) + getGlowType();
          }
          if (hasEnableOutline()) {
            hash = (37 * hash) + ENABLE_OUTLINE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getEnableOutline());
          }
          if (hasOutlineColor()) {
            hash = (37 * hash) + OUTLINE_COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getOutlineColor();
          }
          if (hasOutlineWidth()) {
            hash = (37 * hash) + OUTLINE_WIDTH_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getOutlineWidth());
          }
          if (hasEnableGradient()) {
            hash = (37 * hash) + ENABLE_GRADIENT_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getEnableGradient());
          }
          if (getGradientColorsCount() > 0) {
            hash = (37 * hash) + GRADIENT_COLORS_FIELD_NUMBER;
            hash = (53 * hash) + getGradientColorsList().hashCode();
          }
          if (hasEnableBackground()) {
            hash = (37 * hash) + ENABLE_BACKGROUND_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getEnableBackground());
          }
          if (hasBackgroundColor()) {
            hash = (37 * hash) + BACKGROUND_COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getBackgroundColor();
          }
          if (hasExtendBackground()) {
            hash = (37 * hash) + EXTEND_BACKGROUND_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getExtendBackground());
          }
          if (hasTextAlign()) {
            hash = (37 * hash) + TEXT_ALIGN_FIELD_NUMBER;
            hash = (53 * hash) + getTextAlign();
          }
          if (hasShadowAngle()) {
            hash = (37 * hash) + SHADOW_ANGLE_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getShadowAngle());
          }
          if (hasShadowDistance()) {
            hash = (37 * hash) + SHADOW_DISTANCE_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getShadowDistance());
          }
          if (hasShadowSpread()) {
            hash = (37 * hash) + SHADOW_SPREAD_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getShadowSpread());
          }
          if (hasShadowSize()) {
            hash = (37 * hash) + SHADOW_SIZE_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getShadowSize());
          }
          if (hasGlowSpread()) {
            hash = (37 * hash) + GLOW_SPREAD_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGlowSpread());
          }
          if (hasGlowSize()) {
            hash = (37 * hash) + GLOW_SIZE_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGlowSize());
          }
          if (hasVerticalAlign()) {
            hash = (37 * hash) + VERTICAL_ALIGN_FIELD_NUMBER;
            hash = (53 * hash) + getVerticalAlign();
          }
          if (hasUnderline()) {
            hash = (37 * hash) + UNDERLINE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getUnderline());
          }
          if (hasSpaceBetweenCharacters()) {
            hash = (37 * hash) + SPACE_BETWEEN_CHARACTERS_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getSpaceBetweenCharacters());
          }
          if (hasSpaceBetweenLines()) {
            hash = (37 * hash) + SPACE_BETWEEN_LINES_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getSpaceBetweenLines());
          }
          if (hasStrikeThrough()) {
            hash = (37 * hash) + STRIKE_THROUGH_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getStrikeThrough());
          }
          if (hasOutlineWeight()) {
            hash = (37 * hash) + OUTLINE_WEIGHT_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getOutlineWeight());
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code KMProto.KMProject.TextLayer}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.TextLayer)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayerOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_TextLayer_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_TextLayer_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
              getLayerCommonFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            if (layerCommonBuilder_ == null) {
              layerCommon_ = null;
            } else {
              layerCommonBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000001);
            layerText_ = "";
            bitField0_ = (bitField0_ & ~0x00000002);
            textSize_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000004);
            fontId_ = "";
            bitField0_ = (bitField0_ & ~0x00000008);
            textColor_ = 0;
            bitField0_ = (bitField0_ & ~0x00000010);
            enableShadow_ = false;
            bitField0_ = (bitField0_ & ~0x00000020);
            shadowColor_ = 0;
            bitField0_ = (bitField0_ & ~0x00000040);
            shadowRadius_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000080);
            shadowDx_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000100);
            shadowDy_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000200);
            enableGlow_ = false;
            bitField0_ = (bitField0_ & ~0x00000400);
            glowColor_ = 0;
            bitField0_ = (bitField0_ & ~0x00000800);
            glowRadius_ = 0F;
            bitField0_ = (bitField0_ & ~0x00001000);
            glowType_ = 0;
            bitField0_ = (bitField0_ & ~0x00002000);
            enableOutline_ = false;
            bitField0_ = (bitField0_ & ~0x00004000);
            outlineColor_ = 0;
            bitField0_ = (bitField0_ & ~0x00008000);
            outlineWidth_ = 0F;
            bitField0_ = (bitField0_ & ~0x00010000);
            enableGradient_ = false;
            bitField0_ = (bitField0_ & ~0x00020000);
            gradientColors_ = emptyIntList();
            bitField0_ = (bitField0_ & ~0x00040000);
            enableBackground_ = false;
            bitField0_ = (bitField0_ & ~0x00080000);
            backgroundColor_ = 0;
            bitField0_ = (bitField0_ & ~0x00100000);
            extendBackground_ = false;
            bitField0_ = (bitField0_ & ~0x00200000);
            textAlign_ = 0;
            bitField0_ = (bitField0_ & ~0x00400000);
            shadowAngle_ = 0F;
            bitField0_ = (bitField0_ & ~0x00800000);
            shadowDistance_ = 0F;
            bitField0_ = (bitField0_ & ~0x01000000);
            shadowSpread_ = 0F;
            bitField0_ = (bitField0_ & ~0x02000000);
            shadowSize_ = 0F;
            bitField0_ = (bitField0_ & ~0x04000000);
            glowSpread_ = 0F;
            bitField0_ = (bitField0_ & ~0x08000000);
            glowSize_ = 0F;
            bitField0_ = (bitField0_ & ~0x10000000);
            verticalAlign_ = 0;
            bitField0_ = (bitField0_ & ~0x20000000);
            underline_ = false;
            bitField0_ = (bitField0_ & ~0x40000000);
            spaceBetweenCharacters_ = 0F;
            bitField0_ = (bitField0_ & ~0x80000000);
            spaceBetweenLines_ = 0F;
            bitField1_ = (bitField1_ & ~0x00000001);
            strikeThrough_ = false;
            bitField1_ = (bitField1_ & ~0x00000002);
            outlineWeight_ = 0F;
            bitField1_ = (bitField1_ & ~0x00000004);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_TextLayer_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer(this);
            int from_bitField0_ = bitField0_;
            int from_bitField1_ = bitField1_;
            int to_bitField0_ = 0;
            int to_bitField1_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              if (layerCommonBuilder_ == null) {
                result.layerCommon_ = layerCommon_;
              } else {
                result.layerCommon_ = layerCommonBuilder_.build();
              }
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              to_bitField0_ |= 0x00000002;
            }
            result.layerText_ = layerText_;
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.textSize_ = textSize_;
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              to_bitField0_ |= 0x00000008;
            }
            result.fontId_ = fontId_;
            if (((from_bitField0_ & 0x00000010) != 0)) {
              result.textColor_ = textColor_;
              to_bitField0_ |= 0x00000010;
            }
            if (((from_bitField0_ & 0x00000020) != 0)) {
              result.enableShadow_ = enableShadow_;
              to_bitField0_ |= 0x00000020;
            }
            if (((from_bitField0_ & 0x00000040) != 0)) {
              result.shadowColor_ = shadowColor_;
              to_bitField0_ |= 0x00000040;
            }
            if (((from_bitField0_ & 0x00000080) != 0)) {
              result.shadowRadius_ = shadowRadius_;
              to_bitField0_ |= 0x00000080;
            }
            if (((from_bitField0_ & 0x00000100) != 0)) {
              result.shadowDx_ = shadowDx_;
              to_bitField0_ |= 0x00000100;
            }
            if (((from_bitField0_ & 0x00000200) != 0)) {
              result.shadowDy_ = shadowDy_;
              to_bitField0_ |= 0x00000200;
            }
            if (((from_bitField0_ & 0x00000400) != 0)) {
              result.enableGlow_ = enableGlow_;
              to_bitField0_ |= 0x00000400;
            }
            if (((from_bitField0_ & 0x00000800) != 0)) {
              result.glowColor_ = glowColor_;
              to_bitField0_ |= 0x00000800;
            }
            if (((from_bitField0_ & 0x00001000) != 0)) {
              result.glowRadius_ = glowRadius_;
              to_bitField0_ |= 0x00001000;
            }
            if (((from_bitField0_ & 0x00002000) != 0)) {
              result.glowType_ = glowType_;
              to_bitField0_ |= 0x00002000;
            }
            if (((from_bitField0_ & 0x00004000) != 0)) {
              result.enableOutline_ = enableOutline_;
              to_bitField0_ |= 0x00004000;
            }
            if (((from_bitField0_ & 0x00008000) != 0)) {
              result.outlineColor_ = outlineColor_;
              to_bitField0_ |= 0x00008000;
            }
            if (((from_bitField0_ & 0x00010000) != 0)) {
              result.outlineWidth_ = outlineWidth_;
              to_bitField0_ |= 0x00010000;
            }
            if (((from_bitField0_ & 0x00020000) != 0)) {
              result.enableGradient_ = enableGradient_;
              to_bitField0_ |= 0x00020000;
            }
            if (((bitField0_ & 0x00040000) != 0)) {
              gradientColors_.makeImmutable();
              bitField0_ = (bitField0_ & ~0x00040000);
            }
            result.gradientColors_ = gradientColors_;
            if (((from_bitField0_ & 0x00080000) != 0)) {
              result.enableBackground_ = enableBackground_;
              to_bitField0_ |= 0x00040000;
            }
            if (((from_bitField0_ & 0x00100000) != 0)) {
              result.backgroundColor_ = backgroundColor_;
              to_bitField0_ |= 0x00080000;
            }
            if (((from_bitField0_ & 0x00200000) != 0)) {
              result.extendBackground_ = extendBackground_;
              to_bitField0_ |= 0x00100000;
            }
            if (((from_bitField0_ & 0x00400000) != 0)) {
              result.textAlign_ = textAlign_;
              to_bitField0_ |= 0x00200000;
            }
            if (((from_bitField0_ & 0x00800000) != 0)) {
              result.shadowAngle_ = shadowAngle_;
              to_bitField0_ |= 0x00400000;
            }
            if (((from_bitField0_ & 0x01000000) != 0)) {
              result.shadowDistance_ = shadowDistance_;
              to_bitField0_ |= 0x00800000;
            }
            if (((from_bitField0_ & 0x02000000) != 0)) {
              result.shadowSpread_ = shadowSpread_;
              to_bitField0_ |= 0x01000000;
            }
            if (((from_bitField0_ & 0x04000000) != 0)) {
              result.shadowSize_ = shadowSize_;
              to_bitField0_ |= 0x02000000;
            }
            if (((from_bitField0_ & 0x08000000) != 0)) {
              result.glowSpread_ = glowSpread_;
              to_bitField0_ |= 0x04000000;
            }
            if (((from_bitField0_ & 0x10000000) != 0)) {
              result.glowSize_ = glowSize_;
              to_bitField0_ |= 0x08000000;
            }
            if (((from_bitField0_ & 0x20000000) != 0)) {
              result.verticalAlign_ = verticalAlign_;
              to_bitField0_ |= 0x10000000;
            }
            if (((from_bitField0_ & 0x40000000) != 0)) {
              result.underline_ = underline_;
              to_bitField0_ |= 0x20000000;
            }
            if (((from_bitField0_ & 0x80000000) != 0)) {
              result.spaceBetweenCharacters_ = spaceBetweenCharacters_;
              to_bitField0_ |= 0x40000000;
            }
            if (((from_bitField1_ & 0x00000001) != 0)) {
              result.spaceBetweenLines_ = spaceBetweenLines_;
              to_bitField0_ |= 0x80000000;
            }
            if (((from_bitField1_ & 0x00000002) != 0)) {
              result.strikeThrough_ = strikeThrough_;
              to_bitField1_ |= 0x00000001;
            }
            if (((from_bitField1_ & 0x00000004) != 0)) {
              result.outlineWeight_ = outlineWeight_;
              to_bitField1_ |= 0x00000002;
            }
            result.bitField0_ = to_bitField0_;
            result.bitField1_ = to_bitField1_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer.getDefaultInstance()) return this;
            if (other.hasLayerCommon()) {
              mergeLayerCommon(other.getLayerCommon());
            }
            if (other.hasLayerText()) {
              bitField0_ |= 0x00000002;
              layerText_ = other.layerText_;
              onChanged();
            }
            if (other.hasTextSize()) {
              setTextSize(other.getTextSize());
            }
            if (other.hasFontId()) {
              bitField0_ |= 0x00000008;
              fontId_ = other.fontId_;
              onChanged();
            }
            if (other.hasTextColor()) {
              setTextColor(other.getTextColor());
            }
            if (other.hasEnableShadow()) {
              setEnableShadow(other.getEnableShadow());
            }
            if (other.hasShadowColor()) {
              setShadowColor(other.getShadowColor());
            }
            if (other.hasShadowRadius()) {
              setShadowRadius(other.getShadowRadius());
            }
            if (other.hasShadowDx()) {
              setShadowDx(other.getShadowDx());
            }
            if (other.hasShadowDy()) {
              setShadowDy(other.getShadowDy());
            }
            if (other.hasEnableGlow()) {
              setEnableGlow(other.getEnableGlow());
            }
            if (other.hasGlowColor()) {
              setGlowColor(other.getGlowColor());
            }
            if (other.hasGlowRadius()) {
              setGlowRadius(other.getGlowRadius());
            }
            if (other.hasGlowType()) {
              setGlowType(other.getGlowType());
            }
            if (other.hasEnableOutline()) {
              setEnableOutline(other.getEnableOutline());
            }
            if (other.hasOutlineColor()) {
              setOutlineColor(other.getOutlineColor());
            }
            if (other.hasOutlineWidth()) {
              setOutlineWidth(other.getOutlineWidth());
            }
            if (other.hasEnableGradient()) {
              setEnableGradient(other.getEnableGradient());
            }
            if (!other.gradientColors_.isEmpty()) {
              if (gradientColors_.isEmpty()) {
                gradientColors_ = other.gradientColors_;
                bitField0_ = (bitField0_ & ~0x00040000);
              } else {
                ensureGradientColorsIsMutable();
                gradientColors_.addAll(other.gradientColors_);
              }
              onChanged();
            }
            if (other.hasEnableBackground()) {
              setEnableBackground(other.getEnableBackground());
            }
            if (other.hasBackgroundColor()) {
              setBackgroundColor(other.getBackgroundColor());
            }
            if (other.hasExtendBackground()) {
              setExtendBackground(other.getExtendBackground());
            }
            if (other.hasTextAlign()) {
              setTextAlign(other.getTextAlign());
            }
            if (other.hasShadowAngle()) {
              setShadowAngle(other.getShadowAngle());
            }
            if (other.hasShadowDistance()) {
              setShadowDistance(other.getShadowDistance());
            }
            if (other.hasShadowSpread()) {
              setShadowSpread(other.getShadowSpread());
            }
            if (other.hasShadowSize()) {
              setShadowSize(other.getShadowSize());
            }
            if (other.hasGlowSpread()) {
              setGlowSpread(other.getGlowSpread());
            }
            if (other.hasGlowSize()) {
              setGlowSize(other.getGlowSize());
            }
            if (other.hasVerticalAlign()) {
              setVerticalAlign(other.getVerticalAlign());
            }
            if (other.hasUnderline()) {
              setUnderline(other.getUnderline());
            }
            if (other.hasSpaceBetweenCharacters()) {
              setSpaceBetweenCharacters(other.getSpaceBetweenCharacters());
            }
            if (other.hasSpaceBetweenLines()) {
              setSpaceBetweenLines(other.getSpaceBetweenLines());
            }
            if (other.hasStrikeThrough()) {
              setStrikeThrough(other.getStrikeThrough());
            }
            if (other.hasOutlineWeight()) {
              setOutlineWeight(other.getOutlineWeight());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;
          private int bitField1_;

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon layerCommon_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder> layerCommonBuilder_;
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           * @return Whether the layerCommon field is set.
           */
          public boolean hasLayerCommon() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           * @return The layerCommon.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getLayerCommon() {
            if (layerCommonBuilder_ == null) {
              return layerCommon_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
            } else {
              return layerCommonBuilder_.getMessage();
            }
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder setLayerCommon(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon value) {
            if (layerCommonBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              layerCommon_ = value;
              onChanged();
            } else {
              layerCommonBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000001;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder setLayerCommon(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder builderForValue) {
            if (layerCommonBuilder_ == null) {
              layerCommon_ = builderForValue.build();
              onChanged();
            } else {
              layerCommonBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000001;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder mergeLayerCommon(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon value) {
            if (layerCommonBuilder_ == null) {
              if (((bitField0_ & 0x00000001) != 0) &&
                  layerCommon_ != null &&
                  layerCommon_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance()) {
                layerCommon_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.newBuilder(layerCommon_).mergeFrom(value).buildPartial();
              } else {
                layerCommon_ = value;
              }
              onChanged();
            } else {
              layerCommonBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000001;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder clearLayerCommon() {
            if (layerCommonBuilder_ == null) {
              layerCommon_ = null;
              onChanged();
            } else {
              layerCommonBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000001);
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder getLayerCommonBuilder() {
            bitField0_ |= 0x00000001;
            onChanged();
            return getLayerCommonFieldBuilder().getBuilder();
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder getLayerCommonOrBuilder() {
            if (layerCommonBuilder_ != null) {
              return layerCommonBuilder_.getMessageOrBuilder();
            } else {
              return layerCommon_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
            }
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder> 
              getLayerCommonFieldBuilder() {
            if (layerCommonBuilder_ == null) {
              layerCommonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder>(
                      getLayerCommon(),
                      getParentForChildren(),
                      isClean());
              layerCommon_ = null;
            }
            return layerCommonBuilder_;
          }

          private java.lang.Object layerText_ = "";
          /**
           * <code>optional string layer_text = 101;</code>
           * @return Whether the layerText field is set.
           */
          public boolean hasLayerText() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional string layer_text = 101;</code>
           * @return The layerText.
           */
          public java.lang.String getLayerText() {
            java.lang.Object ref = layerText_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                layerText_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string layer_text = 101;</code>
           * @return The bytes for layerText.
           */
          public com.google.protobuf.ByteString
              getLayerTextBytes() {
            java.lang.Object ref = layerText_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              layerText_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string layer_text = 101;</code>
           * @param value The layerText to set.
           * @return This builder for chaining.
           */
          public Builder setLayerText(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            layerText_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string layer_text = 101;</code>
           * @return This builder for chaining.
           */
          public Builder clearLayerText() {
            bitField0_ = (bitField0_ & ~0x00000002);
            layerText_ = getDefaultInstance().getLayerText();
            onChanged();
            return this;
          }
          /**
           * <code>optional string layer_text = 101;</code>
           * @param value The bytes for layerText to set.
           * @return This builder for chaining.
           */
          public Builder setLayerTextBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            layerText_ = value;
            onChanged();
            return this;
          }

          private float textSize_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float text_size = 102;</code>
           * @return Whether the textSize field is set.
           */
          @java.lang.Override
          public boolean hasTextSize() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float text_size = 102;</code>
           * @return The textSize.
           */
          @java.lang.Override
          public float getTextSize() {
            return textSize_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float text_size = 102;</code>
           * @param value The textSize to set.
           * @return This builder for chaining.
           */
          public Builder setTextSize(float value) {
            bitField0_ |= 0x00000004;
            textSize_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float text_size = 102;</code>
           * @return This builder for chaining.
           */
          public Builder clearTextSize() {
            bitField0_ = (bitField0_ & ~0x00000004);
            textSize_ = 0F;
            onChanged();
            return this;
          }

          private java.lang.Object fontId_ = "";
          /**
           * <code>optional string font_id = 103;</code>
           * @return Whether the fontId field is set.
           */
          public boolean hasFontId() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <code>optional string font_id = 103;</code>
           * @return The fontId.
           */
          public java.lang.String getFontId() {
            java.lang.Object ref = fontId_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                fontId_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string font_id = 103;</code>
           * @return The bytes for fontId.
           */
          public com.google.protobuf.ByteString
              getFontIdBytes() {
            java.lang.Object ref = fontId_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              fontId_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string font_id = 103;</code>
           * @param value The fontId to set.
           * @return This builder for chaining.
           */
          public Builder setFontId(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
            fontId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string font_id = 103;</code>
           * @return This builder for chaining.
           */
          public Builder clearFontId() {
            bitField0_ = (bitField0_ & ~0x00000008);
            fontId_ = getDefaultInstance().getFontId();
            onChanged();
            return this;
          }
          /**
           * <code>optional string font_id = 103;</code>
           * @param value The bytes for fontId to set.
           * @return This builder for chaining.
           */
          public Builder setFontIdBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
            fontId_ = value;
            onChanged();
            return this;
          }

          private int textColor_ ;
          /**
           * <code>optional uint32 text_color = 104;</code>
           * @return Whether the textColor field is set.
           */
          @java.lang.Override
          public boolean hasTextColor() {
            return ((bitField0_ & 0x00000010) != 0);
          }
          /**
           * <code>optional uint32 text_color = 104;</code>
           * @return The textColor.
           */
          @java.lang.Override
          public int getTextColor() {
            return textColor_;
          }
          /**
           * <code>optional uint32 text_color = 104;</code>
           * @param value The textColor to set.
           * @return This builder for chaining.
           */
          public Builder setTextColor(int value) {
            bitField0_ |= 0x00000010;
            textColor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 text_color = 104;</code>
           * @return This builder for chaining.
           */
          public Builder clearTextColor() {
            bitField0_ = (bitField0_ & ~0x00000010);
            textColor_ = 0;
            onChanged();
            return this;
          }

          private boolean enableShadow_ ;
          /**
           * <code>optional bool enable_shadow = 105;</code>
           * @return Whether the enableShadow field is set.
           */
          @java.lang.Override
          public boolean hasEnableShadow() {
            return ((bitField0_ & 0x00000020) != 0);
          }
          /**
           * <code>optional bool enable_shadow = 105;</code>
           * @return The enableShadow.
           */
          @java.lang.Override
          public boolean getEnableShadow() {
            return enableShadow_;
          }
          /**
           * <code>optional bool enable_shadow = 105;</code>
           * @param value The enableShadow to set.
           * @return This builder for chaining.
           */
          public Builder setEnableShadow(boolean value) {
            bitField0_ |= 0x00000020;
            enableShadow_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool enable_shadow = 105;</code>
           * @return This builder for chaining.
           */
          public Builder clearEnableShadow() {
            bitField0_ = (bitField0_ & ~0x00000020);
            enableShadow_ = false;
            onChanged();
            return this;
          }

          private int shadowColor_ ;
          /**
           * <code>optional uint32 shadow_color = 106;</code>
           * @return Whether the shadowColor field is set.
           */
          @java.lang.Override
          public boolean hasShadowColor() {
            return ((bitField0_ & 0x00000040) != 0);
          }
          /**
           * <code>optional uint32 shadow_color = 106;</code>
           * @return The shadowColor.
           */
          @java.lang.Override
          public int getShadowColor() {
            return shadowColor_;
          }
          /**
           * <code>optional uint32 shadow_color = 106;</code>
           * @param value The shadowColor to set.
           * @return This builder for chaining.
           */
          public Builder setShadowColor(int value) {
            bitField0_ |= 0x00000040;
            shadowColor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 shadow_color = 106;</code>
           * @return This builder for chaining.
           */
          public Builder clearShadowColor() {
            bitField0_ = (bitField0_ & ~0x00000040);
            shadowColor_ = 0;
            onChanged();
            return this;
          }

          private float shadowRadius_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float shadow_radius = 107;</code>
           * @return Whether the shadowRadius field is set.
           */
          @java.lang.Override
          public boolean hasShadowRadius() {
            return ((bitField0_ & 0x00000080) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float shadow_radius = 107;</code>
           * @return The shadowRadius.
           */
          @java.lang.Override
          public float getShadowRadius() {
            return shadowRadius_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float shadow_radius = 107;</code>
           * @param value The shadowRadius to set.
           * @return This builder for chaining.
           */
          public Builder setShadowRadius(float value) {
            bitField0_ |= 0x00000080;
            shadowRadius_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float shadow_radius = 107;</code>
           * @return This builder for chaining.
           */
          public Builder clearShadowRadius() {
            bitField0_ = (bitField0_ & ~0x00000080);
            shadowRadius_ = 0F;
            onChanged();
            return this;
          }

          private float shadowDx_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float shadow_dx = 108;</code>
           * @return Whether the shadowDx field is set.
           */
          @java.lang.Override
          public boolean hasShadowDx() {
            return ((bitField0_ & 0x00000100) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float shadow_dx = 108;</code>
           * @return The shadowDx.
           */
          @java.lang.Override
          public float getShadowDx() {
            return shadowDx_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float shadow_dx = 108;</code>
           * @param value The shadowDx to set.
           * @return This builder for chaining.
           */
          public Builder setShadowDx(float value) {
            bitField0_ |= 0x00000100;
            shadowDx_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float shadow_dx = 108;</code>
           * @return This builder for chaining.
           */
          public Builder clearShadowDx() {
            bitField0_ = (bitField0_ & ~0x00000100);
            shadowDx_ = 0F;
            onChanged();
            return this;
          }

          private float shadowDy_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float shadow_dy = 109;</code>
           * @return Whether the shadowDy field is set.
           */
          @java.lang.Override
          public boolean hasShadowDy() {
            return ((bitField0_ & 0x00000200) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float shadow_dy = 109;</code>
           * @return The shadowDy.
           */
          @java.lang.Override
          public float getShadowDy() {
            return shadowDy_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float shadow_dy = 109;</code>
           * @param value The shadowDy to set.
           * @return This builder for chaining.
           */
          public Builder setShadowDy(float value) {
            bitField0_ |= 0x00000200;
            shadowDy_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float shadow_dy = 109;</code>
           * @return This builder for chaining.
           */
          public Builder clearShadowDy() {
            bitField0_ = (bitField0_ & ~0x00000200);
            shadowDy_ = 0F;
            onChanged();
            return this;
          }

          private boolean enableGlow_ ;
          /**
           * <code>optional bool enable_glow = 110;</code>
           * @return Whether the enableGlow field is set.
           */
          @java.lang.Override
          public boolean hasEnableGlow() {
            return ((bitField0_ & 0x00000400) != 0);
          }
          /**
           * <code>optional bool enable_glow = 110;</code>
           * @return The enableGlow.
           */
          @java.lang.Override
          public boolean getEnableGlow() {
            return enableGlow_;
          }
          /**
           * <code>optional bool enable_glow = 110;</code>
           * @param value The enableGlow to set.
           * @return This builder for chaining.
           */
          public Builder setEnableGlow(boolean value) {
            bitField0_ |= 0x00000400;
            enableGlow_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool enable_glow = 110;</code>
           * @return This builder for chaining.
           */
          public Builder clearEnableGlow() {
            bitField0_ = (bitField0_ & ~0x00000400);
            enableGlow_ = false;
            onChanged();
            return this;
          }

          private int glowColor_ ;
          /**
           * <code>optional uint32 glow_color = 111;</code>
           * @return Whether the glowColor field is set.
           */
          @java.lang.Override
          public boolean hasGlowColor() {
            return ((bitField0_ & 0x00000800) != 0);
          }
          /**
           * <code>optional uint32 glow_color = 111;</code>
           * @return The glowColor.
           */
          @java.lang.Override
          public int getGlowColor() {
            return glowColor_;
          }
          /**
           * <code>optional uint32 glow_color = 111;</code>
           * @param value The glowColor to set.
           * @return This builder for chaining.
           */
          public Builder setGlowColor(int value) {
            bitField0_ |= 0x00000800;
            glowColor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 glow_color = 111;</code>
           * @return This builder for chaining.
           */
          public Builder clearGlowColor() {
            bitField0_ = (bitField0_ & ~0x00000800);
            glowColor_ = 0;
            onChanged();
            return this;
          }

          private float glowRadius_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float glow_radius = 112;</code>
           * @return Whether the glowRadius field is set.
           */
          @java.lang.Override
          public boolean hasGlowRadius() {
            return ((bitField0_ & 0x00001000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float glow_radius = 112;</code>
           * @return The glowRadius.
           */
          @java.lang.Override
          public float getGlowRadius() {
            return glowRadius_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float glow_radius = 112;</code>
           * @param value The glowRadius to set.
           * @return This builder for chaining.
           */
          public Builder setGlowRadius(float value) {
            bitField0_ |= 0x00001000;
            glowRadius_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float glow_radius = 112;</code>
           * @return This builder for chaining.
           */
          public Builder clearGlowRadius() {
            bitField0_ = (bitField0_ & ~0x00001000);
            glowRadius_ = 0F;
            onChanged();
            return this;
          }

          private int glowType_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 glow_type = 113;</code>
           * @return Whether the glowType field is set.
           */
          @java.lang.Override
          public boolean hasGlowType() {
            return ((bitField0_ & 0x00002000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 glow_type = 113;</code>
           * @return The glowType.
           */
          @java.lang.Override
          public int getGlowType() {
            return glowType_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 glow_type = 113;</code>
           * @param value The glowType to set.
           * @return This builder for chaining.
           */
          public Builder setGlowType(int value) {
            bitField0_ |= 0x00002000;
            glowType_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 glow_type = 113;</code>
           * @return This builder for chaining.
           */
          public Builder clearGlowType() {
            bitField0_ = (bitField0_ & ~0x00002000);
            glowType_ = 0;
            onChanged();
            return this;
          }

          private boolean enableOutline_ ;
          /**
           * <code>optional bool enable_outline = 114;</code>
           * @return Whether the enableOutline field is set.
           */
          @java.lang.Override
          public boolean hasEnableOutline() {
            return ((bitField0_ & 0x00004000) != 0);
          }
          /**
           * <code>optional bool enable_outline = 114;</code>
           * @return The enableOutline.
           */
          @java.lang.Override
          public boolean getEnableOutline() {
            return enableOutline_;
          }
          /**
           * <code>optional bool enable_outline = 114;</code>
           * @param value The enableOutline to set.
           * @return This builder for chaining.
           */
          public Builder setEnableOutline(boolean value) {
            bitField0_ |= 0x00004000;
            enableOutline_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool enable_outline = 114;</code>
           * @return This builder for chaining.
           */
          public Builder clearEnableOutline() {
            bitField0_ = (bitField0_ & ~0x00004000);
            enableOutline_ = false;
            onChanged();
            return this;
          }

          private int outlineColor_ ;
          /**
           * <code>optional uint32 outline_color = 115;</code>
           * @return Whether the outlineColor field is set.
           */
          @java.lang.Override
          public boolean hasOutlineColor() {
            return ((bitField0_ & 0x00008000) != 0);
          }
          /**
           * <code>optional uint32 outline_color = 115;</code>
           * @return The outlineColor.
           */
          @java.lang.Override
          public int getOutlineColor() {
            return outlineColor_;
          }
          /**
           * <code>optional uint32 outline_color = 115;</code>
           * @param value The outlineColor to set.
           * @return This builder for chaining.
           */
          public Builder setOutlineColor(int value) {
            bitField0_ |= 0x00008000;
            outlineColor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 outline_color = 115;</code>
           * @return This builder for chaining.
           */
          public Builder clearOutlineColor() {
            bitField0_ = (bitField0_ & ~0x00008000);
            outlineColor_ = 0;
            onChanged();
            return this;
          }

          private float outlineWidth_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float outline_width = 116;</code>
           * @return Whether the outlineWidth field is set.
           */
          @java.lang.Override
          public boolean hasOutlineWidth() {
            return ((bitField0_ & 0x00010000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float outline_width = 116;</code>
           * @return The outlineWidth.
           */
          @java.lang.Override
          public float getOutlineWidth() {
            return outlineWidth_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float outline_width = 116;</code>
           * @param value The outlineWidth to set.
           * @return This builder for chaining.
           */
          public Builder setOutlineWidth(float value) {
            bitField0_ |= 0x00010000;
            outlineWidth_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional float outline_width = 116;</code>
           * @return This builder for chaining.
           */
          public Builder clearOutlineWidth() {
            bitField0_ = (bitField0_ & ~0x00010000);
            outlineWidth_ = 0F;
            onChanged();
            return this;
          }

          private boolean enableGradient_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool enable_gradient = 117;</code>
           * @return Whether the enableGradient field is set.
           */
          @java.lang.Override
          public boolean hasEnableGradient() {
            return ((bitField0_ & 0x00020000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool enable_gradient = 117;</code>
           * @return The enableGradient.
           */
          @java.lang.Override
          public boolean getEnableGradient() {
            return enableGradient_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool enable_gradient = 117;</code>
           * @param value The enableGradient to set.
           * @return This builder for chaining.
           */
          public Builder setEnableGradient(boolean value) {
            bitField0_ |= 0x00020000;
            enableGradient_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool enable_gradient = 117;</code>
           * @return This builder for chaining.
           */
          public Builder clearEnableGradient() {
            bitField0_ = (bitField0_ & ~0x00020000);
            enableGradient_ = false;
            onChanged();
            return this;
          }

          private com.google.protobuf.Internal.IntList gradientColors_ = emptyIntList();
          private void ensureGradientColorsIsMutable() {
            if (!((bitField0_ & 0x00040000) != 0)) {
              gradientColors_ = mutableCopy(gradientColors_);
              bitField0_ |= 0x00040000;
             }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated int32 gradient_colors = 118;</code>
           * @return A list containing the gradientColors.
           */
          public java.util.List<java.lang.Integer>
              getGradientColorsList() {
            return ((bitField0_ & 0x00040000) != 0) ?
                     java.util.Collections.unmodifiableList(gradientColors_) : gradientColors_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated int32 gradient_colors = 118;</code>
           * @return The count of gradientColors.
           */
          public int getGradientColorsCount() {
            return gradientColors_.size();
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated int32 gradient_colors = 118;</code>
           * @param index The index of the element to return.
           * @return The gradientColors at the given index.
           */
          public int getGradientColors(int index) {
            return gradientColors_.getInt(index);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated int32 gradient_colors = 118;</code>
           * @param index The index to set the value at.
           * @param value The gradientColors to set.
           * @return This builder for chaining.
           */
          public Builder setGradientColors(
              int index, int value) {
            ensureGradientColorsIsMutable();
            gradientColors_.setInt(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated int32 gradient_colors = 118;</code>
           * @param value The gradientColors to add.
           * @return This builder for chaining.
           */
          public Builder addGradientColors(int value) {
            ensureGradientColorsIsMutable();
            gradientColors_.addInt(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated int32 gradient_colors = 118;</code>
           * @param values The gradientColors to add.
           * @return This builder for chaining.
           */
          public Builder addAllGradientColors(
              java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureGradientColorsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, gradientColors_);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated int32 gradient_colors = 118;</code>
           * @return This builder for chaining.
           */
          public Builder clearGradientColors() {
            gradientColors_ = emptyIntList();
            bitField0_ = (bitField0_ & ~0x00040000);
            onChanged();
            return this;
          }

          private boolean enableBackground_ ;
          /**
           * <code>optional bool enable_background = 119;</code>
           * @return Whether the enableBackground field is set.
           */
          @java.lang.Override
          public boolean hasEnableBackground() {
            return ((bitField0_ & 0x00080000) != 0);
          }
          /**
           * <code>optional bool enable_background = 119;</code>
           * @return The enableBackground.
           */
          @java.lang.Override
          public boolean getEnableBackground() {
            return enableBackground_;
          }
          /**
           * <code>optional bool enable_background = 119;</code>
           * @param value The enableBackground to set.
           * @return This builder for chaining.
           */
          public Builder setEnableBackground(boolean value) {
            bitField0_ |= 0x00080000;
            enableBackground_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool enable_background = 119;</code>
           * @return This builder for chaining.
           */
          public Builder clearEnableBackground() {
            bitField0_ = (bitField0_ & ~0x00080000);
            enableBackground_ = false;
            onChanged();
            return this;
          }

          private int backgroundColor_ ;
          /**
           * <code>optional uint32 background_color = 120;</code>
           * @return Whether the backgroundColor field is set.
           */
          @java.lang.Override
          public boolean hasBackgroundColor() {
            return ((bitField0_ & 0x00100000) != 0);
          }
          /**
           * <code>optional uint32 background_color = 120;</code>
           * @return The backgroundColor.
           */
          @java.lang.Override
          public int getBackgroundColor() {
            return backgroundColor_;
          }
          /**
           * <code>optional uint32 background_color = 120;</code>
           * @param value The backgroundColor to set.
           * @return This builder for chaining.
           */
          public Builder setBackgroundColor(int value) {
            bitField0_ |= 0x00100000;
            backgroundColor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 background_color = 120;</code>
           * @return This builder for chaining.
           */
          public Builder clearBackgroundColor() {
            bitField0_ = (bitField0_ & ~0x00100000);
            backgroundColor_ = 0;
            onChanged();
            return this;
          }

          private boolean extendBackground_ ;
          /**
           * <code>optional bool extend_background = 121;</code>
           * @return Whether the extendBackground field is set.
           */
          @java.lang.Override
          public boolean hasExtendBackground() {
            return ((bitField0_ & 0x00200000) != 0);
          }
          /**
           * <code>optional bool extend_background = 121;</code>
           * @return The extendBackground.
           */
          @java.lang.Override
          public boolean getExtendBackground() {
            return extendBackground_;
          }
          /**
           * <code>optional bool extend_background = 121;</code>
           * @param value The extendBackground to set.
           * @return This builder for chaining.
           */
          public Builder setExtendBackground(boolean value) {
            bitField0_ |= 0x00200000;
            extendBackground_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool extend_background = 121;</code>
           * @return This builder for chaining.
           */
          public Builder clearExtendBackground() {
            bitField0_ = (bitField0_ & ~0x00200000);
            extendBackground_ = false;
            onChanged();
            return this;
          }

          private int textAlign_ ;
          /**
           * <pre>
           * 0: center 1: left 2: right
           * </pre>
           *
           * <code>optional int32 text_align = 122;</code>
           * @return Whether the textAlign field is set.
           */
          @java.lang.Override
          public boolean hasTextAlign() {
            return ((bitField0_ & 0x00400000) != 0);
          }
          /**
           * <pre>
           * 0: center 1: left 2: right
           * </pre>
           *
           * <code>optional int32 text_align = 122;</code>
           * @return The textAlign.
           */
          @java.lang.Override
          public int getTextAlign() {
            return textAlign_;
          }
          /**
           * <pre>
           * 0: center 1: left 2: right
           * </pre>
           *
           * <code>optional int32 text_align = 122;</code>
           * @param value The textAlign to set.
           * @return This builder for chaining.
           */
          public Builder setTextAlign(int value) {
            bitField0_ |= 0x00400000;
            textAlign_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * 0: center 1: left 2: right
           * </pre>
           *
           * <code>optional int32 text_align = 122;</code>
           * @return This builder for chaining.
           */
          public Builder clearTextAlign() {
            bitField0_ = (bitField0_ & ~0x00400000);
            textAlign_ = 0;
            onChanged();
            return this;
          }

          private float shadowAngle_ ;
          /**
           * <code>optional float shadow_angle = 123;</code>
           * @return Whether the shadowAngle field is set.
           */
          @java.lang.Override
          public boolean hasShadowAngle() {
            return ((bitField0_ & 0x00800000) != 0);
          }
          /**
           * <code>optional float shadow_angle = 123;</code>
           * @return The shadowAngle.
           */
          @java.lang.Override
          public float getShadowAngle() {
            return shadowAngle_;
          }
          /**
           * <code>optional float shadow_angle = 123;</code>
           * @param value The shadowAngle to set.
           * @return This builder for chaining.
           */
          public Builder setShadowAngle(float value) {
            bitField0_ |= 0x00800000;
            shadowAngle_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float shadow_angle = 123;</code>
           * @return This builder for chaining.
           */
          public Builder clearShadowAngle() {
            bitField0_ = (bitField0_ & ~0x00800000);
            shadowAngle_ = 0F;
            onChanged();
            return this;
          }

          private float shadowDistance_ ;
          /**
           * <code>optional float shadow_distance = 124;</code>
           * @return Whether the shadowDistance field is set.
           */
          @java.lang.Override
          public boolean hasShadowDistance() {
            return ((bitField0_ & 0x01000000) != 0);
          }
          /**
           * <code>optional float shadow_distance = 124;</code>
           * @return The shadowDistance.
           */
          @java.lang.Override
          public float getShadowDistance() {
            return shadowDistance_;
          }
          /**
           * <code>optional float shadow_distance = 124;</code>
           * @param value The shadowDistance to set.
           * @return This builder for chaining.
           */
          public Builder setShadowDistance(float value) {
            bitField0_ |= 0x01000000;
            shadowDistance_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float shadow_distance = 124;</code>
           * @return This builder for chaining.
           */
          public Builder clearShadowDistance() {
            bitField0_ = (bitField0_ & ~0x01000000);
            shadowDistance_ = 0F;
            onChanged();
            return this;
          }

          private float shadowSpread_ ;
          /**
           * <code>optional float shadow_spread = 125;</code>
           * @return Whether the shadowSpread field is set.
           */
          @java.lang.Override
          public boolean hasShadowSpread() {
            return ((bitField0_ & 0x02000000) != 0);
          }
          /**
           * <code>optional float shadow_spread = 125;</code>
           * @return The shadowSpread.
           */
          @java.lang.Override
          public float getShadowSpread() {
            return shadowSpread_;
          }
          /**
           * <code>optional float shadow_spread = 125;</code>
           * @param value The shadowSpread to set.
           * @return This builder for chaining.
           */
          public Builder setShadowSpread(float value) {
            bitField0_ |= 0x02000000;
            shadowSpread_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float shadow_spread = 125;</code>
           * @return This builder for chaining.
           */
          public Builder clearShadowSpread() {
            bitField0_ = (bitField0_ & ~0x02000000);
            shadowSpread_ = 0F;
            onChanged();
            return this;
          }

          private float shadowSize_ ;
          /**
           * <code>optional float shadow_size = 126;</code>
           * @return Whether the shadowSize field is set.
           */
          @java.lang.Override
          public boolean hasShadowSize() {
            return ((bitField0_ & 0x04000000) != 0);
          }
          /**
           * <code>optional float shadow_size = 126;</code>
           * @return The shadowSize.
           */
          @java.lang.Override
          public float getShadowSize() {
            return shadowSize_;
          }
          /**
           * <code>optional float shadow_size = 126;</code>
           * @param value The shadowSize to set.
           * @return This builder for chaining.
           */
          public Builder setShadowSize(float value) {
            bitField0_ |= 0x04000000;
            shadowSize_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float shadow_size = 126;</code>
           * @return This builder for chaining.
           */
          public Builder clearShadowSize() {
            bitField0_ = (bitField0_ & ~0x04000000);
            shadowSize_ = 0F;
            onChanged();
            return this;
          }

          private float glowSpread_ ;
          /**
           * <code>optional float glow_spread = 127;</code>
           * @return Whether the glowSpread field is set.
           */
          @java.lang.Override
          public boolean hasGlowSpread() {
            return ((bitField0_ & 0x08000000) != 0);
          }
          /**
           * <code>optional float glow_spread = 127;</code>
           * @return The glowSpread.
           */
          @java.lang.Override
          public float getGlowSpread() {
            return glowSpread_;
          }
          /**
           * <code>optional float glow_spread = 127;</code>
           * @param value The glowSpread to set.
           * @return This builder for chaining.
           */
          public Builder setGlowSpread(float value) {
            bitField0_ |= 0x08000000;
            glowSpread_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float glow_spread = 127;</code>
           * @return This builder for chaining.
           */
          public Builder clearGlowSpread() {
            bitField0_ = (bitField0_ & ~0x08000000);
            glowSpread_ = 0F;
            onChanged();
            return this;
          }

          private float glowSize_ ;
          /**
           * <code>optional float glow_size = 128;</code>
           * @return Whether the glowSize field is set.
           */
          @java.lang.Override
          public boolean hasGlowSize() {
            return ((bitField0_ & 0x10000000) != 0);
          }
          /**
           * <code>optional float glow_size = 128;</code>
           * @return The glowSize.
           */
          @java.lang.Override
          public float getGlowSize() {
            return glowSize_;
          }
          /**
           * <code>optional float glow_size = 128;</code>
           * @param value The glowSize to set.
           * @return This builder for chaining.
           */
          public Builder setGlowSize(float value) {
            bitField0_ |= 0x10000000;
            glowSize_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float glow_size = 128;</code>
           * @return This builder for chaining.
           */
          public Builder clearGlowSize() {
            bitField0_ = (bitField0_ & ~0x10000000);
            glowSize_ = 0F;
            onChanged();
            return this;
          }

          private int verticalAlign_ ;
          /**
           * <pre>
           * 0: center 1: top 2: bottom
           * </pre>
           *
           * <code>optional int32 vertical_align = 129;</code>
           * @return Whether the verticalAlign field is set.
           */
          @java.lang.Override
          public boolean hasVerticalAlign() {
            return ((bitField0_ & 0x20000000) != 0);
          }
          /**
           * <pre>
           * 0: center 1: top 2: bottom
           * </pre>
           *
           * <code>optional int32 vertical_align = 129;</code>
           * @return The verticalAlign.
           */
          @java.lang.Override
          public int getVerticalAlign() {
            return verticalAlign_;
          }
          /**
           * <pre>
           * 0: center 1: top 2: bottom
           * </pre>
           *
           * <code>optional int32 vertical_align = 129;</code>
           * @param value The verticalAlign to set.
           * @return This builder for chaining.
           */
          public Builder setVerticalAlign(int value) {
            bitField0_ |= 0x20000000;
            verticalAlign_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * 0: center 1: top 2: bottom
           * </pre>
           *
           * <code>optional int32 vertical_align = 129;</code>
           * @return This builder for chaining.
           */
          public Builder clearVerticalAlign() {
            bitField0_ = (bitField0_ & ~0x20000000);
            verticalAlign_ = 0;
            onChanged();
            return this;
          }

          private boolean underline_ ;
          /**
           * <code>optional bool underline = 130;</code>
           * @return Whether the underline field is set.
           */
          @java.lang.Override
          public boolean hasUnderline() {
            return ((bitField0_ & 0x40000000) != 0);
          }
          /**
           * <code>optional bool underline = 130;</code>
           * @return The underline.
           */
          @java.lang.Override
          public boolean getUnderline() {
            return underline_;
          }
          /**
           * <code>optional bool underline = 130;</code>
           * @param value The underline to set.
           * @return This builder for chaining.
           */
          public Builder setUnderline(boolean value) {
            bitField0_ |= 0x40000000;
            underline_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool underline = 130;</code>
           * @return This builder for chaining.
           */
          public Builder clearUnderline() {
            bitField0_ = (bitField0_ & ~0x40000000);
            underline_ = false;
            onChanged();
            return this;
          }

          private float spaceBetweenCharacters_ ;
          /**
           * <code>optional float space_between_characters = 131;</code>
           * @return Whether the spaceBetweenCharacters field is set.
           */
          @java.lang.Override
          public boolean hasSpaceBetweenCharacters() {
            return ((bitField0_ & 0x80000000) != 0);
          }
          /**
           * <code>optional float space_between_characters = 131;</code>
           * @return The spaceBetweenCharacters.
           */
          @java.lang.Override
          public float getSpaceBetweenCharacters() {
            return spaceBetweenCharacters_;
          }
          /**
           * <code>optional float space_between_characters = 131;</code>
           * @param value The spaceBetweenCharacters to set.
           * @return This builder for chaining.
           */
          public Builder setSpaceBetweenCharacters(float value) {
            bitField0_ |= 0x80000000;
            spaceBetweenCharacters_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float space_between_characters = 131;</code>
           * @return This builder for chaining.
           */
          public Builder clearSpaceBetweenCharacters() {
            bitField0_ = (bitField0_ & ~0x80000000);
            spaceBetweenCharacters_ = 0F;
            onChanged();
            return this;
          }

          private float spaceBetweenLines_ ;
          /**
           * <code>optional float space_between_lines = 132;</code>
           * @return Whether the spaceBetweenLines field is set.
           */
          @java.lang.Override
          public boolean hasSpaceBetweenLines() {
            return ((bitField1_ & 0x00000001) != 0);
          }
          /**
           * <code>optional float space_between_lines = 132;</code>
           * @return The spaceBetweenLines.
           */
          @java.lang.Override
          public float getSpaceBetweenLines() {
            return spaceBetweenLines_;
          }
          /**
           * <code>optional float space_between_lines = 132;</code>
           * @param value The spaceBetweenLines to set.
           * @return This builder for chaining.
           */
          public Builder setSpaceBetweenLines(float value) {
            bitField1_ |= 0x00000001;
            spaceBetweenLines_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float space_between_lines = 132;</code>
           * @return This builder for chaining.
           */
          public Builder clearSpaceBetweenLines() {
            bitField1_ = (bitField1_ & ~0x00000001);
            spaceBetweenLines_ = 0F;
            onChanged();
            return this;
          }

          private boolean strikeThrough_ ;
          /**
           * <code>optional bool strike_through = 133;</code>
           * @return Whether the strikeThrough field is set.
           */
          @java.lang.Override
          public boolean hasStrikeThrough() {
            return ((bitField1_ & 0x00000002) != 0);
          }
          /**
           * <code>optional bool strike_through = 133;</code>
           * @return The strikeThrough.
           */
          @java.lang.Override
          public boolean getStrikeThrough() {
            return strikeThrough_;
          }
          /**
           * <code>optional bool strike_through = 133;</code>
           * @param value The strikeThrough to set.
           * @return This builder for chaining.
           */
          public Builder setStrikeThrough(boolean value) {
            bitField1_ |= 0x00000002;
            strikeThrough_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool strike_through = 133;</code>
           * @return This builder for chaining.
           */
          public Builder clearStrikeThrough() {
            bitField1_ = (bitField1_ & ~0x00000002);
            strikeThrough_ = false;
            onChanged();
            return this;
          }

          private float outlineWeight_ ;
          /**
           * <code>optional float outline_weight = 134;</code>
           * @return Whether the outlineWeight field is set.
           */
          @java.lang.Override
          public boolean hasOutlineWeight() {
            return ((bitField1_ & 0x00000004) != 0);
          }
          /**
           * <code>optional float outline_weight = 134;</code>
           * @return The outlineWeight.
           */
          @java.lang.Override
          public float getOutlineWeight() {
            return outlineWeight_;
          }
          /**
           * <code>optional float outline_weight = 134;</code>
           * @param value The outlineWeight to set.
           * @return This builder for chaining.
           */
          public Builder setOutlineWeight(float value) {
            bitField1_ |= 0x00000004;
            outlineWeight_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float outline_weight = 134;</code>
           * @return This builder for chaining.
           */
          public Builder clearOutlineWeight() {
            bitField1_ = (bitField1_ & ~0x00000004);
            outlineWeight_ = 0F;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.TextLayer)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.TextLayer)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<TextLayer>
            PARSER = new com.google.protobuf.AbstractParser<TextLayer>() {
          @java.lang.Override
          public TextLayer parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new TextLayer(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<TextLayer> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<TextLayer> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TextLayer getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface HandwritingLayerOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.HandwritingLayer)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return Whether the layerCommon field is set.
         */
        boolean hasLayerCommon();
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return The layerCommon.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getLayerCommon();
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder getLayerCommonOrBuilder();

        /**
         * <code>optional int32 pivot_x = 101;</code>
         * @return Whether the pivotX field is set.
         */
        boolean hasPivotX();
        /**
         * <code>optional int32 pivot_x = 101;</code>
         * @return The pivotX.
         */
        int getPivotX();

        /**
         * <code>optional int32 pivot_y = 102;</code>
         * @return Whether the pivotY field is set.
         */
        boolean hasPivotY();
        /**
         * <code>optional int32 pivot_y = 102;</code>
         * @return The pivotY.
         */
        int getPivotY();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
         */
        java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint> 
            getHandwritingFrameIosList();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint getHandwritingFrameIos(int index);
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
         */
        int getHandwritingFrameIosCount();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
         */
        java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPointOrBuilder> 
            getHandwritingFrameIosOrBuilderList();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPointOrBuilder getHandwritingFrameIosOrBuilder(
            int index);

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
         */
        java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction> 
            getDrawingActionsList();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction getDrawingActions(int index);
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
         */
        int getDrawingActionsCount();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
         */
        java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionOrBuilder> 
            getDrawingActionsOrBuilderList();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionOrBuilder getDrawingActionsOrBuilder(
            int index);

        /**
         * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
         */
        java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction> 
            getActionsList();
        /**
         * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction getActions(int index);
        /**
         * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
         */
        int getActionsCount();
        /**
         * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
         */
        java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingActionOrBuilder> 
            getActionsOrBuilderList();
        /**
         * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingActionOrBuilder getActionsOrBuilder(
            int index);
      }
      /**
       * Protobuf type {@code KMProto.KMProject.HandwritingLayer}
       */
      public static final class HandwritingLayer extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.HandwritingLayer)
          HandwritingLayerOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use HandwritingLayer.newBuilder() to construct.
        private HandwritingLayer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private HandwritingLayer() {
          handwritingFrameIos_ = java.util.Collections.emptyList();
          drawingActions_ = java.util.Collections.emptyList();
          actions_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new HandwritingLayer();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private HandwritingLayer(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                    drawingActions_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction>();
                    mutable_bitField0_ |= 0x00000010;
                  }
                  drawingActions_.add(
                      input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.PARSER, extensionRegistry));
                  break;
                }
                case 802: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000001) != 0)) {
                    subBuilder = layerCommon_.toBuilder();
                  }
                  layerCommon_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(layerCommon_);
                    layerCommon_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000001;
                  break;
                }
                case 808: {
                  bitField0_ |= 0x00000002;
                  pivotX_ = input.readInt32();
                  break;
                }
                case 816: {
                  bitField0_ |= 0x00000004;
                  pivotY_ = input.readInt32();
                  break;
                }
                case 826: {
                  if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                    handwritingFrameIos_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint>();
                    mutable_bitField0_ |= 0x00000008;
                  }
                  handwritingFrameIos_.add(
                      input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.PARSER, extensionRegistry));
                  break;
                }
                case 834: {
                  if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                    actions_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction>();
                    mutable_bitField0_ |= 0x00000020;
                  }
                  actions_.add(
                      input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction.PARSER, extensionRegistry));
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000010) != 0)) {
              drawingActions_ = java.util.Collections.unmodifiableList(drawingActions_);
            }
            if (((mutable_bitField0_ & 0x00000008) != 0)) {
              handwritingFrameIos_ = java.util.Collections.unmodifiableList(handwritingFrameIos_);
            }
            if (((mutable_bitField0_ & 0x00000020) != 0)) {
              actions_ = java.util.Collections.unmodifiableList(actions_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_HandwritingLayer_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_HandwritingLayer_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer.Builder.class);
        }

        private int bitField0_;
        public static final int LAYER_COMMON_FIELD_NUMBER = 100;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon layerCommon_;
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return Whether the layerCommon field is set.
         */
        @java.lang.Override
        public boolean hasLayerCommon() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return The layerCommon.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getLayerCommon() {
          return layerCommon_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
        }
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder getLayerCommonOrBuilder() {
          return layerCommon_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
        }

        public static final int PIVOT_X_FIELD_NUMBER = 101;
        private int pivotX_;
        /**
         * <code>optional int32 pivot_x = 101;</code>
         * @return Whether the pivotX field is set.
         */
        @java.lang.Override
        public boolean hasPivotX() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional int32 pivot_x = 101;</code>
         * @return The pivotX.
         */
        @java.lang.Override
        public int getPivotX() {
          return pivotX_;
        }

        public static final int PIVOT_Y_FIELD_NUMBER = 102;
        private int pivotY_;
        /**
         * <code>optional int32 pivot_y = 102;</code>
         * @return Whether the pivotY field is set.
         */
        @java.lang.Override
        public boolean hasPivotY() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional int32 pivot_y = 102;</code>
         * @return The pivotY.
         */
        @java.lang.Override
        public int getPivotY() {
          return pivotY_;
        }

        public static final int HANDWRITING_FRAME_IOS_FIELD_NUMBER = 103;
        private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint> handwritingFrameIos_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
         */
        @java.lang.Override
        public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint> getHandwritingFrameIosList() {
          return handwritingFrameIos_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
         */
        @java.lang.Override
        public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPointOrBuilder> 
            getHandwritingFrameIosOrBuilderList() {
          return handwritingFrameIos_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
         */
        @java.lang.Override
        public int getHandwritingFrameIosCount() {
          return handwritingFrameIos_.size();
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint getHandwritingFrameIos(int index) {
          return handwritingFrameIos_.get(index);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPointOrBuilder getHandwritingFrameIosOrBuilder(
            int index) {
          return handwritingFrameIos_.get(index);
        }

        public static final int DRAWING_ACTIONS_FIELD_NUMBER = 1;
        private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction> drawingActions_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
         */
        @java.lang.Override
        public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction> getDrawingActionsList() {
          return drawingActions_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
         */
        @java.lang.Override
        public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionOrBuilder> 
            getDrawingActionsOrBuilderList() {
          return drawingActions_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
         */
        @java.lang.Override
        public int getDrawingActionsCount() {
          return drawingActions_.size();
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction getDrawingActions(int index) {
          return drawingActions_.get(index);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionOrBuilder getDrawingActionsOrBuilder(
            int index) {
          return drawingActions_.get(index);
        }

        public static final int ACTIONS_FIELD_NUMBER = 104;
        private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction> actions_;
        /**
         * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
         */
        @java.lang.Override
        public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction> getActionsList() {
          return actions_;
        }
        /**
         * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
         */
        @java.lang.Override
        public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingActionOrBuilder> 
            getActionsOrBuilderList() {
          return actions_;
        }
        /**
         * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
         */
        @java.lang.Override
        public int getActionsCount() {
          return actions_.size();
        }
        /**
         * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction getActions(int index) {
          return actions_.get(index);
        }
        /**
         * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingActionOrBuilder getActionsOrBuilder(
            int index) {
          return actions_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          for (int i = 0; i < drawingActions_.size(); i++) {
            output.writeMessage(1, drawingActions_.get(i));
          }
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeMessage(100, getLayerCommon());
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeInt32(101, pivotX_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeInt32(102, pivotY_);
          }
          for (int i = 0; i < handwritingFrameIos_.size(); i++) {
            output.writeMessage(103, handwritingFrameIos_.get(i));
          }
          for (int i = 0; i < actions_.size(); i++) {
            output.writeMessage(104, actions_.get(i));
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          for (int i = 0; i < drawingActions_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, drawingActions_.get(i));
          }
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(100, getLayerCommon());
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(101, pivotX_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(102, pivotY_);
          }
          for (int i = 0; i < handwritingFrameIos_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(103, handwritingFrameIos_.get(i));
          }
          for (int i = 0; i < actions_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(104, actions_.get(i));
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer) obj;

          if (hasLayerCommon() != other.hasLayerCommon()) return false;
          if (hasLayerCommon()) {
            if (!getLayerCommon()
                .equals(other.getLayerCommon())) return false;
          }
          if (hasPivotX() != other.hasPivotX()) return false;
          if (hasPivotX()) {
            if (getPivotX()
                != other.getPivotX()) return false;
          }
          if (hasPivotY() != other.hasPivotY()) return false;
          if (hasPivotY()) {
            if (getPivotY()
                != other.getPivotY()) return false;
          }
          if (!getHandwritingFrameIosList()
              .equals(other.getHandwritingFrameIosList())) return false;
          if (!getDrawingActionsList()
              .equals(other.getDrawingActionsList())) return false;
          if (!getActionsList()
              .equals(other.getActionsList())) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasLayerCommon()) {
            hash = (37 * hash) + LAYER_COMMON_FIELD_NUMBER;
            hash = (53 * hash) + getLayerCommon().hashCode();
          }
          if (hasPivotX()) {
            hash = (37 * hash) + PIVOT_X_FIELD_NUMBER;
            hash = (53 * hash) + getPivotX();
          }
          if (hasPivotY()) {
            hash = (37 * hash) + PIVOT_Y_FIELD_NUMBER;
            hash = (53 * hash) + getPivotY();
          }
          if (getHandwritingFrameIosCount() > 0) {
            hash = (37 * hash) + HANDWRITING_FRAME_IOS_FIELD_NUMBER;
            hash = (53 * hash) + getHandwritingFrameIosList().hashCode();
          }
          if (getDrawingActionsCount() > 0) {
            hash = (37 * hash) + DRAWING_ACTIONS_FIELD_NUMBER;
            hash = (53 * hash) + getDrawingActionsList().hashCode();
          }
          if (getActionsCount() > 0) {
            hash = (37 * hash) + ACTIONS_FIELD_NUMBER;
            hash = (53 * hash) + getActionsList().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code KMProto.KMProject.HandwritingLayer}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.HandwritingLayer)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayerOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_HandwritingLayer_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_HandwritingLayer_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
              getLayerCommonFieldBuilder();
              getHandwritingFrameIosFieldBuilder();
              getDrawingActionsFieldBuilder();
              getActionsFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            if (layerCommonBuilder_ == null) {
              layerCommon_ = null;
            } else {
              layerCommonBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000001);
            pivotX_ = 0;
            bitField0_ = (bitField0_ & ~0x00000002);
            pivotY_ = 0;
            bitField0_ = (bitField0_ & ~0x00000004);
            if (handwritingFrameIosBuilder_ == null) {
              handwritingFrameIos_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              handwritingFrameIosBuilder_.clear();
            }
            if (drawingActionsBuilder_ == null) {
              drawingActions_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              drawingActionsBuilder_.clear();
            }
            if (actionsBuilder_ == null) {
              actions_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              actionsBuilder_.clear();
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_HandwritingLayer_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              if (layerCommonBuilder_ == null) {
                result.layerCommon_ = layerCommon_;
              } else {
                result.layerCommon_ = layerCommonBuilder_.build();
              }
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.pivotX_ = pivotX_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.pivotY_ = pivotY_;
              to_bitField0_ |= 0x00000004;
            }
            if (handwritingFrameIosBuilder_ == null) {
              if (((bitField0_ & 0x00000008) != 0)) {
                handwritingFrameIos_ = java.util.Collections.unmodifiableList(handwritingFrameIos_);
                bitField0_ = (bitField0_ & ~0x00000008);
              }
              result.handwritingFrameIos_ = handwritingFrameIos_;
            } else {
              result.handwritingFrameIos_ = handwritingFrameIosBuilder_.build();
            }
            if (drawingActionsBuilder_ == null) {
              if (((bitField0_ & 0x00000010) != 0)) {
                drawingActions_ = java.util.Collections.unmodifiableList(drawingActions_);
                bitField0_ = (bitField0_ & ~0x00000010);
              }
              result.drawingActions_ = drawingActions_;
            } else {
              result.drawingActions_ = drawingActionsBuilder_.build();
            }
            if (actionsBuilder_ == null) {
              if (((bitField0_ & 0x00000020) != 0)) {
                actions_ = java.util.Collections.unmodifiableList(actions_);
                bitField0_ = (bitField0_ & ~0x00000020);
              }
              result.actions_ = actions_;
            } else {
              result.actions_ = actionsBuilder_.build();
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer.getDefaultInstance()) return this;
            if (other.hasLayerCommon()) {
              mergeLayerCommon(other.getLayerCommon());
            }
            if (other.hasPivotX()) {
              setPivotX(other.getPivotX());
            }
            if (other.hasPivotY()) {
              setPivotY(other.getPivotY());
            }
            if (handwritingFrameIosBuilder_ == null) {
              if (!other.handwritingFrameIos_.isEmpty()) {
                if (handwritingFrameIos_.isEmpty()) {
                  handwritingFrameIos_ = other.handwritingFrameIos_;
                  bitField0_ = (bitField0_ & ~0x00000008);
                } else {
                  ensureHandwritingFrameIosIsMutable();
                  handwritingFrameIos_.addAll(other.handwritingFrameIos_);
                }
                onChanged();
              }
            } else {
              if (!other.handwritingFrameIos_.isEmpty()) {
                if (handwritingFrameIosBuilder_.isEmpty()) {
                  handwritingFrameIosBuilder_.dispose();
                  handwritingFrameIosBuilder_ = null;
                  handwritingFrameIos_ = other.handwritingFrameIos_;
                  bitField0_ = (bitField0_ & ~0x00000008);
                  handwritingFrameIosBuilder_ = 
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                       getHandwritingFrameIosFieldBuilder() : null;
                } else {
                  handwritingFrameIosBuilder_.addAllMessages(other.handwritingFrameIos_);
                }
              }
            }
            if (drawingActionsBuilder_ == null) {
              if (!other.drawingActions_.isEmpty()) {
                if (drawingActions_.isEmpty()) {
                  drawingActions_ = other.drawingActions_;
                  bitField0_ = (bitField0_ & ~0x00000010);
                } else {
                  ensureDrawingActionsIsMutable();
                  drawingActions_.addAll(other.drawingActions_);
                }
                onChanged();
              }
            } else {
              if (!other.drawingActions_.isEmpty()) {
                if (drawingActionsBuilder_.isEmpty()) {
                  drawingActionsBuilder_.dispose();
                  drawingActionsBuilder_ = null;
                  drawingActions_ = other.drawingActions_;
                  bitField0_ = (bitField0_ & ~0x00000010);
                  drawingActionsBuilder_ = 
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                       getDrawingActionsFieldBuilder() : null;
                } else {
                  drawingActionsBuilder_.addAllMessages(other.drawingActions_);
                }
              }
            }
            if (actionsBuilder_ == null) {
              if (!other.actions_.isEmpty()) {
                if (actions_.isEmpty()) {
                  actions_ = other.actions_;
                  bitField0_ = (bitField0_ & ~0x00000020);
                } else {
                  ensureActionsIsMutable();
                  actions_.addAll(other.actions_);
                }
                onChanged();
              }
            } else {
              if (!other.actions_.isEmpty()) {
                if (actionsBuilder_.isEmpty()) {
                  actionsBuilder_.dispose();
                  actionsBuilder_ = null;
                  actions_ = other.actions_;
                  bitField0_ = (bitField0_ & ~0x00000020);
                  actionsBuilder_ = 
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                       getActionsFieldBuilder() : null;
                } else {
                  actionsBuilder_.addAllMessages(other.actions_);
                }
              }
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon layerCommon_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder> layerCommonBuilder_;
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           * @return Whether the layerCommon field is set.
           */
          public boolean hasLayerCommon() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           * @return The layerCommon.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getLayerCommon() {
            if (layerCommonBuilder_ == null) {
              return layerCommon_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
            } else {
              return layerCommonBuilder_.getMessage();
            }
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder setLayerCommon(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon value) {
            if (layerCommonBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              layerCommon_ = value;
              onChanged();
            } else {
              layerCommonBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000001;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder setLayerCommon(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder builderForValue) {
            if (layerCommonBuilder_ == null) {
              layerCommon_ = builderForValue.build();
              onChanged();
            } else {
              layerCommonBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000001;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder mergeLayerCommon(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon value) {
            if (layerCommonBuilder_ == null) {
              if (((bitField0_ & 0x00000001) != 0) &&
                  layerCommon_ != null &&
                  layerCommon_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance()) {
                layerCommon_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.newBuilder(layerCommon_).mergeFrom(value).buildPartial();
              } else {
                layerCommon_ = value;
              }
              onChanged();
            } else {
              layerCommonBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000001;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder clearLayerCommon() {
            if (layerCommonBuilder_ == null) {
              layerCommon_ = null;
              onChanged();
            } else {
              layerCommonBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000001);
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder getLayerCommonBuilder() {
            bitField0_ |= 0x00000001;
            onChanged();
            return getLayerCommonFieldBuilder().getBuilder();
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder getLayerCommonOrBuilder() {
            if (layerCommonBuilder_ != null) {
              return layerCommonBuilder_.getMessageOrBuilder();
            } else {
              return layerCommon_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
            }
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder> 
              getLayerCommonFieldBuilder() {
            if (layerCommonBuilder_ == null) {
              layerCommonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder>(
                      getLayerCommon(),
                      getParentForChildren(),
                      isClean());
              layerCommon_ = null;
            }
            return layerCommonBuilder_;
          }

          private int pivotX_ ;
          /**
           * <code>optional int32 pivot_x = 101;</code>
           * @return Whether the pivotX field is set.
           */
          @java.lang.Override
          public boolean hasPivotX() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional int32 pivot_x = 101;</code>
           * @return The pivotX.
           */
          @java.lang.Override
          public int getPivotX() {
            return pivotX_;
          }
          /**
           * <code>optional int32 pivot_x = 101;</code>
           * @param value The pivotX to set.
           * @return This builder for chaining.
           */
          public Builder setPivotX(int value) {
            bitField0_ |= 0x00000002;
            pivotX_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 pivot_x = 101;</code>
           * @return This builder for chaining.
           */
          public Builder clearPivotX() {
            bitField0_ = (bitField0_ & ~0x00000002);
            pivotX_ = 0;
            onChanged();
            return this;
          }

          private int pivotY_ ;
          /**
           * <code>optional int32 pivot_y = 102;</code>
           * @return Whether the pivotY field is set.
           */
          @java.lang.Override
          public boolean hasPivotY() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <code>optional int32 pivot_y = 102;</code>
           * @return The pivotY.
           */
          @java.lang.Override
          public int getPivotY() {
            return pivotY_;
          }
          /**
           * <code>optional int32 pivot_y = 102;</code>
           * @param value The pivotY to set.
           * @return This builder for chaining.
           */
          public Builder setPivotY(int value) {
            bitField0_ |= 0x00000004;
            pivotY_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 pivot_y = 102;</code>
           * @return This builder for chaining.
           */
          public Builder clearPivotY() {
            bitField0_ = (bitField0_ & ~0x00000004);
            pivotY_ = 0;
            onChanged();
            return this;
          }

          private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint> handwritingFrameIos_ =
            java.util.Collections.emptyList();
          private void ensureHandwritingFrameIosIsMutable() {
            if (!((bitField0_ & 0x00000008) != 0)) {
              handwritingFrameIos_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint>(handwritingFrameIos_);
              bitField0_ |= 0x00000008;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPointOrBuilder> handwritingFrameIosBuilder_;

          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
           */
          public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint> getHandwritingFrameIosList() {
            if (handwritingFrameIosBuilder_ == null) {
              return java.util.Collections.unmodifiableList(handwritingFrameIos_);
            } else {
              return handwritingFrameIosBuilder_.getMessageList();
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
           */
          public int getHandwritingFrameIosCount() {
            if (handwritingFrameIosBuilder_ == null) {
              return handwritingFrameIos_.size();
            } else {
              return handwritingFrameIosBuilder_.getCount();
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint getHandwritingFrameIos(int index) {
            if (handwritingFrameIosBuilder_ == null) {
              return handwritingFrameIos_.get(index);
            } else {
              return handwritingFrameIosBuilder_.getMessage(index);
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
           */
          public Builder setHandwritingFrameIos(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint value) {
            if (handwritingFrameIosBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureHandwritingFrameIosIsMutable();
              handwritingFrameIos_.set(index, value);
              onChanged();
            } else {
              handwritingFrameIosBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
           */
          public Builder setHandwritingFrameIos(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.Builder builderForValue) {
            if (handwritingFrameIosBuilder_ == null) {
              ensureHandwritingFrameIosIsMutable();
              handwritingFrameIos_.set(index, builderForValue.build());
              onChanged();
            } else {
              handwritingFrameIosBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
           */
          public Builder addHandwritingFrameIos(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint value) {
            if (handwritingFrameIosBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureHandwritingFrameIosIsMutable();
              handwritingFrameIos_.add(value);
              onChanged();
            } else {
              handwritingFrameIosBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
           */
          public Builder addHandwritingFrameIos(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint value) {
            if (handwritingFrameIosBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureHandwritingFrameIosIsMutable();
              handwritingFrameIos_.add(index, value);
              onChanged();
            } else {
              handwritingFrameIosBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
           */
          public Builder addHandwritingFrameIos(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.Builder builderForValue) {
            if (handwritingFrameIosBuilder_ == null) {
              ensureHandwritingFrameIosIsMutable();
              handwritingFrameIos_.add(builderForValue.build());
              onChanged();
            } else {
              handwritingFrameIosBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
           */
          public Builder addHandwritingFrameIos(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.Builder builderForValue) {
            if (handwritingFrameIosBuilder_ == null) {
              ensureHandwritingFrameIosIsMutable();
              handwritingFrameIos_.add(index, builderForValue.build());
              onChanged();
            } else {
              handwritingFrameIosBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
           */
          public Builder addAllHandwritingFrameIos(
              java.lang.Iterable<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint> values) {
            if (handwritingFrameIosBuilder_ == null) {
              ensureHandwritingFrameIosIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, handwritingFrameIos_);
              onChanged();
            } else {
              handwritingFrameIosBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
           */
          public Builder clearHandwritingFrameIos() {
            if (handwritingFrameIosBuilder_ == null) {
              handwritingFrameIos_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000008);
              onChanged();
            } else {
              handwritingFrameIosBuilder_.clear();
            }
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
           */
          public Builder removeHandwritingFrameIos(int index) {
            if (handwritingFrameIosBuilder_ == null) {
              ensureHandwritingFrameIosIsMutable();
              handwritingFrameIos_.remove(index);
              onChanged();
            } else {
              handwritingFrameIosBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.Builder getHandwritingFrameIosBuilder(
              int index) {
            return getHandwritingFrameIosFieldBuilder().getBuilder(index);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPointOrBuilder getHandwritingFrameIosOrBuilder(
              int index) {
            if (handwritingFrameIosBuilder_ == null) {
              return handwritingFrameIos_.get(index);  } else {
              return handwritingFrameIosBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
           */
          public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPointOrBuilder> 
               getHandwritingFrameIosOrBuilderList() {
            if (handwritingFrameIosBuilder_ != null) {
              return handwritingFrameIosBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(handwritingFrameIos_);
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.Builder addHandwritingFrameIosBuilder() {
            return getHandwritingFrameIosFieldBuilder().addBuilder(
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.getDefaultInstance());
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.Builder addHandwritingFrameIosBuilder(
              int index) {
            return getHandwritingFrameIosFieldBuilder().addBuilder(
                index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.getDefaultInstance());
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint handwriting_frame_ios = 103;</code>
           */
          public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.Builder> 
               getHandwritingFrameIosBuilderList() {
            return getHandwritingFrameIosFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPointOrBuilder> 
              getHandwritingFrameIosFieldBuilder() {
            if (handwritingFrameIosBuilder_ == null) {
              handwritingFrameIosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPointOrBuilder>(
                      handwritingFrameIos_,
                      ((bitField0_ & 0x00000008) != 0),
                      getParentForChildren(),
                      isClean());
              handwritingFrameIos_ = null;
            }
            return handwritingFrameIosBuilder_;
          }

          private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction> drawingActions_ =
            java.util.Collections.emptyList();
          private void ensureDrawingActionsIsMutable() {
            if (!((bitField0_ & 0x00000010) != 0)) {
              drawingActions_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction>(drawingActions_);
              bitField0_ |= 0x00000010;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionOrBuilder> drawingActionsBuilder_;

          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
           */
          public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction> getDrawingActionsList() {
            if (drawingActionsBuilder_ == null) {
              return java.util.Collections.unmodifiableList(drawingActions_);
            } else {
              return drawingActionsBuilder_.getMessageList();
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
           */
          public int getDrawingActionsCount() {
            if (drawingActionsBuilder_ == null) {
              return drawingActions_.size();
            } else {
              return drawingActionsBuilder_.getCount();
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction getDrawingActions(int index) {
            if (drawingActionsBuilder_ == null) {
              return drawingActions_.get(index);
            } else {
              return drawingActionsBuilder_.getMessage(index);
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
           */
          public Builder setDrawingActions(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction value) {
            if (drawingActionsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureDrawingActionsIsMutable();
              drawingActions_.set(index, value);
              onChanged();
            } else {
              drawingActionsBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
           */
          public Builder setDrawingActions(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.Builder builderForValue) {
            if (drawingActionsBuilder_ == null) {
              ensureDrawingActionsIsMutable();
              drawingActions_.set(index, builderForValue.build());
              onChanged();
            } else {
              drawingActionsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
           */
          public Builder addDrawingActions(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction value) {
            if (drawingActionsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureDrawingActionsIsMutable();
              drawingActions_.add(value);
              onChanged();
            } else {
              drawingActionsBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
           */
          public Builder addDrawingActions(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction value) {
            if (drawingActionsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureDrawingActionsIsMutable();
              drawingActions_.add(index, value);
              onChanged();
            } else {
              drawingActionsBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
           */
          public Builder addDrawingActions(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.Builder builderForValue) {
            if (drawingActionsBuilder_ == null) {
              ensureDrawingActionsIsMutable();
              drawingActions_.add(builderForValue.build());
              onChanged();
            } else {
              drawingActionsBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
           */
          public Builder addDrawingActions(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.Builder builderForValue) {
            if (drawingActionsBuilder_ == null) {
              ensureDrawingActionsIsMutable();
              drawingActions_.add(index, builderForValue.build());
              onChanged();
            } else {
              drawingActionsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
           */
          public Builder addAllDrawingActions(
              java.lang.Iterable<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction> values) {
            if (drawingActionsBuilder_ == null) {
              ensureDrawingActionsIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, drawingActions_);
              onChanged();
            } else {
              drawingActionsBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
           */
          public Builder clearDrawingActions() {
            if (drawingActionsBuilder_ == null) {
              drawingActions_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000010);
              onChanged();
            } else {
              drawingActionsBuilder_.clear();
            }
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
           */
          public Builder removeDrawingActions(int index) {
            if (drawingActionsBuilder_ == null) {
              ensureDrawingActionsIsMutable();
              drawingActions_.remove(index);
              onChanged();
            } else {
              drawingActionsBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.Builder getDrawingActionsBuilder(
              int index) {
            return getDrawingActionsFieldBuilder().getBuilder(index);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionOrBuilder getDrawingActionsOrBuilder(
              int index) {
            if (drawingActionsBuilder_ == null) {
              return drawingActions_.get(index);  } else {
              return drawingActionsBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
           */
          public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionOrBuilder> 
               getDrawingActionsOrBuilderList() {
            if (drawingActionsBuilder_ != null) {
              return drawingActionsBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(drawingActions_);
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.Builder addDrawingActionsBuilder() {
            return getDrawingActionsFieldBuilder().addBuilder(
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.getDefaultInstance());
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.Builder addDrawingActionsBuilder(
              int index) {
            return getDrawingActionsFieldBuilder().addBuilder(
                index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.getDefaultInstance());
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 1;</code>
           */
          public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.Builder> 
               getDrawingActionsBuilderList() {
            return getDrawingActionsFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionOrBuilder> 
              getDrawingActionsFieldBuilder() {
            if (drawingActionsBuilder_ == null) {
              drawingActionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionOrBuilder>(
                      drawingActions_,
                      ((bitField0_ & 0x00000010) != 0),
                      getParentForChildren(),
                      isClean());
              drawingActions_ = null;
            }
            return drawingActionsBuilder_;
          }

          private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction> actions_ =
            java.util.Collections.emptyList();
          private void ensureActionsIsMutable() {
            if (!((bitField0_ & 0x00000020) != 0)) {
              actions_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction>(actions_);
              bitField0_ |= 0x00000020;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingActionOrBuilder> actionsBuilder_;

          /**
           * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
           */
          public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction> getActionsList() {
            if (actionsBuilder_ == null) {
              return java.util.Collections.unmodifiableList(actions_);
            } else {
              return actionsBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
           */
          public int getActionsCount() {
            if (actionsBuilder_ == null) {
              return actions_.size();
            } else {
              return actionsBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction getActions(int index) {
            if (actionsBuilder_ == null) {
              return actions_.get(index);
            } else {
              return actionsBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
           */
          public Builder setActions(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction value) {
            if (actionsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureActionsIsMutable();
              actions_.set(index, value);
              onChanged();
            } else {
              actionsBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
           */
          public Builder setActions(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction.Builder builderForValue) {
            if (actionsBuilder_ == null) {
              ensureActionsIsMutable();
              actions_.set(index, builderForValue.build());
              onChanged();
            } else {
              actionsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
           */
          public Builder addActions(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction value) {
            if (actionsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureActionsIsMutable();
              actions_.add(value);
              onChanged();
            } else {
              actionsBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
           */
          public Builder addActions(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction value) {
            if (actionsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureActionsIsMutable();
              actions_.add(index, value);
              onChanged();
            } else {
              actionsBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
           */
          public Builder addActions(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction.Builder builderForValue) {
            if (actionsBuilder_ == null) {
              ensureActionsIsMutable();
              actions_.add(builderForValue.build());
              onChanged();
            } else {
              actionsBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
           */
          public Builder addActions(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction.Builder builderForValue) {
            if (actionsBuilder_ == null) {
              ensureActionsIsMutable();
              actions_.add(index, builderForValue.build());
              onChanged();
            } else {
              actionsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
           */
          public Builder addAllActions(
              java.lang.Iterable<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction> values) {
            if (actionsBuilder_ == null) {
              ensureActionsIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, actions_);
              onChanged();
            } else {
              actionsBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
           */
          public Builder clearActions() {
            if (actionsBuilder_ == null) {
              actions_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000020);
              onChanged();
            } else {
              actionsBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
           */
          public Builder removeActions(int index) {
            if (actionsBuilder_ == null) {
              ensureActionsIsMutable();
              actions_.remove(index);
              onChanged();
            } else {
              actionsBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction.Builder getActionsBuilder(
              int index) {
            return getActionsFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingActionOrBuilder getActionsOrBuilder(
              int index) {
            if (actionsBuilder_ == null) {
              return actions_.get(index);  } else {
              return actionsBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
           */
          public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingActionOrBuilder> 
               getActionsOrBuilderList() {
            if (actionsBuilder_ != null) {
              return actionsBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(actions_);
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction.Builder addActionsBuilder() {
            return getActionsFieldBuilder().addBuilder(
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction.getDefaultInstance());
          }
          /**
           * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction.Builder addActionsBuilder(
              int index) {
            return getActionsFieldBuilder().addBuilder(
                index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction.getDefaultInstance());
          }
          /**
           * <code>repeated .KMProto.KMProject.HandwritingAction actions = 104;</code>
           */
          public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction.Builder> 
               getActionsBuilderList() {
            return getActionsFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingActionOrBuilder> 
              getActionsFieldBuilder() {
            if (actionsBuilder_ == null) {
              actionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingActionOrBuilder>(
                      actions_,
                      ((bitField0_ & 0x00000020) != 0),
                      getParentForChildren(),
                      isClean());
              actions_ = null;
            }
            return actionsBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.HandwritingLayer)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.HandwritingLayer)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<HandwritingLayer>
            PARSER = new com.google.protobuf.AbstractParser<HandwritingLayer>() {
          @java.lang.Override
          public HandwritingLayer parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new HandwritingLayer(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<HandwritingLayer> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<HandwritingLayer> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingLayer getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface StickerLayerOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.StickerLayer)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return Whether the layerCommon field is set.
         */
        boolean hasLayerCommon();
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return The layerCommon.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getLayerCommon();
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder getLayerCommonOrBuilder();

        /**
         * <code>optional bool colorize_enabled = 101;</code>
         * @return Whether the colorizeEnabled field is set.
         */
        boolean hasColorizeEnabled();
        /**
         * <code>optional bool colorize_enabled = 101;</code>
         * @return The colorizeEnabled.
         */
        boolean getColorizeEnabled();

        /**
         * <code>optional int32 colorize_color = 102;</code>
         * @return Whether the colorizeColor field is set.
         */
        boolean hasColorizeColor();
        /**
         * <code>optional int32 colorize_color = 102;</code>
         * @return The colorizeColor.
         */
        int getColorizeColor();

        /**
         * <code>optional int32 sticker_id = 103;</code>
         * @return Whether the stickerId field is set.
         */
        boolean hasStickerId();
        /**
         * <code>optional int32 sticker_id = 103;</code>
         * @return The stickerId.
         */
        int getStickerId();
      }
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * Protobuf type {@code KMProto.KMProject.StickerLayer}
       */
      public static final class StickerLayer extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.StickerLayer)
          StickerLayerOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use StickerLayer.newBuilder() to construct.
        private StickerLayer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private StickerLayer() {
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new StickerLayer();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private StickerLayer(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 802: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000001) != 0)) {
                    subBuilder = layerCommon_.toBuilder();
                  }
                  layerCommon_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(layerCommon_);
                    layerCommon_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000001;
                  break;
                }
                case 808: {
                  bitField0_ |= 0x00000002;
                  colorizeEnabled_ = input.readBool();
                  break;
                }
                case 816: {
                  bitField0_ |= 0x00000004;
                  colorizeColor_ = input.readInt32();
                  break;
                }
                case 824: {
                  bitField0_ |= 0x00000008;
                  stickerId_ = input.readInt32();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_StickerLayer_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_StickerLayer_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer.Builder.class);
        }

        private int bitField0_;
        public static final int LAYER_COMMON_FIELD_NUMBER = 100;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon layerCommon_;
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return Whether the layerCommon field is set.
         */
        @java.lang.Override
        public boolean hasLayerCommon() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return The layerCommon.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getLayerCommon() {
          return layerCommon_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
        }
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder getLayerCommonOrBuilder() {
          return layerCommon_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
        }

        public static final int COLORIZE_ENABLED_FIELD_NUMBER = 101;
        private boolean colorizeEnabled_;
        /**
         * <code>optional bool colorize_enabled = 101;</code>
         * @return Whether the colorizeEnabled field is set.
         */
        @java.lang.Override
        public boolean hasColorizeEnabled() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional bool colorize_enabled = 101;</code>
         * @return The colorizeEnabled.
         */
        @java.lang.Override
        public boolean getColorizeEnabled() {
          return colorizeEnabled_;
        }

        public static final int COLORIZE_COLOR_FIELD_NUMBER = 102;
        private int colorizeColor_;
        /**
         * <code>optional int32 colorize_color = 102;</code>
         * @return Whether the colorizeColor field is set.
         */
        @java.lang.Override
        public boolean hasColorizeColor() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional int32 colorize_color = 102;</code>
         * @return The colorizeColor.
         */
        @java.lang.Override
        public int getColorizeColor() {
          return colorizeColor_;
        }

        public static final int STICKER_ID_FIELD_NUMBER = 103;
        private int stickerId_;
        /**
         * <code>optional int32 sticker_id = 103;</code>
         * @return Whether the stickerId field is set.
         */
        @java.lang.Override
        public boolean hasStickerId() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional int32 sticker_id = 103;</code>
         * @return The stickerId.
         */
        @java.lang.Override
        public int getStickerId() {
          return stickerId_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeMessage(100, getLayerCommon());
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeBool(101, colorizeEnabled_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeInt32(102, colorizeColor_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeInt32(103, stickerId_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(100, getLayerCommon());
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(101, colorizeEnabled_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(102, colorizeColor_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(103, stickerId_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer) obj;

          if (hasLayerCommon() != other.hasLayerCommon()) return false;
          if (hasLayerCommon()) {
            if (!getLayerCommon()
                .equals(other.getLayerCommon())) return false;
          }
          if (hasColorizeEnabled() != other.hasColorizeEnabled()) return false;
          if (hasColorizeEnabled()) {
            if (getColorizeEnabled()
                != other.getColorizeEnabled()) return false;
          }
          if (hasColorizeColor() != other.hasColorizeColor()) return false;
          if (hasColorizeColor()) {
            if (getColorizeColor()
                != other.getColorizeColor()) return false;
          }
          if (hasStickerId() != other.hasStickerId()) return false;
          if (hasStickerId()) {
            if (getStickerId()
                != other.getStickerId()) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasLayerCommon()) {
            hash = (37 * hash) + LAYER_COMMON_FIELD_NUMBER;
            hash = (53 * hash) + getLayerCommon().hashCode();
          }
          if (hasColorizeEnabled()) {
            hash = (37 * hash) + COLORIZE_ENABLED_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getColorizeEnabled());
          }
          if (hasColorizeColor()) {
            hash = (37 * hash) + COLORIZE_COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getColorizeColor();
          }
          if (hasStickerId()) {
            hash = (37 * hash) + STICKER_ID_FIELD_NUMBER;
            hash = (53 * hash) + getStickerId();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * Protobuf type {@code KMProto.KMProject.StickerLayer}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.StickerLayer)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayerOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_StickerLayer_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_StickerLayer_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
              getLayerCommonFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            if (layerCommonBuilder_ == null) {
              layerCommon_ = null;
            } else {
              layerCommonBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000001);
            colorizeEnabled_ = false;
            bitField0_ = (bitField0_ & ~0x00000002);
            colorizeColor_ = 0;
            bitField0_ = (bitField0_ & ~0x00000004);
            stickerId_ = 0;
            bitField0_ = (bitField0_ & ~0x00000008);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_StickerLayer_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              if (layerCommonBuilder_ == null) {
                result.layerCommon_ = layerCommon_;
              } else {
                result.layerCommon_ = layerCommonBuilder_.build();
              }
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.colorizeEnabled_ = colorizeEnabled_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.colorizeColor_ = colorizeColor_;
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.stickerId_ = stickerId_;
              to_bitField0_ |= 0x00000008;
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer.getDefaultInstance()) return this;
            if (other.hasLayerCommon()) {
              mergeLayerCommon(other.getLayerCommon());
            }
            if (other.hasColorizeEnabled()) {
              setColorizeEnabled(other.getColorizeEnabled());
            }
            if (other.hasColorizeColor()) {
              setColorizeColor(other.getColorizeColor());
            }
            if (other.hasStickerId()) {
              setStickerId(other.getStickerId());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon layerCommon_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder> layerCommonBuilder_;
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           * @return Whether the layerCommon field is set.
           */
          public boolean hasLayerCommon() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           * @return The layerCommon.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getLayerCommon() {
            if (layerCommonBuilder_ == null) {
              return layerCommon_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
            } else {
              return layerCommonBuilder_.getMessage();
            }
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder setLayerCommon(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon value) {
            if (layerCommonBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              layerCommon_ = value;
              onChanged();
            } else {
              layerCommonBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000001;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder setLayerCommon(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder builderForValue) {
            if (layerCommonBuilder_ == null) {
              layerCommon_ = builderForValue.build();
              onChanged();
            } else {
              layerCommonBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000001;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder mergeLayerCommon(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon value) {
            if (layerCommonBuilder_ == null) {
              if (((bitField0_ & 0x00000001) != 0) &&
                  layerCommon_ != null &&
                  layerCommon_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance()) {
                layerCommon_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.newBuilder(layerCommon_).mergeFrom(value).buildPartial();
              } else {
                layerCommon_ = value;
              }
              onChanged();
            } else {
              layerCommonBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000001;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder clearLayerCommon() {
            if (layerCommonBuilder_ == null) {
              layerCommon_ = null;
              onChanged();
            } else {
              layerCommonBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000001);
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder getLayerCommonBuilder() {
            bitField0_ |= 0x00000001;
            onChanged();
            return getLayerCommonFieldBuilder().getBuilder();
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder getLayerCommonOrBuilder() {
            if (layerCommonBuilder_ != null) {
              return layerCommonBuilder_.getMessageOrBuilder();
            } else {
              return layerCommon_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
            }
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder> 
              getLayerCommonFieldBuilder() {
            if (layerCommonBuilder_ == null) {
              layerCommonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder>(
                      getLayerCommon(),
                      getParentForChildren(),
                      isClean());
              layerCommon_ = null;
            }
            return layerCommonBuilder_;
          }

          private boolean colorizeEnabled_ ;
          /**
           * <code>optional bool colorize_enabled = 101;</code>
           * @return Whether the colorizeEnabled field is set.
           */
          @java.lang.Override
          public boolean hasColorizeEnabled() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional bool colorize_enabled = 101;</code>
           * @return The colorizeEnabled.
           */
          @java.lang.Override
          public boolean getColorizeEnabled() {
            return colorizeEnabled_;
          }
          /**
           * <code>optional bool colorize_enabled = 101;</code>
           * @param value The colorizeEnabled to set.
           * @return This builder for chaining.
           */
          public Builder setColorizeEnabled(boolean value) {
            bitField0_ |= 0x00000002;
            colorizeEnabled_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool colorize_enabled = 101;</code>
           * @return This builder for chaining.
           */
          public Builder clearColorizeEnabled() {
            bitField0_ = (bitField0_ & ~0x00000002);
            colorizeEnabled_ = false;
            onChanged();
            return this;
          }

          private int colorizeColor_ ;
          /**
           * <code>optional int32 colorize_color = 102;</code>
           * @return Whether the colorizeColor field is set.
           */
          @java.lang.Override
          public boolean hasColorizeColor() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <code>optional int32 colorize_color = 102;</code>
           * @return The colorizeColor.
           */
          @java.lang.Override
          public int getColorizeColor() {
            return colorizeColor_;
          }
          /**
           * <code>optional int32 colorize_color = 102;</code>
           * @param value The colorizeColor to set.
           * @return This builder for chaining.
           */
          public Builder setColorizeColor(int value) {
            bitField0_ |= 0x00000004;
            colorizeColor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 colorize_color = 102;</code>
           * @return This builder for chaining.
           */
          public Builder clearColorizeColor() {
            bitField0_ = (bitField0_ & ~0x00000004);
            colorizeColor_ = 0;
            onChanged();
            return this;
          }

          private int stickerId_ ;
          /**
           * <code>optional int32 sticker_id = 103;</code>
           * @return Whether the stickerId field is set.
           */
          @java.lang.Override
          public boolean hasStickerId() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <code>optional int32 sticker_id = 103;</code>
           * @return The stickerId.
           */
          @java.lang.Override
          public int getStickerId() {
            return stickerId_;
          }
          /**
           * <code>optional int32 sticker_id = 103;</code>
           * @param value The stickerId to set.
           * @return This builder for chaining.
           */
          public Builder setStickerId(int value) {
            bitField0_ |= 0x00000008;
            stickerId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 sticker_id = 103;</code>
           * @return This builder for chaining.
           */
          public Builder clearStickerId() {
            bitField0_ = (bitField0_ & ~0x00000008);
            stickerId_ = 0;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.StickerLayer)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.StickerLayer)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<StickerLayer>
            PARSER = new com.google.protobuf.AbstractParser<StickerLayer>() {
          @java.lang.Override
          public StickerLayer parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new StickerLayer(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<StickerLayer> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<StickerLayer> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StickerLayer getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface AssetLayerOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.AssetLayer)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return Whether the layerCommon field is set.
         */
        boolean hasLayerCommon();
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return The layerCommon.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getLayerCommon();
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder getLayerCommonOrBuilder();

        /**
         * <code>optional string asset_item_id = 101;</code>
         * @return Whether the assetItemId field is set.
         */
        boolean hasAssetItemId();
        /**
         * <code>optional string asset_item_id = 101;</code>
         * @return The assetItemId.
         */
        java.lang.String getAssetItemId();
        /**
         * <code>optional string asset_item_id = 101;</code>
         * @return The bytes for assetItemId.
         */
        com.google.protobuf.ByteString
            getAssetItemIdBytes();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.StringHashMap effect_options = 102;</code>
         * @return Whether the effectOptions field is set.
         */
        boolean hasEffectOptions();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.StringHashMap effect_options = 102;</code>
         * @return The effectOptions.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap getEffectOptions();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.StringHashMap effect_options = 102;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapOrBuilder getEffectOptionsOrBuilder();

        /**
         * <code>optional .KMProto.KMProject.AssetLayer.AssetLayerType asset_layer_type = 103;</code>
         * @return Whether the assetLayerType field is set.
         */
        boolean hasAssetLayerType();
        /**
         * <code>optional .KMProto.KMProject.AssetLayer.AssetLayerType asset_layer_type = 103;</code>
         * @return The assetLayerType.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.AssetLayerType getAssetLayerType();

        /**
         * <code>optional string asset_item_name_for_ios = 104;</code>
         * @return Whether the assetItemNameForIos field is set.
         */
        boolean hasAssetItemNameForIos();
        /**
         * <code>optional string asset_item_name_for_ios = 104;</code>
         * @return The assetItemNameForIos.
         */
        java.lang.String getAssetItemNameForIos();
        /**
         * <code>optional string asset_item_name_for_ios = 104;</code>
         * @return The bytes for assetItemNameForIos.
         */
        com.google.protobuf.ByteString
            getAssetItemNameForIosBytes();

        /**
         * <code>optional string asset_name_for_ios = 105;</code>
         * @return Whether the assetNameForIos field is set.
         */
        boolean hasAssetNameForIos();
        /**
         * <code>optional string asset_name_for_ios = 105;</code>
         * @return The assetNameForIos.
         */
        java.lang.String getAssetNameForIos();
        /**
         * <code>optional string asset_name_for_ios = 105;</code>
         * @return The bytes for assetNameForIos.
         */
        com.google.protobuf.ByteString
            getAssetNameForIosBytes();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool sync_xy_scale = 106;</code>
         * @return Whether the syncXyScale field is set.
         */
        boolean hasSyncXyScale();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool sync_xy_scale = 106;</code>
         * @return The syncXyScale.
         */
        boolean getSyncXyScale();

        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
         */
        java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem> 
            getEffectOptionList();
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem getEffectOption(int index);
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
         */
        int getEffectOptionCount();
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
         */
        java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder> 
            getEffectOptionOrBuilderList();
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder getEffectOptionOrBuilder(
            int index);
      }
      /**
       * Protobuf type {@code KMProto.KMProject.AssetLayer}
       */
      public static final class AssetLayer extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.AssetLayer)
          AssetLayerOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use AssetLayer.newBuilder() to construct.
        private AssetLayer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private AssetLayer() {
          assetItemId_ = "";
          assetLayerType_ = 1;
          assetItemNameForIos_ = "";
          assetNameForIos_ = "";
          effectOption_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new AssetLayer();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private AssetLayer(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 802: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000001) != 0)) {
                    subBuilder = layerCommon_.toBuilder();
                  }
                  layerCommon_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(layerCommon_);
                    layerCommon_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000001;
                  break;
                }
                case 810: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000002;
                  assetItemId_ = bs;
                  break;
                }
                case 818: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000004) != 0)) {
                    subBuilder = effectOptions_.toBuilder();
                  }
                  effectOptions_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(effectOptions_);
                    effectOptions_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000004;
                  break;
                }
                case 824: {
                  int rawValue = input.readEnum();
                    @SuppressWarnings("deprecation")
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.AssetLayerType value = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.AssetLayerType.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(103, rawValue);
                  } else {
                    bitField0_ |= 0x00000008;
                    assetLayerType_ = rawValue;
                  }
                  break;
                }
                case 834: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000010;
                  assetItemNameForIos_ = bs;
                  break;
                }
                case 842: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000020;
                  assetNameForIos_ = bs;
                  break;
                }
                case 848: {
                  bitField0_ |= 0x00000040;
                  syncXyScale_ = input.readBool();
                  break;
                }
                case 858: {
                  if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                    effectOption_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem>();
                    mutable_bitField0_ |= 0x00000080;
                  }
                  effectOption_.add(
                      input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.PARSER, extensionRegistry));
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000080) != 0)) {
              effectOption_ = java.util.Collections.unmodifiableList(effectOption_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_AssetLayer_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_AssetLayer_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.Builder.class);
        }

        /**
         * Protobuf enum {@code KMProto.KMProject.AssetLayer.AssetLayerType}
         */
        public enum AssetLayerType
            implements com.google.protobuf.ProtocolMessageEnum {
          /**
           * <code>EFFECT_LAYER = 1;</code>
           */
          EFFECT_LAYER(1),
          /**
           * <code>OVERLAY_LAYER = 2;</code>
           */
          OVERLAY_LAYER(2),
          ;

          /**
           * <code>EFFECT_LAYER = 1;</code>
           */
          public static final int EFFECT_LAYER_VALUE = 1;
          /**
           * <code>OVERLAY_LAYER = 2;</code>
           */
          public static final int OVERLAY_LAYER_VALUE = 2;


          public final int getNumber() {
            return value;
          }

          /**
           * @param value The numeric wire value of the corresponding enum entry.
           * @return The enum associated with the given numeric wire value.
           * @deprecated Use {@link #forNumber(int)} instead.
           */
          @java.lang.Deprecated
          public static AssetLayerType valueOf(int value) {
            return forNumber(value);
          }

          /**
           * @param value The numeric wire value of the corresponding enum entry.
           * @return The enum associated with the given numeric wire value.
           */
          public static AssetLayerType forNumber(int value) {
            switch (value) {
              case 1: return EFFECT_LAYER;
              case 2: return OVERLAY_LAYER;
              default: return null;
            }
          }

          public static com.google.protobuf.Internal.EnumLiteMap<AssetLayerType>
              internalGetValueMap() {
            return internalValueMap;
          }
          private static final com.google.protobuf.Internal.EnumLiteMap<
              AssetLayerType> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<AssetLayerType>() {
                  public AssetLayerType findValueByNumber(int number) {
                    return AssetLayerType.forNumber(number);
                  }
                };

          public final com.google.protobuf.Descriptors.EnumValueDescriptor
              getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
          }
          public final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptorForType() {
            return getDescriptor();
          }
          public static final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.getDescriptor().getEnumTypes().get(0);
          }

          private static final AssetLayerType[] VALUES = values();

          public static AssetLayerType valueOf(
              com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
              throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
            }
            return VALUES[desc.getIndex()];
          }

          private final int value;

          private AssetLayerType(int value) {
            this.value = value;
          }

          // @@protoc_insertion_point(enum_scope:KMProto.KMProject.AssetLayer.AssetLayerType)
        }

        private int bitField0_;
        public static final int LAYER_COMMON_FIELD_NUMBER = 100;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon layerCommon_;
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return Whether the layerCommon field is set.
         */
        @java.lang.Override
        public boolean hasLayerCommon() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return The layerCommon.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getLayerCommon() {
          return layerCommon_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
        }
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder getLayerCommonOrBuilder() {
          return layerCommon_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
        }

        public static final int ASSET_ITEM_ID_FIELD_NUMBER = 101;
        private volatile java.lang.Object assetItemId_;
        /**
         * <code>optional string asset_item_id = 101;</code>
         * @return Whether the assetItemId field is set.
         */
        @java.lang.Override
        public boolean hasAssetItemId() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional string asset_item_id = 101;</code>
         * @return The assetItemId.
         */
        @java.lang.Override
        public java.lang.String getAssetItemId() {
          java.lang.Object ref = assetItemId_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              assetItemId_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string asset_item_id = 101;</code>
         * @return The bytes for assetItemId.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getAssetItemIdBytes() {
          java.lang.Object ref = assetItemId_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            assetItemId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int EFFECT_OPTIONS_FIELD_NUMBER = 102;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap effectOptions_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.StringHashMap effect_options = 102;</code>
         * @return Whether the effectOptions field is set.
         */
        @java.lang.Override
        public boolean hasEffectOptions() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.StringHashMap effect_options = 102;</code>
         * @return The effectOptions.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap getEffectOptions() {
          return effectOptions_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.getDefaultInstance() : effectOptions_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.StringHashMap effect_options = 102;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapOrBuilder getEffectOptionsOrBuilder() {
          return effectOptions_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.getDefaultInstance() : effectOptions_;
        }

        public static final int ASSET_LAYER_TYPE_FIELD_NUMBER = 103;
        private int assetLayerType_;
        /**
         * <code>optional .KMProto.KMProject.AssetLayer.AssetLayerType asset_layer_type = 103;</code>
         * @return Whether the assetLayerType field is set.
         */
        @java.lang.Override public boolean hasAssetLayerType() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.AssetLayer.AssetLayerType asset_layer_type = 103;</code>
         * @return The assetLayerType.
         */
        @java.lang.Override public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.AssetLayerType getAssetLayerType() {
          @SuppressWarnings("deprecation")
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.AssetLayerType result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.AssetLayerType.valueOf(assetLayerType_);
          return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.AssetLayerType.EFFECT_LAYER : result;
        }

        public static final int ASSET_ITEM_NAME_FOR_IOS_FIELD_NUMBER = 104;
        private volatile java.lang.Object assetItemNameForIos_;
        /**
         * <code>optional string asset_item_name_for_ios = 104;</code>
         * @return Whether the assetItemNameForIos field is set.
         */
        @java.lang.Override
        public boolean hasAssetItemNameForIos() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional string asset_item_name_for_ios = 104;</code>
         * @return The assetItemNameForIos.
         */
        @java.lang.Override
        public java.lang.String getAssetItemNameForIos() {
          java.lang.Object ref = assetItemNameForIos_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              assetItemNameForIos_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string asset_item_name_for_ios = 104;</code>
         * @return The bytes for assetItemNameForIos.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getAssetItemNameForIosBytes() {
          java.lang.Object ref = assetItemNameForIos_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            assetItemNameForIos_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int ASSET_NAME_FOR_IOS_FIELD_NUMBER = 105;
        private volatile java.lang.Object assetNameForIos_;
        /**
         * <code>optional string asset_name_for_ios = 105;</code>
         * @return Whether the assetNameForIos field is set.
         */
        @java.lang.Override
        public boolean hasAssetNameForIos() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional string asset_name_for_ios = 105;</code>
         * @return The assetNameForIos.
         */
        @java.lang.Override
        public java.lang.String getAssetNameForIos() {
          java.lang.Object ref = assetNameForIos_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              assetNameForIos_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string asset_name_for_ios = 105;</code>
         * @return The bytes for assetNameForIos.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getAssetNameForIosBytes() {
          java.lang.Object ref = assetNameForIos_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            assetNameForIos_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int SYNC_XY_SCALE_FIELD_NUMBER = 106;
        private boolean syncXyScale_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool sync_xy_scale = 106;</code>
         * @return Whether the syncXyScale field is set.
         */
        @java.lang.Override
        public boolean hasSyncXyScale() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool sync_xy_scale = 106;</code>
         * @return The syncXyScale.
         */
        @java.lang.Override
        public boolean getSyncXyScale() {
          return syncXyScale_;
        }

        public static final int EFFECTOPTION_FIELD_NUMBER = 107;
        private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem> effectOption_;
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
         */
        @java.lang.Override
        public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem> getEffectOptionList() {
          return effectOption_;
        }
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
         */
        @java.lang.Override
        public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder> 
            getEffectOptionOrBuilderList() {
          return effectOption_;
        }
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
         */
        @java.lang.Override
        public int getEffectOptionCount() {
          return effectOption_.size();
        }
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem getEffectOption(int index) {
          return effectOption_.get(index);
        }
        /**
         * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder getEffectOptionOrBuilder(
            int index) {
          return effectOption_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeMessage(100, getLayerCommon());
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 101, assetItemId_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeMessage(102, getEffectOptions());
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeEnum(103, assetLayerType_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 104, assetItemNameForIos_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 105, assetNameForIos_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            output.writeBool(106, syncXyScale_);
          }
          for (int i = 0; i < effectOption_.size(); i++) {
            output.writeMessage(107, effectOption_.get(i));
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(100, getLayerCommon());
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(101, assetItemId_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(102, getEffectOptions());
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(103, assetLayerType_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(104, assetItemNameForIos_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(105, assetNameForIos_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(106, syncXyScale_);
          }
          for (int i = 0; i < effectOption_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(107, effectOption_.get(i));
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer) obj;

          if (hasLayerCommon() != other.hasLayerCommon()) return false;
          if (hasLayerCommon()) {
            if (!getLayerCommon()
                .equals(other.getLayerCommon())) return false;
          }
          if (hasAssetItemId() != other.hasAssetItemId()) return false;
          if (hasAssetItemId()) {
            if (!getAssetItemId()
                .equals(other.getAssetItemId())) return false;
          }
          if (hasEffectOptions() != other.hasEffectOptions()) return false;
          if (hasEffectOptions()) {
            if (!getEffectOptions()
                .equals(other.getEffectOptions())) return false;
          }
          if (hasAssetLayerType() != other.hasAssetLayerType()) return false;
          if (hasAssetLayerType()) {
            if (assetLayerType_ != other.assetLayerType_) return false;
          }
          if (hasAssetItemNameForIos() != other.hasAssetItemNameForIos()) return false;
          if (hasAssetItemNameForIos()) {
            if (!getAssetItemNameForIos()
                .equals(other.getAssetItemNameForIos())) return false;
          }
          if (hasAssetNameForIos() != other.hasAssetNameForIos()) return false;
          if (hasAssetNameForIos()) {
            if (!getAssetNameForIos()
                .equals(other.getAssetNameForIos())) return false;
          }
          if (hasSyncXyScale() != other.hasSyncXyScale()) return false;
          if (hasSyncXyScale()) {
            if (getSyncXyScale()
                != other.getSyncXyScale()) return false;
          }
          if (!getEffectOptionList()
              .equals(other.getEffectOptionList())) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasLayerCommon()) {
            hash = (37 * hash) + LAYER_COMMON_FIELD_NUMBER;
            hash = (53 * hash) + getLayerCommon().hashCode();
          }
          if (hasAssetItemId()) {
            hash = (37 * hash) + ASSET_ITEM_ID_FIELD_NUMBER;
            hash = (53 * hash) + getAssetItemId().hashCode();
          }
          if (hasEffectOptions()) {
            hash = (37 * hash) + EFFECT_OPTIONS_FIELD_NUMBER;
            hash = (53 * hash) + getEffectOptions().hashCode();
          }
          if (hasAssetLayerType()) {
            hash = (37 * hash) + ASSET_LAYER_TYPE_FIELD_NUMBER;
            hash = (53 * hash) + assetLayerType_;
          }
          if (hasAssetItemNameForIos()) {
            hash = (37 * hash) + ASSET_ITEM_NAME_FOR_IOS_FIELD_NUMBER;
            hash = (53 * hash) + getAssetItemNameForIos().hashCode();
          }
          if (hasAssetNameForIos()) {
            hash = (37 * hash) + ASSET_NAME_FOR_IOS_FIELD_NUMBER;
            hash = (53 * hash) + getAssetNameForIos().hashCode();
          }
          if (hasSyncXyScale()) {
            hash = (37 * hash) + SYNC_XY_SCALE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getSyncXyScale());
          }
          if (getEffectOptionCount() > 0) {
            hash = (37 * hash) + EFFECTOPTION_FIELD_NUMBER;
            hash = (53 * hash) + getEffectOptionList().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code KMProto.KMProject.AssetLayer}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.AssetLayer)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayerOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_AssetLayer_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_AssetLayer_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
              getLayerCommonFieldBuilder();
              getEffectOptionsFieldBuilder();
              getEffectOptionFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            if (layerCommonBuilder_ == null) {
              layerCommon_ = null;
            } else {
              layerCommonBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000001);
            assetItemId_ = "";
            bitField0_ = (bitField0_ & ~0x00000002);
            if (effectOptionsBuilder_ == null) {
              effectOptions_ = null;
            } else {
              effectOptionsBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000004);
            assetLayerType_ = 1;
            bitField0_ = (bitField0_ & ~0x00000008);
            assetItemNameForIos_ = "";
            bitField0_ = (bitField0_ & ~0x00000010);
            assetNameForIos_ = "";
            bitField0_ = (bitField0_ & ~0x00000020);
            syncXyScale_ = false;
            bitField0_ = (bitField0_ & ~0x00000040);
            if (effectOptionBuilder_ == null) {
              effectOption_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              effectOptionBuilder_.clear();
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_AssetLayer_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              if (layerCommonBuilder_ == null) {
                result.layerCommon_ = layerCommon_;
              } else {
                result.layerCommon_ = layerCommonBuilder_.build();
              }
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              to_bitField0_ |= 0x00000002;
            }
            result.assetItemId_ = assetItemId_;
            if (((from_bitField0_ & 0x00000004) != 0)) {
              if (effectOptionsBuilder_ == null) {
                result.effectOptions_ = effectOptions_;
              } else {
                result.effectOptions_ = effectOptionsBuilder_.build();
              }
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              to_bitField0_ |= 0x00000008;
            }
            result.assetLayerType_ = assetLayerType_;
            if (((from_bitField0_ & 0x00000010) != 0)) {
              to_bitField0_ |= 0x00000010;
            }
            result.assetItemNameForIos_ = assetItemNameForIos_;
            if (((from_bitField0_ & 0x00000020) != 0)) {
              to_bitField0_ |= 0x00000020;
            }
            result.assetNameForIos_ = assetNameForIos_;
            if (((from_bitField0_ & 0x00000040) != 0)) {
              result.syncXyScale_ = syncXyScale_;
              to_bitField0_ |= 0x00000040;
            }
            if (effectOptionBuilder_ == null) {
              if (((bitField0_ & 0x00000080) != 0)) {
                effectOption_ = java.util.Collections.unmodifiableList(effectOption_);
                bitField0_ = (bitField0_ & ~0x00000080);
              }
              result.effectOption_ = effectOption_;
            } else {
              result.effectOption_ = effectOptionBuilder_.build();
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.getDefaultInstance()) return this;
            if (other.hasLayerCommon()) {
              mergeLayerCommon(other.getLayerCommon());
            }
            if (other.hasAssetItemId()) {
              bitField0_ |= 0x00000002;
              assetItemId_ = other.assetItemId_;
              onChanged();
            }
            if (other.hasEffectOptions()) {
              mergeEffectOptions(other.getEffectOptions());
            }
            if (other.hasAssetLayerType()) {
              setAssetLayerType(other.getAssetLayerType());
            }
            if (other.hasAssetItemNameForIos()) {
              bitField0_ |= 0x00000010;
              assetItemNameForIos_ = other.assetItemNameForIos_;
              onChanged();
            }
            if (other.hasAssetNameForIos()) {
              bitField0_ |= 0x00000020;
              assetNameForIos_ = other.assetNameForIos_;
              onChanged();
            }
            if (other.hasSyncXyScale()) {
              setSyncXyScale(other.getSyncXyScale());
            }
            if (effectOptionBuilder_ == null) {
              if (!other.effectOption_.isEmpty()) {
                if (effectOption_.isEmpty()) {
                  effectOption_ = other.effectOption_;
                  bitField0_ = (bitField0_ & ~0x00000080);
                } else {
                  ensureEffectOptionIsMutable();
                  effectOption_.addAll(other.effectOption_);
                }
                onChanged();
              }
            } else {
              if (!other.effectOption_.isEmpty()) {
                if (effectOptionBuilder_.isEmpty()) {
                  effectOptionBuilder_.dispose();
                  effectOptionBuilder_ = null;
                  effectOption_ = other.effectOption_;
                  bitField0_ = (bitField0_ & ~0x00000080);
                  effectOptionBuilder_ = 
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                       getEffectOptionFieldBuilder() : null;
                } else {
                  effectOptionBuilder_.addAllMessages(other.effectOption_);
                }
              }
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon layerCommon_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder> layerCommonBuilder_;
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           * @return Whether the layerCommon field is set.
           */
          public boolean hasLayerCommon() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           * @return The layerCommon.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getLayerCommon() {
            if (layerCommonBuilder_ == null) {
              return layerCommon_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
            } else {
              return layerCommonBuilder_.getMessage();
            }
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder setLayerCommon(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon value) {
            if (layerCommonBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              layerCommon_ = value;
              onChanged();
            } else {
              layerCommonBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000001;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder setLayerCommon(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder builderForValue) {
            if (layerCommonBuilder_ == null) {
              layerCommon_ = builderForValue.build();
              onChanged();
            } else {
              layerCommonBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000001;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder mergeLayerCommon(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon value) {
            if (layerCommonBuilder_ == null) {
              if (((bitField0_ & 0x00000001) != 0) &&
                  layerCommon_ != null &&
                  layerCommon_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance()) {
                layerCommon_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.newBuilder(layerCommon_).mergeFrom(value).buildPartial();
              } else {
                layerCommon_ = value;
              }
              onChanged();
            } else {
              layerCommonBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000001;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder clearLayerCommon() {
            if (layerCommonBuilder_ == null) {
              layerCommon_ = null;
              onChanged();
            } else {
              layerCommonBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000001);
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder getLayerCommonBuilder() {
            bitField0_ |= 0x00000001;
            onChanged();
            return getLayerCommonFieldBuilder().getBuilder();
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder getLayerCommonOrBuilder() {
            if (layerCommonBuilder_ != null) {
              return layerCommonBuilder_.getMessageOrBuilder();
            } else {
              return layerCommon_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
            }
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder> 
              getLayerCommonFieldBuilder() {
            if (layerCommonBuilder_ == null) {
              layerCommonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder>(
                      getLayerCommon(),
                      getParentForChildren(),
                      isClean());
              layerCommon_ = null;
            }
            return layerCommonBuilder_;
          }

          private java.lang.Object assetItemId_ = "";
          /**
           * <code>optional string asset_item_id = 101;</code>
           * @return Whether the assetItemId field is set.
           */
          public boolean hasAssetItemId() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional string asset_item_id = 101;</code>
           * @return The assetItemId.
           */
          public java.lang.String getAssetItemId() {
            java.lang.Object ref = assetItemId_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                assetItemId_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string asset_item_id = 101;</code>
           * @return The bytes for assetItemId.
           */
          public com.google.protobuf.ByteString
              getAssetItemIdBytes() {
            java.lang.Object ref = assetItemId_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              assetItemId_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string asset_item_id = 101;</code>
           * @param value The assetItemId to set.
           * @return This builder for chaining.
           */
          public Builder setAssetItemId(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            assetItemId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string asset_item_id = 101;</code>
           * @return This builder for chaining.
           */
          public Builder clearAssetItemId() {
            bitField0_ = (bitField0_ & ~0x00000002);
            assetItemId_ = getDefaultInstance().getAssetItemId();
            onChanged();
            return this;
          }
          /**
           * <code>optional string asset_item_id = 101;</code>
           * @param value The bytes for assetItemId to set.
           * @return This builder for chaining.
           */
          public Builder setAssetItemIdBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            assetItemId_ = value;
            onChanged();
            return this;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap effectOptions_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapOrBuilder> effectOptionsBuilder_;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 102;</code>
           * @return Whether the effectOptions field is set.
           */
          public boolean hasEffectOptions() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 102;</code>
           * @return The effectOptions.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap getEffectOptions() {
            if (effectOptionsBuilder_ == null) {
              return effectOptions_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.getDefaultInstance() : effectOptions_;
            } else {
              return effectOptionsBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 102;</code>
           */
          public Builder setEffectOptions(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap value) {
            if (effectOptionsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              effectOptions_ = value;
              onChanged();
            } else {
              effectOptionsBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000004;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 102;</code>
           */
          public Builder setEffectOptions(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.Builder builderForValue) {
            if (effectOptionsBuilder_ == null) {
              effectOptions_ = builderForValue.build();
              onChanged();
            } else {
              effectOptionsBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000004;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 102;</code>
           */
          public Builder mergeEffectOptions(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap value) {
            if (effectOptionsBuilder_ == null) {
              if (((bitField0_ & 0x00000004) != 0) &&
                  effectOptions_ != null &&
                  effectOptions_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.getDefaultInstance()) {
                effectOptions_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.newBuilder(effectOptions_).mergeFrom(value).buildPartial();
              } else {
                effectOptions_ = value;
              }
              onChanged();
            } else {
              effectOptionsBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000004;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 102;</code>
           */
          public Builder clearEffectOptions() {
            if (effectOptionsBuilder_ == null) {
              effectOptions_ = null;
              onChanged();
            } else {
              effectOptionsBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000004);
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 102;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.Builder getEffectOptionsBuilder() {
            bitField0_ |= 0x00000004;
            onChanged();
            return getEffectOptionsFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 102;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapOrBuilder getEffectOptionsOrBuilder() {
            if (effectOptionsBuilder_ != null) {
              return effectOptionsBuilder_.getMessageOrBuilder();
            } else {
              return effectOptions_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.getDefaultInstance() : effectOptions_;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.StringHashMap effect_options = 102;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapOrBuilder> 
              getEffectOptionsFieldBuilder() {
            if (effectOptionsBuilder_ == null) {
              effectOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMap.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.StringHashMapOrBuilder>(
                      getEffectOptions(),
                      getParentForChildren(),
                      isClean());
              effectOptions_ = null;
            }
            return effectOptionsBuilder_;
          }

          private int assetLayerType_ = 1;
          /**
           * <code>optional .KMProto.KMProject.AssetLayer.AssetLayerType asset_layer_type = 103;</code>
           * @return Whether the assetLayerType field is set.
           */
          @java.lang.Override public boolean hasAssetLayerType() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.AssetLayer.AssetLayerType asset_layer_type = 103;</code>
           * @return The assetLayerType.
           */
          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.AssetLayerType getAssetLayerType() {
            @SuppressWarnings("deprecation")
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.AssetLayerType result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.AssetLayerType.valueOf(assetLayerType_);
            return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.AssetLayerType.EFFECT_LAYER : result;
          }
          /**
           * <code>optional .KMProto.KMProject.AssetLayer.AssetLayerType asset_layer_type = 103;</code>
           * @param value The assetLayerType to set.
           * @return This builder for chaining.
           */
          public Builder setAssetLayerType(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer.AssetLayerType value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000008;
            assetLayerType_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.AssetLayer.AssetLayerType asset_layer_type = 103;</code>
           * @return This builder for chaining.
           */
          public Builder clearAssetLayerType() {
            bitField0_ = (bitField0_ & ~0x00000008);
            assetLayerType_ = 1;
            onChanged();
            return this;
          }

          private java.lang.Object assetItemNameForIos_ = "";
          /**
           * <code>optional string asset_item_name_for_ios = 104;</code>
           * @return Whether the assetItemNameForIos field is set.
           */
          public boolean hasAssetItemNameForIos() {
            return ((bitField0_ & 0x00000010) != 0);
          }
          /**
           * <code>optional string asset_item_name_for_ios = 104;</code>
           * @return The assetItemNameForIos.
           */
          public java.lang.String getAssetItemNameForIos() {
            java.lang.Object ref = assetItemNameForIos_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                assetItemNameForIos_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string asset_item_name_for_ios = 104;</code>
           * @return The bytes for assetItemNameForIos.
           */
          public com.google.protobuf.ByteString
              getAssetItemNameForIosBytes() {
            java.lang.Object ref = assetItemNameForIos_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              assetItemNameForIos_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string asset_item_name_for_ios = 104;</code>
           * @param value The assetItemNameForIos to set.
           * @return This builder for chaining.
           */
          public Builder setAssetItemNameForIos(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
            assetItemNameForIos_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string asset_item_name_for_ios = 104;</code>
           * @return This builder for chaining.
           */
          public Builder clearAssetItemNameForIos() {
            bitField0_ = (bitField0_ & ~0x00000010);
            assetItemNameForIos_ = getDefaultInstance().getAssetItemNameForIos();
            onChanged();
            return this;
          }
          /**
           * <code>optional string asset_item_name_for_ios = 104;</code>
           * @param value The bytes for assetItemNameForIos to set.
           * @return This builder for chaining.
           */
          public Builder setAssetItemNameForIosBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
            assetItemNameForIos_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object assetNameForIos_ = "";
          /**
           * <code>optional string asset_name_for_ios = 105;</code>
           * @return Whether the assetNameForIos field is set.
           */
          public boolean hasAssetNameForIos() {
            return ((bitField0_ & 0x00000020) != 0);
          }
          /**
           * <code>optional string asset_name_for_ios = 105;</code>
           * @return The assetNameForIos.
           */
          public java.lang.String getAssetNameForIos() {
            java.lang.Object ref = assetNameForIos_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                assetNameForIos_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string asset_name_for_ios = 105;</code>
           * @return The bytes for assetNameForIos.
           */
          public com.google.protobuf.ByteString
              getAssetNameForIosBytes() {
            java.lang.Object ref = assetNameForIos_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              assetNameForIos_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string asset_name_for_ios = 105;</code>
           * @param value The assetNameForIos to set.
           * @return This builder for chaining.
           */
          public Builder setAssetNameForIos(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
            assetNameForIos_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string asset_name_for_ios = 105;</code>
           * @return This builder for chaining.
           */
          public Builder clearAssetNameForIos() {
            bitField0_ = (bitField0_ & ~0x00000020);
            assetNameForIos_ = getDefaultInstance().getAssetNameForIos();
            onChanged();
            return this;
          }
          /**
           * <code>optional string asset_name_for_ios = 105;</code>
           * @param value The bytes for assetNameForIos to set.
           * @return This builder for chaining.
           */
          public Builder setAssetNameForIosBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
            assetNameForIos_ = value;
            onChanged();
            return this;
          }

          private boolean syncXyScale_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool sync_xy_scale = 106;</code>
           * @return Whether the syncXyScale field is set.
           */
          @java.lang.Override
          public boolean hasSyncXyScale() {
            return ((bitField0_ & 0x00000040) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool sync_xy_scale = 106;</code>
           * @return The syncXyScale.
           */
          @java.lang.Override
          public boolean getSyncXyScale() {
            return syncXyScale_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool sync_xy_scale = 106;</code>
           * @param value The syncXyScale to set.
           * @return This builder for chaining.
           */
          public Builder setSyncXyScale(boolean value) {
            bitField0_ |= 0x00000040;
            syncXyScale_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional bool sync_xy_scale = 106;</code>
           * @return This builder for chaining.
           */
          public Builder clearSyncXyScale() {
            bitField0_ = (bitField0_ & ~0x00000040);
            syncXyScale_ = false;
            onChanged();
            return this;
          }

          private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem> effectOption_ =
            java.util.Collections.emptyList();
          private void ensureEffectOptionIsMutable() {
            if (!((bitField0_ & 0x00000080) != 0)) {
              effectOption_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem>(effectOption_);
              bitField0_ |= 0x00000080;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder> effectOptionBuilder_;

          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
           */
          public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem> getEffectOptionList() {
            if (effectOptionBuilder_ == null) {
              return java.util.Collections.unmodifiableList(effectOption_);
            } else {
              return effectOptionBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
           */
          public int getEffectOptionCount() {
            if (effectOptionBuilder_ == null) {
              return effectOption_.size();
            } else {
              return effectOptionBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem getEffectOption(int index) {
            if (effectOptionBuilder_ == null) {
              return effectOption_.get(index);
            } else {
              return effectOptionBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
           */
          public Builder setEffectOption(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem value) {
            if (effectOptionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureEffectOptionIsMutable();
              effectOption_.set(index, value);
              onChanged();
            } else {
              effectOptionBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
           */
          public Builder setEffectOption(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder builderForValue) {
            if (effectOptionBuilder_ == null) {
              ensureEffectOptionIsMutable();
              effectOption_.set(index, builderForValue.build());
              onChanged();
            } else {
              effectOptionBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
           */
          public Builder addEffectOption(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem value) {
            if (effectOptionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureEffectOptionIsMutable();
              effectOption_.add(value);
              onChanged();
            } else {
              effectOptionBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
           */
          public Builder addEffectOption(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem value) {
            if (effectOptionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureEffectOptionIsMutable();
              effectOption_.add(index, value);
              onChanged();
            } else {
              effectOptionBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
           */
          public Builder addEffectOption(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder builderForValue) {
            if (effectOptionBuilder_ == null) {
              ensureEffectOptionIsMutable();
              effectOption_.add(builderForValue.build());
              onChanged();
            } else {
              effectOptionBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
           */
          public Builder addEffectOption(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder builderForValue) {
            if (effectOptionBuilder_ == null) {
              ensureEffectOptionIsMutable();
              effectOption_.add(index, builderForValue.build());
              onChanged();
            } else {
              effectOptionBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
           */
          public Builder addAllEffectOption(
              java.lang.Iterable<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem> values) {
            if (effectOptionBuilder_ == null) {
              ensureEffectOptionIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, effectOption_);
              onChanged();
            } else {
              effectOptionBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
           */
          public Builder clearEffectOption() {
            if (effectOptionBuilder_ == null) {
              effectOption_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000080);
              onChanged();
            } else {
              effectOptionBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
           */
          public Builder removeEffectOption(int index) {
            if (effectOptionBuilder_ == null) {
              ensureEffectOptionIsMutable();
              effectOption_.remove(index);
              onChanged();
            } else {
              effectOptionBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder getEffectOptionBuilder(
              int index) {
            return getEffectOptionFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder getEffectOptionOrBuilder(
              int index) {
            if (effectOptionBuilder_ == null) {
              return effectOption_.get(index);  } else {
              return effectOptionBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
           */
          public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder> 
               getEffectOptionOrBuilderList() {
            if (effectOptionBuilder_ != null) {
              return effectOptionBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(effectOption_);
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder addEffectOptionBuilder() {
            return getEffectOptionFieldBuilder().addBuilder(
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.getDefaultInstance());
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder addEffectOptionBuilder(
              int index) {
            return getEffectOptionFieldBuilder().addBuilder(
                index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.getDefaultInstance());
          }
          /**
           * <code>repeated .KMProto.KMProject.EffectOptionItem effectOption = 107;</code>
           */
          public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder> 
               getEffectOptionBuilderList() {
            return getEffectOptionFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder> 
              getEffectOptionFieldBuilder() {
            if (effectOptionBuilder_ == null) {
              effectOptionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItem.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectOptionItemOrBuilder>(
                      effectOption_,
                      ((bitField0_ & 0x00000080) != 0),
                      getParentForChildren(),
                      isClean());
              effectOption_ = null;
            }
            return effectOptionBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.AssetLayer)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.AssetLayer)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<AssetLayer>
            PARSER = new com.google.protobuf.AbstractParser<AssetLayer>() {
          @java.lang.Override
          public AssetLayer parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new AssetLayer(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<AssetLayer> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<AssetLayer> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AssetLayer getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface EffectLayerOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.EffectLayer)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return Whether the layerCommon field is set.
         */
        boolean hasLayerCommon();
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return The layerCommon.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getLayerCommon();
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder getLayerCommonOrBuilder();

        /**
         * <code>optional string effect_id = 101;</code>
         * @return Whether the effectId field is set.
         */
        boolean hasEffectId();
        /**
         * <code>optional string effect_id = 101;</code>
         * @return The effectId.
         */
        java.lang.String getEffectId();
        /**
         * <code>optional string effect_id = 101;</code>
         * @return The bytes for effectId.
         */
        com.google.protobuf.ByteString
            getEffectIdBytes();

        /**
         * <code>optional float effect_strength = 102;</code>
         * @return Whether the effectStrength field is set.
         */
        boolean hasEffectStrength();
        /**
         * <code>optional float effect_strength = 102;</code>
         * @return The effectStrength.
         */
        float getEffectStrength();

        /**
         * <code>optional float effect_variation = 103;</code>
         * @return Whether the effectVariation field is set.
         */
        boolean hasEffectVariation();
        /**
         * <code>optional float effect_variation = 103;</code>
         * @return The effectVariation.
         */
        float getEffectVariation();
      }
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * Protobuf type {@code KMProto.KMProject.EffectLayer}
       */
      public static final class EffectLayer extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.EffectLayer)
          EffectLayerOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use EffectLayer.newBuilder() to construct.
        private EffectLayer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private EffectLayer() {
          effectId_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new EffectLayer();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private EffectLayer(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 802: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000001) != 0)) {
                    subBuilder = layerCommon_.toBuilder();
                  }
                  layerCommon_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(layerCommon_);
                    layerCommon_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000001;
                  break;
                }
                case 810: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000002;
                  effectId_ = bs;
                  break;
                }
                case 821: {
                  bitField0_ |= 0x00000004;
                  effectStrength_ = input.readFloat();
                  break;
                }
                case 829: {
                  bitField0_ |= 0x00000008;
                  effectVariation_ = input.readFloat();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_EffectLayer_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_EffectLayer_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer.Builder.class);
        }

        private int bitField0_;
        public static final int LAYER_COMMON_FIELD_NUMBER = 100;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon layerCommon_;
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return Whether the layerCommon field is set.
         */
        @java.lang.Override
        public boolean hasLayerCommon() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return The layerCommon.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getLayerCommon() {
          return layerCommon_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
        }
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder getLayerCommonOrBuilder() {
          return layerCommon_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
        }

        public static final int EFFECT_ID_FIELD_NUMBER = 101;
        private volatile java.lang.Object effectId_;
        /**
         * <code>optional string effect_id = 101;</code>
         * @return Whether the effectId field is set.
         */
        @java.lang.Override
        public boolean hasEffectId() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional string effect_id = 101;</code>
         * @return The effectId.
         */
        @java.lang.Override
        public java.lang.String getEffectId() {
          java.lang.Object ref = effectId_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              effectId_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string effect_id = 101;</code>
         * @return The bytes for effectId.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getEffectIdBytes() {
          java.lang.Object ref = effectId_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            effectId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int EFFECT_STRENGTH_FIELD_NUMBER = 102;
        private float effectStrength_;
        /**
         * <code>optional float effect_strength = 102;</code>
         * @return Whether the effectStrength field is set.
         */
        @java.lang.Override
        public boolean hasEffectStrength() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional float effect_strength = 102;</code>
         * @return The effectStrength.
         */
        @java.lang.Override
        public float getEffectStrength() {
          return effectStrength_;
        }

        public static final int EFFECT_VARIATION_FIELD_NUMBER = 103;
        private float effectVariation_;
        /**
         * <code>optional float effect_variation = 103;</code>
         * @return Whether the effectVariation field is set.
         */
        @java.lang.Override
        public boolean hasEffectVariation() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional float effect_variation = 103;</code>
         * @return The effectVariation.
         */
        @java.lang.Override
        public float getEffectVariation() {
          return effectVariation_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeMessage(100, getLayerCommon());
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 101, effectId_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeFloat(102, effectStrength_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeFloat(103, effectVariation_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(100, getLayerCommon());
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(101, effectId_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(102, effectStrength_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(103, effectVariation_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer) obj;

          if (hasLayerCommon() != other.hasLayerCommon()) return false;
          if (hasLayerCommon()) {
            if (!getLayerCommon()
                .equals(other.getLayerCommon())) return false;
          }
          if (hasEffectId() != other.hasEffectId()) return false;
          if (hasEffectId()) {
            if (!getEffectId()
                .equals(other.getEffectId())) return false;
          }
          if (hasEffectStrength() != other.hasEffectStrength()) return false;
          if (hasEffectStrength()) {
            if (java.lang.Float.floatToIntBits(getEffectStrength())
                != java.lang.Float.floatToIntBits(
                    other.getEffectStrength())) return false;
          }
          if (hasEffectVariation() != other.hasEffectVariation()) return false;
          if (hasEffectVariation()) {
            if (java.lang.Float.floatToIntBits(getEffectVariation())
                != java.lang.Float.floatToIntBits(
                    other.getEffectVariation())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasLayerCommon()) {
            hash = (37 * hash) + LAYER_COMMON_FIELD_NUMBER;
            hash = (53 * hash) + getLayerCommon().hashCode();
          }
          if (hasEffectId()) {
            hash = (37 * hash) + EFFECT_ID_FIELD_NUMBER;
            hash = (53 * hash) + getEffectId().hashCode();
          }
          if (hasEffectStrength()) {
            hash = (37 * hash) + EFFECT_STRENGTH_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getEffectStrength());
          }
          if (hasEffectVariation()) {
            hash = (37 * hash) + EFFECT_VARIATION_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getEffectVariation());
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * Protobuf type {@code KMProto.KMProject.EffectLayer}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.EffectLayer)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayerOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_EffectLayer_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_EffectLayer_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
              getLayerCommonFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            if (layerCommonBuilder_ == null) {
              layerCommon_ = null;
            } else {
              layerCommonBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000001);
            effectId_ = "";
            bitField0_ = (bitField0_ & ~0x00000002);
            effectStrength_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000004);
            effectVariation_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000008);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_EffectLayer_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              if (layerCommonBuilder_ == null) {
                result.layerCommon_ = layerCommon_;
              } else {
                result.layerCommon_ = layerCommonBuilder_.build();
              }
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              to_bitField0_ |= 0x00000002;
            }
            result.effectId_ = effectId_;
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.effectStrength_ = effectStrength_;
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.effectVariation_ = effectVariation_;
              to_bitField0_ |= 0x00000008;
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer.getDefaultInstance()) return this;
            if (other.hasLayerCommon()) {
              mergeLayerCommon(other.getLayerCommon());
            }
            if (other.hasEffectId()) {
              bitField0_ |= 0x00000002;
              effectId_ = other.effectId_;
              onChanged();
            }
            if (other.hasEffectStrength()) {
              setEffectStrength(other.getEffectStrength());
            }
            if (other.hasEffectVariation()) {
              setEffectVariation(other.getEffectVariation());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon layerCommon_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder> layerCommonBuilder_;
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           * @return Whether the layerCommon field is set.
           */
          public boolean hasLayerCommon() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           * @return The layerCommon.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getLayerCommon() {
            if (layerCommonBuilder_ == null) {
              return layerCommon_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
            } else {
              return layerCommonBuilder_.getMessage();
            }
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder setLayerCommon(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon value) {
            if (layerCommonBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              layerCommon_ = value;
              onChanged();
            } else {
              layerCommonBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000001;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder setLayerCommon(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder builderForValue) {
            if (layerCommonBuilder_ == null) {
              layerCommon_ = builderForValue.build();
              onChanged();
            } else {
              layerCommonBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000001;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder mergeLayerCommon(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon value) {
            if (layerCommonBuilder_ == null) {
              if (((bitField0_ & 0x00000001) != 0) &&
                  layerCommon_ != null &&
                  layerCommon_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance()) {
                layerCommon_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.newBuilder(layerCommon_).mergeFrom(value).buildPartial();
              } else {
                layerCommon_ = value;
              }
              onChanged();
            } else {
              layerCommonBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000001;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder clearLayerCommon() {
            if (layerCommonBuilder_ == null) {
              layerCommon_ = null;
              onChanged();
            } else {
              layerCommonBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000001);
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder getLayerCommonBuilder() {
            bitField0_ |= 0x00000001;
            onChanged();
            return getLayerCommonFieldBuilder().getBuilder();
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder getLayerCommonOrBuilder() {
            if (layerCommonBuilder_ != null) {
              return layerCommonBuilder_.getMessageOrBuilder();
            } else {
              return layerCommon_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
            }
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder> 
              getLayerCommonFieldBuilder() {
            if (layerCommonBuilder_ == null) {
              layerCommonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder>(
                      getLayerCommon(),
                      getParentForChildren(),
                      isClean());
              layerCommon_ = null;
            }
            return layerCommonBuilder_;
          }

          private java.lang.Object effectId_ = "";
          /**
           * <code>optional string effect_id = 101;</code>
           * @return Whether the effectId field is set.
           */
          public boolean hasEffectId() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional string effect_id = 101;</code>
           * @return The effectId.
           */
          public java.lang.String getEffectId() {
            java.lang.Object ref = effectId_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                effectId_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string effect_id = 101;</code>
           * @return The bytes for effectId.
           */
          public com.google.protobuf.ByteString
              getEffectIdBytes() {
            java.lang.Object ref = effectId_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              effectId_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string effect_id = 101;</code>
           * @param value The effectId to set.
           * @return This builder for chaining.
           */
          public Builder setEffectId(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            effectId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string effect_id = 101;</code>
           * @return This builder for chaining.
           */
          public Builder clearEffectId() {
            bitField0_ = (bitField0_ & ~0x00000002);
            effectId_ = getDefaultInstance().getEffectId();
            onChanged();
            return this;
          }
          /**
           * <code>optional string effect_id = 101;</code>
           * @param value The bytes for effectId to set.
           * @return This builder for chaining.
           */
          public Builder setEffectIdBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            effectId_ = value;
            onChanged();
            return this;
          }

          private float effectStrength_ ;
          /**
           * <code>optional float effect_strength = 102;</code>
           * @return Whether the effectStrength field is set.
           */
          @java.lang.Override
          public boolean hasEffectStrength() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <code>optional float effect_strength = 102;</code>
           * @return The effectStrength.
           */
          @java.lang.Override
          public float getEffectStrength() {
            return effectStrength_;
          }
          /**
           * <code>optional float effect_strength = 102;</code>
           * @param value The effectStrength to set.
           * @return This builder for chaining.
           */
          public Builder setEffectStrength(float value) {
            bitField0_ |= 0x00000004;
            effectStrength_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float effect_strength = 102;</code>
           * @return This builder for chaining.
           */
          public Builder clearEffectStrength() {
            bitField0_ = (bitField0_ & ~0x00000004);
            effectStrength_ = 0F;
            onChanged();
            return this;
          }

          private float effectVariation_ ;
          /**
           * <code>optional float effect_variation = 103;</code>
           * @return Whether the effectVariation field is set.
           */
          @java.lang.Override
          public boolean hasEffectVariation() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <code>optional float effect_variation = 103;</code>
           * @return The effectVariation.
           */
          @java.lang.Override
          public float getEffectVariation() {
            return effectVariation_;
          }
          /**
           * <code>optional float effect_variation = 103;</code>
           * @param value The effectVariation to set.
           * @return This builder for chaining.
           */
          public Builder setEffectVariation(float value) {
            bitField0_ |= 0x00000008;
            effectVariation_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float effect_variation = 103;</code>
           * @return This builder for chaining.
           */
          public Builder clearEffectVariation() {
            bitField0_ = (bitField0_ & ~0x00000008);
            effectVariation_ = 0F;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.EffectLayer)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.EffectLayer)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<EffectLayer>
            PARSER = new com.google.protobuf.AbstractParser<EffectLayer>() {
          @java.lang.Override
          public EffectLayer parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new EffectLayer(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<EffectLayer> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<EffectLayer> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.EffectLayer getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface ImageLayerOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.ImageLayer)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return Whether the layerCommon field is set.
         */
        boolean hasLayerCommon();
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return The layerCommon.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getLayerCommon();
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder getLayerCommonOrBuilder();

        /**
         * <code>optional string image_path = 101;</code>
         * @return Whether the imagePath field is set.
         */
        boolean hasImagePath();
        /**
         * <code>optional string image_path = 101;</code>
         * @return The imagePath.
         */
        java.lang.String getImagePath();
        /**
         * <code>optional string image_path = 101;</code>
         * @return The bytes for imagePath.
         */
        com.google.protobuf.ByteString
            getImagePathBytes();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string image_msid = 102;</code>
         * @return Whether the imageMsid field is set.
         */
        boolean hasImageMsid();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string image_msid = 102;</code>
         * @return The imageMsid.
         */
        java.lang.String getImageMsid();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string image_msid = 102;</code>
         * @return The bytes for imageMsid.
         */
        com.google.protobuf.ByteString
            getImageMsidBytes();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 brightness = 103;</code>
         * @return Whether the brightness field is set.
         */
        boolean hasBrightness();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 brightness = 103;</code>
         * @return The brightness.
         */
        int getBrightness();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 contrast = 104;</code>
         * @return Whether the contrast field is set.
         */
        boolean hasContrast();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 contrast = 104;</code>
         * @return The contrast.
         */
        int getContrast();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 saturation = 105;</code>
         * @return Whether the saturation field is set.
         */
        boolean hasSaturation();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 saturation = 105;</code>
         * @return The saturation.
         */
        int getSaturation();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
         * @return Whether the colorEffect field is set.
         */
        boolean hasColorEffect();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
         * @return The colorEffect.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect getColorEffect();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffectOrBuilder getColorEffectOrBuilder();

        /**
         * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
         */
        java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction> 
            getDrawingActionsList();
        /**
         * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction getDrawingActions(int index);
        /**
         * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
         */
        int getDrawingActionsCount();
        /**
         * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
         */
        java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionOrBuilder> 
            getDrawingActionsOrBuilderList();
        /**
         * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionOrBuilder getDrawingActionsOrBuilder(
            int index);

        /**
         * <code>optional int32 chroma_key_color = 108;</code>
         * @return Whether the chromaKeyColor field is set.
         */
        boolean hasChromaKeyColor();
        /**
         * <code>optional int32 chroma_key_color = 108;</code>
         * @return The chromaKeyColor.
         */
        int getChromaKeyColor();

        /**
         * <code>optional bool chroma_key_enabled = 109;</code>
         * @return Whether the chromaKeyEnabled field is set.
         */
        boolean hasChromaKeyEnabled();
        /**
         * <code>optional bool chroma_key_enabled = 109;</code>
         * @return The chromaKeyEnabled.
         */
        boolean getChromaKeyEnabled();

        /**
         * <code>optional float chroma_key_clip_fg = 110;</code>
         * @return Whether the chromaKeyClipFg field is set.
         */
        boolean hasChromaKeyClipFg();
        /**
         * <code>optional float chroma_key_clip_fg = 110;</code>
         * @return The chromaKeyClipFg.
         */
        float getChromaKeyClipFg();

        /**
         * <code>optional float chroma_key_clip_bg = 111;</code>
         * @return Whether the chromaKeyClipBg field is set.
         */
        boolean hasChromaKeyClipBg();
        /**
         * <code>optional float chroma_key_clip_bg = 111;</code>
         * @return The chromaKeyClipBg.
         */
        float getChromaKeyClipBg();

        /**
         * <code>optional float chroma_key_blend_x0 = 112;</code>
         * @return Whether the chromaKeyBlendX0 field is set.
         */
        boolean hasChromaKeyBlendX0();
        /**
         * <code>optional float chroma_key_blend_x0 = 112;</code>
         * @return The chromaKeyBlendX0.
         */
        float getChromaKeyBlendX0();

        /**
         * <code>optional float chroma_key_blend_y0 = 113;</code>
         * @return Whether the chromaKeyBlendY0 field is set.
         */
        boolean hasChromaKeyBlendY0();
        /**
         * <code>optional float chroma_key_blend_y0 = 113;</code>
         * @return The chromaKeyBlendY0.
         */
        float getChromaKeyBlendY0();

        /**
         * <code>optional float chroma_key_blend_x1 = 114;</code>
         * @return Whether the chromaKeyBlendX1 field is set.
         */
        boolean hasChromaKeyBlendX1();
        /**
         * <code>optional float chroma_key_blend_x1 = 114;</code>
         * @return The chromaKeyBlendX1.
         */
        float getChromaKeyBlendX1();

        /**
         * <code>optional float chroma_key_blend_y1 = 115;</code>
         * @return Whether the chromaKeyBlendY1 field is set.
         */
        boolean hasChromaKeyBlendY1();
        /**
         * <code>optional float chroma_key_blend_y1 = 115;</code>
         * @return The chromaKeyBlendY1.
         */
        float getChromaKeyBlendY1();

        /**
         * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 116;</code>
         * @return Whether the colorAdjustment field is set.
         */
        boolean hasColorAdjustment();
        /**
         * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 116;</code>
         * @return The colorAdjustment.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment getColorAdjustment();
        /**
         * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 116;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustmentOrBuilder getColorAdjustmentOrBuilder();

        /**
         * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 117;</code>
         * @return Whether the colorFilter field is set.
         */
        boolean hasColorFilter();
        /**
         * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 117;</code>
         * @return The colorFilter.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter getColorFilter();
        /**
         * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 117;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilterOrBuilder getColorFilterOrBuilder();

        /**
         * <pre>
         * Unique identifier for rendering of animated image to NexEditor engine
         * </pre>
         *
         * <code>optional int32 engine_clip_id = 118;</code>
         * @return Whether the engineClipId field is set.
         */
        boolean hasEngineClipId();
        /**
         * <pre>
         * Unique identifier for rendering of animated image to NexEditor engine
         * </pre>
         *
         * <code>optional int32 engine_clip_id = 118;</code>
         * @return The engineClipId.
         */
        int getEngineClipId();
      }
      /**
       * Protobuf type {@code KMProto.KMProject.ImageLayer}
       */
      public static final class ImageLayer extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.ImageLayer)
          ImageLayerOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use ImageLayer.newBuilder() to construct.
        private ImageLayer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private ImageLayer() {
          imagePath_ = "";
          imageMsid_ = "";
          drawingActions_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new ImageLayer();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private ImageLayer(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 802: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000001) != 0)) {
                    subBuilder = layerCommon_.toBuilder();
                  }
                  layerCommon_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(layerCommon_);
                    layerCommon_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000001;
                  break;
                }
                case 810: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000002;
                  imagePath_ = bs;
                  break;
                }
                case 818: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000004;
                  imageMsid_ = bs;
                  break;
                }
                case 824: {
                  bitField0_ |= 0x00000008;
                  brightness_ = input.readInt32();
                  break;
                }
                case 832: {
                  bitField0_ |= 0x00000010;
                  contrast_ = input.readInt32();
                  break;
                }
                case 840: {
                  bitField0_ |= 0x00000020;
                  saturation_ = input.readInt32();
                  break;
                }
                case 850: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000040) != 0)) {
                    subBuilder = colorEffect_.toBuilder();
                  }
                  colorEffect_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(colorEffect_);
                    colorEffect_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000040;
                  break;
                }
                case 858: {
                  if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                    drawingActions_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction>();
                    mutable_bitField0_ |= 0x00000080;
                  }
                  drawingActions_.add(
                      input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.PARSER, extensionRegistry));
                  break;
                }
                case 864: {
                  bitField0_ |= 0x00000080;
                  chromaKeyColor_ = input.readInt32();
                  break;
                }
                case 872: {
                  bitField0_ |= 0x00000100;
                  chromaKeyEnabled_ = input.readBool();
                  break;
                }
                case 885: {
                  bitField0_ |= 0x00000200;
                  chromaKeyClipFg_ = input.readFloat();
                  break;
                }
                case 893: {
                  bitField0_ |= 0x00000400;
                  chromaKeyClipBg_ = input.readFloat();
                  break;
                }
                case 901: {
                  bitField0_ |= 0x00000800;
                  chromaKeyBlendX0_ = input.readFloat();
                  break;
                }
                case 909: {
                  bitField0_ |= 0x00001000;
                  chromaKeyBlendY0_ = input.readFloat();
                  break;
                }
                case 917: {
                  bitField0_ |= 0x00002000;
                  chromaKeyBlendX1_ = input.readFloat();
                  break;
                }
                case 925: {
                  bitField0_ |= 0x00004000;
                  chromaKeyBlendY1_ = input.readFloat();
                  break;
                }
                case 930: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.Builder subBuilder = null;
                  if (((bitField0_ & 0x00008000) != 0)) {
                    subBuilder = colorAdjustment_.toBuilder();
                  }
                  colorAdjustment_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(colorAdjustment_);
                    colorAdjustment_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00008000;
                  break;
                }
                case 938: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.Builder subBuilder = null;
                  if (((bitField0_ & 0x00010000) != 0)) {
                    subBuilder = colorFilter_.toBuilder();
                  }
                  colorFilter_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(colorFilter_);
                    colorFilter_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00010000;
                  break;
                }
                case 944: {
                  bitField0_ |= 0x00020000;
                  engineClipId_ = input.readInt32();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000080) != 0)) {
              drawingActions_ = java.util.Collections.unmodifiableList(drawingActions_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ImageLayer_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ImageLayer_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer.Builder.class);
        }

        private int bitField0_;
        public static final int LAYER_COMMON_FIELD_NUMBER = 100;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon layerCommon_;
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return Whether the layerCommon field is set.
         */
        @java.lang.Override
        public boolean hasLayerCommon() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return The layerCommon.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getLayerCommon() {
          return layerCommon_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
        }
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder getLayerCommonOrBuilder() {
          return layerCommon_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
        }

        public static final int IMAGE_PATH_FIELD_NUMBER = 101;
        private volatile java.lang.Object imagePath_;
        /**
         * <code>optional string image_path = 101;</code>
         * @return Whether the imagePath field is set.
         */
        @java.lang.Override
        public boolean hasImagePath() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional string image_path = 101;</code>
         * @return The imagePath.
         */
        @java.lang.Override
        public java.lang.String getImagePath() {
          java.lang.Object ref = imagePath_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              imagePath_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string image_path = 101;</code>
         * @return The bytes for imagePath.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getImagePathBytes() {
          java.lang.Object ref = imagePath_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            imagePath_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int IMAGE_MSID_FIELD_NUMBER = 102;
        private volatile java.lang.Object imageMsid_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string image_msid = 102;</code>
         * @return Whether the imageMsid field is set.
         */
        @java.lang.Override
        public boolean hasImageMsid() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string image_msid = 102;</code>
         * @return The imageMsid.
         */
        @java.lang.Override
        public java.lang.String getImageMsid() {
          java.lang.Object ref = imageMsid_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              imageMsid_ = s;
            }
            return s;
          }
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string image_msid = 102;</code>
         * @return The bytes for imageMsid.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getImageMsidBytes() {
          java.lang.Object ref = imageMsid_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            imageMsid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int BRIGHTNESS_FIELD_NUMBER = 103;
        private int brightness_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 brightness = 103;</code>
         * @return Whether the brightness field is set.
         */
        @java.lang.Override
        public boolean hasBrightness() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 brightness = 103;</code>
         * @return The brightness.
         */
        @java.lang.Override
        public int getBrightness() {
          return brightness_;
        }

        public static final int CONTRAST_FIELD_NUMBER = 104;
        private int contrast_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 contrast = 104;</code>
         * @return Whether the contrast field is set.
         */
        @java.lang.Override
        public boolean hasContrast() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 contrast = 104;</code>
         * @return The contrast.
         */
        @java.lang.Override
        public int getContrast() {
          return contrast_;
        }

        public static final int SATURATION_FIELD_NUMBER = 105;
        private int saturation_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 saturation = 105;</code>
         * @return Whether the saturation field is set.
         */
        @java.lang.Override
        public boolean hasSaturation() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 saturation = 105;</code>
         * @return The saturation.
         */
        @java.lang.Override
        public int getSaturation() {
          return saturation_;
        }

        public static final int COLOR_EFFECT_FIELD_NUMBER = 106;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect colorEffect_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
         * @return Whether the colorEffect field is set.
         */
        @java.lang.Override
        public boolean hasColorEffect() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
         * @return The colorEffect.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect getColorEffect() {
          return colorEffect_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.getDefaultInstance() : colorEffect_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffectOrBuilder getColorEffectOrBuilder() {
          return colorEffect_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.getDefaultInstance() : colorEffect_;
        }

        public static final int DRAWING_ACTIONS_FIELD_NUMBER = 107;
        private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction> drawingActions_;
        /**
         * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
         */
        @java.lang.Override
        public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction> getDrawingActionsList() {
          return drawingActions_;
        }
        /**
         * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
         */
        @java.lang.Override
        public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionOrBuilder> 
            getDrawingActionsOrBuilderList() {
          return drawingActions_;
        }
        /**
         * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
         */
        @java.lang.Override
        public int getDrawingActionsCount() {
          return drawingActions_.size();
        }
        /**
         * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction getDrawingActions(int index) {
          return drawingActions_.get(index);
        }
        /**
         * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionOrBuilder getDrawingActionsOrBuilder(
            int index) {
          return drawingActions_.get(index);
        }

        public static final int CHROMA_KEY_COLOR_FIELD_NUMBER = 108;
        private int chromaKeyColor_;
        /**
         * <code>optional int32 chroma_key_color = 108;</code>
         * @return Whether the chromaKeyColor field is set.
         */
        @java.lang.Override
        public boolean hasChromaKeyColor() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <code>optional int32 chroma_key_color = 108;</code>
         * @return The chromaKeyColor.
         */
        @java.lang.Override
        public int getChromaKeyColor() {
          return chromaKeyColor_;
        }

        public static final int CHROMA_KEY_ENABLED_FIELD_NUMBER = 109;
        private boolean chromaKeyEnabled_;
        /**
         * <code>optional bool chroma_key_enabled = 109;</code>
         * @return Whether the chromaKeyEnabled field is set.
         */
        @java.lang.Override
        public boolean hasChromaKeyEnabled() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <code>optional bool chroma_key_enabled = 109;</code>
         * @return The chromaKeyEnabled.
         */
        @java.lang.Override
        public boolean getChromaKeyEnabled() {
          return chromaKeyEnabled_;
        }

        public static final int CHROMA_KEY_CLIP_FG_FIELD_NUMBER = 110;
        private float chromaKeyClipFg_;
        /**
         * <code>optional float chroma_key_clip_fg = 110;</code>
         * @return Whether the chromaKeyClipFg field is set.
         */
        @java.lang.Override
        public boolean hasChromaKeyClipFg() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <code>optional float chroma_key_clip_fg = 110;</code>
         * @return The chromaKeyClipFg.
         */
        @java.lang.Override
        public float getChromaKeyClipFg() {
          return chromaKeyClipFg_;
        }

        public static final int CHROMA_KEY_CLIP_BG_FIELD_NUMBER = 111;
        private float chromaKeyClipBg_;
        /**
         * <code>optional float chroma_key_clip_bg = 111;</code>
         * @return Whether the chromaKeyClipBg field is set.
         */
        @java.lang.Override
        public boolean hasChromaKeyClipBg() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <code>optional float chroma_key_clip_bg = 111;</code>
         * @return The chromaKeyClipBg.
         */
        @java.lang.Override
        public float getChromaKeyClipBg() {
          return chromaKeyClipBg_;
        }

        public static final int CHROMA_KEY_BLEND_X0_FIELD_NUMBER = 112;
        private float chromaKeyBlendX0_;
        /**
         * <code>optional float chroma_key_blend_x0 = 112;</code>
         * @return Whether the chromaKeyBlendX0 field is set.
         */
        @java.lang.Override
        public boolean hasChromaKeyBlendX0() {
          return ((bitField0_ & 0x00000800) != 0);
        }
        /**
         * <code>optional float chroma_key_blend_x0 = 112;</code>
         * @return The chromaKeyBlendX0.
         */
        @java.lang.Override
        public float getChromaKeyBlendX0() {
          return chromaKeyBlendX0_;
        }

        public static final int CHROMA_KEY_BLEND_Y0_FIELD_NUMBER = 113;
        private float chromaKeyBlendY0_;
        /**
         * <code>optional float chroma_key_blend_y0 = 113;</code>
         * @return Whether the chromaKeyBlendY0 field is set.
         */
        @java.lang.Override
        public boolean hasChromaKeyBlendY0() {
          return ((bitField0_ & 0x00001000) != 0);
        }
        /**
         * <code>optional float chroma_key_blend_y0 = 113;</code>
         * @return The chromaKeyBlendY0.
         */
        @java.lang.Override
        public float getChromaKeyBlendY0() {
          return chromaKeyBlendY0_;
        }

        public static final int CHROMA_KEY_BLEND_X1_FIELD_NUMBER = 114;
        private float chromaKeyBlendX1_;
        /**
         * <code>optional float chroma_key_blend_x1 = 114;</code>
         * @return Whether the chromaKeyBlendX1 field is set.
         */
        @java.lang.Override
        public boolean hasChromaKeyBlendX1() {
          return ((bitField0_ & 0x00002000) != 0);
        }
        /**
         * <code>optional float chroma_key_blend_x1 = 114;</code>
         * @return The chromaKeyBlendX1.
         */
        @java.lang.Override
        public float getChromaKeyBlendX1() {
          return chromaKeyBlendX1_;
        }

        public static final int CHROMA_KEY_BLEND_Y1_FIELD_NUMBER = 115;
        private float chromaKeyBlendY1_;
        /**
         * <code>optional float chroma_key_blend_y1 = 115;</code>
         * @return Whether the chromaKeyBlendY1 field is set.
         */
        @java.lang.Override
        public boolean hasChromaKeyBlendY1() {
          return ((bitField0_ & 0x00004000) != 0);
        }
        /**
         * <code>optional float chroma_key_blend_y1 = 115;</code>
         * @return The chromaKeyBlendY1.
         */
        @java.lang.Override
        public float getChromaKeyBlendY1() {
          return chromaKeyBlendY1_;
        }

        public static final int COLORADJUSTMENT_FIELD_NUMBER = 116;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment colorAdjustment_;
        /**
         * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 116;</code>
         * @return Whether the colorAdjustment field is set.
         */
        @java.lang.Override
        public boolean hasColorAdjustment() {
          return ((bitField0_ & 0x00008000) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 116;</code>
         * @return The colorAdjustment.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment getColorAdjustment() {
          return colorAdjustment_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.getDefaultInstance() : colorAdjustment_;
        }
        /**
         * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 116;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustmentOrBuilder getColorAdjustmentOrBuilder() {
          return colorAdjustment_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.getDefaultInstance() : colorAdjustment_;
        }

        public static final int COLORFILTER_FIELD_NUMBER = 117;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter colorFilter_;
        /**
         * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 117;</code>
         * @return Whether the colorFilter field is set.
         */
        @java.lang.Override
        public boolean hasColorFilter() {
          return ((bitField0_ & 0x00010000) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 117;</code>
         * @return The colorFilter.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter getColorFilter() {
          return colorFilter_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.getDefaultInstance() : colorFilter_;
        }
        /**
         * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 117;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilterOrBuilder getColorFilterOrBuilder() {
          return colorFilter_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.getDefaultInstance() : colorFilter_;
        }

        public static final int ENGINE_CLIP_ID_FIELD_NUMBER = 118;
        private int engineClipId_;
        /**
         * <pre>
         * Unique identifier for rendering of animated image to NexEditor engine
         * </pre>
         *
         * <code>optional int32 engine_clip_id = 118;</code>
         * @return Whether the engineClipId field is set.
         */
        @java.lang.Override
        public boolean hasEngineClipId() {
          return ((bitField0_ & 0x00020000) != 0);
        }
        /**
         * <pre>
         * Unique identifier for rendering of animated image to NexEditor engine
         * </pre>
         *
         * <code>optional int32 engine_clip_id = 118;</code>
         * @return The engineClipId.
         */
        @java.lang.Override
        public int getEngineClipId() {
          return engineClipId_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeMessage(100, getLayerCommon());
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 101, imagePath_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 102, imageMsid_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeInt32(103, brightness_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            output.writeInt32(104, contrast_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            output.writeInt32(105, saturation_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            output.writeMessage(106, getColorEffect());
          }
          for (int i = 0; i < drawingActions_.size(); i++) {
            output.writeMessage(107, drawingActions_.get(i));
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            output.writeInt32(108, chromaKeyColor_);
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            output.writeBool(109, chromaKeyEnabled_);
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            output.writeFloat(110, chromaKeyClipFg_);
          }
          if (((bitField0_ & 0x00000400) != 0)) {
            output.writeFloat(111, chromaKeyClipBg_);
          }
          if (((bitField0_ & 0x00000800) != 0)) {
            output.writeFloat(112, chromaKeyBlendX0_);
          }
          if (((bitField0_ & 0x00001000) != 0)) {
            output.writeFloat(113, chromaKeyBlendY0_);
          }
          if (((bitField0_ & 0x00002000) != 0)) {
            output.writeFloat(114, chromaKeyBlendX1_);
          }
          if (((bitField0_ & 0x00004000) != 0)) {
            output.writeFloat(115, chromaKeyBlendY1_);
          }
          if (((bitField0_ & 0x00008000) != 0)) {
            output.writeMessage(116, getColorAdjustment());
          }
          if (((bitField0_ & 0x00010000) != 0)) {
            output.writeMessage(117, getColorFilter());
          }
          if (((bitField0_ & 0x00020000) != 0)) {
            output.writeInt32(118, engineClipId_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(100, getLayerCommon());
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(101, imagePath_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(102, imageMsid_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(103, brightness_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(104, contrast_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(105, saturation_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(106, getColorEffect());
          }
          for (int i = 0; i < drawingActions_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(107, drawingActions_.get(i));
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(108, chromaKeyColor_);
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(109, chromaKeyEnabled_);
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(110, chromaKeyClipFg_);
          }
          if (((bitField0_ & 0x00000400) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(111, chromaKeyClipBg_);
          }
          if (((bitField0_ & 0x00000800) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(112, chromaKeyBlendX0_);
          }
          if (((bitField0_ & 0x00001000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(113, chromaKeyBlendY0_);
          }
          if (((bitField0_ & 0x00002000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(114, chromaKeyBlendX1_);
          }
          if (((bitField0_ & 0x00004000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(115, chromaKeyBlendY1_);
          }
          if (((bitField0_ & 0x00008000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(116, getColorAdjustment());
          }
          if (((bitField0_ & 0x00010000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(117, getColorFilter());
          }
          if (((bitField0_ & 0x00020000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(118, engineClipId_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer) obj;

          if (hasLayerCommon() != other.hasLayerCommon()) return false;
          if (hasLayerCommon()) {
            if (!getLayerCommon()
                .equals(other.getLayerCommon())) return false;
          }
          if (hasImagePath() != other.hasImagePath()) return false;
          if (hasImagePath()) {
            if (!getImagePath()
                .equals(other.getImagePath())) return false;
          }
          if (hasImageMsid() != other.hasImageMsid()) return false;
          if (hasImageMsid()) {
            if (!getImageMsid()
                .equals(other.getImageMsid())) return false;
          }
          if (hasBrightness() != other.hasBrightness()) return false;
          if (hasBrightness()) {
            if (getBrightness()
                != other.getBrightness()) return false;
          }
          if (hasContrast() != other.hasContrast()) return false;
          if (hasContrast()) {
            if (getContrast()
                != other.getContrast()) return false;
          }
          if (hasSaturation() != other.hasSaturation()) return false;
          if (hasSaturation()) {
            if (getSaturation()
                != other.getSaturation()) return false;
          }
          if (hasColorEffect() != other.hasColorEffect()) return false;
          if (hasColorEffect()) {
            if (!getColorEffect()
                .equals(other.getColorEffect())) return false;
          }
          if (!getDrawingActionsList()
              .equals(other.getDrawingActionsList())) return false;
          if (hasChromaKeyColor() != other.hasChromaKeyColor()) return false;
          if (hasChromaKeyColor()) {
            if (getChromaKeyColor()
                != other.getChromaKeyColor()) return false;
          }
          if (hasChromaKeyEnabled() != other.hasChromaKeyEnabled()) return false;
          if (hasChromaKeyEnabled()) {
            if (getChromaKeyEnabled()
                != other.getChromaKeyEnabled()) return false;
          }
          if (hasChromaKeyClipFg() != other.hasChromaKeyClipFg()) return false;
          if (hasChromaKeyClipFg()) {
            if (java.lang.Float.floatToIntBits(getChromaKeyClipFg())
                != java.lang.Float.floatToIntBits(
                    other.getChromaKeyClipFg())) return false;
          }
          if (hasChromaKeyClipBg() != other.hasChromaKeyClipBg()) return false;
          if (hasChromaKeyClipBg()) {
            if (java.lang.Float.floatToIntBits(getChromaKeyClipBg())
                != java.lang.Float.floatToIntBits(
                    other.getChromaKeyClipBg())) return false;
          }
          if (hasChromaKeyBlendX0() != other.hasChromaKeyBlendX0()) return false;
          if (hasChromaKeyBlendX0()) {
            if (java.lang.Float.floatToIntBits(getChromaKeyBlendX0())
                != java.lang.Float.floatToIntBits(
                    other.getChromaKeyBlendX0())) return false;
          }
          if (hasChromaKeyBlendY0() != other.hasChromaKeyBlendY0()) return false;
          if (hasChromaKeyBlendY0()) {
            if (java.lang.Float.floatToIntBits(getChromaKeyBlendY0())
                != java.lang.Float.floatToIntBits(
                    other.getChromaKeyBlendY0())) return false;
          }
          if (hasChromaKeyBlendX1() != other.hasChromaKeyBlendX1()) return false;
          if (hasChromaKeyBlendX1()) {
            if (java.lang.Float.floatToIntBits(getChromaKeyBlendX1())
                != java.lang.Float.floatToIntBits(
                    other.getChromaKeyBlendX1())) return false;
          }
          if (hasChromaKeyBlendY1() != other.hasChromaKeyBlendY1()) return false;
          if (hasChromaKeyBlendY1()) {
            if (java.lang.Float.floatToIntBits(getChromaKeyBlendY1())
                != java.lang.Float.floatToIntBits(
                    other.getChromaKeyBlendY1())) return false;
          }
          if (hasColorAdjustment() != other.hasColorAdjustment()) return false;
          if (hasColorAdjustment()) {
            if (!getColorAdjustment()
                .equals(other.getColorAdjustment())) return false;
          }
          if (hasColorFilter() != other.hasColorFilter()) return false;
          if (hasColorFilter()) {
            if (!getColorFilter()
                .equals(other.getColorFilter())) return false;
          }
          if (hasEngineClipId() != other.hasEngineClipId()) return false;
          if (hasEngineClipId()) {
            if (getEngineClipId()
                != other.getEngineClipId()) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasLayerCommon()) {
            hash = (37 * hash) + LAYER_COMMON_FIELD_NUMBER;
            hash = (53 * hash) + getLayerCommon().hashCode();
          }
          if (hasImagePath()) {
            hash = (37 * hash) + IMAGE_PATH_FIELD_NUMBER;
            hash = (53 * hash) + getImagePath().hashCode();
          }
          if (hasImageMsid()) {
            hash = (37 * hash) + IMAGE_MSID_FIELD_NUMBER;
            hash = (53 * hash) + getImageMsid().hashCode();
          }
          if (hasBrightness()) {
            hash = (37 * hash) + BRIGHTNESS_FIELD_NUMBER;
            hash = (53 * hash) + getBrightness();
          }
          if (hasContrast()) {
            hash = (37 * hash) + CONTRAST_FIELD_NUMBER;
            hash = (53 * hash) + getContrast();
          }
          if (hasSaturation()) {
            hash = (37 * hash) + SATURATION_FIELD_NUMBER;
            hash = (53 * hash) + getSaturation();
          }
          if (hasColorEffect()) {
            hash = (37 * hash) + COLOR_EFFECT_FIELD_NUMBER;
            hash = (53 * hash) + getColorEffect().hashCode();
          }
          if (getDrawingActionsCount() > 0) {
            hash = (37 * hash) + DRAWING_ACTIONS_FIELD_NUMBER;
            hash = (53 * hash) + getDrawingActionsList().hashCode();
          }
          if (hasChromaKeyColor()) {
            hash = (37 * hash) + CHROMA_KEY_COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getChromaKeyColor();
          }
          if (hasChromaKeyEnabled()) {
            hash = (37 * hash) + CHROMA_KEY_ENABLED_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getChromaKeyEnabled());
          }
          if (hasChromaKeyClipFg()) {
            hash = (37 * hash) + CHROMA_KEY_CLIP_FG_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getChromaKeyClipFg());
          }
          if (hasChromaKeyClipBg()) {
            hash = (37 * hash) + CHROMA_KEY_CLIP_BG_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getChromaKeyClipBg());
          }
          if (hasChromaKeyBlendX0()) {
            hash = (37 * hash) + CHROMA_KEY_BLEND_X0_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getChromaKeyBlendX0());
          }
          if (hasChromaKeyBlendY0()) {
            hash = (37 * hash) + CHROMA_KEY_BLEND_Y0_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getChromaKeyBlendY0());
          }
          if (hasChromaKeyBlendX1()) {
            hash = (37 * hash) + CHROMA_KEY_BLEND_X1_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getChromaKeyBlendX1());
          }
          if (hasChromaKeyBlendY1()) {
            hash = (37 * hash) + CHROMA_KEY_BLEND_Y1_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getChromaKeyBlendY1());
          }
          if (hasColorAdjustment()) {
            hash = (37 * hash) + COLORADJUSTMENT_FIELD_NUMBER;
            hash = (53 * hash) + getColorAdjustment().hashCode();
          }
          if (hasColorFilter()) {
            hash = (37 * hash) + COLORFILTER_FIELD_NUMBER;
            hash = (53 * hash) + getColorFilter().hashCode();
          }
          if (hasEngineClipId()) {
            hash = (37 * hash) + ENGINE_CLIP_ID_FIELD_NUMBER;
            hash = (53 * hash) + getEngineClipId();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code KMProto.KMProject.ImageLayer}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.ImageLayer)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayerOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ImageLayer_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ImageLayer_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
              getLayerCommonFieldBuilder();
              getColorEffectFieldBuilder();
              getDrawingActionsFieldBuilder();
              getColorAdjustmentFieldBuilder();
              getColorFilterFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            if (layerCommonBuilder_ == null) {
              layerCommon_ = null;
            } else {
              layerCommonBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000001);
            imagePath_ = "";
            bitField0_ = (bitField0_ & ~0x00000002);
            imageMsid_ = "";
            bitField0_ = (bitField0_ & ~0x00000004);
            brightness_ = 0;
            bitField0_ = (bitField0_ & ~0x00000008);
            contrast_ = 0;
            bitField0_ = (bitField0_ & ~0x00000010);
            saturation_ = 0;
            bitField0_ = (bitField0_ & ~0x00000020);
            if (colorEffectBuilder_ == null) {
              colorEffect_ = null;
            } else {
              colorEffectBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000040);
            if (drawingActionsBuilder_ == null) {
              drawingActions_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              drawingActionsBuilder_.clear();
            }
            chromaKeyColor_ = 0;
            bitField0_ = (bitField0_ & ~0x00000100);
            chromaKeyEnabled_ = false;
            bitField0_ = (bitField0_ & ~0x00000200);
            chromaKeyClipFg_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000400);
            chromaKeyClipBg_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000800);
            chromaKeyBlendX0_ = 0F;
            bitField0_ = (bitField0_ & ~0x00001000);
            chromaKeyBlendY0_ = 0F;
            bitField0_ = (bitField0_ & ~0x00002000);
            chromaKeyBlendX1_ = 0F;
            bitField0_ = (bitField0_ & ~0x00004000);
            chromaKeyBlendY1_ = 0F;
            bitField0_ = (bitField0_ & ~0x00008000);
            if (colorAdjustmentBuilder_ == null) {
              colorAdjustment_ = null;
            } else {
              colorAdjustmentBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00010000);
            if (colorFilterBuilder_ == null) {
              colorFilter_ = null;
            } else {
              colorFilterBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00020000);
            engineClipId_ = 0;
            bitField0_ = (bitField0_ & ~0x00040000);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ImageLayer_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              if (layerCommonBuilder_ == null) {
                result.layerCommon_ = layerCommon_;
              } else {
                result.layerCommon_ = layerCommonBuilder_.build();
              }
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              to_bitField0_ |= 0x00000002;
            }
            result.imagePath_ = imagePath_;
            if (((from_bitField0_ & 0x00000004) != 0)) {
              to_bitField0_ |= 0x00000004;
            }
            result.imageMsid_ = imageMsid_;
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.brightness_ = brightness_;
              to_bitField0_ |= 0x00000008;
            }
            if (((from_bitField0_ & 0x00000010) != 0)) {
              result.contrast_ = contrast_;
              to_bitField0_ |= 0x00000010;
            }
            if (((from_bitField0_ & 0x00000020) != 0)) {
              result.saturation_ = saturation_;
              to_bitField0_ |= 0x00000020;
            }
            if (((from_bitField0_ & 0x00000040) != 0)) {
              if (colorEffectBuilder_ == null) {
                result.colorEffect_ = colorEffect_;
              } else {
                result.colorEffect_ = colorEffectBuilder_.build();
              }
              to_bitField0_ |= 0x00000040;
            }
            if (drawingActionsBuilder_ == null) {
              if (((bitField0_ & 0x00000080) != 0)) {
                drawingActions_ = java.util.Collections.unmodifiableList(drawingActions_);
                bitField0_ = (bitField0_ & ~0x00000080);
              }
              result.drawingActions_ = drawingActions_;
            } else {
              result.drawingActions_ = drawingActionsBuilder_.build();
            }
            if (((from_bitField0_ & 0x00000100) != 0)) {
              result.chromaKeyColor_ = chromaKeyColor_;
              to_bitField0_ |= 0x00000080;
            }
            if (((from_bitField0_ & 0x00000200) != 0)) {
              result.chromaKeyEnabled_ = chromaKeyEnabled_;
              to_bitField0_ |= 0x00000100;
            }
            if (((from_bitField0_ & 0x00000400) != 0)) {
              result.chromaKeyClipFg_ = chromaKeyClipFg_;
              to_bitField0_ |= 0x00000200;
            }
            if (((from_bitField0_ & 0x00000800) != 0)) {
              result.chromaKeyClipBg_ = chromaKeyClipBg_;
              to_bitField0_ |= 0x00000400;
            }
            if (((from_bitField0_ & 0x00001000) != 0)) {
              result.chromaKeyBlendX0_ = chromaKeyBlendX0_;
              to_bitField0_ |= 0x00000800;
            }
            if (((from_bitField0_ & 0x00002000) != 0)) {
              result.chromaKeyBlendY0_ = chromaKeyBlendY0_;
              to_bitField0_ |= 0x00001000;
            }
            if (((from_bitField0_ & 0x00004000) != 0)) {
              result.chromaKeyBlendX1_ = chromaKeyBlendX1_;
              to_bitField0_ |= 0x00002000;
            }
            if (((from_bitField0_ & 0x00008000) != 0)) {
              result.chromaKeyBlendY1_ = chromaKeyBlendY1_;
              to_bitField0_ |= 0x00004000;
            }
            if (((from_bitField0_ & 0x00010000) != 0)) {
              if (colorAdjustmentBuilder_ == null) {
                result.colorAdjustment_ = colorAdjustment_;
              } else {
                result.colorAdjustment_ = colorAdjustmentBuilder_.build();
              }
              to_bitField0_ |= 0x00008000;
            }
            if (((from_bitField0_ & 0x00020000) != 0)) {
              if (colorFilterBuilder_ == null) {
                result.colorFilter_ = colorFilter_;
              } else {
                result.colorFilter_ = colorFilterBuilder_.build();
              }
              to_bitField0_ |= 0x00010000;
            }
            if (((from_bitField0_ & 0x00040000) != 0)) {
              result.engineClipId_ = engineClipId_;
              to_bitField0_ |= 0x00020000;
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer.getDefaultInstance()) return this;
            if (other.hasLayerCommon()) {
              mergeLayerCommon(other.getLayerCommon());
            }
            if (other.hasImagePath()) {
              bitField0_ |= 0x00000002;
              imagePath_ = other.imagePath_;
              onChanged();
            }
            if (other.hasImageMsid()) {
              bitField0_ |= 0x00000004;
              imageMsid_ = other.imageMsid_;
              onChanged();
            }
            if (other.hasBrightness()) {
              setBrightness(other.getBrightness());
            }
            if (other.hasContrast()) {
              setContrast(other.getContrast());
            }
            if (other.hasSaturation()) {
              setSaturation(other.getSaturation());
            }
            if (other.hasColorEffect()) {
              mergeColorEffect(other.getColorEffect());
            }
            if (drawingActionsBuilder_ == null) {
              if (!other.drawingActions_.isEmpty()) {
                if (drawingActions_.isEmpty()) {
                  drawingActions_ = other.drawingActions_;
                  bitField0_ = (bitField0_ & ~0x00000080);
                } else {
                  ensureDrawingActionsIsMutable();
                  drawingActions_.addAll(other.drawingActions_);
                }
                onChanged();
              }
            } else {
              if (!other.drawingActions_.isEmpty()) {
                if (drawingActionsBuilder_.isEmpty()) {
                  drawingActionsBuilder_.dispose();
                  drawingActionsBuilder_ = null;
                  drawingActions_ = other.drawingActions_;
                  bitField0_ = (bitField0_ & ~0x00000080);
                  drawingActionsBuilder_ = 
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                       getDrawingActionsFieldBuilder() : null;
                } else {
                  drawingActionsBuilder_.addAllMessages(other.drawingActions_);
                }
              }
            }
            if (other.hasChromaKeyColor()) {
              setChromaKeyColor(other.getChromaKeyColor());
            }
            if (other.hasChromaKeyEnabled()) {
              setChromaKeyEnabled(other.getChromaKeyEnabled());
            }
            if (other.hasChromaKeyClipFg()) {
              setChromaKeyClipFg(other.getChromaKeyClipFg());
            }
            if (other.hasChromaKeyClipBg()) {
              setChromaKeyClipBg(other.getChromaKeyClipBg());
            }
            if (other.hasChromaKeyBlendX0()) {
              setChromaKeyBlendX0(other.getChromaKeyBlendX0());
            }
            if (other.hasChromaKeyBlendY0()) {
              setChromaKeyBlendY0(other.getChromaKeyBlendY0());
            }
            if (other.hasChromaKeyBlendX1()) {
              setChromaKeyBlendX1(other.getChromaKeyBlendX1());
            }
            if (other.hasChromaKeyBlendY1()) {
              setChromaKeyBlendY1(other.getChromaKeyBlendY1());
            }
            if (other.hasColorAdjustment()) {
              mergeColorAdjustment(other.getColorAdjustment());
            }
            if (other.hasColorFilter()) {
              mergeColorFilter(other.getColorFilter());
            }
            if (other.hasEngineClipId()) {
              setEngineClipId(other.getEngineClipId());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon layerCommon_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder> layerCommonBuilder_;
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           * @return Whether the layerCommon field is set.
           */
          public boolean hasLayerCommon() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           * @return The layerCommon.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getLayerCommon() {
            if (layerCommonBuilder_ == null) {
              return layerCommon_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
            } else {
              return layerCommonBuilder_.getMessage();
            }
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder setLayerCommon(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon value) {
            if (layerCommonBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              layerCommon_ = value;
              onChanged();
            } else {
              layerCommonBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000001;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder setLayerCommon(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder builderForValue) {
            if (layerCommonBuilder_ == null) {
              layerCommon_ = builderForValue.build();
              onChanged();
            } else {
              layerCommonBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000001;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder mergeLayerCommon(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon value) {
            if (layerCommonBuilder_ == null) {
              if (((bitField0_ & 0x00000001) != 0) &&
                  layerCommon_ != null &&
                  layerCommon_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance()) {
                layerCommon_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.newBuilder(layerCommon_).mergeFrom(value).buildPartial();
              } else {
                layerCommon_ = value;
              }
              onChanged();
            } else {
              layerCommonBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000001;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder clearLayerCommon() {
            if (layerCommonBuilder_ == null) {
              layerCommon_ = null;
              onChanged();
            } else {
              layerCommonBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000001);
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder getLayerCommonBuilder() {
            bitField0_ |= 0x00000001;
            onChanged();
            return getLayerCommonFieldBuilder().getBuilder();
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder getLayerCommonOrBuilder() {
            if (layerCommonBuilder_ != null) {
              return layerCommonBuilder_.getMessageOrBuilder();
            } else {
              return layerCommon_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
            }
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder> 
              getLayerCommonFieldBuilder() {
            if (layerCommonBuilder_ == null) {
              layerCommonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder>(
                      getLayerCommon(),
                      getParentForChildren(),
                      isClean());
              layerCommon_ = null;
            }
            return layerCommonBuilder_;
          }

          private java.lang.Object imagePath_ = "";
          /**
           * <code>optional string image_path = 101;</code>
           * @return Whether the imagePath field is set.
           */
          public boolean hasImagePath() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional string image_path = 101;</code>
           * @return The imagePath.
           */
          public java.lang.String getImagePath() {
            java.lang.Object ref = imagePath_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                imagePath_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string image_path = 101;</code>
           * @return The bytes for imagePath.
           */
          public com.google.protobuf.ByteString
              getImagePathBytes() {
            java.lang.Object ref = imagePath_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              imagePath_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string image_path = 101;</code>
           * @param value The imagePath to set.
           * @return This builder for chaining.
           */
          public Builder setImagePath(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            imagePath_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string image_path = 101;</code>
           * @return This builder for chaining.
           */
          public Builder clearImagePath() {
            bitField0_ = (bitField0_ & ~0x00000002);
            imagePath_ = getDefaultInstance().getImagePath();
            onChanged();
            return this;
          }
          /**
           * <code>optional string image_path = 101;</code>
           * @param value The bytes for imagePath to set.
           * @return This builder for chaining.
           */
          public Builder setImagePathBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            imagePath_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object imageMsid_ = "";
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string image_msid = 102;</code>
           * @return Whether the imageMsid field is set.
           */
          public boolean hasImageMsid() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string image_msid = 102;</code>
           * @return The imageMsid.
           */
          public java.lang.String getImageMsid() {
            java.lang.Object ref = imageMsid_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                imageMsid_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string image_msid = 102;</code>
           * @return The bytes for imageMsid.
           */
          public com.google.protobuf.ByteString
              getImageMsidBytes() {
            java.lang.Object ref = imageMsid_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              imageMsid_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string image_msid = 102;</code>
           * @param value The imageMsid to set.
           * @return This builder for chaining.
           */
          public Builder setImageMsid(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
            imageMsid_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string image_msid = 102;</code>
           * @return This builder for chaining.
           */
          public Builder clearImageMsid() {
            bitField0_ = (bitField0_ & ~0x00000004);
            imageMsid_ = getDefaultInstance().getImageMsid();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string image_msid = 102;</code>
           * @param value The bytes for imageMsid to set.
           * @return This builder for chaining.
           */
          public Builder setImageMsidBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
            imageMsid_ = value;
            onChanged();
            return this;
          }

          private int brightness_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 brightness = 103;</code>
           * @return Whether the brightness field is set.
           */
          @java.lang.Override
          public boolean hasBrightness() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 brightness = 103;</code>
           * @return The brightness.
           */
          @java.lang.Override
          public int getBrightness() {
            return brightness_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 brightness = 103;</code>
           * @param value The brightness to set.
           * @return This builder for chaining.
           */
          public Builder setBrightness(int value) {
            bitField0_ |= 0x00000008;
            brightness_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 brightness = 103;</code>
           * @return This builder for chaining.
           */
          public Builder clearBrightness() {
            bitField0_ = (bitField0_ & ~0x00000008);
            brightness_ = 0;
            onChanged();
            return this;
          }

          private int contrast_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 contrast = 104;</code>
           * @return Whether the contrast field is set.
           */
          @java.lang.Override
          public boolean hasContrast() {
            return ((bitField0_ & 0x00000010) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 contrast = 104;</code>
           * @return The contrast.
           */
          @java.lang.Override
          public int getContrast() {
            return contrast_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 contrast = 104;</code>
           * @param value The contrast to set.
           * @return This builder for chaining.
           */
          public Builder setContrast(int value) {
            bitField0_ |= 0x00000010;
            contrast_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 contrast = 104;</code>
           * @return This builder for chaining.
           */
          public Builder clearContrast() {
            bitField0_ = (bitField0_ & ~0x00000010);
            contrast_ = 0;
            onChanged();
            return this;
          }

          private int saturation_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 saturation = 105;</code>
           * @return Whether the saturation field is set.
           */
          @java.lang.Override
          public boolean hasSaturation() {
            return ((bitField0_ & 0x00000020) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 saturation = 105;</code>
           * @return The saturation.
           */
          @java.lang.Override
          public int getSaturation() {
            return saturation_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 saturation = 105;</code>
           * @param value The saturation to set.
           * @return This builder for chaining.
           */
          public Builder setSaturation(int value) {
            bitField0_ |= 0x00000020;
            saturation_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 saturation = 105;</code>
           * @return This builder for chaining.
           */
          public Builder clearSaturation() {
            bitField0_ = (bitField0_ & ~0x00000020);
            saturation_ = 0;
            onChanged();
            return this;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect colorEffect_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffectOrBuilder> colorEffectBuilder_;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
           * @return Whether the colorEffect field is set.
           */
          public boolean hasColorEffect() {
            return ((bitField0_ & 0x00000040) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
           * @return The colorEffect.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect getColorEffect() {
            if (colorEffectBuilder_ == null) {
              return colorEffect_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.getDefaultInstance() : colorEffect_;
            } else {
              return colorEffectBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
           */
          public Builder setColorEffect(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect value) {
            if (colorEffectBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              colorEffect_ = value;
              onChanged();
            } else {
              colorEffectBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000040;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
           */
          public Builder setColorEffect(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.Builder builderForValue) {
            if (colorEffectBuilder_ == null) {
              colorEffect_ = builderForValue.build();
              onChanged();
            } else {
              colorEffectBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000040;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
           */
          public Builder mergeColorEffect(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect value) {
            if (colorEffectBuilder_ == null) {
              if (((bitField0_ & 0x00000040) != 0) &&
                  colorEffect_ != null &&
                  colorEffect_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.getDefaultInstance()) {
                colorEffect_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.newBuilder(colorEffect_).mergeFrom(value).buildPartial();
              } else {
                colorEffect_ = value;
              }
              onChanged();
            } else {
              colorEffectBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000040;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
           */
          public Builder clearColorEffect() {
            if (colorEffectBuilder_ == null) {
              colorEffect_ = null;
              onChanged();
            } else {
              colorEffectBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000040);
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.Builder getColorEffectBuilder() {
            bitField0_ |= 0x00000040;
            onChanged();
            return getColorEffectFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffectOrBuilder getColorEffectOrBuilder() {
            if (colorEffectBuilder_ != null) {
              return colorEffectBuilder_.getMessageOrBuilder();
            } else {
              return colorEffect_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.getDefaultInstance() : colorEffect_;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffectOrBuilder> 
              getColorEffectFieldBuilder() {
            if (colorEffectBuilder_ == null) {
              colorEffectBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffectOrBuilder>(
                      getColorEffect(),
                      getParentForChildren(),
                      isClean());
              colorEffect_ = null;
            }
            return colorEffectBuilder_;
          }

          private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction> drawingActions_ =
            java.util.Collections.emptyList();
          private void ensureDrawingActionsIsMutable() {
            if (!((bitField0_ & 0x00000080) != 0)) {
              drawingActions_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction>(drawingActions_);
              bitField0_ |= 0x00000080;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionOrBuilder> drawingActionsBuilder_;

          /**
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
           */
          public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction> getDrawingActionsList() {
            if (drawingActionsBuilder_ == null) {
              return java.util.Collections.unmodifiableList(drawingActions_);
            } else {
              return drawingActionsBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
           */
          public int getDrawingActionsCount() {
            if (drawingActionsBuilder_ == null) {
              return drawingActions_.size();
            } else {
              return drawingActionsBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction getDrawingActions(int index) {
            if (drawingActionsBuilder_ == null) {
              return drawingActions_.get(index);
            } else {
              return drawingActionsBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
           */
          public Builder setDrawingActions(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction value) {
            if (drawingActionsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureDrawingActionsIsMutable();
              drawingActions_.set(index, value);
              onChanged();
            } else {
              drawingActionsBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
           */
          public Builder setDrawingActions(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.Builder builderForValue) {
            if (drawingActionsBuilder_ == null) {
              ensureDrawingActionsIsMutable();
              drawingActions_.set(index, builderForValue.build());
              onChanged();
            } else {
              drawingActionsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
           */
          public Builder addDrawingActions(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction value) {
            if (drawingActionsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureDrawingActionsIsMutable();
              drawingActions_.add(value);
              onChanged();
            } else {
              drawingActionsBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
           */
          public Builder addDrawingActions(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction value) {
            if (drawingActionsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureDrawingActionsIsMutable();
              drawingActions_.add(index, value);
              onChanged();
            } else {
              drawingActionsBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
           */
          public Builder addDrawingActions(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.Builder builderForValue) {
            if (drawingActionsBuilder_ == null) {
              ensureDrawingActionsIsMutable();
              drawingActions_.add(builderForValue.build());
              onChanged();
            } else {
              drawingActionsBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
           */
          public Builder addDrawingActions(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.Builder builderForValue) {
            if (drawingActionsBuilder_ == null) {
              ensureDrawingActionsIsMutable();
              drawingActions_.add(index, builderForValue.build());
              onChanged();
            } else {
              drawingActionsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
           */
          public Builder addAllDrawingActions(
              java.lang.Iterable<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction> values) {
            if (drawingActionsBuilder_ == null) {
              ensureDrawingActionsIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, drawingActions_);
              onChanged();
            } else {
              drawingActionsBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
           */
          public Builder clearDrawingActions() {
            if (drawingActionsBuilder_ == null) {
              drawingActions_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000080);
              onChanged();
            } else {
              drawingActionsBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
           */
          public Builder removeDrawingActions(int index) {
            if (drawingActionsBuilder_ == null) {
              ensureDrawingActionsIsMutable();
              drawingActions_.remove(index);
              onChanged();
            } else {
              drawingActionsBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.Builder getDrawingActionsBuilder(
              int index) {
            return getDrawingActionsFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionOrBuilder getDrawingActionsOrBuilder(
              int index) {
            if (drawingActionsBuilder_ == null) {
              return drawingActions_.get(index);  } else {
              return drawingActionsBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
           */
          public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionOrBuilder> 
               getDrawingActionsOrBuilderList() {
            if (drawingActionsBuilder_ != null) {
              return drawingActionsBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(drawingActions_);
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.Builder addDrawingActionsBuilder() {
            return getDrawingActionsFieldBuilder().addBuilder(
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.getDefaultInstance());
          }
          /**
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.Builder addDrawingActionsBuilder(
              int index) {
            return getDrawingActionsFieldBuilder().addBuilder(
                index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.getDefaultInstance());
          }
          /**
           * <code>repeated .KMProto.KMProject.DrawingAction drawing_actions = 107;</code>
           */
          public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.Builder> 
               getDrawingActionsBuilderList() {
            return getDrawingActionsFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionOrBuilder> 
              getDrawingActionsFieldBuilder() {
            if (drawingActionsBuilder_ == null) {
              drawingActionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionOrBuilder>(
                      drawingActions_,
                      ((bitField0_ & 0x00000080) != 0),
                      getParentForChildren(),
                      isClean());
              drawingActions_ = null;
            }
            return drawingActionsBuilder_;
          }

          private int chromaKeyColor_ ;
          /**
           * <code>optional int32 chroma_key_color = 108;</code>
           * @return Whether the chromaKeyColor field is set.
           */
          @java.lang.Override
          public boolean hasChromaKeyColor() {
            return ((bitField0_ & 0x00000100) != 0);
          }
          /**
           * <code>optional int32 chroma_key_color = 108;</code>
           * @return The chromaKeyColor.
           */
          @java.lang.Override
          public int getChromaKeyColor() {
            return chromaKeyColor_;
          }
          /**
           * <code>optional int32 chroma_key_color = 108;</code>
           * @param value The chromaKeyColor to set.
           * @return This builder for chaining.
           */
          public Builder setChromaKeyColor(int value) {
            bitField0_ |= 0x00000100;
            chromaKeyColor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 chroma_key_color = 108;</code>
           * @return This builder for chaining.
           */
          public Builder clearChromaKeyColor() {
            bitField0_ = (bitField0_ & ~0x00000100);
            chromaKeyColor_ = 0;
            onChanged();
            return this;
          }

          private boolean chromaKeyEnabled_ ;
          /**
           * <code>optional bool chroma_key_enabled = 109;</code>
           * @return Whether the chromaKeyEnabled field is set.
           */
          @java.lang.Override
          public boolean hasChromaKeyEnabled() {
            return ((bitField0_ & 0x00000200) != 0);
          }
          /**
           * <code>optional bool chroma_key_enabled = 109;</code>
           * @return The chromaKeyEnabled.
           */
          @java.lang.Override
          public boolean getChromaKeyEnabled() {
            return chromaKeyEnabled_;
          }
          /**
           * <code>optional bool chroma_key_enabled = 109;</code>
           * @param value The chromaKeyEnabled to set.
           * @return This builder for chaining.
           */
          public Builder setChromaKeyEnabled(boolean value) {
            bitField0_ |= 0x00000200;
            chromaKeyEnabled_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool chroma_key_enabled = 109;</code>
           * @return This builder for chaining.
           */
          public Builder clearChromaKeyEnabled() {
            bitField0_ = (bitField0_ & ~0x00000200);
            chromaKeyEnabled_ = false;
            onChanged();
            return this;
          }

          private float chromaKeyClipFg_ ;
          /**
           * <code>optional float chroma_key_clip_fg = 110;</code>
           * @return Whether the chromaKeyClipFg field is set.
           */
          @java.lang.Override
          public boolean hasChromaKeyClipFg() {
            return ((bitField0_ & 0x00000400) != 0);
          }
          /**
           * <code>optional float chroma_key_clip_fg = 110;</code>
           * @return The chromaKeyClipFg.
           */
          @java.lang.Override
          public float getChromaKeyClipFg() {
            return chromaKeyClipFg_;
          }
          /**
           * <code>optional float chroma_key_clip_fg = 110;</code>
           * @param value The chromaKeyClipFg to set.
           * @return This builder for chaining.
           */
          public Builder setChromaKeyClipFg(float value) {
            bitField0_ |= 0x00000400;
            chromaKeyClipFg_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float chroma_key_clip_fg = 110;</code>
           * @return This builder for chaining.
           */
          public Builder clearChromaKeyClipFg() {
            bitField0_ = (bitField0_ & ~0x00000400);
            chromaKeyClipFg_ = 0F;
            onChanged();
            return this;
          }

          private float chromaKeyClipBg_ ;
          /**
           * <code>optional float chroma_key_clip_bg = 111;</code>
           * @return Whether the chromaKeyClipBg field is set.
           */
          @java.lang.Override
          public boolean hasChromaKeyClipBg() {
            return ((bitField0_ & 0x00000800) != 0);
          }
          /**
           * <code>optional float chroma_key_clip_bg = 111;</code>
           * @return The chromaKeyClipBg.
           */
          @java.lang.Override
          public float getChromaKeyClipBg() {
            return chromaKeyClipBg_;
          }
          /**
           * <code>optional float chroma_key_clip_bg = 111;</code>
           * @param value The chromaKeyClipBg to set.
           * @return This builder for chaining.
           */
          public Builder setChromaKeyClipBg(float value) {
            bitField0_ |= 0x00000800;
            chromaKeyClipBg_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float chroma_key_clip_bg = 111;</code>
           * @return This builder for chaining.
           */
          public Builder clearChromaKeyClipBg() {
            bitField0_ = (bitField0_ & ~0x00000800);
            chromaKeyClipBg_ = 0F;
            onChanged();
            return this;
          }

          private float chromaKeyBlendX0_ ;
          /**
           * <code>optional float chroma_key_blend_x0 = 112;</code>
           * @return Whether the chromaKeyBlendX0 field is set.
           */
          @java.lang.Override
          public boolean hasChromaKeyBlendX0() {
            return ((bitField0_ & 0x00001000) != 0);
          }
          /**
           * <code>optional float chroma_key_blend_x0 = 112;</code>
           * @return The chromaKeyBlendX0.
           */
          @java.lang.Override
          public float getChromaKeyBlendX0() {
            return chromaKeyBlendX0_;
          }
          /**
           * <code>optional float chroma_key_blend_x0 = 112;</code>
           * @param value The chromaKeyBlendX0 to set.
           * @return This builder for chaining.
           */
          public Builder setChromaKeyBlendX0(float value) {
            bitField0_ |= 0x00001000;
            chromaKeyBlendX0_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float chroma_key_blend_x0 = 112;</code>
           * @return This builder for chaining.
           */
          public Builder clearChromaKeyBlendX0() {
            bitField0_ = (bitField0_ & ~0x00001000);
            chromaKeyBlendX0_ = 0F;
            onChanged();
            return this;
          }

          private float chromaKeyBlendY0_ ;
          /**
           * <code>optional float chroma_key_blend_y0 = 113;</code>
           * @return Whether the chromaKeyBlendY0 field is set.
           */
          @java.lang.Override
          public boolean hasChromaKeyBlendY0() {
            return ((bitField0_ & 0x00002000) != 0);
          }
          /**
           * <code>optional float chroma_key_blend_y0 = 113;</code>
           * @return The chromaKeyBlendY0.
           */
          @java.lang.Override
          public float getChromaKeyBlendY0() {
            return chromaKeyBlendY0_;
          }
          /**
           * <code>optional float chroma_key_blend_y0 = 113;</code>
           * @param value The chromaKeyBlendY0 to set.
           * @return This builder for chaining.
           */
          public Builder setChromaKeyBlendY0(float value) {
            bitField0_ |= 0x00002000;
            chromaKeyBlendY0_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float chroma_key_blend_y0 = 113;</code>
           * @return This builder for chaining.
           */
          public Builder clearChromaKeyBlendY0() {
            bitField0_ = (bitField0_ & ~0x00002000);
            chromaKeyBlendY0_ = 0F;
            onChanged();
            return this;
          }

          private float chromaKeyBlendX1_ ;
          /**
           * <code>optional float chroma_key_blend_x1 = 114;</code>
           * @return Whether the chromaKeyBlendX1 field is set.
           */
          @java.lang.Override
          public boolean hasChromaKeyBlendX1() {
            return ((bitField0_ & 0x00004000) != 0);
          }
          /**
           * <code>optional float chroma_key_blend_x1 = 114;</code>
           * @return The chromaKeyBlendX1.
           */
          @java.lang.Override
          public float getChromaKeyBlendX1() {
            return chromaKeyBlendX1_;
          }
          /**
           * <code>optional float chroma_key_blend_x1 = 114;</code>
           * @param value The chromaKeyBlendX1 to set.
           * @return This builder for chaining.
           */
          public Builder setChromaKeyBlendX1(float value) {
            bitField0_ |= 0x00004000;
            chromaKeyBlendX1_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float chroma_key_blend_x1 = 114;</code>
           * @return This builder for chaining.
           */
          public Builder clearChromaKeyBlendX1() {
            bitField0_ = (bitField0_ & ~0x00004000);
            chromaKeyBlendX1_ = 0F;
            onChanged();
            return this;
          }

          private float chromaKeyBlendY1_ ;
          /**
           * <code>optional float chroma_key_blend_y1 = 115;</code>
           * @return Whether the chromaKeyBlendY1 field is set.
           */
          @java.lang.Override
          public boolean hasChromaKeyBlendY1() {
            return ((bitField0_ & 0x00008000) != 0);
          }
          /**
           * <code>optional float chroma_key_blend_y1 = 115;</code>
           * @return The chromaKeyBlendY1.
           */
          @java.lang.Override
          public float getChromaKeyBlendY1() {
            return chromaKeyBlendY1_;
          }
          /**
           * <code>optional float chroma_key_blend_y1 = 115;</code>
           * @param value The chromaKeyBlendY1 to set.
           * @return This builder for chaining.
           */
          public Builder setChromaKeyBlendY1(float value) {
            bitField0_ |= 0x00008000;
            chromaKeyBlendY1_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float chroma_key_blend_y1 = 115;</code>
           * @return This builder for chaining.
           */
          public Builder clearChromaKeyBlendY1() {
            bitField0_ = (bitField0_ & ~0x00008000);
            chromaKeyBlendY1_ = 0F;
            onChanged();
            return this;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment colorAdjustment_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustmentOrBuilder> colorAdjustmentBuilder_;
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 116;</code>
           * @return Whether the colorAdjustment field is set.
           */
          public boolean hasColorAdjustment() {
            return ((bitField0_ & 0x00010000) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 116;</code>
           * @return The colorAdjustment.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment getColorAdjustment() {
            if (colorAdjustmentBuilder_ == null) {
              return colorAdjustment_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.getDefaultInstance() : colorAdjustment_;
            } else {
              return colorAdjustmentBuilder_.getMessage();
            }
          }
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 116;</code>
           */
          public Builder setColorAdjustment(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment value) {
            if (colorAdjustmentBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              colorAdjustment_ = value;
              onChanged();
            } else {
              colorAdjustmentBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00010000;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 116;</code>
           */
          public Builder setColorAdjustment(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.Builder builderForValue) {
            if (colorAdjustmentBuilder_ == null) {
              colorAdjustment_ = builderForValue.build();
              onChanged();
            } else {
              colorAdjustmentBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00010000;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 116;</code>
           */
          public Builder mergeColorAdjustment(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment value) {
            if (colorAdjustmentBuilder_ == null) {
              if (((bitField0_ & 0x00010000) != 0) &&
                  colorAdjustment_ != null &&
                  colorAdjustment_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.getDefaultInstance()) {
                colorAdjustment_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.newBuilder(colorAdjustment_).mergeFrom(value).buildPartial();
              } else {
                colorAdjustment_ = value;
              }
              onChanged();
            } else {
              colorAdjustmentBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00010000;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 116;</code>
           */
          public Builder clearColorAdjustment() {
            if (colorAdjustmentBuilder_ == null) {
              colorAdjustment_ = null;
              onChanged();
            } else {
              colorAdjustmentBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00010000);
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 116;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.Builder getColorAdjustmentBuilder() {
            bitField0_ |= 0x00010000;
            onChanged();
            return getColorAdjustmentFieldBuilder().getBuilder();
          }
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 116;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustmentOrBuilder getColorAdjustmentOrBuilder() {
            if (colorAdjustmentBuilder_ != null) {
              return colorAdjustmentBuilder_.getMessageOrBuilder();
            } else {
              return colorAdjustment_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.getDefaultInstance() : colorAdjustment_;
            }
          }
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 116;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustmentOrBuilder> 
              getColorAdjustmentFieldBuilder() {
            if (colorAdjustmentBuilder_ == null) {
              colorAdjustmentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustmentOrBuilder>(
                      getColorAdjustment(),
                      getParentForChildren(),
                      isClean());
              colorAdjustment_ = null;
            }
            return colorAdjustmentBuilder_;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter colorFilter_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilterOrBuilder> colorFilterBuilder_;
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 117;</code>
           * @return Whether the colorFilter field is set.
           */
          public boolean hasColorFilter() {
            return ((bitField0_ & 0x00020000) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 117;</code>
           * @return The colorFilter.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter getColorFilter() {
            if (colorFilterBuilder_ == null) {
              return colorFilter_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.getDefaultInstance() : colorFilter_;
            } else {
              return colorFilterBuilder_.getMessage();
            }
          }
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 117;</code>
           */
          public Builder setColorFilter(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter value) {
            if (colorFilterBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              colorFilter_ = value;
              onChanged();
            } else {
              colorFilterBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00020000;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 117;</code>
           */
          public Builder setColorFilter(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.Builder builderForValue) {
            if (colorFilterBuilder_ == null) {
              colorFilter_ = builderForValue.build();
              onChanged();
            } else {
              colorFilterBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00020000;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 117;</code>
           */
          public Builder mergeColorFilter(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter value) {
            if (colorFilterBuilder_ == null) {
              if (((bitField0_ & 0x00020000) != 0) &&
                  colorFilter_ != null &&
                  colorFilter_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.getDefaultInstance()) {
                colorFilter_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.newBuilder(colorFilter_).mergeFrom(value).buildPartial();
              } else {
                colorFilter_ = value;
              }
              onChanged();
            } else {
              colorFilterBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00020000;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 117;</code>
           */
          public Builder clearColorFilter() {
            if (colorFilterBuilder_ == null) {
              colorFilter_ = null;
              onChanged();
            } else {
              colorFilterBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00020000);
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 117;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.Builder getColorFilterBuilder() {
            bitField0_ |= 0x00020000;
            onChanged();
            return getColorFilterFieldBuilder().getBuilder();
          }
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 117;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilterOrBuilder getColorFilterOrBuilder() {
            if (colorFilterBuilder_ != null) {
              return colorFilterBuilder_.getMessageOrBuilder();
            } else {
              return colorFilter_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.getDefaultInstance() : colorFilter_;
            }
          }
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 117;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilterOrBuilder> 
              getColorFilterFieldBuilder() {
            if (colorFilterBuilder_ == null) {
              colorFilterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilterOrBuilder>(
                      getColorFilter(),
                      getParentForChildren(),
                      isClean());
              colorFilter_ = null;
            }
            return colorFilterBuilder_;
          }

          private int engineClipId_ ;
          /**
           * <pre>
           * Unique identifier for rendering of animated image to NexEditor engine
           * </pre>
           *
           * <code>optional int32 engine_clip_id = 118;</code>
           * @return Whether the engineClipId field is set.
           */
          @java.lang.Override
          public boolean hasEngineClipId() {
            return ((bitField0_ & 0x00040000) != 0);
          }
          /**
           * <pre>
           * Unique identifier for rendering of animated image to NexEditor engine
           * </pre>
           *
           * <code>optional int32 engine_clip_id = 118;</code>
           * @return The engineClipId.
           */
          @java.lang.Override
          public int getEngineClipId() {
            return engineClipId_;
          }
          /**
           * <pre>
           * Unique identifier for rendering of animated image to NexEditor engine
           * </pre>
           *
           * <code>optional int32 engine_clip_id = 118;</code>
           * @param value The engineClipId to set.
           * @return This builder for chaining.
           */
          public Builder setEngineClipId(int value) {
            bitField0_ |= 0x00040000;
            engineClipId_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Unique identifier for rendering of animated image to NexEditor engine
           * </pre>
           *
           * <code>optional int32 engine_clip_id = 118;</code>
           * @return This builder for chaining.
           */
          public Builder clearEngineClipId() {
            bitField0_ = (bitField0_ & ~0x00040000);
            engineClipId_ = 0;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.ImageLayer)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.ImageLayer)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<ImageLayer>
            PARSER = new com.google.protobuf.AbstractParser<ImageLayer>() {
          @java.lang.Override
          public ImageLayer parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new ImageLayer(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<ImageLayer> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ImageLayer> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ImageLayer getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface VideoLayerOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.VideoLayer)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return Whether the layerCommon field is set.
         */
        boolean hasLayerCommon();
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return The layerCommon.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getLayerCommon();
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder getLayerCommonOrBuilder();

        /**
         * <code>optional string video_path = 101;</code>
         * @return Whether the videoPath field is set.
         */
        boolean hasVideoPath();
        /**
         * <code>optional string video_path = 101;</code>
         * @return The videoPath.
         */
        java.lang.String getVideoPath();
        /**
         * <code>optional string video_path = 101;</code>
         * @return The bytes for videoPath.
         */
        com.google.protobuf.ByteString
            getVideoPathBytes();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string video_msid = 102;</code>
         * @return Whether the videoMsid field is set.
         */
        boolean hasVideoMsid();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string video_msid = 102;</code>
         * @return The videoMsid.
         */
        java.lang.String getVideoMsid();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string video_msid = 102;</code>
         * @return The bytes for videoMsid.
         */
        com.google.protobuf.ByteString
            getVideoMsidBytes();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 brightness = 103;</code>
         * @return Whether the brightness field is set.
         */
        boolean hasBrightness();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 brightness = 103;</code>
         * @return The brightness.
         */
        int getBrightness();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 contrast = 104;</code>
         * @return Whether the contrast field is set.
         */
        boolean hasContrast();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 contrast = 104;</code>
         * @return The contrast.
         */
        int getContrast();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 saturation = 105;</code>
         * @return Whether the saturation field is set.
         */
        boolean hasSaturation();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 saturation = 105;</code>
         * @return The saturation.
         */
        int getSaturation();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
         * @return Whether the colorEffect field is set.
         */
        boolean hasColorEffect();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
         * @return The colorEffect.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect getColorEffect();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffectOrBuilder getColorEffectOrBuilder();

        /**
         * <code>optional int32 engine_clip_id = 107;</code>
         * @return Whether the engineClipId field is set.
         */
        boolean hasEngineClipId();
        /**
         * <code>optional int32 engine_clip_id = 107;</code>
         * @return The engineClipId.
         */
        int getEngineClipId();

        /**
         * <code>optional int32 original_clip_duration = 108;</code>
         * @return Whether the originalClipDuration field is set.
         */
        boolean hasOriginalClipDuration();
        /**
         * <code>optional int32 original_clip_duration = 108;</code>
         * @return The originalClipDuration.
         */
        int getOriginalClipDuration();

        /**
         * <code>optional int32 original_video_width = 109;</code>
         * @return Whether the originalVideoWidth field is set.
         */
        boolean hasOriginalVideoWidth();
        /**
         * <code>optional int32 original_video_width = 109;</code>
         * @return The originalVideoWidth.
         */
        int getOriginalVideoWidth();

        /**
         * <code>optional int32 original_video_height = 110;</code>
         * @return Whether the originalVideoHeight field is set.
         */
        boolean hasOriginalVideoHeight();
        /**
         * <code>optional int32 original_video_height = 110;</code>
         * @return The originalVideoHeight.
         */
        int getOriginalVideoHeight();

        /**
         * <code>optional bool has_audio = 111;</code>
         * @return Whether the hasAudio field is set.
         */
        boolean hasHasAudio();
        /**
         * <code>optional bool has_audio = 111;</code>
         * @return The hasAudio.
         */
        boolean getHasAudio();

        /**
         * <code>optional bool has_video = 112;</code>
         * @return Whether the hasVideo field is set.
         */
        boolean hasHasVideo();
        /**
         * <code>optional bool has_video = 112;</code>
         * @return The hasVideo.
         */
        boolean getHasVideo();

        /**
         * <code>optional bool mute_audio = 113;</code>
         * @return Whether the muteAudio field is set.
         */
        boolean hasMuteAudio();
        /**
         * <code>optional bool mute_audio = 113;</code>
         * @return The muteAudio.
         */
        boolean getMuteAudio();

        /**
         * <code>optional int32 clip_volume = 114;</code>
         * @return Whether the clipVolume field is set.
         */
        boolean hasClipVolume();
        /**
         * <code>optional int32 clip_volume = 114;</code>
         * @return The clipVolume.
         */
        int getClipVolume();

        /**
         * <code>optional int32 playback_speed = 115;</code>
         * @return Whether the playbackSpeed field is set.
         */
        boolean hasPlaybackSpeed();
        /**
         * <code>optional int32 playback_speed = 115;</code>
         * @return The playbackSpeed.
         */
        int getPlaybackSpeed();

        /**
         * <code>repeated int32 volume_envelope_time = 116 [packed = true];</code>
         * @return A list containing the volumeEnvelopeTime.
         */
        java.util.List<java.lang.Integer> getVolumeEnvelopeTimeList();
        /**
         * <code>repeated int32 volume_envelope_time = 116 [packed = true];</code>
         * @return The count of volumeEnvelopeTime.
         */
        int getVolumeEnvelopeTimeCount();
        /**
         * <code>repeated int32 volume_envelope_time = 116 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The volumeEnvelopeTime at the given index.
         */
        int getVolumeEnvelopeTime(int index);

        /**
         * <code>repeated int32 volume_envelope_level = 117 [packed = true];</code>
         * @return A list containing the volumeEnvelopeLevel.
         */
        java.util.List<java.lang.Integer> getVolumeEnvelopeLevelList();
        /**
         * <code>repeated int32 volume_envelope_level = 117 [packed = true];</code>
         * @return The count of volumeEnvelopeLevel.
         */
        int getVolumeEnvelopeLevelCount();
        /**
         * <code>repeated int32 volume_envelope_level = 117 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The volumeEnvelopeLevel at the given index.
         */
        int getVolumeEnvelopeLevel(int index);

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated float chroma_key_divisions = 1 [packed = true];</code>
         * @return A list containing the chromaKeyDivisions.
         */
        java.util.List<java.lang.Float> getChromaKeyDivisionsList();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated float chroma_key_divisions = 1 [packed = true];</code>
         * @return The count of chromaKeyDivisions.
         */
        int getChromaKeyDivisionsCount();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated float chroma_key_divisions = 1 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The chromaKeyDivisions at the given index.
         */
        float getChromaKeyDivisions(int index);

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated float chroma_key_strengths = 2 [packed = true];</code>
         * @return A list containing the chromaKeyStrengths.
         */
        java.util.List<java.lang.Float> getChromaKeyStrengthsList();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated float chroma_key_strengths = 2 [packed = true];</code>
         * @return The count of chromaKeyStrengths.
         */
        int getChromaKeyStrengthsCount();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated float chroma_key_strengths = 2 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The chromaKeyStrengths at the given index.
         */
        float getChromaKeyStrengths(int index);

        /**
         * <code>optional int32 chroma_key_color = 118;</code>
         * @return Whether the chromaKeyColor field is set.
         */
        boolean hasChromaKeyColor();
        /**
         * <code>optional int32 chroma_key_color = 118;</code>
         * @return The chromaKeyColor.
         */
        int getChromaKeyColor();

        /**
         * <code>optional bool chroma_key_enabled = 119;</code>
         * @return Whether the chromaKeyEnabled field is set.
         */
        boolean hasChromaKeyEnabled();
        /**
         * <code>optional bool chroma_key_enabled = 119;</code>
         * @return The chromaKeyEnabled.
         */
        boolean getChromaKeyEnabled();

        /**
         * <code>optional float chroma_key_clip_fg = 120;</code>
         * @return Whether the chromaKeyClipFg field is set.
         */
        boolean hasChromaKeyClipFg();
        /**
         * <code>optional float chroma_key_clip_fg = 120;</code>
         * @return The chromaKeyClipFg.
         */
        float getChromaKeyClipFg();

        /**
         * <code>optional float chroma_key_clip_bg = 121;</code>
         * @return Whether the chromaKeyClipBg field is set.
         */
        boolean hasChromaKeyClipBg();
        /**
         * <code>optional float chroma_key_clip_bg = 121;</code>
         * @return The chromaKeyClipBg.
         */
        float getChromaKeyClipBg();

        /**
         * <code>optional float chroma_key_blend_x0 = 122;</code>
         * @return Whether the chromaKeyBlendX0 field is set.
         */
        boolean hasChromaKeyBlendX0();
        /**
         * <code>optional float chroma_key_blend_x0 = 122;</code>
         * @return The chromaKeyBlendX0.
         */
        float getChromaKeyBlendX0();

        /**
         * <code>optional float chroma_key_blend_y0 = 123;</code>
         * @return Whether the chromaKeyBlendY0 field is set.
         */
        boolean hasChromaKeyBlendY0();
        /**
         * <code>optional float chroma_key_blend_y0 = 123;</code>
         * @return The chromaKeyBlendY0.
         */
        float getChromaKeyBlendY0();

        /**
         * <code>optional float chroma_key_blend_x1 = 124;</code>
         * @return Whether the chromaKeyBlendX1 field is set.
         */
        boolean hasChromaKeyBlendX1();
        /**
         * <code>optional float chroma_key_blend_x1 = 124;</code>
         * @return The chromaKeyBlendX1.
         */
        float getChromaKeyBlendX1();

        /**
         * <code>optional float chroma_key_blend_y1 = 125;</code>
         * @return Whether the chromaKeyBlendY1 field is set.
         */
        boolean hasChromaKeyBlendY1();
        /**
         * <code>optional float chroma_key_blend_y1 = 125;</code>
         * @return The chromaKeyBlendY1.
         */
        float getChromaKeyBlendY1();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 voice_changer = 126;</code>
         * @return Whether the voiceChanger field is set.
         */
        boolean hasVoiceChanger();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 voice_changer = 126;</code>
         * @return The voiceChanger.
         */
        int getVoiceChanger();

        /**
         * <code>optional int32 pan_left = 127;</code>
         * @return Whether the panLeft field is set.
         */
        boolean hasPanLeft();
        /**
         * <code>optional int32 pan_left = 127;</code>
         * @return The panLeft.
         */
        int getPanLeft();

        /**
         * <code>optional int32 pan_right = 128;</code>
         * @return Whether the panRight field is set.
         */
        boolean hasPanRight();
        /**
         * <code>optional int32 pan_right = 128;</code>
         * @return The panRight.
         */
        int getPanRight();

        /**
         * <pre>
         * 0: off, 4: on (default: 0)
         * </pre>
         *
         * <code>optional int32 compressor = 129;</code>
         * @return Whether the compressor field is set.
         */
        boolean hasCompressor();
        /**
         * <pre>
         * 0: off, 4: on (default: 0)
         * </pre>
         *
         * <code>optional int32 compressor = 129;</code>
         * @return The compressor.
         */
        int getCompressor();

        /**
         * <code>optional int32 pitch_factor = 130;</code>
         * @return Whether the pitchFactor field is set.
         */
        boolean hasPitchFactor();
        /**
         * <code>optional int32 pitch_factor = 130;</code>
         * @return The pitchFactor.
         */
        int getPitchFactor();

        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string ios_media_asset_id = 131;</code>
         * @return Whether the iosMediaAssetId field is set.
         */
        boolean hasIosMediaAssetId();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string ios_media_asset_id = 131;</code>
         * @return The iosMediaAssetId.
         */
        java.lang.String getIosMediaAssetId();
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string ios_media_asset_id = 131;</code>
         * @return The bytes for iosMediaAssetId.
         */
        com.google.protobuf.ByteString
            getIosMediaAssetIdBytes();

        /**
         * <code>optional string enhancedAudioFilter = 132;</code>
         * @return Whether the enhancedAudioFilter field is set.
         */
        boolean hasEnhancedAudioFilter();
        /**
         * <code>optional string enhancedAudioFilter = 132;</code>
         * @return The enhancedAudioFilter.
         */
        java.lang.String getEnhancedAudioFilter();
        /**
         * <code>optional string enhancedAudioFilter = 132;</code>
         * @return The bytes for enhancedAudioFilter.
         */
        com.google.protobuf.ByteString
            getEnhancedAudioFilterBytes();

        /**
         * <code>optional string equalizer = 133;</code>
         * @return Whether the equalizer field is set.
         */
        boolean hasEqualizer();
        /**
         * <code>optional string equalizer = 133;</code>
         * @return The equalizer.
         */
        java.lang.String getEqualizer();
        /**
         * <code>optional string equalizer = 133;</code>
         * @return The bytes for equalizer.
         */
        com.google.protobuf.ByteString
            getEqualizerBytes();

        /**
         * <code>optional .KMProto.KMProject.ClipRange clipRange = 134;</code>
         * @return Whether the clipRange field is set.
         */
        boolean hasClipRange();
        /**
         * <code>optional .KMProto.KMProject.ClipRange clipRange = 134;</code>
         * @return The clipRange.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange getClipRange();
        /**
         * <code>optional .KMProto.KMProject.ClipRange clipRange = 134;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRangeOrBuilder getClipRangeOrBuilder();

        /**
         * <code>optional string reverb = 135;</code>
         * @return Whether the reverb field is set.
         */
        boolean hasReverb();
        /**
         * <code>optional string reverb = 135;</code>
         * @return The reverb.
         */
        java.lang.String getReverb();
        /**
         * <code>optional string reverb = 135;</code>
         * @return The bytes for reverb.
         */
        com.google.protobuf.ByteString
            getReverbBytes();

        /**
         * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 136;</code>
         * @return Whether the colorAdjustment field is set.
         */
        boolean hasColorAdjustment();
        /**
         * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 136;</code>
         * @return The colorAdjustment.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment getColorAdjustment();
        /**
         * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 136;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustmentOrBuilder getColorAdjustmentOrBuilder();

        /**
         * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 137;</code>
         * @return Whether the colorFilter field is set.
         */
        boolean hasColorFilter();
        /**
         * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 137;</code>
         * @return The colorFilter.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter getColorFilter();
        /**
         * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 137;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilterOrBuilder getColorFilterOrBuilder();

        /**
         * <code>optional bool keepPitch = 138;</code>
         * @return Whether the keepPitch field is set.
         */
        boolean hasKeepPitch();
        /**
         * <code>optional bool keepPitch = 138;</code>
         * @return The keepPitch.
         */
        boolean getKeepPitch();

        /**
         * <code>optional bool useIFrameOnly = 139;</code>
         * @return Whether the useIFrameOnly field is set.
         */
        boolean hasUseIFrameOnly();
        /**
         * <code>optional bool useIFrameOnly = 139;</code>
         * @return The useIFrameOnly.
         */
        boolean getUseIFrameOnly();

        /**
         * <pre>
         * 이미지 레이어 로드시 Orientation 이 적용된 이미지를 로드하기 때문에 ImageLayer에서는 uprightOrientation 정보를 무시한다.
         * 컨텐츠에 Orientation 이 90 인 경우 회전해야할 270 값이 설정되어야 한다 
         * </pre>
         *
         * <code>optional int32 uprightRotation = 140;</code>
         * @return Whether the uprightRotation field is set.
         */
        boolean hasUprightRotation();
        /**
         * <pre>
         * 이미지 레이어 로드시 Orientation 이 적용된 이미지를 로드하기 때문에 ImageLayer에서는 uprightOrientation 정보를 무시한다.
         * 컨텐츠에 Orientation 이 90 인 경우 회전해야할 270 값이 설정되어야 한다 
         * </pre>
         *
         * <code>optional int32 uprightRotation = 140;</code>
         * @return The uprightRotation.
         */
        int getUprightRotation();
      }
      /**
       * Protobuf type {@code KMProto.KMProject.VideoLayer}
       */
      public static final class VideoLayer extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.VideoLayer)
          VideoLayerOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use VideoLayer.newBuilder() to construct.
        private VideoLayer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private VideoLayer() {
          videoPath_ = "";
          videoMsid_ = "";
          volumeEnvelopeTime_ = emptyIntList();
          volumeEnvelopeLevel_ = emptyIntList();
          chromaKeyDivisions_ = emptyFloatList();
          chromaKeyStrengths_ = emptyFloatList();
          iosMediaAssetId_ = "";
          enhancedAudioFilter_ = "";
          equalizer_ = "";
          reverb_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new VideoLayer();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private VideoLayer(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          int mutable_bitField1_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 13: {
                  if (!((mutable_bitField0_ & 0x00040000) != 0)) {
                    chromaKeyDivisions_ = newFloatList();
                    mutable_bitField0_ |= 0x00040000;
                  }
                  chromaKeyDivisions_.addFloat(input.readFloat());
                  break;
                }
                case 10: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00040000) != 0) && input.getBytesUntilLimit() > 0) {
                    chromaKeyDivisions_ = newFloatList();
                    mutable_bitField0_ |= 0x00040000;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    chromaKeyDivisions_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 21: {
                  if (!((mutable_bitField0_ & 0x00080000) != 0)) {
                    chromaKeyStrengths_ = newFloatList();
                    mutable_bitField0_ |= 0x00080000;
                  }
                  chromaKeyStrengths_.addFloat(input.readFloat());
                  break;
                }
                case 18: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00080000) != 0) && input.getBytesUntilLimit() > 0) {
                    chromaKeyStrengths_ = newFloatList();
                    mutable_bitField0_ |= 0x00080000;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    chromaKeyStrengths_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 802: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000001) != 0)) {
                    subBuilder = layerCommon_.toBuilder();
                  }
                  layerCommon_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(layerCommon_);
                    layerCommon_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000001;
                  break;
                }
                case 810: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000002;
                  videoPath_ = bs;
                  break;
                }
                case 818: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000004;
                  videoMsid_ = bs;
                  break;
                }
                case 824: {
                  bitField0_ |= 0x00000008;
                  brightness_ = input.readInt32();
                  break;
                }
                case 832: {
                  bitField0_ |= 0x00000010;
                  contrast_ = input.readInt32();
                  break;
                }
                case 840: {
                  bitField0_ |= 0x00000020;
                  saturation_ = input.readInt32();
                  break;
                }
                case 850: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000040) != 0)) {
                    subBuilder = colorEffect_.toBuilder();
                  }
                  colorEffect_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(colorEffect_);
                    colorEffect_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000040;
                  break;
                }
                case 856: {
                  bitField0_ |= 0x00000080;
                  engineClipId_ = input.readInt32();
                  break;
                }
                case 864: {
                  bitField0_ |= 0x00000100;
                  originalClipDuration_ = input.readInt32();
                  break;
                }
                case 872: {
                  bitField0_ |= 0x00000200;
                  originalVideoWidth_ = input.readInt32();
                  break;
                }
                case 880: {
                  bitField0_ |= 0x00000400;
                  originalVideoHeight_ = input.readInt32();
                  break;
                }
                case 888: {
                  bitField0_ |= 0x00000800;
                  hasAudio_ = input.readBool();
                  break;
                }
                case 896: {
                  bitField0_ |= 0x00001000;
                  hasVideo_ = input.readBool();
                  break;
                }
                case 904: {
                  bitField0_ |= 0x00002000;
                  muteAudio_ = input.readBool();
                  break;
                }
                case 912: {
                  bitField0_ |= 0x00004000;
                  clipVolume_ = input.readInt32();
                  break;
                }
                case 920: {
                  bitField0_ |= 0x00008000;
                  playbackSpeed_ = input.readInt32();
                  break;
                }
                case 928: {
                  if (!((mutable_bitField0_ & 0x00010000) != 0)) {
                    volumeEnvelopeTime_ = newIntList();
                    mutable_bitField0_ |= 0x00010000;
                  }
                  volumeEnvelopeTime_.addInt(input.readInt32());
                  break;
                }
                case 930: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00010000) != 0) && input.getBytesUntilLimit() > 0) {
                    volumeEnvelopeTime_ = newIntList();
                    mutable_bitField0_ |= 0x00010000;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    volumeEnvelopeTime_.addInt(input.readInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 936: {
                  if (!((mutable_bitField0_ & 0x00020000) != 0)) {
                    volumeEnvelopeLevel_ = newIntList();
                    mutable_bitField0_ |= 0x00020000;
                  }
                  volumeEnvelopeLevel_.addInt(input.readInt32());
                  break;
                }
                case 938: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00020000) != 0) && input.getBytesUntilLimit() > 0) {
                    volumeEnvelopeLevel_ = newIntList();
                    mutable_bitField0_ |= 0x00020000;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    volumeEnvelopeLevel_.addInt(input.readInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 944: {
                  bitField0_ |= 0x00010000;
                  chromaKeyColor_ = input.readInt32();
                  break;
                }
                case 952: {
                  bitField0_ |= 0x00020000;
                  chromaKeyEnabled_ = input.readBool();
                  break;
                }
                case 965: {
                  bitField0_ |= 0x00040000;
                  chromaKeyClipFg_ = input.readFloat();
                  break;
                }
                case 973: {
                  bitField0_ |= 0x00080000;
                  chromaKeyClipBg_ = input.readFloat();
                  break;
                }
                case 981: {
                  bitField0_ |= 0x00100000;
                  chromaKeyBlendX0_ = input.readFloat();
                  break;
                }
                case 989: {
                  bitField0_ |= 0x00200000;
                  chromaKeyBlendY0_ = input.readFloat();
                  break;
                }
                case 997: {
                  bitField0_ |= 0x00400000;
                  chromaKeyBlendX1_ = input.readFloat();
                  break;
                }
                case 1005: {
                  bitField0_ |= 0x00800000;
                  chromaKeyBlendY1_ = input.readFloat();
                  break;
                }
                case 1008: {
                  bitField0_ |= 0x01000000;
                  voiceChanger_ = input.readInt32();
                  break;
                }
                case 1016: {
                  bitField0_ |= 0x02000000;
                  panLeft_ = input.readInt32();
                  break;
                }
                case 1024: {
                  bitField0_ |= 0x04000000;
                  panRight_ = input.readInt32();
                  break;
                }
                case 1032: {
                  bitField0_ |= 0x08000000;
                  compressor_ = input.readInt32();
                  break;
                }
                case 1040: {
                  bitField0_ |= 0x10000000;
                  pitchFactor_ = input.readInt32();
                  break;
                }
                case 1050: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x20000000;
                  iosMediaAssetId_ = bs;
                  break;
                }
                case 1058: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x40000000;
                  enhancedAudioFilter_ = bs;
                  break;
                }
                case 1066: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x80000000;
                  equalizer_ = bs;
                  break;
                }
                case 1074: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.Builder subBuilder = null;
                  if (((bitField1_ & 0x00000001) != 0)) {
                    subBuilder = clipRange_.toBuilder();
                  }
                  clipRange_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(clipRange_);
                    clipRange_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00000001;
                  break;
                }
                case 1082: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField1_ |= 0x00000002;
                  reverb_ = bs;
                  break;
                }
                case 1090: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.Builder subBuilder = null;
                  if (((bitField1_ & 0x00000004) != 0)) {
                    subBuilder = colorAdjustment_.toBuilder();
                  }
                  colorAdjustment_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(colorAdjustment_);
                    colorAdjustment_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00000004;
                  break;
                }
                case 1098: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.Builder subBuilder = null;
                  if (((bitField1_ & 0x00000008) != 0)) {
                    subBuilder = colorFilter_.toBuilder();
                  }
                  colorFilter_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(colorFilter_);
                    colorFilter_ = subBuilder.buildPartial();
                  }
                  bitField1_ |= 0x00000008;
                  break;
                }
                case 1104: {
                  bitField1_ |= 0x00000010;
                  keepPitch_ = input.readBool();
                  break;
                }
                case 1112: {
                  bitField1_ |= 0x00000020;
                  useIFrameOnly_ = input.readBool();
                  break;
                }
                case 1120: {
                  bitField1_ |= 0x00000040;
                  uprightRotation_ = input.readInt32();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00040000) != 0)) {
              chromaKeyDivisions_.makeImmutable(); // C
            }
            if (((mutable_bitField0_ & 0x00080000) != 0)) {
              chromaKeyStrengths_.makeImmutable(); // C
            }
            if (((mutable_bitField0_ & 0x00010000) != 0)) {
              volumeEnvelopeTime_.makeImmutable(); // C
            }
            if (((mutable_bitField0_ & 0x00020000) != 0)) {
              volumeEnvelopeLevel_.makeImmutable(); // C
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_VideoLayer_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_VideoLayer_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer.Builder.class);
        }

        private int bitField0_;
        private int bitField1_;
        public static final int LAYER_COMMON_FIELD_NUMBER = 100;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon layerCommon_;
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return Whether the layerCommon field is set.
         */
        @java.lang.Override
        public boolean hasLayerCommon() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return The layerCommon.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getLayerCommon() {
          return layerCommon_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
        }
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder getLayerCommonOrBuilder() {
          return layerCommon_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
        }

        public static final int VIDEO_PATH_FIELD_NUMBER = 101;
        private volatile java.lang.Object videoPath_;
        /**
         * <code>optional string video_path = 101;</code>
         * @return Whether the videoPath field is set.
         */
        @java.lang.Override
        public boolean hasVideoPath() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional string video_path = 101;</code>
         * @return The videoPath.
         */
        @java.lang.Override
        public java.lang.String getVideoPath() {
          java.lang.Object ref = videoPath_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              videoPath_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string video_path = 101;</code>
         * @return The bytes for videoPath.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getVideoPathBytes() {
          java.lang.Object ref = videoPath_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            videoPath_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int VIDEO_MSID_FIELD_NUMBER = 102;
        private volatile java.lang.Object videoMsid_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string video_msid = 102;</code>
         * @return Whether the videoMsid field is set.
         */
        @java.lang.Override
        public boolean hasVideoMsid() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string video_msid = 102;</code>
         * @return The videoMsid.
         */
        @java.lang.Override
        public java.lang.String getVideoMsid() {
          java.lang.Object ref = videoMsid_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              videoMsid_ = s;
            }
            return s;
          }
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string video_msid = 102;</code>
         * @return The bytes for videoMsid.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getVideoMsidBytes() {
          java.lang.Object ref = videoMsid_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            videoMsid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int BRIGHTNESS_FIELD_NUMBER = 103;
        private int brightness_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 brightness = 103;</code>
         * @return Whether the brightness field is set.
         */
        @java.lang.Override
        public boolean hasBrightness() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 brightness = 103;</code>
         * @return The brightness.
         */
        @java.lang.Override
        public int getBrightness() {
          return brightness_;
        }

        public static final int CONTRAST_FIELD_NUMBER = 104;
        private int contrast_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 contrast = 104;</code>
         * @return Whether the contrast field is set.
         */
        @java.lang.Override
        public boolean hasContrast() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 contrast = 104;</code>
         * @return The contrast.
         */
        @java.lang.Override
        public int getContrast() {
          return contrast_;
        }

        public static final int SATURATION_FIELD_NUMBER = 105;
        private int saturation_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 saturation = 105;</code>
         * @return Whether the saturation field is set.
         */
        @java.lang.Override
        public boolean hasSaturation() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 saturation = 105;</code>
         * @return The saturation.
         */
        @java.lang.Override
        public int getSaturation() {
          return saturation_;
        }

        public static final int COLOR_EFFECT_FIELD_NUMBER = 106;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect colorEffect_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
         * @return Whether the colorEffect field is set.
         */
        @java.lang.Override
        public boolean hasColorEffect() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
         * @return The colorEffect.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect getColorEffect() {
          return colorEffect_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.getDefaultInstance() : colorEffect_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffectOrBuilder getColorEffectOrBuilder() {
          return colorEffect_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.getDefaultInstance() : colorEffect_;
        }

        public static final int ENGINE_CLIP_ID_FIELD_NUMBER = 107;
        private int engineClipId_;
        /**
         * <code>optional int32 engine_clip_id = 107;</code>
         * @return Whether the engineClipId field is set.
         */
        @java.lang.Override
        public boolean hasEngineClipId() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <code>optional int32 engine_clip_id = 107;</code>
         * @return The engineClipId.
         */
        @java.lang.Override
        public int getEngineClipId() {
          return engineClipId_;
        }

        public static final int ORIGINAL_CLIP_DURATION_FIELD_NUMBER = 108;
        private int originalClipDuration_;
        /**
         * <code>optional int32 original_clip_duration = 108;</code>
         * @return Whether the originalClipDuration field is set.
         */
        @java.lang.Override
        public boolean hasOriginalClipDuration() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <code>optional int32 original_clip_duration = 108;</code>
         * @return The originalClipDuration.
         */
        @java.lang.Override
        public int getOriginalClipDuration() {
          return originalClipDuration_;
        }

        public static final int ORIGINAL_VIDEO_WIDTH_FIELD_NUMBER = 109;
        private int originalVideoWidth_;
        /**
         * <code>optional int32 original_video_width = 109;</code>
         * @return Whether the originalVideoWidth field is set.
         */
        @java.lang.Override
        public boolean hasOriginalVideoWidth() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <code>optional int32 original_video_width = 109;</code>
         * @return The originalVideoWidth.
         */
        @java.lang.Override
        public int getOriginalVideoWidth() {
          return originalVideoWidth_;
        }

        public static final int ORIGINAL_VIDEO_HEIGHT_FIELD_NUMBER = 110;
        private int originalVideoHeight_;
        /**
         * <code>optional int32 original_video_height = 110;</code>
         * @return Whether the originalVideoHeight field is set.
         */
        @java.lang.Override
        public boolean hasOriginalVideoHeight() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <code>optional int32 original_video_height = 110;</code>
         * @return The originalVideoHeight.
         */
        @java.lang.Override
        public int getOriginalVideoHeight() {
          return originalVideoHeight_;
        }

        public static final int HAS_AUDIO_FIELD_NUMBER = 111;
        private boolean hasAudio_;
        /**
         * <code>optional bool has_audio = 111;</code>
         * @return Whether the hasAudio field is set.
         */
        @java.lang.Override
        public boolean hasHasAudio() {
          return ((bitField0_ & 0x00000800) != 0);
        }
        /**
         * <code>optional bool has_audio = 111;</code>
         * @return The hasAudio.
         */
        @java.lang.Override
        public boolean getHasAudio() {
          return hasAudio_;
        }

        public static final int HAS_VIDEO_FIELD_NUMBER = 112;
        private boolean hasVideo_;
        /**
         * <code>optional bool has_video = 112;</code>
         * @return Whether the hasVideo field is set.
         */
        @java.lang.Override
        public boolean hasHasVideo() {
          return ((bitField0_ & 0x00001000) != 0);
        }
        /**
         * <code>optional bool has_video = 112;</code>
         * @return The hasVideo.
         */
        @java.lang.Override
        public boolean getHasVideo() {
          return hasVideo_;
        }

        public static final int MUTE_AUDIO_FIELD_NUMBER = 113;
        private boolean muteAudio_;
        /**
         * <code>optional bool mute_audio = 113;</code>
         * @return Whether the muteAudio field is set.
         */
        @java.lang.Override
        public boolean hasMuteAudio() {
          return ((bitField0_ & 0x00002000) != 0);
        }
        /**
         * <code>optional bool mute_audio = 113;</code>
         * @return The muteAudio.
         */
        @java.lang.Override
        public boolean getMuteAudio() {
          return muteAudio_;
        }

        public static final int CLIP_VOLUME_FIELD_NUMBER = 114;
        private int clipVolume_;
        /**
         * <code>optional int32 clip_volume = 114;</code>
         * @return Whether the clipVolume field is set.
         */
        @java.lang.Override
        public boolean hasClipVolume() {
          return ((bitField0_ & 0x00004000) != 0);
        }
        /**
         * <code>optional int32 clip_volume = 114;</code>
         * @return The clipVolume.
         */
        @java.lang.Override
        public int getClipVolume() {
          return clipVolume_;
        }

        public static final int PLAYBACK_SPEED_FIELD_NUMBER = 115;
        private int playbackSpeed_;
        /**
         * <code>optional int32 playback_speed = 115;</code>
         * @return Whether the playbackSpeed field is set.
         */
        @java.lang.Override
        public boolean hasPlaybackSpeed() {
          return ((bitField0_ & 0x00008000) != 0);
        }
        /**
         * <code>optional int32 playback_speed = 115;</code>
         * @return The playbackSpeed.
         */
        @java.lang.Override
        public int getPlaybackSpeed() {
          return playbackSpeed_;
        }

        public static final int VOLUME_ENVELOPE_TIME_FIELD_NUMBER = 116;
        private com.google.protobuf.Internal.IntList volumeEnvelopeTime_;
        /**
         * <code>repeated int32 volume_envelope_time = 116 [packed = true];</code>
         * @return A list containing the volumeEnvelopeTime.
         */
        @java.lang.Override
        public java.util.List<java.lang.Integer>
            getVolumeEnvelopeTimeList() {
          return volumeEnvelopeTime_;
        }
        /**
         * <code>repeated int32 volume_envelope_time = 116 [packed = true];</code>
         * @return The count of volumeEnvelopeTime.
         */
        public int getVolumeEnvelopeTimeCount() {
          return volumeEnvelopeTime_.size();
        }
        /**
         * <code>repeated int32 volume_envelope_time = 116 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The volumeEnvelopeTime at the given index.
         */
        public int getVolumeEnvelopeTime(int index) {
          return volumeEnvelopeTime_.getInt(index);
        }
        private int volumeEnvelopeTimeMemoizedSerializedSize = -1;

        public static final int VOLUME_ENVELOPE_LEVEL_FIELD_NUMBER = 117;
        private com.google.protobuf.Internal.IntList volumeEnvelopeLevel_;
        /**
         * <code>repeated int32 volume_envelope_level = 117 [packed = true];</code>
         * @return A list containing the volumeEnvelopeLevel.
         */
        @java.lang.Override
        public java.util.List<java.lang.Integer>
            getVolumeEnvelopeLevelList() {
          return volumeEnvelopeLevel_;
        }
        /**
         * <code>repeated int32 volume_envelope_level = 117 [packed = true];</code>
         * @return The count of volumeEnvelopeLevel.
         */
        public int getVolumeEnvelopeLevelCount() {
          return volumeEnvelopeLevel_.size();
        }
        /**
         * <code>repeated int32 volume_envelope_level = 117 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The volumeEnvelopeLevel at the given index.
         */
        public int getVolumeEnvelopeLevel(int index) {
          return volumeEnvelopeLevel_.getInt(index);
        }
        private int volumeEnvelopeLevelMemoizedSerializedSize = -1;

        public static final int CHROMA_KEY_DIVISIONS_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.FloatList chromaKeyDivisions_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated float chroma_key_divisions = 1 [packed = true];</code>
         * @return A list containing the chromaKeyDivisions.
         */
        @java.lang.Override
        public java.util.List<java.lang.Float>
            getChromaKeyDivisionsList() {
          return chromaKeyDivisions_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated float chroma_key_divisions = 1 [packed = true];</code>
         * @return The count of chromaKeyDivisions.
         */
        public int getChromaKeyDivisionsCount() {
          return chromaKeyDivisions_.size();
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated float chroma_key_divisions = 1 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The chromaKeyDivisions at the given index.
         */
        public float getChromaKeyDivisions(int index) {
          return chromaKeyDivisions_.getFloat(index);
        }
        private int chromaKeyDivisionsMemoizedSerializedSize = -1;

        public static final int CHROMA_KEY_STRENGTHS_FIELD_NUMBER = 2;
        private com.google.protobuf.Internal.FloatList chromaKeyStrengths_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated float chroma_key_strengths = 2 [packed = true];</code>
         * @return A list containing the chromaKeyStrengths.
         */
        @java.lang.Override
        public java.util.List<java.lang.Float>
            getChromaKeyStrengthsList() {
          return chromaKeyStrengths_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated float chroma_key_strengths = 2 [packed = true];</code>
         * @return The count of chromaKeyStrengths.
         */
        public int getChromaKeyStrengthsCount() {
          return chromaKeyStrengths_.size();
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>repeated float chroma_key_strengths = 2 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The chromaKeyStrengths at the given index.
         */
        public float getChromaKeyStrengths(int index) {
          return chromaKeyStrengths_.getFloat(index);
        }
        private int chromaKeyStrengthsMemoizedSerializedSize = -1;

        public static final int CHROMA_KEY_COLOR_FIELD_NUMBER = 118;
        private int chromaKeyColor_;
        /**
         * <code>optional int32 chroma_key_color = 118;</code>
         * @return Whether the chromaKeyColor field is set.
         */
        @java.lang.Override
        public boolean hasChromaKeyColor() {
          return ((bitField0_ & 0x00010000) != 0);
        }
        /**
         * <code>optional int32 chroma_key_color = 118;</code>
         * @return The chromaKeyColor.
         */
        @java.lang.Override
        public int getChromaKeyColor() {
          return chromaKeyColor_;
        }

        public static final int CHROMA_KEY_ENABLED_FIELD_NUMBER = 119;
        private boolean chromaKeyEnabled_;
        /**
         * <code>optional bool chroma_key_enabled = 119;</code>
         * @return Whether the chromaKeyEnabled field is set.
         */
        @java.lang.Override
        public boolean hasChromaKeyEnabled() {
          return ((bitField0_ & 0x00020000) != 0);
        }
        /**
         * <code>optional bool chroma_key_enabled = 119;</code>
         * @return The chromaKeyEnabled.
         */
        @java.lang.Override
        public boolean getChromaKeyEnabled() {
          return chromaKeyEnabled_;
        }

        public static final int CHROMA_KEY_CLIP_FG_FIELD_NUMBER = 120;
        private float chromaKeyClipFg_;
        /**
         * <code>optional float chroma_key_clip_fg = 120;</code>
         * @return Whether the chromaKeyClipFg field is set.
         */
        @java.lang.Override
        public boolean hasChromaKeyClipFg() {
          return ((bitField0_ & 0x00040000) != 0);
        }
        /**
         * <code>optional float chroma_key_clip_fg = 120;</code>
         * @return The chromaKeyClipFg.
         */
        @java.lang.Override
        public float getChromaKeyClipFg() {
          return chromaKeyClipFg_;
        }

        public static final int CHROMA_KEY_CLIP_BG_FIELD_NUMBER = 121;
        private float chromaKeyClipBg_;
        /**
         * <code>optional float chroma_key_clip_bg = 121;</code>
         * @return Whether the chromaKeyClipBg field is set.
         */
        @java.lang.Override
        public boolean hasChromaKeyClipBg() {
          return ((bitField0_ & 0x00080000) != 0);
        }
        /**
         * <code>optional float chroma_key_clip_bg = 121;</code>
         * @return The chromaKeyClipBg.
         */
        @java.lang.Override
        public float getChromaKeyClipBg() {
          return chromaKeyClipBg_;
        }

        public static final int CHROMA_KEY_BLEND_X0_FIELD_NUMBER = 122;
        private float chromaKeyBlendX0_;
        /**
         * <code>optional float chroma_key_blend_x0 = 122;</code>
         * @return Whether the chromaKeyBlendX0 field is set.
         */
        @java.lang.Override
        public boolean hasChromaKeyBlendX0() {
          return ((bitField0_ & 0x00100000) != 0);
        }
        /**
         * <code>optional float chroma_key_blend_x0 = 122;</code>
         * @return The chromaKeyBlendX0.
         */
        @java.lang.Override
        public float getChromaKeyBlendX0() {
          return chromaKeyBlendX0_;
        }

        public static final int CHROMA_KEY_BLEND_Y0_FIELD_NUMBER = 123;
        private float chromaKeyBlendY0_;
        /**
         * <code>optional float chroma_key_blend_y0 = 123;</code>
         * @return Whether the chromaKeyBlendY0 field is set.
         */
        @java.lang.Override
        public boolean hasChromaKeyBlendY0() {
          return ((bitField0_ & 0x00200000) != 0);
        }
        /**
         * <code>optional float chroma_key_blend_y0 = 123;</code>
         * @return The chromaKeyBlendY0.
         */
        @java.lang.Override
        public float getChromaKeyBlendY0() {
          return chromaKeyBlendY0_;
        }

        public static final int CHROMA_KEY_BLEND_X1_FIELD_NUMBER = 124;
        private float chromaKeyBlendX1_;
        /**
         * <code>optional float chroma_key_blend_x1 = 124;</code>
         * @return Whether the chromaKeyBlendX1 field is set.
         */
        @java.lang.Override
        public boolean hasChromaKeyBlendX1() {
          return ((bitField0_ & 0x00400000) != 0);
        }
        /**
         * <code>optional float chroma_key_blend_x1 = 124;</code>
         * @return The chromaKeyBlendX1.
         */
        @java.lang.Override
        public float getChromaKeyBlendX1() {
          return chromaKeyBlendX1_;
        }

        public static final int CHROMA_KEY_BLEND_Y1_FIELD_NUMBER = 125;
        private float chromaKeyBlendY1_;
        /**
         * <code>optional float chroma_key_blend_y1 = 125;</code>
         * @return Whether the chromaKeyBlendY1 field is set.
         */
        @java.lang.Override
        public boolean hasChromaKeyBlendY1() {
          return ((bitField0_ & 0x00800000) != 0);
        }
        /**
         * <code>optional float chroma_key_blend_y1 = 125;</code>
         * @return The chromaKeyBlendY1.
         */
        @java.lang.Override
        public float getChromaKeyBlendY1() {
          return chromaKeyBlendY1_;
        }

        public static final int VOICE_CHANGER_FIELD_NUMBER = 126;
        private int voiceChanger_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 voice_changer = 126;</code>
         * @return Whether the voiceChanger field is set.
         */
        @java.lang.Override
        public boolean hasVoiceChanger() {
          return ((bitField0_ & 0x01000000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 voice_changer = 126;</code>
         * @return The voiceChanger.
         */
        @java.lang.Override
        public int getVoiceChanger() {
          return voiceChanger_;
        }

        public static final int PAN_LEFT_FIELD_NUMBER = 127;
        private int panLeft_;
        /**
         * <code>optional int32 pan_left = 127;</code>
         * @return Whether the panLeft field is set.
         */
        @java.lang.Override
        public boolean hasPanLeft() {
          return ((bitField0_ & 0x02000000) != 0);
        }
        /**
         * <code>optional int32 pan_left = 127;</code>
         * @return The panLeft.
         */
        @java.lang.Override
        public int getPanLeft() {
          return panLeft_;
        }

        public static final int PAN_RIGHT_FIELD_NUMBER = 128;
        private int panRight_;
        /**
         * <code>optional int32 pan_right = 128;</code>
         * @return Whether the panRight field is set.
         */
        @java.lang.Override
        public boolean hasPanRight() {
          return ((bitField0_ & 0x04000000) != 0);
        }
        /**
         * <code>optional int32 pan_right = 128;</code>
         * @return The panRight.
         */
        @java.lang.Override
        public int getPanRight() {
          return panRight_;
        }

        public static final int COMPRESSOR_FIELD_NUMBER = 129;
        private int compressor_;
        /**
         * <pre>
         * 0: off, 4: on (default: 0)
         * </pre>
         *
         * <code>optional int32 compressor = 129;</code>
         * @return Whether the compressor field is set.
         */
        @java.lang.Override
        public boolean hasCompressor() {
          return ((bitField0_ & 0x08000000) != 0);
        }
        /**
         * <pre>
         * 0: off, 4: on (default: 0)
         * </pre>
         *
         * <code>optional int32 compressor = 129;</code>
         * @return The compressor.
         */
        @java.lang.Override
        public int getCompressor() {
          return compressor_;
        }

        public static final int PITCH_FACTOR_FIELD_NUMBER = 130;
        private int pitchFactor_;
        /**
         * <code>optional int32 pitch_factor = 130;</code>
         * @return Whether the pitchFactor field is set.
         */
        @java.lang.Override
        public boolean hasPitchFactor() {
          return ((bitField0_ & 0x10000000) != 0);
        }
        /**
         * <code>optional int32 pitch_factor = 130;</code>
         * @return The pitchFactor.
         */
        @java.lang.Override
        public int getPitchFactor() {
          return pitchFactor_;
        }

        public static final int IOS_MEDIA_ASSET_ID_FIELD_NUMBER = 131;
        private volatile java.lang.Object iosMediaAssetId_;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string ios_media_asset_id = 131;</code>
         * @return Whether the iosMediaAssetId field is set.
         */
        @java.lang.Override
        public boolean hasIosMediaAssetId() {
          return ((bitField0_ & 0x20000000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string ios_media_asset_id = 131;</code>
         * @return The iosMediaAssetId.
         */
        @java.lang.Override
        public java.lang.String getIosMediaAssetId() {
          java.lang.Object ref = iosMediaAssetId_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              iosMediaAssetId_ = s;
            }
            return s;
          }
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string ios_media_asset_id = 131;</code>
         * @return The bytes for iosMediaAssetId.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getIosMediaAssetIdBytes() {
          java.lang.Object ref = iosMediaAssetId_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            iosMediaAssetId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int ENHANCEDAUDIOFILTER_FIELD_NUMBER = 132;
        private volatile java.lang.Object enhancedAudioFilter_;
        /**
         * <code>optional string enhancedAudioFilter = 132;</code>
         * @return Whether the enhancedAudioFilter field is set.
         */
        @java.lang.Override
        public boolean hasEnhancedAudioFilter() {
          return ((bitField0_ & 0x40000000) != 0);
        }
        /**
         * <code>optional string enhancedAudioFilter = 132;</code>
         * @return The enhancedAudioFilter.
         */
        @java.lang.Override
        public java.lang.String getEnhancedAudioFilter() {
          java.lang.Object ref = enhancedAudioFilter_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              enhancedAudioFilter_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string enhancedAudioFilter = 132;</code>
         * @return The bytes for enhancedAudioFilter.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getEnhancedAudioFilterBytes() {
          java.lang.Object ref = enhancedAudioFilter_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            enhancedAudioFilter_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int EQUALIZER_FIELD_NUMBER = 133;
        private volatile java.lang.Object equalizer_;
        /**
         * <code>optional string equalizer = 133;</code>
         * @return Whether the equalizer field is set.
         */
        @java.lang.Override
        public boolean hasEqualizer() {
          return ((bitField0_ & 0x80000000) != 0);
        }
        /**
         * <code>optional string equalizer = 133;</code>
         * @return The equalizer.
         */
        @java.lang.Override
        public java.lang.String getEqualizer() {
          java.lang.Object ref = equalizer_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              equalizer_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string equalizer = 133;</code>
         * @return The bytes for equalizer.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getEqualizerBytes() {
          java.lang.Object ref = equalizer_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            equalizer_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int CLIPRANGE_FIELD_NUMBER = 134;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange clipRange_;
        /**
         * <code>optional .KMProto.KMProject.ClipRange clipRange = 134;</code>
         * @return Whether the clipRange field is set.
         */
        @java.lang.Override
        public boolean hasClipRange() {
          return ((bitField1_ & 0x00000001) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.ClipRange clipRange = 134;</code>
         * @return The clipRange.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange getClipRange() {
          return clipRange_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.getDefaultInstance() : clipRange_;
        }
        /**
         * <code>optional .KMProto.KMProject.ClipRange clipRange = 134;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRangeOrBuilder getClipRangeOrBuilder() {
          return clipRange_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.getDefaultInstance() : clipRange_;
        }

        public static final int REVERB_FIELD_NUMBER = 135;
        private volatile java.lang.Object reverb_;
        /**
         * <code>optional string reverb = 135;</code>
         * @return Whether the reverb field is set.
         */
        @java.lang.Override
        public boolean hasReverb() {
          return ((bitField1_ & 0x00000002) != 0);
        }
        /**
         * <code>optional string reverb = 135;</code>
         * @return The reverb.
         */
        @java.lang.Override
        public java.lang.String getReverb() {
          java.lang.Object ref = reverb_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              reverb_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string reverb = 135;</code>
         * @return The bytes for reverb.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getReverbBytes() {
          java.lang.Object ref = reverb_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            reverb_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int COLORADJUSTMENT_FIELD_NUMBER = 136;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment colorAdjustment_;
        /**
         * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 136;</code>
         * @return Whether the colorAdjustment field is set.
         */
        @java.lang.Override
        public boolean hasColorAdjustment() {
          return ((bitField1_ & 0x00000004) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 136;</code>
         * @return The colorAdjustment.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment getColorAdjustment() {
          return colorAdjustment_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.getDefaultInstance() : colorAdjustment_;
        }
        /**
         * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 136;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustmentOrBuilder getColorAdjustmentOrBuilder() {
          return colorAdjustment_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.getDefaultInstance() : colorAdjustment_;
        }

        public static final int COLORFILTER_FIELD_NUMBER = 137;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter colorFilter_;
        /**
         * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 137;</code>
         * @return Whether the colorFilter field is set.
         */
        @java.lang.Override
        public boolean hasColorFilter() {
          return ((bitField1_ & 0x00000008) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 137;</code>
         * @return The colorFilter.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter getColorFilter() {
          return colorFilter_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.getDefaultInstance() : colorFilter_;
        }
        /**
         * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 137;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilterOrBuilder getColorFilterOrBuilder() {
          return colorFilter_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.getDefaultInstance() : colorFilter_;
        }

        public static final int KEEPPITCH_FIELD_NUMBER = 138;
        private boolean keepPitch_;
        /**
         * <code>optional bool keepPitch = 138;</code>
         * @return Whether the keepPitch field is set.
         */
        @java.lang.Override
        public boolean hasKeepPitch() {
          return ((bitField1_ & 0x00000010) != 0);
        }
        /**
         * <code>optional bool keepPitch = 138;</code>
         * @return The keepPitch.
         */
        @java.lang.Override
        public boolean getKeepPitch() {
          return keepPitch_;
        }

        public static final int USEIFRAMEONLY_FIELD_NUMBER = 139;
        private boolean useIFrameOnly_;
        /**
         * <code>optional bool useIFrameOnly = 139;</code>
         * @return Whether the useIFrameOnly field is set.
         */
        @java.lang.Override
        public boolean hasUseIFrameOnly() {
          return ((bitField1_ & 0x00000020) != 0);
        }
        /**
         * <code>optional bool useIFrameOnly = 139;</code>
         * @return The useIFrameOnly.
         */
        @java.lang.Override
        public boolean getUseIFrameOnly() {
          return useIFrameOnly_;
        }

        public static final int UPRIGHTROTATION_FIELD_NUMBER = 140;
        private int uprightRotation_;
        /**
         * <pre>
         * 이미지 레이어 로드시 Orientation 이 적용된 이미지를 로드하기 때문에 ImageLayer에서는 uprightOrientation 정보를 무시한다.
         * 컨텐츠에 Orientation 이 90 인 경우 회전해야할 270 값이 설정되어야 한다 
         * </pre>
         *
         * <code>optional int32 uprightRotation = 140;</code>
         * @return Whether the uprightRotation field is set.
         */
        @java.lang.Override
        public boolean hasUprightRotation() {
          return ((bitField1_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         * 이미지 레이어 로드시 Orientation 이 적용된 이미지를 로드하기 때문에 ImageLayer에서는 uprightOrientation 정보를 무시한다.
         * 컨텐츠에 Orientation 이 90 인 경우 회전해야할 270 값이 설정되어야 한다 
         * </pre>
         *
         * <code>optional int32 uprightRotation = 140;</code>
         * @return The uprightRotation.
         */
        @java.lang.Override
        public int getUprightRotation() {
          return uprightRotation_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (getChromaKeyDivisionsList().size() > 0) {
            output.writeUInt32NoTag(10);
            output.writeUInt32NoTag(chromaKeyDivisionsMemoizedSerializedSize);
          }
          for (int i = 0; i < chromaKeyDivisions_.size(); i++) {
            output.writeFloatNoTag(chromaKeyDivisions_.getFloat(i));
          }
          if (getChromaKeyStrengthsList().size() > 0) {
            output.writeUInt32NoTag(18);
            output.writeUInt32NoTag(chromaKeyStrengthsMemoizedSerializedSize);
          }
          for (int i = 0; i < chromaKeyStrengths_.size(); i++) {
            output.writeFloatNoTag(chromaKeyStrengths_.getFloat(i));
          }
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeMessage(100, getLayerCommon());
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 101, videoPath_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 102, videoMsid_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeInt32(103, brightness_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            output.writeInt32(104, contrast_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            output.writeInt32(105, saturation_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            output.writeMessage(106, getColorEffect());
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            output.writeInt32(107, engineClipId_);
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            output.writeInt32(108, originalClipDuration_);
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            output.writeInt32(109, originalVideoWidth_);
          }
          if (((bitField0_ & 0x00000400) != 0)) {
            output.writeInt32(110, originalVideoHeight_);
          }
          if (((bitField0_ & 0x00000800) != 0)) {
            output.writeBool(111, hasAudio_);
          }
          if (((bitField0_ & 0x00001000) != 0)) {
            output.writeBool(112, hasVideo_);
          }
          if (((bitField0_ & 0x00002000) != 0)) {
            output.writeBool(113, muteAudio_);
          }
          if (((bitField0_ & 0x00004000) != 0)) {
            output.writeInt32(114, clipVolume_);
          }
          if (((bitField0_ & 0x00008000) != 0)) {
            output.writeInt32(115, playbackSpeed_);
          }
          if (getVolumeEnvelopeTimeList().size() > 0) {
            output.writeUInt32NoTag(930);
            output.writeUInt32NoTag(volumeEnvelopeTimeMemoizedSerializedSize);
          }
          for (int i = 0; i < volumeEnvelopeTime_.size(); i++) {
            output.writeInt32NoTag(volumeEnvelopeTime_.getInt(i));
          }
          if (getVolumeEnvelopeLevelList().size() > 0) {
            output.writeUInt32NoTag(938);
            output.writeUInt32NoTag(volumeEnvelopeLevelMemoizedSerializedSize);
          }
          for (int i = 0; i < volumeEnvelopeLevel_.size(); i++) {
            output.writeInt32NoTag(volumeEnvelopeLevel_.getInt(i));
          }
          if (((bitField0_ & 0x00010000) != 0)) {
            output.writeInt32(118, chromaKeyColor_);
          }
          if (((bitField0_ & 0x00020000) != 0)) {
            output.writeBool(119, chromaKeyEnabled_);
          }
          if (((bitField0_ & 0x00040000) != 0)) {
            output.writeFloat(120, chromaKeyClipFg_);
          }
          if (((bitField0_ & 0x00080000) != 0)) {
            output.writeFloat(121, chromaKeyClipBg_);
          }
          if (((bitField0_ & 0x00100000) != 0)) {
            output.writeFloat(122, chromaKeyBlendX0_);
          }
          if (((bitField0_ & 0x00200000) != 0)) {
            output.writeFloat(123, chromaKeyBlendY0_);
          }
          if (((bitField0_ & 0x00400000) != 0)) {
            output.writeFloat(124, chromaKeyBlendX1_);
          }
          if (((bitField0_ & 0x00800000) != 0)) {
            output.writeFloat(125, chromaKeyBlendY1_);
          }
          if (((bitField0_ & 0x01000000) != 0)) {
            output.writeInt32(126, voiceChanger_);
          }
          if (((bitField0_ & 0x02000000) != 0)) {
            output.writeInt32(127, panLeft_);
          }
          if (((bitField0_ & 0x04000000) != 0)) {
            output.writeInt32(128, panRight_);
          }
          if (((bitField0_ & 0x08000000) != 0)) {
            output.writeInt32(129, compressor_);
          }
          if (((bitField0_ & 0x10000000) != 0)) {
            output.writeInt32(130, pitchFactor_);
          }
          if (((bitField0_ & 0x20000000) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 131, iosMediaAssetId_);
          }
          if (((bitField0_ & 0x40000000) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 132, enhancedAudioFilter_);
          }
          if (((bitField0_ & 0x80000000) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 133, equalizer_);
          }
          if (((bitField1_ & 0x00000001) != 0)) {
            output.writeMessage(134, getClipRange());
          }
          if (((bitField1_ & 0x00000002) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 135, reverb_);
          }
          if (((bitField1_ & 0x00000004) != 0)) {
            output.writeMessage(136, getColorAdjustment());
          }
          if (((bitField1_ & 0x00000008) != 0)) {
            output.writeMessage(137, getColorFilter());
          }
          if (((bitField1_ & 0x00000010) != 0)) {
            output.writeBool(138, keepPitch_);
          }
          if (((bitField1_ & 0x00000020) != 0)) {
            output.writeBool(139, useIFrameOnly_);
          }
          if (((bitField1_ & 0x00000040) != 0)) {
            output.writeInt32(140, uprightRotation_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          {
            int dataSize = 0;
            dataSize = 4 * getChromaKeyDivisionsList().size();
            size += dataSize;
            if (!getChromaKeyDivisionsList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            chromaKeyDivisionsMemoizedSerializedSize = dataSize;
          }
          {
            int dataSize = 0;
            dataSize = 4 * getChromaKeyStrengthsList().size();
            size += dataSize;
            if (!getChromaKeyStrengthsList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            chromaKeyStrengthsMemoizedSerializedSize = dataSize;
          }
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(100, getLayerCommon());
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(101, videoPath_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(102, videoMsid_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(103, brightness_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(104, contrast_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(105, saturation_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(106, getColorEffect());
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(107, engineClipId_);
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(108, originalClipDuration_);
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(109, originalVideoWidth_);
          }
          if (((bitField0_ & 0x00000400) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(110, originalVideoHeight_);
          }
          if (((bitField0_ & 0x00000800) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(111, hasAudio_);
          }
          if (((bitField0_ & 0x00001000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(112, hasVideo_);
          }
          if (((bitField0_ & 0x00002000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(113, muteAudio_);
          }
          if (((bitField0_ & 0x00004000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(114, clipVolume_);
          }
          if (((bitField0_ & 0x00008000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(115, playbackSpeed_);
          }
          {
            int dataSize = 0;
            for (int i = 0; i < volumeEnvelopeTime_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(volumeEnvelopeTime_.getInt(i));
            }
            size += dataSize;
            if (!getVolumeEnvelopeTimeList().isEmpty()) {
              size += 2;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            volumeEnvelopeTimeMemoizedSerializedSize = dataSize;
          }
          {
            int dataSize = 0;
            for (int i = 0; i < volumeEnvelopeLevel_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(volumeEnvelopeLevel_.getInt(i));
            }
            size += dataSize;
            if (!getVolumeEnvelopeLevelList().isEmpty()) {
              size += 2;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            volumeEnvelopeLevelMemoizedSerializedSize = dataSize;
          }
          if (((bitField0_ & 0x00010000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(118, chromaKeyColor_);
          }
          if (((bitField0_ & 0x00020000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(119, chromaKeyEnabled_);
          }
          if (((bitField0_ & 0x00040000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(120, chromaKeyClipFg_);
          }
          if (((bitField0_ & 0x00080000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(121, chromaKeyClipBg_);
          }
          if (((bitField0_ & 0x00100000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(122, chromaKeyBlendX0_);
          }
          if (((bitField0_ & 0x00200000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(123, chromaKeyBlendY0_);
          }
          if (((bitField0_ & 0x00400000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(124, chromaKeyBlendX1_);
          }
          if (((bitField0_ & 0x00800000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(125, chromaKeyBlendY1_);
          }
          if (((bitField0_ & 0x01000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(126, voiceChanger_);
          }
          if (((bitField0_ & 0x02000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(127, panLeft_);
          }
          if (((bitField0_ & 0x04000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(128, panRight_);
          }
          if (((bitField0_ & 0x08000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(129, compressor_);
          }
          if (((bitField0_ & 0x10000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(130, pitchFactor_);
          }
          if (((bitField0_ & 0x20000000) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(131, iosMediaAssetId_);
          }
          if (((bitField0_ & 0x40000000) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(132, enhancedAudioFilter_);
          }
          if (((bitField0_ & 0x80000000) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(133, equalizer_);
          }
          if (((bitField1_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(134, getClipRange());
          }
          if (((bitField1_ & 0x00000002) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(135, reverb_);
          }
          if (((bitField1_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(136, getColorAdjustment());
          }
          if (((bitField1_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(137, getColorFilter());
          }
          if (((bitField1_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(138, keepPitch_);
          }
          if (((bitField1_ & 0x00000020) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(139, useIFrameOnly_);
          }
          if (((bitField1_ & 0x00000040) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(140, uprightRotation_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer) obj;

          if (hasLayerCommon() != other.hasLayerCommon()) return false;
          if (hasLayerCommon()) {
            if (!getLayerCommon()
                .equals(other.getLayerCommon())) return false;
          }
          if (hasVideoPath() != other.hasVideoPath()) return false;
          if (hasVideoPath()) {
            if (!getVideoPath()
                .equals(other.getVideoPath())) return false;
          }
          if (hasVideoMsid() != other.hasVideoMsid()) return false;
          if (hasVideoMsid()) {
            if (!getVideoMsid()
                .equals(other.getVideoMsid())) return false;
          }
          if (hasBrightness() != other.hasBrightness()) return false;
          if (hasBrightness()) {
            if (getBrightness()
                != other.getBrightness()) return false;
          }
          if (hasContrast() != other.hasContrast()) return false;
          if (hasContrast()) {
            if (getContrast()
                != other.getContrast()) return false;
          }
          if (hasSaturation() != other.hasSaturation()) return false;
          if (hasSaturation()) {
            if (getSaturation()
                != other.getSaturation()) return false;
          }
          if (hasColorEffect() != other.hasColorEffect()) return false;
          if (hasColorEffect()) {
            if (!getColorEffect()
                .equals(other.getColorEffect())) return false;
          }
          if (hasEngineClipId() != other.hasEngineClipId()) return false;
          if (hasEngineClipId()) {
            if (getEngineClipId()
                != other.getEngineClipId()) return false;
          }
          if (hasOriginalClipDuration() != other.hasOriginalClipDuration()) return false;
          if (hasOriginalClipDuration()) {
            if (getOriginalClipDuration()
                != other.getOriginalClipDuration()) return false;
          }
          if (hasOriginalVideoWidth() != other.hasOriginalVideoWidth()) return false;
          if (hasOriginalVideoWidth()) {
            if (getOriginalVideoWidth()
                != other.getOriginalVideoWidth()) return false;
          }
          if (hasOriginalVideoHeight() != other.hasOriginalVideoHeight()) return false;
          if (hasOriginalVideoHeight()) {
            if (getOriginalVideoHeight()
                != other.getOriginalVideoHeight()) return false;
          }
          if (hasHasAudio() != other.hasHasAudio()) return false;
          if (hasHasAudio()) {
            if (getHasAudio()
                != other.getHasAudio()) return false;
          }
          if (hasHasVideo() != other.hasHasVideo()) return false;
          if (hasHasVideo()) {
            if (getHasVideo()
                != other.getHasVideo()) return false;
          }
          if (hasMuteAudio() != other.hasMuteAudio()) return false;
          if (hasMuteAudio()) {
            if (getMuteAudio()
                != other.getMuteAudio()) return false;
          }
          if (hasClipVolume() != other.hasClipVolume()) return false;
          if (hasClipVolume()) {
            if (getClipVolume()
                != other.getClipVolume()) return false;
          }
          if (hasPlaybackSpeed() != other.hasPlaybackSpeed()) return false;
          if (hasPlaybackSpeed()) {
            if (getPlaybackSpeed()
                != other.getPlaybackSpeed()) return false;
          }
          if (!getVolumeEnvelopeTimeList()
              .equals(other.getVolumeEnvelopeTimeList())) return false;
          if (!getVolumeEnvelopeLevelList()
              .equals(other.getVolumeEnvelopeLevelList())) return false;
          if (!getChromaKeyDivisionsList()
              .equals(other.getChromaKeyDivisionsList())) return false;
          if (!getChromaKeyStrengthsList()
              .equals(other.getChromaKeyStrengthsList())) return false;
          if (hasChromaKeyColor() != other.hasChromaKeyColor()) return false;
          if (hasChromaKeyColor()) {
            if (getChromaKeyColor()
                != other.getChromaKeyColor()) return false;
          }
          if (hasChromaKeyEnabled() != other.hasChromaKeyEnabled()) return false;
          if (hasChromaKeyEnabled()) {
            if (getChromaKeyEnabled()
                != other.getChromaKeyEnabled()) return false;
          }
          if (hasChromaKeyClipFg() != other.hasChromaKeyClipFg()) return false;
          if (hasChromaKeyClipFg()) {
            if (java.lang.Float.floatToIntBits(getChromaKeyClipFg())
                != java.lang.Float.floatToIntBits(
                    other.getChromaKeyClipFg())) return false;
          }
          if (hasChromaKeyClipBg() != other.hasChromaKeyClipBg()) return false;
          if (hasChromaKeyClipBg()) {
            if (java.lang.Float.floatToIntBits(getChromaKeyClipBg())
                != java.lang.Float.floatToIntBits(
                    other.getChromaKeyClipBg())) return false;
          }
          if (hasChromaKeyBlendX0() != other.hasChromaKeyBlendX0()) return false;
          if (hasChromaKeyBlendX0()) {
            if (java.lang.Float.floatToIntBits(getChromaKeyBlendX0())
                != java.lang.Float.floatToIntBits(
                    other.getChromaKeyBlendX0())) return false;
          }
          if (hasChromaKeyBlendY0() != other.hasChromaKeyBlendY0()) return false;
          if (hasChromaKeyBlendY0()) {
            if (java.lang.Float.floatToIntBits(getChromaKeyBlendY0())
                != java.lang.Float.floatToIntBits(
                    other.getChromaKeyBlendY0())) return false;
          }
          if (hasChromaKeyBlendX1() != other.hasChromaKeyBlendX1()) return false;
          if (hasChromaKeyBlendX1()) {
            if (java.lang.Float.floatToIntBits(getChromaKeyBlendX1())
                != java.lang.Float.floatToIntBits(
                    other.getChromaKeyBlendX1())) return false;
          }
          if (hasChromaKeyBlendY1() != other.hasChromaKeyBlendY1()) return false;
          if (hasChromaKeyBlendY1()) {
            if (java.lang.Float.floatToIntBits(getChromaKeyBlendY1())
                != java.lang.Float.floatToIntBits(
                    other.getChromaKeyBlendY1())) return false;
          }
          if (hasVoiceChanger() != other.hasVoiceChanger()) return false;
          if (hasVoiceChanger()) {
            if (getVoiceChanger()
                != other.getVoiceChanger()) return false;
          }
          if (hasPanLeft() != other.hasPanLeft()) return false;
          if (hasPanLeft()) {
            if (getPanLeft()
                != other.getPanLeft()) return false;
          }
          if (hasPanRight() != other.hasPanRight()) return false;
          if (hasPanRight()) {
            if (getPanRight()
                != other.getPanRight()) return false;
          }
          if (hasCompressor() != other.hasCompressor()) return false;
          if (hasCompressor()) {
            if (getCompressor()
                != other.getCompressor()) return false;
          }
          if (hasPitchFactor() != other.hasPitchFactor()) return false;
          if (hasPitchFactor()) {
            if (getPitchFactor()
                != other.getPitchFactor()) return false;
          }
          if (hasIosMediaAssetId() != other.hasIosMediaAssetId()) return false;
          if (hasIosMediaAssetId()) {
            if (!getIosMediaAssetId()
                .equals(other.getIosMediaAssetId())) return false;
          }
          if (hasEnhancedAudioFilter() != other.hasEnhancedAudioFilter()) return false;
          if (hasEnhancedAudioFilter()) {
            if (!getEnhancedAudioFilter()
                .equals(other.getEnhancedAudioFilter())) return false;
          }
          if (hasEqualizer() != other.hasEqualizer()) return false;
          if (hasEqualizer()) {
            if (!getEqualizer()
                .equals(other.getEqualizer())) return false;
          }
          if (hasClipRange() != other.hasClipRange()) return false;
          if (hasClipRange()) {
            if (!getClipRange()
                .equals(other.getClipRange())) return false;
          }
          if (hasReverb() != other.hasReverb()) return false;
          if (hasReverb()) {
            if (!getReverb()
                .equals(other.getReverb())) return false;
          }
          if (hasColorAdjustment() != other.hasColorAdjustment()) return false;
          if (hasColorAdjustment()) {
            if (!getColorAdjustment()
                .equals(other.getColorAdjustment())) return false;
          }
          if (hasColorFilter() != other.hasColorFilter()) return false;
          if (hasColorFilter()) {
            if (!getColorFilter()
                .equals(other.getColorFilter())) return false;
          }
          if (hasKeepPitch() != other.hasKeepPitch()) return false;
          if (hasKeepPitch()) {
            if (getKeepPitch()
                != other.getKeepPitch()) return false;
          }
          if (hasUseIFrameOnly() != other.hasUseIFrameOnly()) return false;
          if (hasUseIFrameOnly()) {
            if (getUseIFrameOnly()
                != other.getUseIFrameOnly()) return false;
          }
          if (hasUprightRotation() != other.hasUprightRotation()) return false;
          if (hasUprightRotation()) {
            if (getUprightRotation()
                != other.getUprightRotation()) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasLayerCommon()) {
            hash = (37 * hash) + LAYER_COMMON_FIELD_NUMBER;
            hash = (53 * hash) + getLayerCommon().hashCode();
          }
          if (hasVideoPath()) {
            hash = (37 * hash) + VIDEO_PATH_FIELD_NUMBER;
            hash = (53 * hash) + getVideoPath().hashCode();
          }
          if (hasVideoMsid()) {
            hash = (37 * hash) + VIDEO_MSID_FIELD_NUMBER;
            hash = (53 * hash) + getVideoMsid().hashCode();
          }
          if (hasBrightness()) {
            hash = (37 * hash) + BRIGHTNESS_FIELD_NUMBER;
            hash = (53 * hash) + getBrightness();
          }
          if (hasContrast()) {
            hash = (37 * hash) + CONTRAST_FIELD_NUMBER;
            hash = (53 * hash) + getContrast();
          }
          if (hasSaturation()) {
            hash = (37 * hash) + SATURATION_FIELD_NUMBER;
            hash = (53 * hash) + getSaturation();
          }
          if (hasColorEffect()) {
            hash = (37 * hash) + COLOR_EFFECT_FIELD_NUMBER;
            hash = (53 * hash) + getColorEffect().hashCode();
          }
          if (hasEngineClipId()) {
            hash = (37 * hash) + ENGINE_CLIP_ID_FIELD_NUMBER;
            hash = (53 * hash) + getEngineClipId();
          }
          if (hasOriginalClipDuration()) {
            hash = (37 * hash) + ORIGINAL_CLIP_DURATION_FIELD_NUMBER;
            hash = (53 * hash) + getOriginalClipDuration();
          }
          if (hasOriginalVideoWidth()) {
            hash = (37 * hash) + ORIGINAL_VIDEO_WIDTH_FIELD_NUMBER;
            hash = (53 * hash) + getOriginalVideoWidth();
          }
          if (hasOriginalVideoHeight()) {
            hash = (37 * hash) + ORIGINAL_VIDEO_HEIGHT_FIELD_NUMBER;
            hash = (53 * hash) + getOriginalVideoHeight();
          }
          if (hasHasAudio()) {
            hash = (37 * hash) + HAS_AUDIO_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getHasAudio());
          }
          if (hasHasVideo()) {
            hash = (37 * hash) + HAS_VIDEO_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getHasVideo());
          }
          if (hasMuteAudio()) {
            hash = (37 * hash) + MUTE_AUDIO_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getMuteAudio());
          }
          if (hasClipVolume()) {
            hash = (37 * hash) + CLIP_VOLUME_FIELD_NUMBER;
            hash = (53 * hash) + getClipVolume();
          }
          if (hasPlaybackSpeed()) {
            hash = (37 * hash) + PLAYBACK_SPEED_FIELD_NUMBER;
            hash = (53 * hash) + getPlaybackSpeed();
          }
          if (getVolumeEnvelopeTimeCount() > 0) {
            hash = (37 * hash) + VOLUME_ENVELOPE_TIME_FIELD_NUMBER;
            hash = (53 * hash) + getVolumeEnvelopeTimeList().hashCode();
          }
          if (getVolumeEnvelopeLevelCount() > 0) {
            hash = (37 * hash) + VOLUME_ENVELOPE_LEVEL_FIELD_NUMBER;
            hash = (53 * hash) + getVolumeEnvelopeLevelList().hashCode();
          }
          if (getChromaKeyDivisionsCount() > 0) {
            hash = (37 * hash) + CHROMA_KEY_DIVISIONS_FIELD_NUMBER;
            hash = (53 * hash) + getChromaKeyDivisionsList().hashCode();
          }
          if (getChromaKeyStrengthsCount() > 0) {
            hash = (37 * hash) + CHROMA_KEY_STRENGTHS_FIELD_NUMBER;
            hash = (53 * hash) + getChromaKeyStrengthsList().hashCode();
          }
          if (hasChromaKeyColor()) {
            hash = (37 * hash) + CHROMA_KEY_COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getChromaKeyColor();
          }
          if (hasChromaKeyEnabled()) {
            hash = (37 * hash) + CHROMA_KEY_ENABLED_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getChromaKeyEnabled());
          }
          if (hasChromaKeyClipFg()) {
            hash = (37 * hash) + CHROMA_KEY_CLIP_FG_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getChromaKeyClipFg());
          }
          if (hasChromaKeyClipBg()) {
            hash = (37 * hash) + CHROMA_KEY_CLIP_BG_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getChromaKeyClipBg());
          }
          if (hasChromaKeyBlendX0()) {
            hash = (37 * hash) + CHROMA_KEY_BLEND_X0_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getChromaKeyBlendX0());
          }
          if (hasChromaKeyBlendY0()) {
            hash = (37 * hash) + CHROMA_KEY_BLEND_Y0_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getChromaKeyBlendY0());
          }
          if (hasChromaKeyBlendX1()) {
            hash = (37 * hash) + CHROMA_KEY_BLEND_X1_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getChromaKeyBlendX1());
          }
          if (hasChromaKeyBlendY1()) {
            hash = (37 * hash) + CHROMA_KEY_BLEND_Y1_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getChromaKeyBlendY1());
          }
          if (hasVoiceChanger()) {
            hash = (37 * hash) + VOICE_CHANGER_FIELD_NUMBER;
            hash = (53 * hash) + getVoiceChanger();
          }
          if (hasPanLeft()) {
            hash = (37 * hash) + PAN_LEFT_FIELD_NUMBER;
            hash = (53 * hash) + getPanLeft();
          }
          if (hasPanRight()) {
            hash = (37 * hash) + PAN_RIGHT_FIELD_NUMBER;
            hash = (53 * hash) + getPanRight();
          }
          if (hasCompressor()) {
            hash = (37 * hash) + COMPRESSOR_FIELD_NUMBER;
            hash = (53 * hash) + getCompressor();
          }
          if (hasPitchFactor()) {
            hash = (37 * hash) + PITCH_FACTOR_FIELD_NUMBER;
            hash = (53 * hash) + getPitchFactor();
          }
          if (hasIosMediaAssetId()) {
            hash = (37 * hash) + IOS_MEDIA_ASSET_ID_FIELD_NUMBER;
            hash = (53 * hash) + getIosMediaAssetId().hashCode();
          }
          if (hasEnhancedAudioFilter()) {
            hash = (37 * hash) + ENHANCEDAUDIOFILTER_FIELD_NUMBER;
            hash = (53 * hash) + getEnhancedAudioFilter().hashCode();
          }
          if (hasEqualizer()) {
            hash = (37 * hash) + EQUALIZER_FIELD_NUMBER;
            hash = (53 * hash) + getEqualizer().hashCode();
          }
          if (hasClipRange()) {
            hash = (37 * hash) + CLIPRANGE_FIELD_NUMBER;
            hash = (53 * hash) + getClipRange().hashCode();
          }
          if (hasReverb()) {
            hash = (37 * hash) + REVERB_FIELD_NUMBER;
            hash = (53 * hash) + getReverb().hashCode();
          }
          if (hasColorAdjustment()) {
            hash = (37 * hash) + COLORADJUSTMENT_FIELD_NUMBER;
            hash = (53 * hash) + getColorAdjustment().hashCode();
          }
          if (hasColorFilter()) {
            hash = (37 * hash) + COLORFILTER_FIELD_NUMBER;
            hash = (53 * hash) + getColorFilter().hashCode();
          }
          if (hasKeepPitch()) {
            hash = (37 * hash) + KEEPPITCH_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getKeepPitch());
          }
          if (hasUseIFrameOnly()) {
            hash = (37 * hash) + USEIFRAMEONLY_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getUseIFrameOnly());
          }
          if (hasUprightRotation()) {
            hash = (37 * hash) + UPRIGHTROTATION_FIELD_NUMBER;
            hash = (53 * hash) + getUprightRotation();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code KMProto.KMProject.VideoLayer}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.VideoLayer)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayerOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_VideoLayer_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_VideoLayer_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
              getLayerCommonFieldBuilder();
              getColorEffectFieldBuilder();
              getClipRangeFieldBuilder();
              getColorAdjustmentFieldBuilder();
              getColorFilterFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            if (layerCommonBuilder_ == null) {
              layerCommon_ = null;
            } else {
              layerCommonBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000001);
            videoPath_ = "";
            bitField0_ = (bitField0_ & ~0x00000002);
            videoMsid_ = "";
            bitField0_ = (bitField0_ & ~0x00000004);
            brightness_ = 0;
            bitField0_ = (bitField0_ & ~0x00000008);
            contrast_ = 0;
            bitField0_ = (bitField0_ & ~0x00000010);
            saturation_ = 0;
            bitField0_ = (bitField0_ & ~0x00000020);
            if (colorEffectBuilder_ == null) {
              colorEffect_ = null;
            } else {
              colorEffectBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000040);
            engineClipId_ = 0;
            bitField0_ = (bitField0_ & ~0x00000080);
            originalClipDuration_ = 0;
            bitField0_ = (bitField0_ & ~0x00000100);
            originalVideoWidth_ = 0;
            bitField0_ = (bitField0_ & ~0x00000200);
            originalVideoHeight_ = 0;
            bitField0_ = (bitField0_ & ~0x00000400);
            hasAudio_ = false;
            bitField0_ = (bitField0_ & ~0x00000800);
            hasVideo_ = false;
            bitField0_ = (bitField0_ & ~0x00001000);
            muteAudio_ = false;
            bitField0_ = (bitField0_ & ~0x00002000);
            clipVolume_ = 0;
            bitField0_ = (bitField0_ & ~0x00004000);
            playbackSpeed_ = 0;
            bitField0_ = (bitField0_ & ~0x00008000);
            volumeEnvelopeTime_ = emptyIntList();
            bitField0_ = (bitField0_ & ~0x00010000);
            volumeEnvelopeLevel_ = emptyIntList();
            bitField0_ = (bitField0_ & ~0x00020000);
            chromaKeyDivisions_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00040000);
            chromaKeyStrengths_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00080000);
            chromaKeyColor_ = 0;
            bitField0_ = (bitField0_ & ~0x00100000);
            chromaKeyEnabled_ = false;
            bitField0_ = (bitField0_ & ~0x00200000);
            chromaKeyClipFg_ = 0F;
            bitField0_ = (bitField0_ & ~0x00400000);
            chromaKeyClipBg_ = 0F;
            bitField0_ = (bitField0_ & ~0x00800000);
            chromaKeyBlendX0_ = 0F;
            bitField0_ = (bitField0_ & ~0x01000000);
            chromaKeyBlendY0_ = 0F;
            bitField0_ = (bitField0_ & ~0x02000000);
            chromaKeyBlendX1_ = 0F;
            bitField0_ = (bitField0_ & ~0x04000000);
            chromaKeyBlendY1_ = 0F;
            bitField0_ = (bitField0_ & ~0x08000000);
            voiceChanger_ = 0;
            bitField0_ = (bitField0_ & ~0x10000000);
            panLeft_ = 0;
            bitField0_ = (bitField0_ & ~0x20000000);
            panRight_ = 0;
            bitField0_ = (bitField0_ & ~0x40000000);
            compressor_ = 0;
            bitField0_ = (bitField0_ & ~0x80000000);
            pitchFactor_ = 0;
            bitField1_ = (bitField1_ & ~0x00000001);
            iosMediaAssetId_ = "";
            bitField1_ = (bitField1_ & ~0x00000002);
            enhancedAudioFilter_ = "";
            bitField1_ = (bitField1_ & ~0x00000004);
            equalizer_ = "";
            bitField1_ = (bitField1_ & ~0x00000008);
            if (clipRangeBuilder_ == null) {
              clipRange_ = null;
            } else {
              clipRangeBuilder_.clear();
            }
            bitField1_ = (bitField1_ & ~0x00000010);
            reverb_ = "";
            bitField1_ = (bitField1_ & ~0x00000020);
            if (colorAdjustmentBuilder_ == null) {
              colorAdjustment_ = null;
            } else {
              colorAdjustmentBuilder_.clear();
            }
            bitField1_ = (bitField1_ & ~0x00000040);
            if (colorFilterBuilder_ == null) {
              colorFilter_ = null;
            } else {
              colorFilterBuilder_.clear();
            }
            bitField1_ = (bitField1_ & ~0x00000080);
            keepPitch_ = false;
            bitField1_ = (bitField1_ & ~0x00000100);
            useIFrameOnly_ = false;
            bitField1_ = (bitField1_ & ~0x00000200);
            uprightRotation_ = 0;
            bitField1_ = (bitField1_ & ~0x00000400);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_VideoLayer_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer(this);
            int from_bitField0_ = bitField0_;
            int from_bitField1_ = bitField1_;
            int to_bitField0_ = 0;
            int to_bitField1_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              if (layerCommonBuilder_ == null) {
                result.layerCommon_ = layerCommon_;
              } else {
                result.layerCommon_ = layerCommonBuilder_.build();
              }
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              to_bitField0_ |= 0x00000002;
            }
            result.videoPath_ = videoPath_;
            if (((from_bitField0_ & 0x00000004) != 0)) {
              to_bitField0_ |= 0x00000004;
            }
            result.videoMsid_ = videoMsid_;
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.brightness_ = brightness_;
              to_bitField0_ |= 0x00000008;
            }
            if (((from_bitField0_ & 0x00000010) != 0)) {
              result.contrast_ = contrast_;
              to_bitField0_ |= 0x00000010;
            }
            if (((from_bitField0_ & 0x00000020) != 0)) {
              result.saturation_ = saturation_;
              to_bitField0_ |= 0x00000020;
            }
            if (((from_bitField0_ & 0x00000040) != 0)) {
              if (colorEffectBuilder_ == null) {
                result.colorEffect_ = colorEffect_;
              } else {
                result.colorEffect_ = colorEffectBuilder_.build();
              }
              to_bitField0_ |= 0x00000040;
            }
            if (((from_bitField0_ & 0x00000080) != 0)) {
              result.engineClipId_ = engineClipId_;
              to_bitField0_ |= 0x00000080;
            }
            if (((from_bitField0_ & 0x00000100) != 0)) {
              result.originalClipDuration_ = originalClipDuration_;
              to_bitField0_ |= 0x00000100;
            }
            if (((from_bitField0_ & 0x00000200) != 0)) {
              result.originalVideoWidth_ = originalVideoWidth_;
              to_bitField0_ |= 0x00000200;
            }
            if (((from_bitField0_ & 0x00000400) != 0)) {
              result.originalVideoHeight_ = originalVideoHeight_;
              to_bitField0_ |= 0x00000400;
            }
            if (((from_bitField0_ & 0x00000800) != 0)) {
              result.hasAudio_ = hasAudio_;
              to_bitField0_ |= 0x00000800;
            }
            if (((from_bitField0_ & 0x00001000) != 0)) {
              result.hasVideo_ = hasVideo_;
              to_bitField0_ |= 0x00001000;
            }
            if (((from_bitField0_ & 0x00002000) != 0)) {
              result.muteAudio_ = muteAudio_;
              to_bitField0_ |= 0x00002000;
            }
            if (((from_bitField0_ & 0x00004000) != 0)) {
              result.clipVolume_ = clipVolume_;
              to_bitField0_ |= 0x00004000;
            }
            if (((from_bitField0_ & 0x00008000) != 0)) {
              result.playbackSpeed_ = playbackSpeed_;
              to_bitField0_ |= 0x00008000;
            }
            if (((bitField0_ & 0x00010000) != 0)) {
              volumeEnvelopeTime_.makeImmutable();
              bitField0_ = (bitField0_ & ~0x00010000);
            }
            result.volumeEnvelopeTime_ = volumeEnvelopeTime_;
            if (((bitField0_ & 0x00020000) != 0)) {
              volumeEnvelopeLevel_.makeImmutable();
              bitField0_ = (bitField0_ & ~0x00020000);
            }
            result.volumeEnvelopeLevel_ = volumeEnvelopeLevel_;
            if (((bitField0_ & 0x00040000) != 0)) {
              chromaKeyDivisions_.makeImmutable();
              bitField0_ = (bitField0_ & ~0x00040000);
            }
            result.chromaKeyDivisions_ = chromaKeyDivisions_;
            if (((bitField0_ & 0x00080000) != 0)) {
              chromaKeyStrengths_.makeImmutable();
              bitField0_ = (bitField0_ & ~0x00080000);
            }
            result.chromaKeyStrengths_ = chromaKeyStrengths_;
            if (((from_bitField0_ & 0x00100000) != 0)) {
              result.chromaKeyColor_ = chromaKeyColor_;
              to_bitField0_ |= 0x00010000;
            }
            if (((from_bitField0_ & 0x00200000) != 0)) {
              result.chromaKeyEnabled_ = chromaKeyEnabled_;
              to_bitField0_ |= 0x00020000;
            }
            if (((from_bitField0_ & 0x00400000) != 0)) {
              result.chromaKeyClipFg_ = chromaKeyClipFg_;
              to_bitField0_ |= 0x00040000;
            }
            if (((from_bitField0_ & 0x00800000) != 0)) {
              result.chromaKeyClipBg_ = chromaKeyClipBg_;
              to_bitField0_ |= 0x00080000;
            }
            if (((from_bitField0_ & 0x01000000) != 0)) {
              result.chromaKeyBlendX0_ = chromaKeyBlendX0_;
              to_bitField0_ |= 0x00100000;
            }
            if (((from_bitField0_ & 0x02000000) != 0)) {
              result.chromaKeyBlendY0_ = chromaKeyBlendY0_;
              to_bitField0_ |= 0x00200000;
            }
            if (((from_bitField0_ & 0x04000000) != 0)) {
              result.chromaKeyBlendX1_ = chromaKeyBlendX1_;
              to_bitField0_ |= 0x00400000;
            }
            if (((from_bitField0_ & 0x08000000) != 0)) {
              result.chromaKeyBlendY1_ = chromaKeyBlendY1_;
              to_bitField0_ |= 0x00800000;
            }
            if (((from_bitField0_ & 0x10000000) != 0)) {
              result.voiceChanger_ = voiceChanger_;
              to_bitField0_ |= 0x01000000;
            }
            if (((from_bitField0_ & 0x20000000) != 0)) {
              result.panLeft_ = panLeft_;
              to_bitField0_ |= 0x02000000;
            }
            if (((from_bitField0_ & 0x40000000) != 0)) {
              result.panRight_ = panRight_;
              to_bitField0_ |= 0x04000000;
            }
            if (((from_bitField0_ & 0x80000000) != 0)) {
              result.compressor_ = compressor_;
              to_bitField0_ |= 0x08000000;
            }
            if (((from_bitField1_ & 0x00000001) != 0)) {
              result.pitchFactor_ = pitchFactor_;
              to_bitField0_ |= 0x10000000;
            }
            if (((from_bitField1_ & 0x00000002) != 0)) {
              to_bitField0_ |= 0x20000000;
            }
            result.iosMediaAssetId_ = iosMediaAssetId_;
            if (((from_bitField1_ & 0x00000004) != 0)) {
              to_bitField0_ |= 0x40000000;
            }
            result.enhancedAudioFilter_ = enhancedAudioFilter_;
            if (((from_bitField1_ & 0x00000008) != 0)) {
              to_bitField0_ |= 0x80000000;
            }
            result.equalizer_ = equalizer_;
            if (((from_bitField1_ & 0x00000010) != 0)) {
              if (clipRangeBuilder_ == null) {
                result.clipRange_ = clipRange_;
              } else {
                result.clipRange_ = clipRangeBuilder_.build();
              }
              to_bitField1_ |= 0x00000001;
            }
            if (((from_bitField1_ & 0x00000020) != 0)) {
              to_bitField1_ |= 0x00000002;
            }
            result.reverb_ = reverb_;
            if (((from_bitField1_ & 0x00000040) != 0)) {
              if (colorAdjustmentBuilder_ == null) {
                result.colorAdjustment_ = colorAdjustment_;
              } else {
                result.colorAdjustment_ = colorAdjustmentBuilder_.build();
              }
              to_bitField1_ |= 0x00000004;
            }
            if (((from_bitField1_ & 0x00000080) != 0)) {
              if (colorFilterBuilder_ == null) {
                result.colorFilter_ = colorFilter_;
              } else {
                result.colorFilter_ = colorFilterBuilder_.build();
              }
              to_bitField1_ |= 0x00000008;
            }
            if (((from_bitField1_ & 0x00000100) != 0)) {
              result.keepPitch_ = keepPitch_;
              to_bitField1_ |= 0x00000010;
            }
            if (((from_bitField1_ & 0x00000200) != 0)) {
              result.useIFrameOnly_ = useIFrameOnly_;
              to_bitField1_ |= 0x00000020;
            }
            if (((from_bitField1_ & 0x00000400) != 0)) {
              result.uprightRotation_ = uprightRotation_;
              to_bitField1_ |= 0x00000040;
            }
            result.bitField0_ = to_bitField0_;
            result.bitField1_ = to_bitField1_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer.getDefaultInstance()) return this;
            if (other.hasLayerCommon()) {
              mergeLayerCommon(other.getLayerCommon());
            }
            if (other.hasVideoPath()) {
              bitField0_ |= 0x00000002;
              videoPath_ = other.videoPath_;
              onChanged();
            }
            if (other.hasVideoMsid()) {
              bitField0_ |= 0x00000004;
              videoMsid_ = other.videoMsid_;
              onChanged();
            }
            if (other.hasBrightness()) {
              setBrightness(other.getBrightness());
            }
            if (other.hasContrast()) {
              setContrast(other.getContrast());
            }
            if (other.hasSaturation()) {
              setSaturation(other.getSaturation());
            }
            if (other.hasColorEffect()) {
              mergeColorEffect(other.getColorEffect());
            }
            if (other.hasEngineClipId()) {
              setEngineClipId(other.getEngineClipId());
            }
            if (other.hasOriginalClipDuration()) {
              setOriginalClipDuration(other.getOriginalClipDuration());
            }
            if (other.hasOriginalVideoWidth()) {
              setOriginalVideoWidth(other.getOriginalVideoWidth());
            }
            if (other.hasOriginalVideoHeight()) {
              setOriginalVideoHeight(other.getOriginalVideoHeight());
            }
            if (other.hasHasAudio()) {
              setHasAudio(other.getHasAudio());
            }
            if (other.hasHasVideo()) {
              setHasVideo(other.getHasVideo());
            }
            if (other.hasMuteAudio()) {
              setMuteAudio(other.getMuteAudio());
            }
            if (other.hasClipVolume()) {
              setClipVolume(other.getClipVolume());
            }
            if (other.hasPlaybackSpeed()) {
              setPlaybackSpeed(other.getPlaybackSpeed());
            }
            if (!other.volumeEnvelopeTime_.isEmpty()) {
              if (volumeEnvelopeTime_.isEmpty()) {
                volumeEnvelopeTime_ = other.volumeEnvelopeTime_;
                bitField0_ = (bitField0_ & ~0x00010000);
              } else {
                ensureVolumeEnvelopeTimeIsMutable();
                volumeEnvelopeTime_.addAll(other.volumeEnvelopeTime_);
              }
              onChanged();
            }
            if (!other.volumeEnvelopeLevel_.isEmpty()) {
              if (volumeEnvelopeLevel_.isEmpty()) {
                volumeEnvelopeLevel_ = other.volumeEnvelopeLevel_;
                bitField0_ = (bitField0_ & ~0x00020000);
              } else {
                ensureVolumeEnvelopeLevelIsMutable();
                volumeEnvelopeLevel_.addAll(other.volumeEnvelopeLevel_);
              }
              onChanged();
            }
            if (!other.chromaKeyDivisions_.isEmpty()) {
              if (chromaKeyDivisions_.isEmpty()) {
                chromaKeyDivisions_ = other.chromaKeyDivisions_;
                bitField0_ = (bitField0_ & ~0x00040000);
              } else {
                ensureChromaKeyDivisionsIsMutable();
                chromaKeyDivisions_.addAll(other.chromaKeyDivisions_);
              }
              onChanged();
            }
            if (!other.chromaKeyStrengths_.isEmpty()) {
              if (chromaKeyStrengths_.isEmpty()) {
                chromaKeyStrengths_ = other.chromaKeyStrengths_;
                bitField0_ = (bitField0_ & ~0x00080000);
              } else {
                ensureChromaKeyStrengthsIsMutable();
                chromaKeyStrengths_.addAll(other.chromaKeyStrengths_);
              }
              onChanged();
            }
            if (other.hasChromaKeyColor()) {
              setChromaKeyColor(other.getChromaKeyColor());
            }
            if (other.hasChromaKeyEnabled()) {
              setChromaKeyEnabled(other.getChromaKeyEnabled());
            }
            if (other.hasChromaKeyClipFg()) {
              setChromaKeyClipFg(other.getChromaKeyClipFg());
            }
            if (other.hasChromaKeyClipBg()) {
              setChromaKeyClipBg(other.getChromaKeyClipBg());
            }
            if (other.hasChromaKeyBlendX0()) {
              setChromaKeyBlendX0(other.getChromaKeyBlendX0());
            }
            if (other.hasChromaKeyBlendY0()) {
              setChromaKeyBlendY0(other.getChromaKeyBlendY0());
            }
            if (other.hasChromaKeyBlendX1()) {
              setChromaKeyBlendX1(other.getChromaKeyBlendX1());
            }
            if (other.hasChromaKeyBlendY1()) {
              setChromaKeyBlendY1(other.getChromaKeyBlendY1());
            }
            if (other.hasVoiceChanger()) {
              setVoiceChanger(other.getVoiceChanger());
            }
            if (other.hasPanLeft()) {
              setPanLeft(other.getPanLeft());
            }
            if (other.hasPanRight()) {
              setPanRight(other.getPanRight());
            }
            if (other.hasCompressor()) {
              setCompressor(other.getCompressor());
            }
            if (other.hasPitchFactor()) {
              setPitchFactor(other.getPitchFactor());
            }
            if (other.hasIosMediaAssetId()) {
              bitField1_ |= 0x00000002;
              iosMediaAssetId_ = other.iosMediaAssetId_;
              onChanged();
            }
            if (other.hasEnhancedAudioFilter()) {
              bitField1_ |= 0x00000004;
              enhancedAudioFilter_ = other.enhancedAudioFilter_;
              onChanged();
            }
            if (other.hasEqualizer()) {
              bitField1_ |= 0x00000008;
              equalizer_ = other.equalizer_;
              onChanged();
            }
            if (other.hasClipRange()) {
              mergeClipRange(other.getClipRange());
            }
            if (other.hasReverb()) {
              bitField1_ |= 0x00000020;
              reverb_ = other.reverb_;
              onChanged();
            }
            if (other.hasColorAdjustment()) {
              mergeColorAdjustment(other.getColorAdjustment());
            }
            if (other.hasColorFilter()) {
              mergeColorFilter(other.getColorFilter());
            }
            if (other.hasKeepPitch()) {
              setKeepPitch(other.getKeepPitch());
            }
            if (other.hasUseIFrameOnly()) {
              setUseIFrameOnly(other.getUseIFrameOnly());
            }
            if (other.hasUprightRotation()) {
              setUprightRotation(other.getUprightRotation());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;
          private int bitField1_;

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon layerCommon_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder> layerCommonBuilder_;
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           * @return Whether the layerCommon field is set.
           */
          public boolean hasLayerCommon() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           * @return The layerCommon.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getLayerCommon() {
            if (layerCommonBuilder_ == null) {
              return layerCommon_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
            } else {
              return layerCommonBuilder_.getMessage();
            }
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder setLayerCommon(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon value) {
            if (layerCommonBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              layerCommon_ = value;
              onChanged();
            } else {
              layerCommonBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000001;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder setLayerCommon(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder builderForValue) {
            if (layerCommonBuilder_ == null) {
              layerCommon_ = builderForValue.build();
              onChanged();
            } else {
              layerCommonBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000001;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder mergeLayerCommon(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon value) {
            if (layerCommonBuilder_ == null) {
              if (((bitField0_ & 0x00000001) != 0) &&
                  layerCommon_ != null &&
                  layerCommon_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance()) {
                layerCommon_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.newBuilder(layerCommon_).mergeFrom(value).buildPartial();
              } else {
                layerCommon_ = value;
              }
              onChanged();
            } else {
              layerCommonBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000001;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder clearLayerCommon() {
            if (layerCommonBuilder_ == null) {
              layerCommon_ = null;
              onChanged();
            } else {
              layerCommonBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000001);
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder getLayerCommonBuilder() {
            bitField0_ |= 0x00000001;
            onChanged();
            return getLayerCommonFieldBuilder().getBuilder();
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder getLayerCommonOrBuilder() {
            if (layerCommonBuilder_ != null) {
              return layerCommonBuilder_.getMessageOrBuilder();
            } else {
              return layerCommon_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
            }
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder> 
              getLayerCommonFieldBuilder() {
            if (layerCommonBuilder_ == null) {
              layerCommonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder>(
                      getLayerCommon(),
                      getParentForChildren(),
                      isClean());
              layerCommon_ = null;
            }
            return layerCommonBuilder_;
          }

          private java.lang.Object videoPath_ = "";
          /**
           * <code>optional string video_path = 101;</code>
           * @return Whether the videoPath field is set.
           */
          public boolean hasVideoPath() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional string video_path = 101;</code>
           * @return The videoPath.
           */
          public java.lang.String getVideoPath() {
            java.lang.Object ref = videoPath_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                videoPath_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string video_path = 101;</code>
           * @return The bytes for videoPath.
           */
          public com.google.protobuf.ByteString
              getVideoPathBytes() {
            java.lang.Object ref = videoPath_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              videoPath_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string video_path = 101;</code>
           * @param value The videoPath to set.
           * @return This builder for chaining.
           */
          public Builder setVideoPath(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            videoPath_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string video_path = 101;</code>
           * @return This builder for chaining.
           */
          public Builder clearVideoPath() {
            bitField0_ = (bitField0_ & ~0x00000002);
            videoPath_ = getDefaultInstance().getVideoPath();
            onChanged();
            return this;
          }
          /**
           * <code>optional string video_path = 101;</code>
           * @param value The bytes for videoPath to set.
           * @return This builder for chaining.
           */
          public Builder setVideoPathBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            videoPath_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object videoMsid_ = "";
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string video_msid = 102;</code>
           * @return Whether the videoMsid field is set.
           */
          public boolean hasVideoMsid() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string video_msid = 102;</code>
           * @return The videoMsid.
           */
          public java.lang.String getVideoMsid() {
            java.lang.Object ref = videoMsid_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                videoMsid_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string video_msid = 102;</code>
           * @return The bytes for videoMsid.
           */
          public com.google.protobuf.ByteString
              getVideoMsidBytes() {
            java.lang.Object ref = videoMsid_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              videoMsid_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string video_msid = 102;</code>
           * @param value The videoMsid to set.
           * @return This builder for chaining.
           */
          public Builder setVideoMsid(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
            videoMsid_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string video_msid = 102;</code>
           * @return This builder for chaining.
           */
          public Builder clearVideoMsid() {
            bitField0_ = (bitField0_ & ~0x00000004);
            videoMsid_ = getDefaultInstance().getVideoMsid();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string video_msid = 102;</code>
           * @param value The bytes for videoMsid to set.
           * @return This builder for chaining.
           */
          public Builder setVideoMsidBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
            videoMsid_ = value;
            onChanged();
            return this;
          }

          private int brightness_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 brightness = 103;</code>
           * @return Whether the brightness field is set.
           */
          @java.lang.Override
          public boolean hasBrightness() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 brightness = 103;</code>
           * @return The brightness.
           */
          @java.lang.Override
          public int getBrightness() {
            return brightness_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 brightness = 103;</code>
           * @param value The brightness to set.
           * @return This builder for chaining.
           */
          public Builder setBrightness(int value) {
            bitField0_ |= 0x00000008;
            brightness_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 brightness = 103;</code>
           * @return This builder for chaining.
           */
          public Builder clearBrightness() {
            bitField0_ = (bitField0_ & ~0x00000008);
            brightness_ = 0;
            onChanged();
            return this;
          }

          private int contrast_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 contrast = 104;</code>
           * @return Whether the contrast field is set.
           */
          @java.lang.Override
          public boolean hasContrast() {
            return ((bitField0_ & 0x00000010) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 contrast = 104;</code>
           * @return The contrast.
           */
          @java.lang.Override
          public int getContrast() {
            return contrast_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 contrast = 104;</code>
           * @param value The contrast to set.
           * @return This builder for chaining.
           */
          public Builder setContrast(int value) {
            bitField0_ |= 0x00000010;
            contrast_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 contrast = 104;</code>
           * @return This builder for chaining.
           */
          public Builder clearContrast() {
            bitField0_ = (bitField0_ & ~0x00000010);
            contrast_ = 0;
            onChanged();
            return this;
          }

          private int saturation_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 saturation = 105;</code>
           * @return Whether the saturation field is set.
           */
          @java.lang.Override
          public boolean hasSaturation() {
            return ((bitField0_ & 0x00000020) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 saturation = 105;</code>
           * @return The saturation.
           */
          @java.lang.Override
          public int getSaturation() {
            return saturation_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 saturation = 105;</code>
           * @param value The saturation to set.
           * @return This builder for chaining.
           */
          public Builder setSaturation(int value) {
            bitField0_ |= 0x00000020;
            saturation_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 saturation = 105;</code>
           * @return This builder for chaining.
           */
          public Builder clearSaturation() {
            bitField0_ = (bitField0_ & ~0x00000020);
            saturation_ = 0;
            onChanged();
            return this;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect colorEffect_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffectOrBuilder> colorEffectBuilder_;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
           * @return Whether the colorEffect field is set.
           */
          public boolean hasColorEffect() {
            return ((bitField0_ & 0x00000040) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
           * @return The colorEffect.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect getColorEffect() {
            if (colorEffectBuilder_ == null) {
              return colorEffect_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.getDefaultInstance() : colorEffect_;
            } else {
              return colorEffectBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
           */
          public Builder setColorEffect(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect value) {
            if (colorEffectBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              colorEffect_ = value;
              onChanged();
            } else {
              colorEffectBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000040;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
           */
          public Builder setColorEffect(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.Builder builderForValue) {
            if (colorEffectBuilder_ == null) {
              colorEffect_ = builderForValue.build();
              onChanged();
            } else {
              colorEffectBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000040;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
           */
          public Builder mergeColorEffect(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect value) {
            if (colorEffectBuilder_ == null) {
              if (((bitField0_ & 0x00000040) != 0) &&
                  colorEffect_ != null &&
                  colorEffect_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.getDefaultInstance()) {
                colorEffect_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.newBuilder(colorEffect_).mergeFrom(value).buildPartial();
              } else {
                colorEffect_ = value;
              }
              onChanged();
            } else {
              colorEffectBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000040;
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
           */
          public Builder clearColorEffect() {
            if (colorEffectBuilder_ == null) {
              colorEffect_ = null;
              onChanged();
            } else {
              colorEffectBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000040);
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.Builder getColorEffectBuilder() {
            bitField0_ |= 0x00000040;
            onChanged();
            return getColorEffectFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffectOrBuilder getColorEffectOrBuilder() {
            if (colorEffectBuilder_ != null) {
              return colorEffectBuilder_.getMessageOrBuilder();
            } else {
              return colorEffect_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.getDefaultInstance() : colorEffect_;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional .KMProto.KMProject.ColorEffect color_effect = 106;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffectOrBuilder> 
              getColorEffectFieldBuilder() {
            if (colorEffectBuilder_ == null) {
              colorEffectBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffectOrBuilder>(
                      getColorEffect(),
                      getParentForChildren(),
                      isClean());
              colorEffect_ = null;
            }
            return colorEffectBuilder_;
          }

          private int engineClipId_ ;
          /**
           * <code>optional int32 engine_clip_id = 107;</code>
           * @return Whether the engineClipId field is set.
           */
          @java.lang.Override
          public boolean hasEngineClipId() {
            return ((bitField0_ & 0x00000080) != 0);
          }
          /**
           * <code>optional int32 engine_clip_id = 107;</code>
           * @return The engineClipId.
           */
          @java.lang.Override
          public int getEngineClipId() {
            return engineClipId_;
          }
          /**
           * <code>optional int32 engine_clip_id = 107;</code>
           * @param value The engineClipId to set.
           * @return This builder for chaining.
           */
          public Builder setEngineClipId(int value) {
            bitField0_ |= 0x00000080;
            engineClipId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 engine_clip_id = 107;</code>
           * @return This builder for chaining.
           */
          public Builder clearEngineClipId() {
            bitField0_ = (bitField0_ & ~0x00000080);
            engineClipId_ = 0;
            onChanged();
            return this;
          }

          private int originalClipDuration_ ;
          /**
           * <code>optional int32 original_clip_duration = 108;</code>
           * @return Whether the originalClipDuration field is set.
           */
          @java.lang.Override
          public boolean hasOriginalClipDuration() {
            return ((bitField0_ & 0x00000100) != 0);
          }
          /**
           * <code>optional int32 original_clip_duration = 108;</code>
           * @return The originalClipDuration.
           */
          @java.lang.Override
          public int getOriginalClipDuration() {
            return originalClipDuration_;
          }
          /**
           * <code>optional int32 original_clip_duration = 108;</code>
           * @param value The originalClipDuration to set.
           * @return This builder for chaining.
           */
          public Builder setOriginalClipDuration(int value) {
            bitField0_ |= 0x00000100;
            originalClipDuration_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 original_clip_duration = 108;</code>
           * @return This builder for chaining.
           */
          public Builder clearOriginalClipDuration() {
            bitField0_ = (bitField0_ & ~0x00000100);
            originalClipDuration_ = 0;
            onChanged();
            return this;
          }

          private int originalVideoWidth_ ;
          /**
           * <code>optional int32 original_video_width = 109;</code>
           * @return Whether the originalVideoWidth field is set.
           */
          @java.lang.Override
          public boolean hasOriginalVideoWidth() {
            return ((bitField0_ & 0x00000200) != 0);
          }
          /**
           * <code>optional int32 original_video_width = 109;</code>
           * @return The originalVideoWidth.
           */
          @java.lang.Override
          public int getOriginalVideoWidth() {
            return originalVideoWidth_;
          }
          /**
           * <code>optional int32 original_video_width = 109;</code>
           * @param value The originalVideoWidth to set.
           * @return This builder for chaining.
           */
          public Builder setOriginalVideoWidth(int value) {
            bitField0_ |= 0x00000200;
            originalVideoWidth_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 original_video_width = 109;</code>
           * @return This builder for chaining.
           */
          public Builder clearOriginalVideoWidth() {
            bitField0_ = (bitField0_ & ~0x00000200);
            originalVideoWidth_ = 0;
            onChanged();
            return this;
          }

          private int originalVideoHeight_ ;
          /**
           * <code>optional int32 original_video_height = 110;</code>
           * @return Whether the originalVideoHeight field is set.
           */
          @java.lang.Override
          public boolean hasOriginalVideoHeight() {
            return ((bitField0_ & 0x00000400) != 0);
          }
          /**
           * <code>optional int32 original_video_height = 110;</code>
           * @return The originalVideoHeight.
           */
          @java.lang.Override
          public int getOriginalVideoHeight() {
            return originalVideoHeight_;
          }
          /**
           * <code>optional int32 original_video_height = 110;</code>
           * @param value The originalVideoHeight to set.
           * @return This builder for chaining.
           */
          public Builder setOriginalVideoHeight(int value) {
            bitField0_ |= 0x00000400;
            originalVideoHeight_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 original_video_height = 110;</code>
           * @return This builder for chaining.
           */
          public Builder clearOriginalVideoHeight() {
            bitField0_ = (bitField0_ & ~0x00000400);
            originalVideoHeight_ = 0;
            onChanged();
            return this;
          }

          private boolean hasAudio_ ;
          /**
           * <code>optional bool has_audio = 111;</code>
           * @return Whether the hasAudio field is set.
           */
          @java.lang.Override
          public boolean hasHasAudio() {
            return ((bitField0_ & 0x00000800) != 0);
          }
          /**
           * <code>optional bool has_audio = 111;</code>
           * @return The hasAudio.
           */
          @java.lang.Override
          public boolean getHasAudio() {
            return hasAudio_;
          }
          /**
           * <code>optional bool has_audio = 111;</code>
           * @param value The hasAudio to set.
           * @return This builder for chaining.
           */
          public Builder setHasAudio(boolean value) {
            bitField0_ |= 0x00000800;
            hasAudio_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool has_audio = 111;</code>
           * @return This builder for chaining.
           */
          public Builder clearHasAudio() {
            bitField0_ = (bitField0_ & ~0x00000800);
            hasAudio_ = false;
            onChanged();
            return this;
          }

          private boolean hasVideo_ ;
          /**
           * <code>optional bool has_video = 112;</code>
           * @return Whether the hasVideo field is set.
           */
          @java.lang.Override
          public boolean hasHasVideo() {
            return ((bitField0_ & 0x00001000) != 0);
          }
          /**
           * <code>optional bool has_video = 112;</code>
           * @return The hasVideo.
           */
          @java.lang.Override
          public boolean getHasVideo() {
            return hasVideo_;
          }
          /**
           * <code>optional bool has_video = 112;</code>
           * @param value The hasVideo to set.
           * @return This builder for chaining.
           */
          public Builder setHasVideo(boolean value) {
            bitField0_ |= 0x00001000;
            hasVideo_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool has_video = 112;</code>
           * @return This builder for chaining.
           */
          public Builder clearHasVideo() {
            bitField0_ = (bitField0_ & ~0x00001000);
            hasVideo_ = false;
            onChanged();
            return this;
          }

          private boolean muteAudio_ ;
          /**
           * <code>optional bool mute_audio = 113;</code>
           * @return Whether the muteAudio field is set.
           */
          @java.lang.Override
          public boolean hasMuteAudio() {
            return ((bitField0_ & 0x00002000) != 0);
          }
          /**
           * <code>optional bool mute_audio = 113;</code>
           * @return The muteAudio.
           */
          @java.lang.Override
          public boolean getMuteAudio() {
            return muteAudio_;
          }
          /**
           * <code>optional bool mute_audio = 113;</code>
           * @param value The muteAudio to set.
           * @return This builder for chaining.
           */
          public Builder setMuteAudio(boolean value) {
            bitField0_ |= 0x00002000;
            muteAudio_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool mute_audio = 113;</code>
           * @return This builder for chaining.
           */
          public Builder clearMuteAudio() {
            bitField0_ = (bitField0_ & ~0x00002000);
            muteAudio_ = false;
            onChanged();
            return this;
          }

          private int clipVolume_ ;
          /**
           * <code>optional int32 clip_volume = 114;</code>
           * @return Whether the clipVolume field is set.
           */
          @java.lang.Override
          public boolean hasClipVolume() {
            return ((bitField0_ & 0x00004000) != 0);
          }
          /**
           * <code>optional int32 clip_volume = 114;</code>
           * @return The clipVolume.
           */
          @java.lang.Override
          public int getClipVolume() {
            return clipVolume_;
          }
          /**
           * <code>optional int32 clip_volume = 114;</code>
           * @param value The clipVolume to set.
           * @return This builder for chaining.
           */
          public Builder setClipVolume(int value) {
            bitField0_ |= 0x00004000;
            clipVolume_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 clip_volume = 114;</code>
           * @return This builder for chaining.
           */
          public Builder clearClipVolume() {
            bitField0_ = (bitField0_ & ~0x00004000);
            clipVolume_ = 0;
            onChanged();
            return this;
          }

          private int playbackSpeed_ ;
          /**
           * <code>optional int32 playback_speed = 115;</code>
           * @return Whether the playbackSpeed field is set.
           */
          @java.lang.Override
          public boolean hasPlaybackSpeed() {
            return ((bitField0_ & 0x00008000) != 0);
          }
          /**
           * <code>optional int32 playback_speed = 115;</code>
           * @return The playbackSpeed.
           */
          @java.lang.Override
          public int getPlaybackSpeed() {
            return playbackSpeed_;
          }
          /**
           * <code>optional int32 playback_speed = 115;</code>
           * @param value The playbackSpeed to set.
           * @return This builder for chaining.
           */
          public Builder setPlaybackSpeed(int value) {
            bitField0_ |= 0x00008000;
            playbackSpeed_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 playback_speed = 115;</code>
           * @return This builder for chaining.
           */
          public Builder clearPlaybackSpeed() {
            bitField0_ = (bitField0_ & ~0x00008000);
            playbackSpeed_ = 0;
            onChanged();
            return this;
          }

          private com.google.protobuf.Internal.IntList volumeEnvelopeTime_ = emptyIntList();
          private void ensureVolumeEnvelopeTimeIsMutable() {
            if (!((bitField0_ & 0x00010000) != 0)) {
              volumeEnvelopeTime_ = mutableCopy(volumeEnvelopeTime_);
              bitField0_ |= 0x00010000;
             }
          }
          /**
           * <code>repeated int32 volume_envelope_time = 116 [packed = true];</code>
           * @return A list containing the volumeEnvelopeTime.
           */
          public java.util.List<java.lang.Integer>
              getVolumeEnvelopeTimeList() {
            return ((bitField0_ & 0x00010000) != 0) ?
                     java.util.Collections.unmodifiableList(volumeEnvelopeTime_) : volumeEnvelopeTime_;
          }
          /**
           * <code>repeated int32 volume_envelope_time = 116 [packed = true];</code>
           * @return The count of volumeEnvelopeTime.
           */
          public int getVolumeEnvelopeTimeCount() {
            return volumeEnvelopeTime_.size();
          }
          /**
           * <code>repeated int32 volume_envelope_time = 116 [packed = true];</code>
           * @param index The index of the element to return.
           * @return The volumeEnvelopeTime at the given index.
           */
          public int getVolumeEnvelopeTime(int index) {
            return volumeEnvelopeTime_.getInt(index);
          }
          /**
           * <code>repeated int32 volume_envelope_time = 116 [packed = true];</code>
           * @param index The index to set the value at.
           * @param value The volumeEnvelopeTime to set.
           * @return This builder for chaining.
           */
          public Builder setVolumeEnvelopeTime(
              int index, int value) {
            ensureVolumeEnvelopeTimeIsMutable();
            volumeEnvelopeTime_.setInt(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated int32 volume_envelope_time = 116 [packed = true];</code>
           * @param value The volumeEnvelopeTime to add.
           * @return This builder for chaining.
           */
          public Builder addVolumeEnvelopeTime(int value) {
            ensureVolumeEnvelopeTimeIsMutable();
            volumeEnvelopeTime_.addInt(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated int32 volume_envelope_time = 116 [packed = true];</code>
           * @param values The volumeEnvelopeTime to add.
           * @return This builder for chaining.
           */
          public Builder addAllVolumeEnvelopeTime(
              java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureVolumeEnvelopeTimeIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, volumeEnvelopeTime_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated int32 volume_envelope_time = 116 [packed = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearVolumeEnvelopeTime() {
            volumeEnvelopeTime_ = emptyIntList();
            bitField0_ = (bitField0_ & ~0x00010000);
            onChanged();
            return this;
          }

          private com.google.protobuf.Internal.IntList volumeEnvelopeLevel_ = emptyIntList();
          private void ensureVolumeEnvelopeLevelIsMutable() {
            if (!((bitField0_ & 0x00020000) != 0)) {
              volumeEnvelopeLevel_ = mutableCopy(volumeEnvelopeLevel_);
              bitField0_ |= 0x00020000;
             }
          }
          /**
           * <code>repeated int32 volume_envelope_level = 117 [packed = true];</code>
           * @return A list containing the volumeEnvelopeLevel.
           */
          public java.util.List<java.lang.Integer>
              getVolumeEnvelopeLevelList() {
            return ((bitField0_ & 0x00020000) != 0) ?
                     java.util.Collections.unmodifiableList(volumeEnvelopeLevel_) : volumeEnvelopeLevel_;
          }
          /**
           * <code>repeated int32 volume_envelope_level = 117 [packed = true];</code>
           * @return The count of volumeEnvelopeLevel.
           */
          public int getVolumeEnvelopeLevelCount() {
            return volumeEnvelopeLevel_.size();
          }
          /**
           * <code>repeated int32 volume_envelope_level = 117 [packed = true];</code>
           * @param index The index of the element to return.
           * @return The volumeEnvelopeLevel at the given index.
           */
          public int getVolumeEnvelopeLevel(int index) {
            return volumeEnvelopeLevel_.getInt(index);
          }
          /**
           * <code>repeated int32 volume_envelope_level = 117 [packed = true];</code>
           * @param index The index to set the value at.
           * @param value The volumeEnvelopeLevel to set.
           * @return This builder for chaining.
           */
          public Builder setVolumeEnvelopeLevel(
              int index, int value) {
            ensureVolumeEnvelopeLevelIsMutable();
            volumeEnvelopeLevel_.setInt(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated int32 volume_envelope_level = 117 [packed = true];</code>
           * @param value The volumeEnvelopeLevel to add.
           * @return This builder for chaining.
           */
          public Builder addVolumeEnvelopeLevel(int value) {
            ensureVolumeEnvelopeLevelIsMutable();
            volumeEnvelopeLevel_.addInt(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated int32 volume_envelope_level = 117 [packed = true];</code>
           * @param values The volumeEnvelopeLevel to add.
           * @return This builder for chaining.
           */
          public Builder addAllVolumeEnvelopeLevel(
              java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureVolumeEnvelopeLevelIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, volumeEnvelopeLevel_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated int32 volume_envelope_level = 117 [packed = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearVolumeEnvelopeLevel() {
            volumeEnvelopeLevel_ = emptyIntList();
            bitField0_ = (bitField0_ & ~0x00020000);
            onChanged();
            return this;
          }

          private com.google.protobuf.Internal.FloatList chromaKeyDivisions_ = emptyFloatList();
          private void ensureChromaKeyDivisionsIsMutable() {
            if (!((bitField0_ & 0x00040000) != 0)) {
              chromaKeyDivisions_ = mutableCopy(chromaKeyDivisions_);
              bitField0_ |= 0x00040000;
             }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated float chroma_key_divisions = 1 [packed = true];</code>
           * @return A list containing the chromaKeyDivisions.
           */
          public java.util.List<java.lang.Float>
              getChromaKeyDivisionsList() {
            return ((bitField0_ & 0x00040000) != 0) ?
                     java.util.Collections.unmodifiableList(chromaKeyDivisions_) : chromaKeyDivisions_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated float chroma_key_divisions = 1 [packed = true];</code>
           * @return The count of chromaKeyDivisions.
           */
          public int getChromaKeyDivisionsCount() {
            return chromaKeyDivisions_.size();
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated float chroma_key_divisions = 1 [packed = true];</code>
           * @param index The index of the element to return.
           * @return The chromaKeyDivisions at the given index.
           */
          public float getChromaKeyDivisions(int index) {
            return chromaKeyDivisions_.getFloat(index);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated float chroma_key_divisions = 1 [packed = true];</code>
           * @param index The index to set the value at.
           * @param value The chromaKeyDivisions to set.
           * @return This builder for chaining.
           */
          public Builder setChromaKeyDivisions(
              int index, float value) {
            ensureChromaKeyDivisionsIsMutable();
            chromaKeyDivisions_.setFloat(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated float chroma_key_divisions = 1 [packed = true];</code>
           * @param value The chromaKeyDivisions to add.
           * @return This builder for chaining.
           */
          public Builder addChromaKeyDivisions(float value) {
            ensureChromaKeyDivisionsIsMutable();
            chromaKeyDivisions_.addFloat(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated float chroma_key_divisions = 1 [packed = true];</code>
           * @param values The chromaKeyDivisions to add.
           * @return This builder for chaining.
           */
          public Builder addAllChromaKeyDivisions(
              java.lang.Iterable<? extends java.lang.Float> values) {
            ensureChromaKeyDivisionsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, chromaKeyDivisions_);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated float chroma_key_divisions = 1 [packed = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearChromaKeyDivisions() {
            chromaKeyDivisions_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00040000);
            onChanged();
            return this;
          }

          private com.google.protobuf.Internal.FloatList chromaKeyStrengths_ = emptyFloatList();
          private void ensureChromaKeyStrengthsIsMutable() {
            if (!((bitField0_ & 0x00080000) != 0)) {
              chromaKeyStrengths_ = mutableCopy(chromaKeyStrengths_);
              bitField0_ |= 0x00080000;
             }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated float chroma_key_strengths = 2 [packed = true];</code>
           * @return A list containing the chromaKeyStrengths.
           */
          public java.util.List<java.lang.Float>
              getChromaKeyStrengthsList() {
            return ((bitField0_ & 0x00080000) != 0) ?
                     java.util.Collections.unmodifiableList(chromaKeyStrengths_) : chromaKeyStrengths_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated float chroma_key_strengths = 2 [packed = true];</code>
           * @return The count of chromaKeyStrengths.
           */
          public int getChromaKeyStrengthsCount() {
            return chromaKeyStrengths_.size();
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated float chroma_key_strengths = 2 [packed = true];</code>
           * @param index The index of the element to return.
           * @return The chromaKeyStrengths at the given index.
           */
          public float getChromaKeyStrengths(int index) {
            return chromaKeyStrengths_.getFloat(index);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated float chroma_key_strengths = 2 [packed = true];</code>
           * @param index The index to set the value at.
           * @param value The chromaKeyStrengths to set.
           * @return This builder for chaining.
           */
          public Builder setChromaKeyStrengths(
              int index, float value) {
            ensureChromaKeyStrengthsIsMutable();
            chromaKeyStrengths_.setFloat(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated float chroma_key_strengths = 2 [packed = true];</code>
           * @param value The chromaKeyStrengths to add.
           * @return This builder for chaining.
           */
          public Builder addChromaKeyStrengths(float value) {
            ensureChromaKeyStrengthsIsMutable();
            chromaKeyStrengths_.addFloat(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated float chroma_key_strengths = 2 [packed = true];</code>
           * @param values The chromaKeyStrengths to add.
           * @return This builder for chaining.
           */
          public Builder addAllChromaKeyStrengths(
              java.lang.Iterable<? extends java.lang.Float> values) {
            ensureChromaKeyStrengthsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, chromaKeyStrengths_);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>repeated float chroma_key_strengths = 2 [packed = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearChromaKeyStrengths() {
            chromaKeyStrengths_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00080000);
            onChanged();
            return this;
          }

          private int chromaKeyColor_ ;
          /**
           * <code>optional int32 chroma_key_color = 118;</code>
           * @return Whether the chromaKeyColor field is set.
           */
          @java.lang.Override
          public boolean hasChromaKeyColor() {
            return ((bitField0_ & 0x00100000) != 0);
          }
          /**
           * <code>optional int32 chroma_key_color = 118;</code>
           * @return The chromaKeyColor.
           */
          @java.lang.Override
          public int getChromaKeyColor() {
            return chromaKeyColor_;
          }
          /**
           * <code>optional int32 chroma_key_color = 118;</code>
           * @param value The chromaKeyColor to set.
           * @return This builder for chaining.
           */
          public Builder setChromaKeyColor(int value) {
            bitField0_ |= 0x00100000;
            chromaKeyColor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 chroma_key_color = 118;</code>
           * @return This builder for chaining.
           */
          public Builder clearChromaKeyColor() {
            bitField0_ = (bitField0_ & ~0x00100000);
            chromaKeyColor_ = 0;
            onChanged();
            return this;
          }

          private boolean chromaKeyEnabled_ ;
          /**
           * <code>optional bool chroma_key_enabled = 119;</code>
           * @return Whether the chromaKeyEnabled field is set.
           */
          @java.lang.Override
          public boolean hasChromaKeyEnabled() {
            return ((bitField0_ & 0x00200000) != 0);
          }
          /**
           * <code>optional bool chroma_key_enabled = 119;</code>
           * @return The chromaKeyEnabled.
           */
          @java.lang.Override
          public boolean getChromaKeyEnabled() {
            return chromaKeyEnabled_;
          }
          /**
           * <code>optional bool chroma_key_enabled = 119;</code>
           * @param value The chromaKeyEnabled to set.
           * @return This builder for chaining.
           */
          public Builder setChromaKeyEnabled(boolean value) {
            bitField0_ |= 0x00200000;
            chromaKeyEnabled_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool chroma_key_enabled = 119;</code>
           * @return This builder for chaining.
           */
          public Builder clearChromaKeyEnabled() {
            bitField0_ = (bitField0_ & ~0x00200000);
            chromaKeyEnabled_ = false;
            onChanged();
            return this;
          }

          private float chromaKeyClipFg_ ;
          /**
           * <code>optional float chroma_key_clip_fg = 120;</code>
           * @return Whether the chromaKeyClipFg field is set.
           */
          @java.lang.Override
          public boolean hasChromaKeyClipFg() {
            return ((bitField0_ & 0x00400000) != 0);
          }
          /**
           * <code>optional float chroma_key_clip_fg = 120;</code>
           * @return The chromaKeyClipFg.
           */
          @java.lang.Override
          public float getChromaKeyClipFg() {
            return chromaKeyClipFg_;
          }
          /**
           * <code>optional float chroma_key_clip_fg = 120;</code>
           * @param value The chromaKeyClipFg to set.
           * @return This builder for chaining.
           */
          public Builder setChromaKeyClipFg(float value) {
            bitField0_ |= 0x00400000;
            chromaKeyClipFg_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float chroma_key_clip_fg = 120;</code>
           * @return This builder for chaining.
           */
          public Builder clearChromaKeyClipFg() {
            bitField0_ = (bitField0_ & ~0x00400000);
            chromaKeyClipFg_ = 0F;
            onChanged();
            return this;
          }

          private float chromaKeyClipBg_ ;
          /**
           * <code>optional float chroma_key_clip_bg = 121;</code>
           * @return Whether the chromaKeyClipBg field is set.
           */
          @java.lang.Override
          public boolean hasChromaKeyClipBg() {
            return ((bitField0_ & 0x00800000) != 0);
          }
          /**
           * <code>optional float chroma_key_clip_bg = 121;</code>
           * @return The chromaKeyClipBg.
           */
          @java.lang.Override
          public float getChromaKeyClipBg() {
            return chromaKeyClipBg_;
          }
          /**
           * <code>optional float chroma_key_clip_bg = 121;</code>
           * @param value The chromaKeyClipBg to set.
           * @return This builder for chaining.
           */
          public Builder setChromaKeyClipBg(float value) {
            bitField0_ |= 0x00800000;
            chromaKeyClipBg_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float chroma_key_clip_bg = 121;</code>
           * @return This builder for chaining.
           */
          public Builder clearChromaKeyClipBg() {
            bitField0_ = (bitField0_ & ~0x00800000);
            chromaKeyClipBg_ = 0F;
            onChanged();
            return this;
          }

          private float chromaKeyBlendX0_ ;
          /**
           * <code>optional float chroma_key_blend_x0 = 122;</code>
           * @return Whether the chromaKeyBlendX0 field is set.
           */
          @java.lang.Override
          public boolean hasChromaKeyBlendX0() {
            return ((bitField0_ & 0x01000000) != 0);
          }
          /**
           * <code>optional float chroma_key_blend_x0 = 122;</code>
           * @return The chromaKeyBlendX0.
           */
          @java.lang.Override
          public float getChromaKeyBlendX0() {
            return chromaKeyBlendX0_;
          }
          /**
           * <code>optional float chroma_key_blend_x0 = 122;</code>
           * @param value The chromaKeyBlendX0 to set.
           * @return This builder for chaining.
           */
          public Builder setChromaKeyBlendX0(float value) {
            bitField0_ |= 0x01000000;
            chromaKeyBlendX0_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float chroma_key_blend_x0 = 122;</code>
           * @return This builder for chaining.
           */
          public Builder clearChromaKeyBlendX0() {
            bitField0_ = (bitField0_ & ~0x01000000);
            chromaKeyBlendX0_ = 0F;
            onChanged();
            return this;
          }

          private float chromaKeyBlendY0_ ;
          /**
           * <code>optional float chroma_key_blend_y0 = 123;</code>
           * @return Whether the chromaKeyBlendY0 field is set.
           */
          @java.lang.Override
          public boolean hasChromaKeyBlendY0() {
            return ((bitField0_ & 0x02000000) != 0);
          }
          /**
           * <code>optional float chroma_key_blend_y0 = 123;</code>
           * @return The chromaKeyBlendY0.
           */
          @java.lang.Override
          public float getChromaKeyBlendY0() {
            return chromaKeyBlendY0_;
          }
          /**
           * <code>optional float chroma_key_blend_y0 = 123;</code>
           * @param value The chromaKeyBlendY0 to set.
           * @return This builder for chaining.
           */
          public Builder setChromaKeyBlendY0(float value) {
            bitField0_ |= 0x02000000;
            chromaKeyBlendY0_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float chroma_key_blend_y0 = 123;</code>
           * @return This builder for chaining.
           */
          public Builder clearChromaKeyBlendY0() {
            bitField0_ = (bitField0_ & ~0x02000000);
            chromaKeyBlendY0_ = 0F;
            onChanged();
            return this;
          }

          private float chromaKeyBlendX1_ ;
          /**
           * <code>optional float chroma_key_blend_x1 = 124;</code>
           * @return Whether the chromaKeyBlendX1 field is set.
           */
          @java.lang.Override
          public boolean hasChromaKeyBlendX1() {
            return ((bitField0_ & 0x04000000) != 0);
          }
          /**
           * <code>optional float chroma_key_blend_x1 = 124;</code>
           * @return The chromaKeyBlendX1.
           */
          @java.lang.Override
          public float getChromaKeyBlendX1() {
            return chromaKeyBlendX1_;
          }
          /**
           * <code>optional float chroma_key_blend_x1 = 124;</code>
           * @param value The chromaKeyBlendX1 to set.
           * @return This builder for chaining.
           */
          public Builder setChromaKeyBlendX1(float value) {
            bitField0_ |= 0x04000000;
            chromaKeyBlendX1_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float chroma_key_blend_x1 = 124;</code>
           * @return This builder for chaining.
           */
          public Builder clearChromaKeyBlendX1() {
            bitField0_ = (bitField0_ & ~0x04000000);
            chromaKeyBlendX1_ = 0F;
            onChanged();
            return this;
          }

          private float chromaKeyBlendY1_ ;
          /**
           * <code>optional float chroma_key_blend_y1 = 125;</code>
           * @return Whether the chromaKeyBlendY1 field is set.
           */
          @java.lang.Override
          public boolean hasChromaKeyBlendY1() {
            return ((bitField0_ & 0x08000000) != 0);
          }
          /**
           * <code>optional float chroma_key_blend_y1 = 125;</code>
           * @return The chromaKeyBlendY1.
           */
          @java.lang.Override
          public float getChromaKeyBlendY1() {
            return chromaKeyBlendY1_;
          }
          /**
           * <code>optional float chroma_key_blend_y1 = 125;</code>
           * @param value The chromaKeyBlendY1 to set.
           * @return This builder for chaining.
           */
          public Builder setChromaKeyBlendY1(float value) {
            bitField0_ |= 0x08000000;
            chromaKeyBlendY1_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float chroma_key_blend_y1 = 125;</code>
           * @return This builder for chaining.
           */
          public Builder clearChromaKeyBlendY1() {
            bitField0_ = (bitField0_ & ~0x08000000);
            chromaKeyBlendY1_ = 0F;
            onChanged();
            return this;
          }

          private int voiceChanger_ ;
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 voice_changer = 126;</code>
           * @return Whether the voiceChanger field is set.
           */
          @java.lang.Override
          public boolean hasVoiceChanger() {
            return ((bitField0_ & 0x10000000) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 voice_changer = 126;</code>
           * @return The voiceChanger.
           */
          @java.lang.Override
          public int getVoiceChanger() {
            return voiceChanger_;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 voice_changer = 126;</code>
           * @param value The voiceChanger to set.
           * @return This builder for chaining.
           */
          public Builder setVoiceChanger(int value) {
            bitField0_ |= 0x10000000;
            voiceChanger_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional int32 voice_changer = 126;</code>
           * @return This builder for chaining.
           */
          public Builder clearVoiceChanger() {
            bitField0_ = (bitField0_ & ~0x10000000);
            voiceChanger_ = 0;
            onChanged();
            return this;
          }

          private int panLeft_ ;
          /**
           * <code>optional int32 pan_left = 127;</code>
           * @return Whether the panLeft field is set.
           */
          @java.lang.Override
          public boolean hasPanLeft() {
            return ((bitField0_ & 0x20000000) != 0);
          }
          /**
           * <code>optional int32 pan_left = 127;</code>
           * @return The panLeft.
           */
          @java.lang.Override
          public int getPanLeft() {
            return panLeft_;
          }
          /**
           * <code>optional int32 pan_left = 127;</code>
           * @param value The panLeft to set.
           * @return This builder for chaining.
           */
          public Builder setPanLeft(int value) {
            bitField0_ |= 0x20000000;
            panLeft_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 pan_left = 127;</code>
           * @return This builder for chaining.
           */
          public Builder clearPanLeft() {
            bitField0_ = (bitField0_ & ~0x20000000);
            panLeft_ = 0;
            onChanged();
            return this;
          }

          private int panRight_ ;
          /**
           * <code>optional int32 pan_right = 128;</code>
           * @return Whether the panRight field is set.
           */
          @java.lang.Override
          public boolean hasPanRight() {
            return ((bitField0_ & 0x40000000) != 0);
          }
          /**
           * <code>optional int32 pan_right = 128;</code>
           * @return The panRight.
           */
          @java.lang.Override
          public int getPanRight() {
            return panRight_;
          }
          /**
           * <code>optional int32 pan_right = 128;</code>
           * @param value The panRight to set.
           * @return This builder for chaining.
           */
          public Builder setPanRight(int value) {
            bitField0_ |= 0x40000000;
            panRight_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 pan_right = 128;</code>
           * @return This builder for chaining.
           */
          public Builder clearPanRight() {
            bitField0_ = (bitField0_ & ~0x40000000);
            panRight_ = 0;
            onChanged();
            return this;
          }

          private int compressor_ ;
          /**
           * <pre>
           * 0: off, 4: on (default: 0)
           * </pre>
           *
           * <code>optional int32 compressor = 129;</code>
           * @return Whether the compressor field is set.
           */
          @java.lang.Override
          public boolean hasCompressor() {
            return ((bitField0_ & 0x80000000) != 0);
          }
          /**
           * <pre>
           * 0: off, 4: on (default: 0)
           * </pre>
           *
           * <code>optional int32 compressor = 129;</code>
           * @return The compressor.
           */
          @java.lang.Override
          public int getCompressor() {
            return compressor_;
          }
          /**
           * <pre>
           * 0: off, 4: on (default: 0)
           * </pre>
           *
           * <code>optional int32 compressor = 129;</code>
           * @param value The compressor to set.
           * @return This builder for chaining.
           */
          public Builder setCompressor(int value) {
            bitField0_ |= 0x80000000;
            compressor_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * 0: off, 4: on (default: 0)
           * </pre>
           *
           * <code>optional int32 compressor = 129;</code>
           * @return This builder for chaining.
           */
          public Builder clearCompressor() {
            bitField0_ = (bitField0_ & ~0x80000000);
            compressor_ = 0;
            onChanged();
            return this;
          }

          private int pitchFactor_ ;
          /**
           * <code>optional int32 pitch_factor = 130;</code>
           * @return Whether the pitchFactor field is set.
           */
          @java.lang.Override
          public boolean hasPitchFactor() {
            return ((bitField1_ & 0x00000001) != 0);
          }
          /**
           * <code>optional int32 pitch_factor = 130;</code>
           * @return The pitchFactor.
           */
          @java.lang.Override
          public int getPitchFactor() {
            return pitchFactor_;
          }
          /**
           * <code>optional int32 pitch_factor = 130;</code>
           * @param value The pitchFactor to set.
           * @return This builder for chaining.
           */
          public Builder setPitchFactor(int value) {
            bitField1_ |= 0x00000001;
            pitchFactor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 pitch_factor = 130;</code>
           * @return This builder for chaining.
           */
          public Builder clearPitchFactor() {
            bitField1_ = (bitField1_ & ~0x00000001);
            pitchFactor_ = 0;
            onChanged();
            return this;
          }

          private java.lang.Object iosMediaAssetId_ = "";
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string ios_media_asset_id = 131;</code>
           * @return Whether the iosMediaAssetId field is set.
           */
          public boolean hasIosMediaAssetId() {
            return ((bitField1_ & 0x00000002) != 0);
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string ios_media_asset_id = 131;</code>
           * @return The iosMediaAssetId.
           */
          public java.lang.String getIosMediaAssetId() {
            java.lang.Object ref = iosMediaAssetId_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                iosMediaAssetId_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string ios_media_asset_id = 131;</code>
           * @return The bytes for iosMediaAssetId.
           */
          public com.google.protobuf.ByteString
              getIosMediaAssetIdBytes() {
            java.lang.Object ref = iosMediaAssetId_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              iosMediaAssetId_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string ios_media_asset_id = 131;</code>
           * @param value The iosMediaAssetId to set.
           * @return This builder for chaining.
           */
          public Builder setIosMediaAssetId(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000002;
            iosMediaAssetId_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string ios_media_asset_id = 131;</code>
           * @return This builder for chaining.
           */
          public Builder clearIosMediaAssetId() {
            bitField1_ = (bitField1_ & ~0x00000002);
            iosMediaAssetId_ = getDefaultInstance().getIosMediaAssetId();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Deprecated 
           * </pre>
           *
           * <code>optional string ios_media_asset_id = 131;</code>
           * @param value The bytes for iosMediaAssetId to set.
           * @return This builder for chaining.
           */
          public Builder setIosMediaAssetIdBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000002;
            iosMediaAssetId_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object enhancedAudioFilter_ = "";
          /**
           * <code>optional string enhancedAudioFilter = 132;</code>
           * @return Whether the enhancedAudioFilter field is set.
           */
          public boolean hasEnhancedAudioFilter() {
            return ((bitField1_ & 0x00000004) != 0);
          }
          /**
           * <code>optional string enhancedAudioFilter = 132;</code>
           * @return The enhancedAudioFilter.
           */
          public java.lang.String getEnhancedAudioFilter() {
            java.lang.Object ref = enhancedAudioFilter_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                enhancedAudioFilter_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string enhancedAudioFilter = 132;</code>
           * @return The bytes for enhancedAudioFilter.
           */
          public com.google.protobuf.ByteString
              getEnhancedAudioFilterBytes() {
            java.lang.Object ref = enhancedAudioFilter_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              enhancedAudioFilter_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string enhancedAudioFilter = 132;</code>
           * @param value The enhancedAudioFilter to set.
           * @return This builder for chaining.
           */
          public Builder setEnhancedAudioFilter(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000004;
            enhancedAudioFilter_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string enhancedAudioFilter = 132;</code>
           * @return This builder for chaining.
           */
          public Builder clearEnhancedAudioFilter() {
            bitField1_ = (bitField1_ & ~0x00000004);
            enhancedAudioFilter_ = getDefaultInstance().getEnhancedAudioFilter();
            onChanged();
            return this;
          }
          /**
           * <code>optional string enhancedAudioFilter = 132;</code>
           * @param value The bytes for enhancedAudioFilter to set.
           * @return This builder for chaining.
           */
          public Builder setEnhancedAudioFilterBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000004;
            enhancedAudioFilter_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object equalizer_ = "";
          /**
           * <code>optional string equalizer = 133;</code>
           * @return Whether the equalizer field is set.
           */
          public boolean hasEqualizer() {
            return ((bitField1_ & 0x00000008) != 0);
          }
          /**
           * <code>optional string equalizer = 133;</code>
           * @return The equalizer.
           */
          public java.lang.String getEqualizer() {
            java.lang.Object ref = equalizer_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                equalizer_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string equalizer = 133;</code>
           * @return The bytes for equalizer.
           */
          public com.google.protobuf.ByteString
              getEqualizerBytes() {
            java.lang.Object ref = equalizer_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              equalizer_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string equalizer = 133;</code>
           * @param value The equalizer to set.
           * @return This builder for chaining.
           */
          public Builder setEqualizer(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000008;
            equalizer_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string equalizer = 133;</code>
           * @return This builder for chaining.
           */
          public Builder clearEqualizer() {
            bitField1_ = (bitField1_ & ~0x00000008);
            equalizer_ = getDefaultInstance().getEqualizer();
            onChanged();
            return this;
          }
          /**
           * <code>optional string equalizer = 133;</code>
           * @param value The bytes for equalizer to set.
           * @return This builder for chaining.
           */
          public Builder setEqualizerBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000008;
            equalizer_ = value;
            onChanged();
            return this;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange clipRange_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRangeOrBuilder> clipRangeBuilder_;
          /**
           * <code>optional .KMProto.KMProject.ClipRange clipRange = 134;</code>
           * @return Whether the clipRange field is set.
           */
          public boolean hasClipRange() {
            return ((bitField1_ & 0x00000010) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.ClipRange clipRange = 134;</code>
           * @return The clipRange.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange getClipRange() {
            if (clipRangeBuilder_ == null) {
              return clipRange_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.getDefaultInstance() : clipRange_;
            } else {
              return clipRangeBuilder_.getMessage();
            }
          }
          /**
           * <code>optional .KMProto.KMProject.ClipRange clipRange = 134;</code>
           */
          public Builder setClipRange(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange value) {
            if (clipRangeBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              clipRange_ = value;
              onChanged();
            } else {
              clipRangeBuilder_.setMessage(value);
            }
            bitField1_ |= 0x00000010;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ClipRange clipRange = 134;</code>
           */
          public Builder setClipRange(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.Builder builderForValue) {
            if (clipRangeBuilder_ == null) {
              clipRange_ = builderForValue.build();
              onChanged();
            } else {
              clipRangeBuilder_.setMessage(builderForValue.build());
            }
            bitField1_ |= 0x00000010;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ClipRange clipRange = 134;</code>
           */
          public Builder mergeClipRange(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange value) {
            if (clipRangeBuilder_ == null) {
              if (((bitField1_ & 0x00000010) != 0) &&
                  clipRange_ != null &&
                  clipRange_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.getDefaultInstance()) {
                clipRange_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.newBuilder(clipRange_).mergeFrom(value).buildPartial();
              } else {
                clipRange_ = value;
              }
              onChanged();
            } else {
              clipRangeBuilder_.mergeFrom(value);
            }
            bitField1_ |= 0x00000010;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ClipRange clipRange = 134;</code>
           */
          public Builder clearClipRange() {
            if (clipRangeBuilder_ == null) {
              clipRange_ = null;
              onChanged();
            } else {
              clipRangeBuilder_.clear();
            }
            bitField1_ = (bitField1_ & ~0x00000010);
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ClipRange clipRange = 134;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.Builder getClipRangeBuilder() {
            bitField1_ |= 0x00000010;
            onChanged();
            return getClipRangeFieldBuilder().getBuilder();
          }
          /**
           * <code>optional .KMProto.KMProject.ClipRange clipRange = 134;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRangeOrBuilder getClipRangeOrBuilder() {
            if (clipRangeBuilder_ != null) {
              return clipRangeBuilder_.getMessageOrBuilder();
            } else {
              return clipRange_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.getDefaultInstance() : clipRange_;
            }
          }
          /**
           * <code>optional .KMProto.KMProject.ClipRange clipRange = 134;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRangeOrBuilder> 
              getClipRangeFieldBuilder() {
            if (clipRangeBuilder_ == null) {
              clipRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRange.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ClipRangeOrBuilder>(
                      getClipRange(),
                      getParentForChildren(),
                      isClean());
              clipRange_ = null;
            }
            return clipRangeBuilder_;
          }

          private java.lang.Object reverb_ = "";
          /**
           * <code>optional string reverb = 135;</code>
           * @return Whether the reverb field is set.
           */
          public boolean hasReverb() {
            return ((bitField1_ & 0x00000020) != 0);
          }
          /**
           * <code>optional string reverb = 135;</code>
           * @return The reverb.
           */
          public java.lang.String getReverb() {
            java.lang.Object ref = reverb_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                reverb_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string reverb = 135;</code>
           * @return The bytes for reverb.
           */
          public com.google.protobuf.ByteString
              getReverbBytes() {
            java.lang.Object ref = reverb_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              reverb_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string reverb = 135;</code>
           * @param value The reverb to set.
           * @return This builder for chaining.
           */
          public Builder setReverb(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000020;
            reverb_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string reverb = 135;</code>
           * @return This builder for chaining.
           */
          public Builder clearReverb() {
            bitField1_ = (bitField1_ & ~0x00000020);
            reverb_ = getDefaultInstance().getReverb();
            onChanged();
            return this;
          }
          /**
           * <code>optional string reverb = 135;</code>
           * @param value The bytes for reverb to set.
           * @return This builder for chaining.
           */
          public Builder setReverbBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000020;
            reverb_ = value;
            onChanged();
            return this;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment colorAdjustment_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustmentOrBuilder> colorAdjustmentBuilder_;
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 136;</code>
           * @return Whether the colorAdjustment field is set.
           */
          public boolean hasColorAdjustment() {
            return ((bitField1_ & 0x00000040) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 136;</code>
           * @return The colorAdjustment.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment getColorAdjustment() {
            if (colorAdjustmentBuilder_ == null) {
              return colorAdjustment_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.getDefaultInstance() : colorAdjustment_;
            } else {
              return colorAdjustmentBuilder_.getMessage();
            }
          }
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 136;</code>
           */
          public Builder setColorAdjustment(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment value) {
            if (colorAdjustmentBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              colorAdjustment_ = value;
              onChanged();
            } else {
              colorAdjustmentBuilder_.setMessage(value);
            }
            bitField1_ |= 0x00000040;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 136;</code>
           */
          public Builder setColorAdjustment(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.Builder builderForValue) {
            if (colorAdjustmentBuilder_ == null) {
              colorAdjustment_ = builderForValue.build();
              onChanged();
            } else {
              colorAdjustmentBuilder_.setMessage(builderForValue.build());
            }
            bitField1_ |= 0x00000040;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 136;</code>
           */
          public Builder mergeColorAdjustment(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment value) {
            if (colorAdjustmentBuilder_ == null) {
              if (((bitField1_ & 0x00000040) != 0) &&
                  colorAdjustment_ != null &&
                  colorAdjustment_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.getDefaultInstance()) {
                colorAdjustment_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.newBuilder(colorAdjustment_).mergeFrom(value).buildPartial();
              } else {
                colorAdjustment_ = value;
              }
              onChanged();
            } else {
              colorAdjustmentBuilder_.mergeFrom(value);
            }
            bitField1_ |= 0x00000040;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 136;</code>
           */
          public Builder clearColorAdjustment() {
            if (colorAdjustmentBuilder_ == null) {
              colorAdjustment_ = null;
              onChanged();
            } else {
              colorAdjustmentBuilder_.clear();
            }
            bitField1_ = (bitField1_ & ~0x00000040);
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 136;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.Builder getColorAdjustmentBuilder() {
            bitField1_ |= 0x00000040;
            onChanged();
            return getColorAdjustmentFieldBuilder().getBuilder();
          }
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 136;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustmentOrBuilder getColorAdjustmentOrBuilder() {
            if (colorAdjustmentBuilder_ != null) {
              return colorAdjustmentBuilder_.getMessageOrBuilder();
            } else {
              return colorAdjustment_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.getDefaultInstance() : colorAdjustment_;
            }
          }
          /**
           * <code>optional .KMProto.KMProject.ColorAdjustment colorAdjustment = 136;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustmentOrBuilder> 
              getColorAdjustmentFieldBuilder() {
            if (colorAdjustmentBuilder_ == null) {
              colorAdjustmentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustmentOrBuilder>(
                      getColorAdjustment(),
                      getParentForChildren(),
                      isClean());
              colorAdjustment_ = null;
            }
            return colorAdjustmentBuilder_;
          }

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter colorFilter_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilterOrBuilder> colorFilterBuilder_;
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 137;</code>
           * @return Whether the colorFilter field is set.
           */
          public boolean hasColorFilter() {
            return ((bitField1_ & 0x00000080) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 137;</code>
           * @return The colorFilter.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter getColorFilter() {
            if (colorFilterBuilder_ == null) {
              return colorFilter_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.getDefaultInstance() : colorFilter_;
            } else {
              return colorFilterBuilder_.getMessage();
            }
          }
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 137;</code>
           */
          public Builder setColorFilter(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter value) {
            if (colorFilterBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              colorFilter_ = value;
              onChanged();
            } else {
              colorFilterBuilder_.setMessage(value);
            }
            bitField1_ |= 0x00000080;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 137;</code>
           */
          public Builder setColorFilter(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.Builder builderForValue) {
            if (colorFilterBuilder_ == null) {
              colorFilter_ = builderForValue.build();
              onChanged();
            } else {
              colorFilterBuilder_.setMessage(builderForValue.build());
            }
            bitField1_ |= 0x00000080;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 137;</code>
           */
          public Builder mergeColorFilter(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter value) {
            if (colorFilterBuilder_ == null) {
              if (((bitField1_ & 0x00000080) != 0) &&
                  colorFilter_ != null &&
                  colorFilter_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.getDefaultInstance()) {
                colorFilter_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.newBuilder(colorFilter_).mergeFrom(value).buildPartial();
              } else {
                colorFilter_ = value;
              }
              onChanged();
            } else {
              colorFilterBuilder_.mergeFrom(value);
            }
            bitField1_ |= 0x00000080;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 137;</code>
           */
          public Builder clearColorFilter() {
            if (colorFilterBuilder_ == null) {
              colorFilter_ = null;
              onChanged();
            } else {
              colorFilterBuilder_.clear();
            }
            bitField1_ = (bitField1_ & ~0x00000080);
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 137;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.Builder getColorFilterBuilder() {
            bitField1_ |= 0x00000080;
            onChanged();
            return getColorFilterFieldBuilder().getBuilder();
          }
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 137;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilterOrBuilder getColorFilterOrBuilder() {
            if (colorFilterBuilder_ != null) {
              return colorFilterBuilder_.getMessageOrBuilder();
            } else {
              return colorFilter_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.getDefaultInstance() : colorFilter_;
            }
          }
          /**
           * <code>optional .KMProto.KMProject.ColorFilter colorFilter = 137;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilterOrBuilder> 
              getColorFilterFieldBuilder() {
            if (colorFilterBuilder_ == null) {
              colorFilterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilterOrBuilder>(
                      getColorFilter(),
                      getParentForChildren(),
                      isClean());
              colorFilter_ = null;
            }
            return colorFilterBuilder_;
          }

          private boolean keepPitch_ ;
          /**
           * <code>optional bool keepPitch = 138;</code>
           * @return Whether the keepPitch field is set.
           */
          @java.lang.Override
          public boolean hasKeepPitch() {
            return ((bitField1_ & 0x00000100) != 0);
          }
          /**
           * <code>optional bool keepPitch = 138;</code>
           * @return The keepPitch.
           */
          @java.lang.Override
          public boolean getKeepPitch() {
            return keepPitch_;
          }
          /**
           * <code>optional bool keepPitch = 138;</code>
           * @param value The keepPitch to set.
           * @return This builder for chaining.
           */
          public Builder setKeepPitch(boolean value) {
            bitField1_ |= 0x00000100;
            keepPitch_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool keepPitch = 138;</code>
           * @return This builder for chaining.
           */
          public Builder clearKeepPitch() {
            bitField1_ = (bitField1_ & ~0x00000100);
            keepPitch_ = false;
            onChanged();
            return this;
          }

          private boolean useIFrameOnly_ ;
          /**
           * <code>optional bool useIFrameOnly = 139;</code>
           * @return Whether the useIFrameOnly field is set.
           */
          @java.lang.Override
          public boolean hasUseIFrameOnly() {
            return ((bitField1_ & 0x00000200) != 0);
          }
          /**
           * <code>optional bool useIFrameOnly = 139;</code>
           * @return The useIFrameOnly.
           */
          @java.lang.Override
          public boolean getUseIFrameOnly() {
            return useIFrameOnly_;
          }
          /**
           * <code>optional bool useIFrameOnly = 139;</code>
           * @param value The useIFrameOnly to set.
           * @return This builder for chaining.
           */
          public Builder setUseIFrameOnly(boolean value) {
            bitField1_ |= 0x00000200;
            useIFrameOnly_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool useIFrameOnly = 139;</code>
           * @return This builder for chaining.
           */
          public Builder clearUseIFrameOnly() {
            bitField1_ = (bitField1_ & ~0x00000200);
            useIFrameOnly_ = false;
            onChanged();
            return this;
          }

          private int uprightRotation_ ;
          /**
           * <pre>
           * 이미지 레이어 로드시 Orientation 이 적용된 이미지를 로드하기 때문에 ImageLayer에서는 uprightOrientation 정보를 무시한다.
           * 컨텐츠에 Orientation 이 90 인 경우 회전해야할 270 값이 설정되어야 한다 
           * </pre>
           *
           * <code>optional int32 uprightRotation = 140;</code>
           * @return Whether the uprightRotation field is set.
           */
          @java.lang.Override
          public boolean hasUprightRotation() {
            return ((bitField1_ & 0x00000400) != 0);
          }
          /**
           * <pre>
           * 이미지 레이어 로드시 Orientation 이 적용된 이미지를 로드하기 때문에 ImageLayer에서는 uprightOrientation 정보를 무시한다.
           * 컨텐츠에 Orientation 이 90 인 경우 회전해야할 270 값이 설정되어야 한다 
           * </pre>
           *
           * <code>optional int32 uprightRotation = 140;</code>
           * @return The uprightRotation.
           */
          @java.lang.Override
          public int getUprightRotation() {
            return uprightRotation_;
          }
          /**
           * <pre>
           * 이미지 레이어 로드시 Orientation 이 적용된 이미지를 로드하기 때문에 ImageLayer에서는 uprightOrientation 정보를 무시한다.
           * 컨텐츠에 Orientation 이 90 인 경우 회전해야할 270 값이 설정되어야 한다 
           * </pre>
           *
           * <code>optional int32 uprightRotation = 140;</code>
           * @param value The uprightRotation to set.
           * @return This builder for chaining.
           */
          public Builder setUprightRotation(int value) {
            bitField1_ |= 0x00000400;
            uprightRotation_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * 이미지 레이어 로드시 Orientation 이 적용된 이미지를 로드하기 때문에 ImageLayer에서는 uprightOrientation 정보를 무시한다.
           * 컨텐츠에 Orientation 이 90 인 경우 회전해야할 270 값이 설정되어야 한다 
           * </pre>
           *
           * <code>optional int32 uprightRotation = 140;</code>
           * @return This builder for chaining.
           */
          public Builder clearUprightRotation() {
            bitField1_ = (bitField1_ & ~0x00000400);
            uprightRotation_ = 0;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.VideoLayer)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.VideoLayer)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<VideoLayer>
            PARSER = new com.google.protobuf.AbstractParser<VideoLayer>() {
          @java.lang.Override
          public VideoLayer parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new VideoLayer(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<VideoLayer> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<VideoLayer> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.VideoLayer getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface ColorAdjustmentOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.ColorAdjustment)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float brightness = 1;</code>
         * @return Whether the brightness field is set.
         */
        boolean hasBrightness();
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float brightness = 1;</code>
         * @return The brightness.
         */
        float getBrightness();

        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float contrast = 2;</code>
         * @return Whether the contrast field is set.
         */
        boolean hasContrast();
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float contrast = 2;</code>
         * @return The contrast.
         */
        float getContrast();

        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float saturation = 3;</code>
         * @return Whether the saturation field is set.
         */
        boolean hasSaturation();
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float saturation = 3;</code>
         * @return The saturation.
         */
        float getSaturation();

        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float vibrance = 4;</code>
         * @return Whether the vibrance field is set.
         */
        boolean hasVibrance();
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float vibrance = 4;</code>
         * @return The vibrance.
         */
        float getVibrance();

        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float temperature = 5;</code>
         * @return Whether the temperature field is set.
         */
        boolean hasTemperature();
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float temperature = 5;</code>
         * @return The temperature.
         */
        float getTemperature();

        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float highlight = 6;</code>
         * @return Whether the highlight field is set.
         */
        boolean hasHighlight();
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float highlight = 6;</code>
         * @return The highlight.
         */
        float getHighlight();

        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float shadow = 7;</code>
         * @return Whether the shadow field is set.
         */
        boolean hasShadow();
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float shadow = 7;</code>
         * @return The shadow.
         */
        float getShadow();

        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float gain = 8;</code>
         * @return Whether the gain field is set.
         */
        boolean hasGain();
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float gain = 8;</code>
         * @return The gain.
         */
        float getGain();

        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float gamma = 9;</code>
         * @return Whether the gamma field is set.
         */
        boolean hasGamma();
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float gamma = 9;</code>
         * @return The gamma.
         */
        float getGamma();

        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float lift = 10;</code>
         * @return Whether the lift field is set.
         */
        boolean hasLift();
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float lift = 10;</code>
         * @return The lift.
         */
        float getLift();

        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float hue = 11;</code>
         * @return Whether the hue field is set.
         */
        boolean hasHue();
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float hue = 11;</code>
         * @return The hue.
         */
        float getHue();
      }
      /**
       * Protobuf type {@code KMProto.KMProject.ColorAdjustment}
       */
      public static final class ColorAdjustment extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.ColorAdjustment)
          ColorAdjustmentOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use ColorAdjustment.newBuilder() to construct.
        private ColorAdjustment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private ColorAdjustment() {
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new ColorAdjustment();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private ColorAdjustment(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 13: {
                  bitField0_ |= 0x00000001;
                  brightness_ = input.readFloat();
                  break;
                }
                case 21: {
                  bitField0_ |= 0x00000002;
                  contrast_ = input.readFloat();
                  break;
                }
                case 29: {
                  bitField0_ |= 0x00000004;
                  saturation_ = input.readFloat();
                  break;
                }
                case 37: {
                  bitField0_ |= 0x00000008;
                  vibrance_ = input.readFloat();
                  break;
                }
                case 45: {
                  bitField0_ |= 0x00000010;
                  temperature_ = input.readFloat();
                  break;
                }
                case 53: {
                  bitField0_ |= 0x00000020;
                  highlight_ = input.readFloat();
                  break;
                }
                case 61: {
                  bitField0_ |= 0x00000040;
                  shadow_ = input.readFloat();
                  break;
                }
                case 69: {
                  bitField0_ |= 0x00000080;
                  gain_ = input.readFloat();
                  break;
                }
                case 77: {
                  bitField0_ |= 0x00000100;
                  gamma_ = input.readFloat();
                  break;
                }
                case 85: {
                  bitField0_ |= 0x00000200;
                  lift_ = input.readFloat();
                  break;
                }
                case 93: {
                  bitField0_ |= 0x00000400;
                  hue_ = input.readFloat();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ColorAdjustment_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ColorAdjustment_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.Builder.class);
        }

        private int bitField0_;
        public static final int BRIGHTNESS_FIELD_NUMBER = 1;
        private float brightness_;
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float brightness = 1;</code>
         * @return Whether the brightness field is set.
         */
        @java.lang.Override
        public boolean hasBrightness() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float brightness = 1;</code>
         * @return The brightness.
         */
        @java.lang.Override
        public float getBrightness() {
          return brightness_;
        }

        public static final int CONTRAST_FIELD_NUMBER = 2;
        private float contrast_;
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float contrast = 2;</code>
         * @return Whether the contrast field is set.
         */
        @java.lang.Override
        public boolean hasContrast() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float contrast = 2;</code>
         * @return The contrast.
         */
        @java.lang.Override
        public float getContrast() {
          return contrast_;
        }

        public static final int SATURATION_FIELD_NUMBER = 3;
        private float saturation_;
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float saturation = 3;</code>
         * @return Whether the saturation field is set.
         */
        @java.lang.Override
        public boolean hasSaturation() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float saturation = 3;</code>
         * @return The saturation.
         */
        @java.lang.Override
        public float getSaturation() {
          return saturation_;
        }

        public static final int VIBRANCE_FIELD_NUMBER = 4;
        private float vibrance_;
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float vibrance = 4;</code>
         * @return Whether the vibrance field is set.
         */
        @java.lang.Override
        public boolean hasVibrance() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float vibrance = 4;</code>
         * @return The vibrance.
         */
        @java.lang.Override
        public float getVibrance() {
          return vibrance_;
        }

        public static final int TEMPERATURE_FIELD_NUMBER = 5;
        private float temperature_;
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float temperature = 5;</code>
         * @return Whether the temperature field is set.
         */
        @java.lang.Override
        public boolean hasTemperature() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float temperature = 5;</code>
         * @return The temperature.
         */
        @java.lang.Override
        public float getTemperature() {
          return temperature_;
        }

        public static final int HIGHLIGHT_FIELD_NUMBER = 6;
        private float highlight_;
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float highlight = 6;</code>
         * @return Whether the highlight field is set.
         */
        @java.lang.Override
        public boolean hasHighlight() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float highlight = 6;</code>
         * @return The highlight.
         */
        @java.lang.Override
        public float getHighlight() {
          return highlight_;
        }

        public static final int SHADOW_FIELD_NUMBER = 7;
        private float shadow_;
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float shadow = 7;</code>
         * @return Whether the shadow field is set.
         */
        @java.lang.Override
        public boolean hasShadow() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float shadow = 7;</code>
         * @return The shadow.
         */
        @java.lang.Override
        public float getShadow() {
          return shadow_;
        }

        public static final int GAIN_FIELD_NUMBER = 8;
        private float gain_;
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float gain = 8;</code>
         * @return Whether the gain field is set.
         */
        @java.lang.Override
        public boolean hasGain() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float gain = 8;</code>
         * @return The gain.
         */
        @java.lang.Override
        public float getGain() {
          return gain_;
        }

        public static final int GAMMA_FIELD_NUMBER = 9;
        private float gamma_;
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float gamma = 9;</code>
         * @return Whether the gamma field is set.
         */
        @java.lang.Override
        public boolean hasGamma() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float gamma = 9;</code>
         * @return The gamma.
         */
        @java.lang.Override
        public float getGamma() {
          return gamma_;
        }

        public static final int LIFT_FIELD_NUMBER = 10;
        private float lift_;
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float lift = 10;</code>
         * @return Whether the lift field is set.
         */
        @java.lang.Override
        public boolean hasLift() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float lift = 10;</code>
         * @return The lift.
         */
        @java.lang.Override
        public float getLift() {
          return lift_;
        }

        public static final int HUE_FIELD_NUMBER = 11;
        private float hue_;
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float hue = 11;</code>
         * @return Whether the hue field is set.
         */
        @java.lang.Override
        public boolean hasHue() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <pre>
         *-1.00~1.00
         * </pre>
         *
         * <code>optional float hue = 11;</code>
         * @return The hue.
         */
        @java.lang.Override
        public float getHue() {
          return hue_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeFloat(1, brightness_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeFloat(2, contrast_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeFloat(3, saturation_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeFloat(4, vibrance_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            output.writeFloat(5, temperature_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            output.writeFloat(6, highlight_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            output.writeFloat(7, shadow_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            output.writeFloat(8, gain_);
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            output.writeFloat(9, gamma_);
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            output.writeFloat(10, lift_);
          }
          if (((bitField0_ & 0x00000400) != 0)) {
            output.writeFloat(11, hue_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(1, brightness_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(2, contrast_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(3, saturation_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(4, vibrance_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(5, temperature_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(6, highlight_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(7, shadow_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(8, gain_);
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(9, gamma_);
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(10, lift_);
          }
          if (((bitField0_ & 0x00000400) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(11, hue_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment) obj;

          if (hasBrightness() != other.hasBrightness()) return false;
          if (hasBrightness()) {
            if (java.lang.Float.floatToIntBits(getBrightness())
                != java.lang.Float.floatToIntBits(
                    other.getBrightness())) return false;
          }
          if (hasContrast() != other.hasContrast()) return false;
          if (hasContrast()) {
            if (java.lang.Float.floatToIntBits(getContrast())
                != java.lang.Float.floatToIntBits(
                    other.getContrast())) return false;
          }
          if (hasSaturation() != other.hasSaturation()) return false;
          if (hasSaturation()) {
            if (java.lang.Float.floatToIntBits(getSaturation())
                != java.lang.Float.floatToIntBits(
                    other.getSaturation())) return false;
          }
          if (hasVibrance() != other.hasVibrance()) return false;
          if (hasVibrance()) {
            if (java.lang.Float.floatToIntBits(getVibrance())
                != java.lang.Float.floatToIntBits(
                    other.getVibrance())) return false;
          }
          if (hasTemperature() != other.hasTemperature()) return false;
          if (hasTemperature()) {
            if (java.lang.Float.floatToIntBits(getTemperature())
                != java.lang.Float.floatToIntBits(
                    other.getTemperature())) return false;
          }
          if (hasHighlight() != other.hasHighlight()) return false;
          if (hasHighlight()) {
            if (java.lang.Float.floatToIntBits(getHighlight())
                != java.lang.Float.floatToIntBits(
                    other.getHighlight())) return false;
          }
          if (hasShadow() != other.hasShadow()) return false;
          if (hasShadow()) {
            if (java.lang.Float.floatToIntBits(getShadow())
                != java.lang.Float.floatToIntBits(
                    other.getShadow())) return false;
          }
          if (hasGain() != other.hasGain()) return false;
          if (hasGain()) {
            if (java.lang.Float.floatToIntBits(getGain())
                != java.lang.Float.floatToIntBits(
                    other.getGain())) return false;
          }
          if (hasGamma() != other.hasGamma()) return false;
          if (hasGamma()) {
            if (java.lang.Float.floatToIntBits(getGamma())
                != java.lang.Float.floatToIntBits(
                    other.getGamma())) return false;
          }
          if (hasLift() != other.hasLift()) return false;
          if (hasLift()) {
            if (java.lang.Float.floatToIntBits(getLift())
                != java.lang.Float.floatToIntBits(
                    other.getLift())) return false;
          }
          if (hasHue() != other.hasHue()) return false;
          if (hasHue()) {
            if (java.lang.Float.floatToIntBits(getHue())
                != java.lang.Float.floatToIntBits(
                    other.getHue())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasBrightness()) {
            hash = (37 * hash) + BRIGHTNESS_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getBrightness());
          }
          if (hasContrast()) {
            hash = (37 * hash) + CONTRAST_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getContrast());
          }
          if (hasSaturation()) {
            hash = (37 * hash) + SATURATION_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getSaturation());
          }
          if (hasVibrance()) {
            hash = (37 * hash) + VIBRANCE_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getVibrance());
          }
          if (hasTemperature()) {
            hash = (37 * hash) + TEMPERATURE_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getTemperature());
          }
          if (hasHighlight()) {
            hash = (37 * hash) + HIGHLIGHT_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getHighlight());
          }
          if (hasShadow()) {
            hash = (37 * hash) + SHADOW_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getShadow());
          }
          if (hasGain()) {
            hash = (37 * hash) + GAIN_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGain());
          }
          if (hasGamma()) {
            hash = (37 * hash) + GAMMA_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGamma());
          }
          if (hasLift()) {
            hash = (37 * hash) + LIFT_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getLift());
          }
          if (hasHue()) {
            hash = (37 * hash) + HUE_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getHue());
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code KMProto.KMProject.ColorAdjustment}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.ColorAdjustment)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustmentOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ColorAdjustment_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ColorAdjustment_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            brightness_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000001);
            contrast_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000002);
            saturation_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000004);
            vibrance_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000008);
            temperature_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000010);
            highlight_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000020);
            shadow_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000040);
            gain_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000080);
            gamma_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000100);
            lift_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000200);
            hue_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000400);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ColorAdjustment_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.brightness_ = brightness_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.contrast_ = contrast_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.saturation_ = saturation_;
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.vibrance_ = vibrance_;
              to_bitField0_ |= 0x00000008;
            }
            if (((from_bitField0_ & 0x00000010) != 0)) {
              result.temperature_ = temperature_;
              to_bitField0_ |= 0x00000010;
            }
            if (((from_bitField0_ & 0x00000020) != 0)) {
              result.highlight_ = highlight_;
              to_bitField0_ |= 0x00000020;
            }
            if (((from_bitField0_ & 0x00000040) != 0)) {
              result.shadow_ = shadow_;
              to_bitField0_ |= 0x00000040;
            }
            if (((from_bitField0_ & 0x00000080) != 0)) {
              result.gain_ = gain_;
              to_bitField0_ |= 0x00000080;
            }
            if (((from_bitField0_ & 0x00000100) != 0)) {
              result.gamma_ = gamma_;
              to_bitField0_ |= 0x00000100;
            }
            if (((from_bitField0_ & 0x00000200) != 0)) {
              result.lift_ = lift_;
              to_bitField0_ |= 0x00000200;
            }
            if (((from_bitField0_ & 0x00000400) != 0)) {
              result.hue_ = hue_;
              to_bitField0_ |= 0x00000400;
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment.getDefaultInstance()) return this;
            if (other.hasBrightness()) {
              setBrightness(other.getBrightness());
            }
            if (other.hasContrast()) {
              setContrast(other.getContrast());
            }
            if (other.hasSaturation()) {
              setSaturation(other.getSaturation());
            }
            if (other.hasVibrance()) {
              setVibrance(other.getVibrance());
            }
            if (other.hasTemperature()) {
              setTemperature(other.getTemperature());
            }
            if (other.hasHighlight()) {
              setHighlight(other.getHighlight());
            }
            if (other.hasShadow()) {
              setShadow(other.getShadow());
            }
            if (other.hasGain()) {
              setGain(other.getGain());
            }
            if (other.hasGamma()) {
              setGamma(other.getGamma());
            }
            if (other.hasLift()) {
              setLift(other.getLift());
            }
            if (other.hasHue()) {
              setHue(other.getHue());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private float brightness_ ;
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float brightness = 1;</code>
           * @return Whether the brightness field is set.
           */
          @java.lang.Override
          public boolean hasBrightness() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float brightness = 1;</code>
           * @return The brightness.
           */
          @java.lang.Override
          public float getBrightness() {
            return brightness_;
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float brightness = 1;</code>
           * @param value The brightness to set.
           * @return This builder for chaining.
           */
          public Builder setBrightness(float value) {
            bitField0_ |= 0x00000001;
            brightness_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float brightness = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearBrightness() {
            bitField0_ = (bitField0_ & ~0x00000001);
            brightness_ = 0F;
            onChanged();
            return this;
          }

          private float contrast_ ;
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float contrast = 2;</code>
           * @return Whether the contrast field is set.
           */
          @java.lang.Override
          public boolean hasContrast() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float contrast = 2;</code>
           * @return The contrast.
           */
          @java.lang.Override
          public float getContrast() {
            return contrast_;
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float contrast = 2;</code>
           * @param value The contrast to set.
           * @return This builder for chaining.
           */
          public Builder setContrast(float value) {
            bitField0_ |= 0x00000002;
            contrast_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float contrast = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearContrast() {
            bitField0_ = (bitField0_ & ~0x00000002);
            contrast_ = 0F;
            onChanged();
            return this;
          }

          private float saturation_ ;
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float saturation = 3;</code>
           * @return Whether the saturation field is set.
           */
          @java.lang.Override
          public boolean hasSaturation() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float saturation = 3;</code>
           * @return The saturation.
           */
          @java.lang.Override
          public float getSaturation() {
            return saturation_;
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float saturation = 3;</code>
           * @param value The saturation to set.
           * @return This builder for chaining.
           */
          public Builder setSaturation(float value) {
            bitField0_ |= 0x00000004;
            saturation_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float saturation = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearSaturation() {
            bitField0_ = (bitField0_ & ~0x00000004);
            saturation_ = 0F;
            onChanged();
            return this;
          }

          private float vibrance_ ;
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float vibrance = 4;</code>
           * @return Whether the vibrance field is set.
           */
          @java.lang.Override
          public boolean hasVibrance() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float vibrance = 4;</code>
           * @return The vibrance.
           */
          @java.lang.Override
          public float getVibrance() {
            return vibrance_;
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float vibrance = 4;</code>
           * @param value The vibrance to set.
           * @return This builder for chaining.
           */
          public Builder setVibrance(float value) {
            bitField0_ |= 0x00000008;
            vibrance_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float vibrance = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearVibrance() {
            bitField0_ = (bitField0_ & ~0x00000008);
            vibrance_ = 0F;
            onChanged();
            return this;
          }

          private float temperature_ ;
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float temperature = 5;</code>
           * @return Whether the temperature field is set.
           */
          @java.lang.Override
          public boolean hasTemperature() {
            return ((bitField0_ & 0x00000010) != 0);
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float temperature = 5;</code>
           * @return The temperature.
           */
          @java.lang.Override
          public float getTemperature() {
            return temperature_;
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float temperature = 5;</code>
           * @param value The temperature to set.
           * @return This builder for chaining.
           */
          public Builder setTemperature(float value) {
            bitField0_ |= 0x00000010;
            temperature_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float temperature = 5;</code>
           * @return This builder for chaining.
           */
          public Builder clearTemperature() {
            bitField0_ = (bitField0_ & ~0x00000010);
            temperature_ = 0F;
            onChanged();
            return this;
          }

          private float highlight_ ;
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float highlight = 6;</code>
           * @return Whether the highlight field is set.
           */
          @java.lang.Override
          public boolean hasHighlight() {
            return ((bitField0_ & 0x00000020) != 0);
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float highlight = 6;</code>
           * @return The highlight.
           */
          @java.lang.Override
          public float getHighlight() {
            return highlight_;
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float highlight = 6;</code>
           * @param value The highlight to set.
           * @return This builder for chaining.
           */
          public Builder setHighlight(float value) {
            bitField0_ |= 0x00000020;
            highlight_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float highlight = 6;</code>
           * @return This builder for chaining.
           */
          public Builder clearHighlight() {
            bitField0_ = (bitField0_ & ~0x00000020);
            highlight_ = 0F;
            onChanged();
            return this;
          }

          private float shadow_ ;
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float shadow = 7;</code>
           * @return Whether the shadow field is set.
           */
          @java.lang.Override
          public boolean hasShadow() {
            return ((bitField0_ & 0x00000040) != 0);
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float shadow = 7;</code>
           * @return The shadow.
           */
          @java.lang.Override
          public float getShadow() {
            return shadow_;
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float shadow = 7;</code>
           * @param value The shadow to set.
           * @return This builder for chaining.
           */
          public Builder setShadow(float value) {
            bitField0_ |= 0x00000040;
            shadow_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float shadow = 7;</code>
           * @return This builder for chaining.
           */
          public Builder clearShadow() {
            bitField0_ = (bitField0_ & ~0x00000040);
            shadow_ = 0F;
            onChanged();
            return this;
          }

          private float gain_ ;
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float gain = 8;</code>
           * @return Whether the gain field is set.
           */
          @java.lang.Override
          public boolean hasGain() {
            return ((bitField0_ & 0x00000080) != 0);
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float gain = 8;</code>
           * @return The gain.
           */
          @java.lang.Override
          public float getGain() {
            return gain_;
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float gain = 8;</code>
           * @param value The gain to set.
           * @return This builder for chaining.
           */
          public Builder setGain(float value) {
            bitField0_ |= 0x00000080;
            gain_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float gain = 8;</code>
           * @return This builder for chaining.
           */
          public Builder clearGain() {
            bitField0_ = (bitField0_ & ~0x00000080);
            gain_ = 0F;
            onChanged();
            return this;
          }

          private float gamma_ ;
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float gamma = 9;</code>
           * @return Whether the gamma field is set.
           */
          @java.lang.Override
          public boolean hasGamma() {
            return ((bitField0_ & 0x00000100) != 0);
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float gamma = 9;</code>
           * @return The gamma.
           */
          @java.lang.Override
          public float getGamma() {
            return gamma_;
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float gamma = 9;</code>
           * @param value The gamma to set.
           * @return This builder for chaining.
           */
          public Builder setGamma(float value) {
            bitField0_ |= 0x00000100;
            gamma_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float gamma = 9;</code>
           * @return This builder for chaining.
           */
          public Builder clearGamma() {
            bitField0_ = (bitField0_ & ~0x00000100);
            gamma_ = 0F;
            onChanged();
            return this;
          }

          private float lift_ ;
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float lift = 10;</code>
           * @return Whether the lift field is set.
           */
          @java.lang.Override
          public boolean hasLift() {
            return ((bitField0_ & 0x00000200) != 0);
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float lift = 10;</code>
           * @return The lift.
           */
          @java.lang.Override
          public float getLift() {
            return lift_;
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float lift = 10;</code>
           * @param value The lift to set.
           * @return This builder for chaining.
           */
          public Builder setLift(float value) {
            bitField0_ |= 0x00000200;
            lift_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float lift = 10;</code>
           * @return This builder for chaining.
           */
          public Builder clearLift() {
            bitField0_ = (bitField0_ & ~0x00000200);
            lift_ = 0F;
            onChanged();
            return this;
          }

          private float hue_ ;
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float hue = 11;</code>
           * @return Whether the hue field is set.
           */
          @java.lang.Override
          public boolean hasHue() {
            return ((bitField0_ & 0x00000400) != 0);
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float hue = 11;</code>
           * @return The hue.
           */
          @java.lang.Override
          public float getHue() {
            return hue_;
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float hue = 11;</code>
           * @param value The hue to set.
           * @return This builder for chaining.
           */
          public Builder setHue(float value) {
            bitField0_ |= 0x00000400;
            hue_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *-1.00~1.00
           * </pre>
           *
           * <code>optional float hue = 11;</code>
           * @return This builder for chaining.
           */
          public Builder clearHue() {
            bitField0_ = (bitField0_ & ~0x00000400);
            hue_ = 0F;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.ColorAdjustment)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.ColorAdjustment)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<ColorAdjustment>
            PARSER = new com.google.protobuf.AbstractParser<ColorAdjustment>() {
          @java.lang.Override
          public ColorAdjustment parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new ColorAdjustment(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<ColorAdjustment> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ColorAdjustment> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorAdjustment getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface GroupLayerOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.GroupLayer)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return Whether the layerCommon field is set.
         */
        boolean hasLayerCommon();
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return The layerCommon.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getLayerCommon();
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder getLayerCommonOrBuilder();

        /**
         * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
         */
        java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem> 
            getChildItemsList();
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem getChildItems(int index);
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
         */
        int getChildItemsCount();
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
         */
        java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder> 
            getChildItemsOrBuilderList();
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder getChildItemsOrBuilder(
            int index);
      }
      /**
       * Protobuf type {@code KMProto.KMProject.GroupLayer}
       */
      public static final class GroupLayer extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.GroupLayer)
          GroupLayerOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use GroupLayer.newBuilder() to construct.
        private GroupLayer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private GroupLayer() {
          childItems_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new GroupLayer();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private GroupLayer(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 802: {
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000001) != 0)) {
                    subBuilder = layerCommon_.toBuilder();
                  }
                  layerCommon_ = input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(layerCommon_);
                    layerCommon_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000001;
                  break;
                }
                case 810: {
                  if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                    childItems_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem>();
                    mutable_bitField0_ |= 0x00000002;
                  }
                  childItems_.add(
                      input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.PARSER, extensionRegistry));
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000002) != 0)) {
              childItems_ = java.util.Collections.unmodifiableList(childItems_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_GroupLayer_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_GroupLayer_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer.Builder.class);
        }

        private int bitField0_;
        public static final int LAYER_COMMON_FIELD_NUMBER = 100;
        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon layerCommon_;
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return Whether the layerCommon field is set.
         */
        @java.lang.Override
        public boolean hasLayerCommon() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         * @return The layerCommon.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getLayerCommon() {
          return layerCommon_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
        }
        /**
         * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder getLayerCommonOrBuilder() {
          return layerCommon_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
        }

        public static final int CHILD_ITEMS_FIELD_NUMBER = 101;
        private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem> childItems_;
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
         */
        @java.lang.Override
        public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem> getChildItemsList() {
          return childItems_;
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
         */
        @java.lang.Override
        public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder> 
            getChildItemsOrBuilderList() {
          return childItems_;
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
         */
        @java.lang.Override
        public int getChildItemsCount() {
          return childItems_.size();
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem getChildItems(int index) {
          return childItems_.get(index);
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder getChildItemsOrBuilder(
            int index) {
          return childItems_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeMessage(100, getLayerCommon());
          }
          for (int i = 0; i < childItems_.size(); i++) {
            output.writeMessage(101, childItems_.get(i));
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(100, getLayerCommon());
          }
          for (int i = 0; i < childItems_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(101, childItems_.get(i));
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer) obj;

          if (hasLayerCommon() != other.hasLayerCommon()) return false;
          if (hasLayerCommon()) {
            if (!getLayerCommon()
                .equals(other.getLayerCommon())) return false;
          }
          if (!getChildItemsList()
              .equals(other.getChildItemsList())) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasLayerCommon()) {
            hash = (37 * hash) + LAYER_COMMON_FIELD_NUMBER;
            hash = (53 * hash) + getLayerCommon().hashCode();
          }
          if (getChildItemsCount() > 0) {
            hash = (37 * hash) + CHILD_ITEMS_FIELD_NUMBER;
            hash = (53 * hash) + getChildItemsList().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code KMProto.KMProject.GroupLayer}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.GroupLayer)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayerOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_GroupLayer_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_GroupLayer_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
              getLayerCommonFieldBuilder();
              getChildItemsFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            if (layerCommonBuilder_ == null) {
              layerCommon_ = null;
            } else {
              layerCommonBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000001);
            if (childItemsBuilder_ == null) {
              childItems_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              childItemsBuilder_.clear();
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_GroupLayer_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              if (layerCommonBuilder_ == null) {
                result.layerCommon_ = layerCommon_;
              } else {
                result.layerCommon_ = layerCommonBuilder_.build();
              }
              to_bitField0_ |= 0x00000001;
            }
            if (childItemsBuilder_ == null) {
              if (((bitField0_ & 0x00000002) != 0)) {
                childItems_ = java.util.Collections.unmodifiableList(childItems_);
                bitField0_ = (bitField0_ & ~0x00000002);
              }
              result.childItems_ = childItems_;
            } else {
              result.childItems_ = childItemsBuilder_.build();
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer.getDefaultInstance()) return this;
            if (other.hasLayerCommon()) {
              mergeLayerCommon(other.getLayerCommon());
            }
            if (childItemsBuilder_ == null) {
              if (!other.childItems_.isEmpty()) {
                if (childItems_.isEmpty()) {
                  childItems_ = other.childItems_;
                  bitField0_ = (bitField0_ & ~0x00000002);
                } else {
                  ensureChildItemsIsMutable();
                  childItems_.addAll(other.childItems_);
                }
                onChanged();
              }
            } else {
              if (!other.childItems_.isEmpty()) {
                if (childItemsBuilder_.isEmpty()) {
                  childItemsBuilder_.dispose();
                  childItemsBuilder_ = null;
                  childItems_ = other.childItems_;
                  bitField0_ = (bitField0_ & ~0x00000002);
                  childItemsBuilder_ = 
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                       getChildItemsFieldBuilder() : null;
                } else {
                  childItemsBuilder_.addAllMessages(other.childItems_);
                }
              }
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon layerCommon_;
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder> layerCommonBuilder_;
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           * @return Whether the layerCommon field is set.
           */
          public boolean hasLayerCommon() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           * @return The layerCommon.
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon getLayerCommon() {
            if (layerCommonBuilder_ == null) {
              return layerCommon_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
            } else {
              return layerCommonBuilder_.getMessage();
            }
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder setLayerCommon(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon value) {
            if (layerCommonBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              layerCommon_ = value;
              onChanged();
            } else {
              layerCommonBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000001;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder setLayerCommon(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder builderForValue) {
            if (layerCommonBuilder_ == null) {
              layerCommon_ = builderForValue.build();
              onChanged();
            } else {
              layerCommonBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000001;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder mergeLayerCommon(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon value) {
            if (layerCommonBuilder_ == null) {
              if (((bitField0_ & 0x00000001) != 0) &&
                  layerCommon_ != null &&
                  layerCommon_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance()) {
                layerCommon_ =
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.newBuilder(layerCommon_).mergeFrom(value).buildPartial();
              } else {
                layerCommon_ = value;
              }
              onChanged();
            } else {
              layerCommonBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000001;
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public Builder clearLayerCommon() {
            if (layerCommonBuilder_ == null) {
              layerCommon_ = null;
              onChanged();
            } else {
              layerCommonBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000001);
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder getLayerCommonBuilder() {
            bitField0_ |= 0x00000001;
            onChanged();
            return getLayerCommonFieldBuilder().getBuilder();
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder getLayerCommonOrBuilder() {
            if (layerCommonBuilder_ != null) {
              return layerCommonBuilder_.getMessageOrBuilder();
            } else {
              return layerCommon_ == null ?
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.getDefaultInstance() : layerCommon_;
            }
          }
          /**
           * <code>optional .KMProto.KMProject.LayerCommon layer_common = 100;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder> 
              getLayerCommonFieldBuilder() {
            if (layerCommonBuilder_ == null) {
              layerCommonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommon.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.LayerCommonOrBuilder>(
                      getLayerCommon(),
                      getParentForChildren(),
                      isClean());
              layerCommon_ = null;
            }
            return layerCommonBuilder_;
          }

          private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem> childItems_ =
            java.util.Collections.emptyList();
          private void ensureChildItemsIsMutable() {
            if (!((bitField0_ & 0x00000002) != 0)) {
              childItems_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem>(childItems_);
              bitField0_ |= 0x00000002;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder> childItemsBuilder_;

          /**
           * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
           */
          public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem> getChildItemsList() {
            if (childItemsBuilder_ == null) {
              return java.util.Collections.unmodifiableList(childItems_);
            } else {
              return childItemsBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
           */
          public int getChildItemsCount() {
            if (childItemsBuilder_ == null) {
              return childItems_.size();
            } else {
              return childItemsBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem getChildItems(int index) {
            if (childItemsBuilder_ == null) {
              return childItems_.get(index);
            } else {
              return childItemsBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
           */
          public Builder setChildItems(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem value) {
            if (childItemsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureChildItemsIsMutable();
              childItems_.set(index, value);
              onChanged();
            } else {
              childItemsBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
           */
          public Builder setChildItems(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder builderForValue) {
            if (childItemsBuilder_ == null) {
              ensureChildItemsIsMutable();
              childItems_.set(index, builderForValue.build());
              onChanged();
            } else {
              childItemsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
           */
          public Builder addChildItems(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem value) {
            if (childItemsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureChildItemsIsMutable();
              childItems_.add(value);
              onChanged();
            } else {
              childItemsBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
           */
          public Builder addChildItems(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem value) {
            if (childItemsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureChildItemsIsMutable();
              childItems_.add(index, value);
              onChanged();
            } else {
              childItemsBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
           */
          public Builder addChildItems(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder builderForValue) {
            if (childItemsBuilder_ == null) {
              ensureChildItemsIsMutable();
              childItems_.add(builderForValue.build());
              onChanged();
            } else {
              childItemsBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
           */
          public Builder addChildItems(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder builderForValue) {
            if (childItemsBuilder_ == null) {
              ensureChildItemsIsMutable();
              childItems_.add(index, builderForValue.build());
              onChanged();
            } else {
              childItemsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
           */
          public Builder addAllChildItems(
              java.lang.Iterable<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem> values) {
            if (childItemsBuilder_ == null) {
              ensureChildItemsIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, childItems_);
              onChanged();
            } else {
              childItemsBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
           */
          public Builder clearChildItems() {
            if (childItemsBuilder_ == null) {
              childItems_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000002);
              onChanged();
            } else {
              childItemsBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
           */
          public Builder removeChildItems(int index) {
            if (childItemsBuilder_ == null) {
              ensureChildItemsIsMutable();
              childItems_.remove(index);
              onChanged();
            } else {
              childItemsBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder getChildItemsBuilder(
              int index) {
            return getChildItemsFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder getChildItemsOrBuilder(
              int index) {
            if (childItemsBuilder_ == null) {
              return childItems_.get(index);  } else {
              return childItemsBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
           */
          public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder> 
               getChildItemsOrBuilderList() {
            if (childItemsBuilder_ != null) {
              return childItemsBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(childItems_);
            }
          }
          /**
           * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder addChildItemsBuilder() {
            return getChildItemsFieldBuilder().addBuilder(
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.getDefaultInstance());
          }
          /**
           * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder addChildItemsBuilder(
              int index) {
            return getChildItemsFieldBuilder().addBuilder(
                index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.getDefaultInstance());
          }
          /**
           * <code>repeated .KMProto.KMProject.TimelineItem child_items = 101;</code>
           */
          public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder> 
               getChildItemsBuilderList() {
            return getChildItemsFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder> 
              getChildItemsFieldBuilder() {
            if (childItemsBuilder_ == null) {
              childItemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder>(
                      childItems_,
                      ((bitField0_ & 0x00000002) != 0),
                      getParentForChildren(),
                      isClean());
              childItems_ = null;
            }
            return childItemsBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.GroupLayer)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.GroupLayer)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<GroupLayer>
            PARSER = new com.google.protobuf.AbstractParser<GroupLayer>() {
          @java.lang.Override
          public GroupLayer parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new GroupLayer(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<GroupLayer> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<GroupLayer> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.GroupLayer getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface DrawingActionOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.DrawingAction)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .KMProto.KMProject.DrawingActionType drawing_action_type = 1;</code>
         * @return Whether the drawingActionType field is set.
         */
        boolean hasDrawingActionType();
        /**
         * <code>optional .KMProto.KMProject.DrawingActionType drawing_action_type = 1;</code>
         * @return The drawingActionType.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionType getDrawingActionType();

        /**
         * <code>repeated float points = 2;</code>
         * @return A list containing the points.
         */
        java.util.List<java.lang.Float> getPointsList();
        /**
         * <code>repeated float points = 2;</code>
         * @return The count of points.
         */
        int getPointsCount();
        /**
         * <code>repeated float points = 2;</code>
         * @param index The index of the element to return.
         * @return The points at the given index.
         */
        float getPoints(int index);

        /**
         * <code>optional int32 color = 3;</code>
         * @return Whether the color field is set.
         */
        boolean hasColor();
        /**
         * <code>optional int32 color = 3;</code>
         * @return The color.
         */
        int getColor();

        /**
         * <code>optional float stroke_width = 4;</code>
         * @return Whether the strokeWidth field is set.
         */
        boolean hasStrokeWidth();
        /**
         * <code>optional float stroke_width = 4;</code>
         * @return The strokeWidth.
         */
        float getStrokeWidth();

        /**
         * <code>optional float hardness = 5;</code>
         * @return Whether the hardness field is set.
         */
        boolean hasHardness();
        /**
         * <code>optional float hardness = 5;</code>
         * @return The hardness.
         */
        float getHardness();

        /**
         * <code>optional bool is_eraser = 6;</code>
         * @return Whether the isEraser field is set.
         */
        boolean hasIsEraser();
        /**
         * <code>optional bool is_eraser = 6;</code>
         * @return The isEraser.
         */
        boolean getIsEraser();

        /**
         * <code>optional bool straight_line = 7;</code>
         * @return Whether the straightLine field is set.
         */
        boolean hasStraightLine();
        /**
         * <code>optional bool straight_line = 7;</code>
         * @return The straightLine.
         */
        boolean getStraightLine();

        /**
         * <code>optional .KMProto.KMProject.PathStyle path_style = 8;</code>
         * @return Whether the pathStyle field is set.
         */
        boolean hasPathStyle();
        /**
         * <code>optional .KMProto.KMProject.PathStyle path_style = 8;</code>
         * @return The pathStyle.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.PathStyle getPathStyle();

        /**
         * <code>optional .KMProto.KMProject.CapDecorationStyle start_cap = 9;</code>
         * @return Whether the startCap field is set.
         */
        boolean hasStartCap();
        /**
         * <code>optional .KMProto.KMProject.CapDecorationStyle start_cap = 9;</code>
         * @return The startCap.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.CapDecorationStyle getStartCap();

        /**
         * <code>optional .KMProto.KMProject.CapDecorationStyle end_cap = 10;</code>
         * @return Whether the endCap field is set.
         */
        boolean hasEndCap();
        /**
         * <code>optional .KMProto.KMProject.CapDecorationStyle end_cap = 10;</code>
         * @return The endCap.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.CapDecorationStyle getEndCap();
      }
      /**
       * Protobuf type {@code KMProto.KMProject.DrawingAction}
       */
      public static final class DrawingAction extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.DrawingAction)
          DrawingActionOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use DrawingAction.newBuilder() to construct.
        private DrawingAction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private DrawingAction() {
          drawingActionType_ = 1;
          points_ = emptyFloatList();
          pathStyle_ = 1;
          startCap_ = 1;
          endCap_ = 1;
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new DrawingAction();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private DrawingAction(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  int rawValue = input.readEnum();
                    @SuppressWarnings("deprecation")
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionType value = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionType.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    drawingActionType_ = rawValue;
                  }
                  break;
                }
                case 21: {
                  if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                    points_ = newFloatList();
                    mutable_bitField0_ |= 0x00000002;
                  }
                  points_.addFloat(input.readFloat());
                  break;
                }
                case 18: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                    points_ = newFloatList();
                    mutable_bitField0_ |= 0x00000002;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    points_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000002;
                  color_ = input.readInt32();
                  break;
                }
                case 37: {
                  bitField0_ |= 0x00000004;
                  strokeWidth_ = input.readFloat();
                  break;
                }
                case 45: {
                  bitField0_ |= 0x00000008;
                  hardness_ = input.readFloat();
                  break;
                }
                case 48: {
                  bitField0_ |= 0x00000010;
                  isEraser_ = input.readBool();
                  break;
                }
                case 56: {
                  bitField0_ |= 0x00000020;
                  straightLine_ = input.readBool();
                  break;
                }
                case 64: {
                  int rawValue = input.readEnum();
                    @SuppressWarnings("deprecation")
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.PathStyle value = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.PathStyle.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(8, rawValue);
                  } else {
                    bitField0_ |= 0x00000040;
                    pathStyle_ = rawValue;
                  }
                  break;
                }
                case 72: {
                  int rawValue = input.readEnum();
                    @SuppressWarnings("deprecation")
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.CapDecorationStyle value = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.CapDecorationStyle.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(9, rawValue);
                  } else {
                    bitField0_ |= 0x00000080;
                    startCap_ = rawValue;
                  }
                  break;
                }
                case 80: {
                  int rawValue = input.readEnum();
                    @SuppressWarnings("deprecation")
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.CapDecorationStyle value = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.CapDecorationStyle.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(10, rawValue);
                  } else {
                    bitField0_ |= 0x00000100;
                    endCap_ = rawValue;
                  }
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000002) != 0)) {
              points_.makeImmutable(); // C
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_DrawingAction_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_DrawingAction_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.Builder.class);
        }

        private int bitField0_;
        public static final int DRAWING_ACTION_TYPE_FIELD_NUMBER = 1;
        private int drawingActionType_;
        /**
         * <code>optional .KMProto.KMProject.DrawingActionType drawing_action_type = 1;</code>
         * @return Whether the drawingActionType field is set.
         */
        @java.lang.Override public boolean hasDrawingActionType() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.DrawingActionType drawing_action_type = 1;</code>
         * @return The drawingActionType.
         */
        @java.lang.Override public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionType getDrawingActionType() {
          @SuppressWarnings("deprecation")
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionType result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionType.valueOf(drawingActionType_);
          return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionType.STROKE : result;
        }

        public static final int POINTS_FIELD_NUMBER = 2;
        private com.google.protobuf.Internal.FloatList points_;
        /**
         * <code>repeated float points = 2;</code>
         * @return A list containing the points.
         */
        @java.lang.Override
        public java.util.List<java.lang.Float>
            getPointsList() {
          return points_;
        }
        /**
         * <code>repeated float points = 2;</code>
         * @return The count of points.
         */
        public int getPointsCount() {
          return points_.size();
        }
        /**
         * <code>repeated float points = 2;</code>
         * @param index The index of the element to return.
         * @return The points at the given index.
         */
        public float getPoints(int index) {
          return points_.getFloat(index);
        }

        public static final int COLOR_FIELD_NUMBER = 3;
        private int color_;
        /**
         * <code>optional int32 color = 3;</code>
         * @return Whether the color field is set.
         */
        @java.lang.Override
        public boolean hasColor() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional int32 color = 3;</code>
         * @return The color.
         */
        @java.lang.Override
        public int getColor() {
          return color_;
        }

        public static final int STROKE_WIDTH_FIELD_NUMBER = 4;
        private float strokeWidth_;
        /**
         * <code>optional float stroke_width = 4;</code>
         * @return Whether the strokeWidth field is set.
         */
        @java.lang.Override
        public boolean hasStrokeWidth() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional float stroke_width = 4;</code>
         * @return The strokeWidth.
         */
        @java.lang.Override
        public float getStrokeWidth() {
          return strokeWidth_;
        }

        public static final int HARDNESS_FIELD_NUMBER = 5;
        private float hardness_;
        /**
         * <code>optional float hardness = 5;</code>
         * @return Whether the hardness field is set.
         */
        @java.lang.Override
        public boolean hasHardness() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional float hardness = 5;</code>
         * @return The hardness.
         */
        @java.lang.Override
        public float getHardness() {
          return hardness_;
        }

        public static final int IS_ERASER_FIELD_NUMBER = 6;
        private boolean isEraser_;
        /**
         * <code>optional bool is_eraser = 6;</code>
         * @return Whether the isEraser field is set.
         */
        @java.lang.Override
        public boolean hasIsEraser() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional bool is_eraser = 6;</code>
         * @return The isEraser.
         */
        @java.lang.Override
        public boolean getIsEraser() {
          return isEraser_;
        }

        public static final int STRAIGHT_LINE_FIELD_NUMBER = 7;
        private boolean straightLine_;
        /**
         * <code>optional bool straight_line = 7;</code>
         * @return Whether the straightLine field is set.
         */
        @java.lang.Override
        public boolean hasStraightLine() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional bool straight_line = 7;</code>
         * @return The straightLine.
         */
        @java.lang.Override
        public boolean getStraightLine() {
          return straightLine_;
        }

        public static final int PATH_STYLE_FIELD_NUMBER = 8;
        private int pathStyle_;
        /**
         * <code>optional .KMProto.KMProject.PathStyle path_style = 8;</code>
         * @return Whether the pathStyle field is set.
         */
        @java.lang.Override public boolean hasPathStyle() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.PathStyle path_style = 8;</code>
         * @return The pathStyle.
         */
        @java.lang.Override public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.PathStyle getPathStyle() {
          @SuppressWarnings("deprecation")
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.PathStyle result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.PathStyle.valueOf(pathStyle_);
          return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.PathStyle.SMOOTH : result;
        }

        public static final int START_CAP_FIELD_NUMBER = 9;
        private int startCap_;
        /**
         * <code>optional .KMProto.KMProject.CapDecorationStyle start_cap = 9;</code>
         * @return Whether the startCap field is set.
         */
        @java.lang.Override public boolean hasStartCap() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.CapDecorationStyle start_cap = 9;</code>
         * @return The startCap.
         */
        @java.lang.Override public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.CapDecorationStyle getStartCap() {
          @SuppressWarnings("deprecation")
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.CapDecorationStyle result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.CapDecorationStyle.valueOf(startCap_);
          return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.CapDecorationStyle.NONE : result;
        }

        public static final int END_CAP_FIELD_NUMBER = 10;
        private int endCap_;
        /**
         * <code>optional .KMProto.KMProject.CapDecorationStyle end_cap = 10;</code>
         * @return Whether the endCap field is set.
         */
        @java.lang.Override public boolean hasEndCap() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.CapDecorationStyle end_cap = 10;</code>
         * @return The endCap.
         */
        @java.lang.Override public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.CapDecorationStyle getEndCap() {
          @SuppressWarnings("deprecation")
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.CapDecorationStyle result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.CapDecorationStyle.valueOf(endCap_);
          return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.CapDecorationStyle.NONE : result;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeEnum(1, drawingActionType_);
          }
          for (int i = 0; i < points_.size(); i++) {
            output.writeFloat(2, points_.getFloat(i));
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeInt32(3, color_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeFloat(4, strokeWidth_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeFloat(5, hardness_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            output.writeBool(6, isEraser_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            output.writeBool(7, straightLine_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            output.writeEnum(8, pathStyle_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            output.writeEnum(9, startCap_);
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            output.writeEnum(10, endCap_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, drawingActionType_);
          }
          {
            int dataSize = 0;
            dataSize = 4 * getPointsList().size();
            size += dataSize;
            size += 1 * getPointsList().size();
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(3, color_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(4, strokeWidth_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(5, hardness_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(6, isEraser_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(7, straightLine_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(8, pathStyle_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(9, startCap_);
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(10, endCap_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction) obj;

          if (hasDrawingActionType() != other.hasDrawingActionType()) return false;
          if (hasDrawingActionType()) {
            if (drawingActionType_ != other.drawingActionType_) return false;
          }
          if (!getPointsList()
              .equals(other.getPointsList())) return false;
          if (hasColor() != other.hasColor()) return false;
          if (hasColor()) {
            if (getColor()
                != other.getColor()) return false;
          }
          if (hasStrokeWidth() != other.hasStrokeWidth()) return false;
          if (hasStrokeWidth()) {
            if (java.lang.Float.floatToIntBits(getStrokeWidth())
                != java.lang.Float.floatToIntBits(
                    other.getStrokeWidth())) return false;
          }
          if (hasHardness() != other.hasHardness()) return false;
          if (hasHardness()) {
            if (java.lang.Float.floatToIntBits(getHardness())
                != java.lang.Float.floatToIntBits(
                    other.getHardness())) return false;
          }
          if (hasIsEraser() != other.hasIsEraser()) return false;
          if (hasIsEraser()) {
            if (getIsEraser()
                != other.getIsEraser()) return false;
          }
          if (hasStraightLine() != other.hasStraightLine()) return false;
          if (hasStraightLine()) {
            if (getStraightLine()
                != other.getStraightLine()) return false;
          }
          if (hasPathStyle() != other.hasPathStyle()) return false;
          if (hasPathStyle()) {
            if (pathStyle_ != other.pathStyle_) return false;
          }
          if (hasStartCap() != other.hasStartCap()) return false;
          if (hasStartCap()) {
            if (startCap_ != other.startCap_) return false;
          }
          if (hasEndCap() != other.hasEndCap()) return false;
          if (hasEndCap()) {
            if (endCap_ != other.endCap_) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasDrawingActionType()) {
            hash = (37 * hash) + DRAWING_ACTION_TYPE_FIELD_NUMBER;
            hash = (53 * hash) + drawingActionType_;
          }
          if (getPointsCount() > 0) {
            hash = (37 * hash) + POINTS_FIELD_NUMBER;
            hash = (53 * hash) + getPointsList().hashCode();
          }
          if (hasColor()) {
            hash = (37 * hash) + COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getColor();
          }
          if (hasStrokeWidth()) {
            hash = (37 * hash) + STROKE_WIDTH_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getStrokeWidth());
          }
          if (hasHardness()) {
            hash = (37 * hash) + HARDNESS_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getHardness());
          }
          if (hasIsEraser()) {
            hash = (37 * hash) + IS_ERASER_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getIsEraser());
          }
          if (hasStraightLine()) {
            hash = (37 * hash) + STRAIGHT_LINE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getStraightLine());
          }
          if (hasPathStyle()) {
            hash = (37 * hash) + PATH_STYLE_FIELD_NUMBER;
            hash = (53 * hash) + pathStyle_;
          }
          if (hasStartCap()) {
            hash = (37 * hash) + START_CAP_FIELD_NUMBER;
            hash = (53 * hash) + startCap_;
          }
          if (hasEndCap()) {
            hash = (37 * hash) + END_CAP_FIELD_NUMBER;
            hash = (53 * hash) + endCap_;
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code KMProto.KMProject.DrawingAction}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.DrawingAction)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_DrawingAction_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_DrawingAction_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            drawingActionType_ = 1;
            bitField0_ = (bitField0_ & ~0x00000001);
            points_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00000002);
            color_ = 0;
            bitField0_ = (bitField0_ & ~0x00000004);
            strokeWidth_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000008);
            hardness_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000010);
            isEraser_ = false;
            bitField0_ = (bitField0_ & ~0x00000020);
            straightLine_ = false;
            bitField0_ = (bitField0_ & ~0x00000040);
            pathStyle_ = 1;
            bitField0_ = (bitField0_ & ~0x00000080);
            startCap_ = 1;
            bitField0_ = (bitField0_ & ~0x00000100);
            endCap_ = 1;
            bitField0_ = (bitField0_ & ~0x00000200);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_DrawingAction_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              to_bitField0_ |= 0x00000001;
            }
            result.drawingActionType_ = drawingActionType_;
            if (((bitField0_ & 0x00000002) != 0)) {
              points_.makeImmutable();
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.points_ = points_;
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.color_ = color_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.strokeWidth_ = strokeWidth_;
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000010) != 0)) {
              result.hardness_ = hardness_;
              to_bitField0_ |= 0x00000008;
            }
            if (((from_bitField0_ & 0x00000020) != 0)) {
              result.isEraser_ = isEraser_;
              to_bitField0_ |= 0x00000010;
            }
            if (((from_bitField0_ & 0x00000040) != 0)) {
              result.straightLine_ = straightLine_;
              to_bitField0_ |= 0x00000020;
            }
            if (((from_bitField0_ & 0x00000080) != 0)) {
              to_bitField0_ |= 0x00000040;
            }
            result.pathStyle_ = pathStyle_;
            if (((from_bitField0_ & 0x00000100) != 0)) {
              to_bitField0_ |= 0x00000080;
            }
            result.startCap_ = startCap_;
            if (((from_bitField0_ & 0x00000200) != 0)) {
              to_bitField0_ |= 0x00000100;
            }
            result.endCap_ = endCap_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction.getDefaultInstance()) return this;
            if (other.hasDrawingActionType()) {
              setDrawingActionType(other.getDrawingActionType());
            }
            if (!other.points_.isEmpty()) {
              if (points_.isEmpty()) {
                points_ = other.points_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensurePointsIsMutable();
                points_.addAll(other.points_);
              }
              onChanged();
            }
            if (other.hasColor()) {
              setColor(other.getColor());
            }
            if (other.hasStrokeWidth()) {
              setStrokeWidth(other.getStrokeWidth());
            }
            if (other.hasHardness()) {
              setHardness(other.getHardness());
            }
            if (other.hasIsEraser()) {
              setIsEraser(other.getIsEraser());
            }
            if (other.hasStraightLine()) {
              setStraightLine(other.getStraightLine());
            }
            if (other.hasPathStyle()) {
              setPathStyle(other.getPathStyle());
            }
            if (other.hasStartCap()) {
              setStartCap(other.getStartCap());
            }
            if (other.hasEndCap()) {
              setEndCap(other.getEndCap());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int drawingActionType_ = 1;
          /**
           * <code>optional .KMProto.KMProject.DrawingActionType drawing_action_type = 1;</code>
           * @return Whether the drawingActionType field is set.
           */
          @java.lang.Override public boolean hasDrawingActionType() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.DrawingActionType drawing_action_type = 1;</code>
           * @return The drawingActionType.
           */
          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionType getDrawingActionType() {
            @SuppressWarnings("deprecation")
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionType result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionType.valueOf(drawingActionType_);
            return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionType.STROKE : result;
          }
          /**
           * <code>optional .KMProto.KMProject.DrawingActionType drawing_action_type = 1;</code>
           * @param value The drawingActionType to set.
           * @return This builder for chaining.
           */
          public Builder setDrawingActionType(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingActionType value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            drawingActionType_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.DrawingActionType drawing_action_type = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearDrawingActionType() {
            bitField0_ = (bitField0_ & ~0x00000001);
            drawingActionType_ = 1;
            onChanged();
            return this;
          }

          private com.google.protobuf.Internal.FloatList points_ = emptyFloatList();
          private void ensurePointsIsMutable() {
            if (!((bitField0_ & 0x00000002) != 0)) {
              points_ = mutableCopy(points_);
              bitField0_ |= 0x00000002;
             }
          }
          /**
           * <code>repeated float points = 2;</code>
           * @return A list containing the points.
           */
          public java.util.List<java.lang.Float>
              getPointsList() {
            return ((bitField0_ & 0x00000002) != 0) ?
                     java.util.Collections.unmodifiableList(points_) : points_;
          }
          /**
           * <code>repeated float points = 2;</code>
           * @return The count of points.
           */
          public int getPointsCount() {
            return points_.size();
          }
          /**
           * <code>repeated float points = 2;</code>
           * @param index The index of the element to return.
           * @return The points at the given index.
           */
          public float getPoints(int index) {
            return points_.getFloat(index);
          }
          /**
           * <code>repeated float points = 2;</code>
           * @param index The index to set the value at.
           * @param value The points to set.
           * @return This builder for chaining.
           */
          public Builder setPoints(
              int index, float value) {
            ensurePointsIsMutable();
            points_.setFloat(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float points = 2;</code>
           * @param value The points to add.
           * @return This builder for chaining.
           */
          public Builder addPoints(float value) {
            ensurePointsIsMutable();
            points_.addFloat(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float points = 2;</code>
           * @param values The points to add.
           * @return This builder for chaining.
           */
          public Builder addAllPoints(
              java.lang.Iterable<? extends java.lang.Float> values) {
            ensurePointsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, points_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float points = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearPoints() {
            points_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
            return this;
          }

          private int color_ ;
          /**
           * <code>optional int32 color = 3;</code>
           * @return Whether the color field is set.
           */
          @java.lang.Override
          public boolean hasColor() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <code>optional int32 color = 3;</code>
           * @return The color.
           */
          @java.lang.Override
          public int getColor() {
            return color_;
          }
          /**
           * <code>optional int32 color = 3;</code>
           * @param value The color to set.
           * @return This builder for chaining.
           */
          public Builder setColor(int value) {
            bitField0_ |= 0x00000004;
            color_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 color = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearColor() {
            bitField0_ = (bitField0_ & ~0x00000004);
            color_ = 0;
            onChanged();
            return this;
          }

          private float strokeWidth_ ;
          /**
           * <code>optional float stroke_width = 4;</code>
           * @return Whether the strokeWidth field is set.
           */
          @java.lang.Override
          public boolean hasStrokeWidth() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <code>optional float stroke_width = 4;</code>
           * @return The strokeWidth.
           */
          @java.lang.Override
          public float getStrokeWidth() {
            return strokeWidth_;
          }
          /**
           * <code>optional float stroke_width = 4;</code>
           * @param value The strokeWidth to set.
           * @return This builder for chaining.
           */
          public Builder setStrokeWidth(float value) {
            bitField0_ |= 0x00000008;
            strokeWidth_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float stroke_width = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearStrokeWidth() {
            bitField0_ = (bitField0_ & ~0x00000008);
            strokeWidth_ = 0F;
            onChanged();
            return this;
          }

          private float hardness_ ;
          /**
           * <code>optional float hardness = 5;</code>
           * @return Whether the hardness field is set.
           */
          @java.lang.Override
          public boolean hasHardness() {
            return ((bitField0_ & 0x00000010) != 0);
          }
          /**
           * <code>optional float hardness = 5;</code>
           * @return The hardness.
           */
          @java.lang.Override
          public float getHardness() {
            return hardness_;
          }
          /**
           * <code>optional float hardness = 5;</code>
           * @param value The hardness to set.
           * @return This builder for chaining.
           */
          public Builder setHardness(float value) {
            bitField0_ |= 0x00000010;
            hardness_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float hardness = 5;</code>
           * @return This builder for chaining.
           */
          public Builder clearHardness() {
            bitField0_ = (bitField0_ & ~0x00000010);
            hardness_ = 0F;
            onChanged();
            return this;
          }

          private boolean isEraser_ ;
          /**
           * <code>optional bool is_eraser = 6;</code>
           * @return Whether the isEraser field is set.
           */
          @java.lang.Override
          public boolean hasIsEraser() {
            return ((bitField0_ & 0x00000020) != 0);
          }
          /**
           * <code>optional bool is_eraser = 6;</code>
           * @return The isEraser.
           */
          @java.lang.Override
          public boolean getIsEraser() {
            return isEraser_;
          }
          /**
           * <code>optional bool is_eraser = 6;</code>
           * @param value The isEraser to set.
           * @return This builder for chaining.
           */
          public Builder setIsEraser(boolean value) {
            bitField0_ |= 0x00000020;
            isEraser_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool is_eraser = 6;</code>
           * @return This builder for chaining.
           */
          public Builder clearIsEraser() {
            bitField0_ = (bitField0_ & ~0x00000020);
            isEraser_ = false;
            onChanged();
            return this;
          }

          private boolean straightLine_ ;
          /**
           * <code>optional bool straight_line = 7;</code>
           * @return Whether the straightLine field is set.
           */
          @java.lang.Override
          public boolean hasStraightLine() {
            return ((bitField0_ & 0x00000040) != 0);
          }
          /**
           * <code>optional bool straight_line = 7;</code>
           * @return The straightLine.
           */
          @java.lang.Override
          public boolean getStraightLine() {
            return straightLine_;
          }
          /**
           * <code>optional bool straight_line = 7;</code>
           * @param value The straightLine to set.
           * @return This builder for chaining.
           */
          public Builder setStraightLine(boolean value) {
            bitField0_ |= 0x00000040;
            straightLine_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool straight_line = 7;</code>
           * @return This builder for chaining.
           */
          public Builder clearStraightLine() {
            bitField0_ = (bitField0_ & ~0x00000040);
            straightLine_ = false;
            onChanged();
            return this;
          }

          private int pathStyle_ = 1;
          /**
           * <code>optional .KMProto.KMProject.PathStyle path_style = 8;</code>
           * @return Whether the pathStyle field is set.
           */
          @java.lang.Override public boolean hasPathStyle() {
            return ((bitField0_ & 0x00000080) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.PathStyle path_style = 8;</code>
           * @return The pathStyle.
           */
          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.PathStyle getPathStyle() {
            @SuppressWarnings("deprecation")
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.PathStyle result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.PathStyle.valueOf(pathStyle_);
            return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.PathStyle.SMOOTH : result;
          }
          /**
           * <code>optional .KMProto.KMProject.PathStyle path_style = 8;</code>
           * @param value The pathStyle to set.
           * @return This builder for chaining.
           */
          public Builder setPathStyle(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.PathStyle value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000080;
            pathStyle_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.PathStyle path_style = 8;</code>
           * @return This builder for chaining.
           */
          public Builder clearPathStyle() {
            bitField0_ = (bitField0_ & ~0x00000080);
            pathStyle_ = 1;
            onChanged();
            return this;
          }

          private int startCap_ = 1;
          /**
           * <code>optional .KMProto.KMProject.CapDecorationStyle start_cap = 9;</code>
           * @return Whether the startCap field is set.
           */
          @java.lang.Override public boolean hasStartCap() {
            return ((bitField0_ & 0x00000100) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.CapDecorationStyle start_cap = 9;</code>
           * @return The startCap.
           */
          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.CapDecorationStyle getStartCap() {
            @SuppressWarnings("deprecation")
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.CapDecorationStyle result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.CapDecorationStyle.valueOf(startCap_);
            return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.CapDecorationStyle.NONE : result;
          }
          /**
           * <code>optional .KMProto.KMProject.CapDecorationStyle start_cap = 9;</code>
           * @param value The startCap to set.
           * @return This builder for chaining.
           */
          public Builder setStartCap(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.CapDecorationStyle value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000100;
            startCap_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.CapDecorationStyle start_cap = 9;</code>
           * @return This builder for chaining.
           */
          public Builder clearStartCap() {
            bitField0_ = (bitField0_ & ~0x00000100);
            startCap_ = 1;
            onChanged();
            return this;
          }

          private int endCap_ = 1;
          /**
           * <code>optional .KMProto.KMProject.CapDecorationStyle end_cap = 10;</code>
           * @return Whether the endCap field is set.
           */
          @java.lang.Override public boolean hasEndCap() {
            return ((bitField0_ & 0x00000200) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.CapDecorationStyle end_cap = 10;</code>
           * @return The endCap.
           */
          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.CapDecorationStyle getEndCap() {
            @SuppressWarnings("deprecation")
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.CapDecorationStyle result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.CapDecorationStyle.valueOf(endCap_);
            return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.CapDecorationStyle.NONE : result;
          }
          /**
           * <code>optional .KMProto.KMProject.CapDecorationStyle end_cap = 10;</code>
           * @param value The endCap to set.
           * @return This builder for chaining.
           */
          public Builder setEndCap(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.CapDecorationStyle value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000200;
            endCap_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.CapDecorationStyle end_cap = 10;</code>
           * @return This builder for chaining.
           */
          public Builder clearEndCap() {
            bitField0_ = (bitField0_ & ~0x00000200);
            endCap_ = 1;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.DrawingAction)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.DrawingAction)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<DrawingAction>
            PARSER = new com.google.protobuf.AbstractParser<DrawingAction>() {
          @java.lang.Override
          public DrawingAction parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new DrawingAction(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<DrawingAction> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<DrawingAction> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingAction getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface WritingPointOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.WritingPoint)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional float pointx = 1;</code>
         * @return Whether the pointx field is set.
         */
        boolean hasPointx();
        /**
         * <code>optional float pointx = 1;</code>
         * @return The pointx.
         */
        float getPointx();

        /**
         * <code>optional float pointy = 2;</code>
         * @return Whether the pointy field is set.
         */
        boolean hasPointy();
        /**
         * <code>optional float pointy = 2;</code>
         * @return The pointy.
         */
        float getPointy();
      }
      /**
       * Protobuf type {@code KMProto.KMProject.WritingPoint}
       */
      public static final class WritingPoint extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.WritingPoint)
          WritingPointOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use WritingPoint.newBuilder() to construct.
        private WritingPoint(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private WritingPoint() {
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new WritingPoint();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private WritingPoint(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 13: {
                  bitField0_ |= 0x00000001;
                  pointx_ = input.readFloat();
                  break;
                }
                case 21: {
                  bitField0_ |= 0x00000002;
                  pointy_ = input.readFloat();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_WritingPoint_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_WritingPoint_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.Builder.class);
        }

        private int bitField0_;
        public static final int POINTX_FIELD_NUMBER = 1;
        private float pointx_;
        /**
         * <code>optional float pointx = 1;</code>
         * @return Whether the pointx field is set.
         */
        @java.lang.Override
        public boolean hasPointx() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional float pointx = 1;</code>
         * @return The pointx.
         */
        @java.lang.Override
        public float getPointx() {
          return pointx_;
        }

        public static final int POINTY_FIELD_NUMBER = 2;
        private float pointy_;
        /**
         * <code>optional float pointy = 2;</code>
         * @return Whether the pointy field is set.
         */
        @java.lang.Override
        public boolean hasPointy() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional float pointy = 2;</code>
         * @return The pointy.
         */
        @java.lang.Override
        public float getPointy() {
          return pointy_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeFloat(1, pointx_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeFloat(2, pointy_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(1, pointx_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(2, pointy_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint) obj;

          if (hasPointx() != other.hasPointx()) return false;
          if (hasPointx()) {
            if (java.lang.Float.floatToIntBits(getPointx())
                != java.lang.Float.floatToIntBits(
                    other.getPointx())) return false;
          }
          if (hasPointy() != other.hasPointy()) return false;
          if (hasPointy()) {
            if (java.lang.Float.floatToIntBits(getPointy())
                != java.lang.Float.floatToIntBits(
                    other.getPointy())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasPointx()) {
            hash = (37 * hash) + POINTX_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getPointx());
          }
          if (hasPointy()) {
            hash = (37 * hash) + POINTY_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getPointy());
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code KMProto.KMProject.WritingPoint}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.WritingPoint)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPointOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_WritingPoint_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_WritingPoint_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            pointx_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000001);
            pointy_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_WritingPoint_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.pointx_ = pointx_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.pointy_ = pointy_;
              to_bitField0_ |= 0x00000002;
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.getDefaultInstance()) return this;
            if (other.hasPointx()) {
              setPointx(other.getPointx());
            }
            if (other.hasPointy()) {
              setPointy(other.getPointy());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private float pointx_ ;
          /**
           * <code>optional float pointx = 1;</code>
           * @return Whether the pointx field is set.
           */
          @java.lang.Override
          public boolean hasPointx() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional float pointx = 1;</code>
           * @return The pointx.
           */
          @java.lang.Override
          public float getPointx() {
            return pointx_;
          }
          /**
           * <code>optional float pointx = 1;</code>
           * @param value The pointx to set.
           * @return This builder for chaining.
           */
          public Builder setPointx(float value) {
            bitField0_ |= 0x00000001;
            pointx_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float pointx = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearPointx() {
            bitField0_ = (bitField0_ & ~0x00000001);
            pointx_ = 0F;
            onChanged();
            return this;
          }

          private float pointy_ ;
          /**
           * <code>optional float pointy = 2;</code>
           * @return Whether the pointy field is set.
           */
          @java.lang.Override
          public boolean hasPointy() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional float pointy = 2;</code>
           * @return The pointy.
           */
          @java.lang.Override
          public float getPointy() {
            return pointy_;
          }
          /**
           * <code>optional float pointy = 2;</code>
           * @param value The pointy to set.
           * @return This builder for chaining.
           */
          public Builder setPointy(float value) {
            bitField0_ |= 0x00000002;
            pointy_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float pointy = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearPointy() {
            bitField0_ = (bitField0_ & ~0x00000002);
            pointy_ = 0F;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.WritingPoint)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.WritingPoint)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<WritingPoint>
            PARSER = new com.google.protobuf.AbstractParser<WritingPoint>() {
          @java.lang.Override
          public WritingPoint parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new WritingPoint(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<WritingPoint> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<WritingPoint> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface HandwritingActionOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.HandwritingAction)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .KMProto.KMProject.DrawingType type = 1;</code>
         * @return Whether the type field is set.
         */
        boolean hasType();
        /**
         * <code>optional .KMProto.KMProject.DrawingType type = 1;</code>
         * @return The type.
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingType getType();

        /**
         * <pre>
         * Format: AARRGGBB  Default: AAFF0000
         * </pre>
         *
         * <code>optional int32 color = 2;</code>
         * @return Whether the color field is set.
         */
        boolean hasColor();
        /**
         * <pre>
         * Format: AARRGGBB  Default: AAFF0000
         * </pre>
         *
         * <code>optional int32 color = 2;</code>
         * @return The color.
         */
        int getColor();

        /**
         * <pre>
         * Range: 0~8, IOS(8, 12, 14, 16, 18, 20, 22, 26, 30), Android(3, 5, 7, 12, 17, 25, 38, 57, 86)
         * </pre>
         *
         * <code>optional int32 stroke_size_index = 3;</code>
         * @return Whether the strokeSizeIndex field is set.
         */
        boolean hasStrokeSizeIndex();
        /**
         * <pre>
         * Range: 0~8, IOS(8, 12, 14, 16, 18, 20, 22, 26, 30), Android(3, 5, 7, 12, 17, 25, 38, 57, 86)
         * </pre>
         *
         * <code>optional int32 stroke_size_index = 3;</code>
         * @return The strokeSizeIndex.
         */
        int getStrokeSizeIndex();

        /**
         * <pre>
         * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
         */
        java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint> 
            getPointsList();
        /**
         * <pre>
         * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint getPoints(int index);
        /**
         * <pre>
         * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
         */
        int getPointsCount();
        /**
         * <pre>
         * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
         */
        java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPointOrBuilder> 
            getPointsOrBuilderList();
        /**
         * <pre>
         * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
         */
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPointOrBuilder getPointsOrBuilder(
            int index);

        /**
         * <code>optional float baseWidth = 5;</code>
         * @return Whether the baseWidth field is set.
         */
        boolean hasBaseWidth();
        /**
         * <code>optional float baseWidth = 5;</code>
         * @return The baseWidth.
         */
        float getBaseWidth();

        /**
         * <code>optional float baseHeight = 6;</code>
         * @return Whether the baseHeight field is set.
         */
        boolean hasBaseHeight();
        /**
         * <code>optional float baseHeight = 6;</code>
         * @return The baseHeight.
         */
        float getBaseHeight();
      }
      /**
       * Protobuf type {@code KMProto.KMProject.HandwritingAction}
       */
      public static final class HandwritingAction extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.HandwritingAction)
          HandwritingActionOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use HandwritingAction.newBuilder() to construct.
        private HandwritingAction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private HandwritingAction() {
          type_ = 1;
          points_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new HandwritingAction();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private HandwritingAction(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  int rawValue = input.readEnum();
                    @SuppressWarnings("deprecation")
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingType value = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingType.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    type_ = rawValue;
                  }
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  color_ = input.readInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  strokeSizeIndex_ = input.readInt32();
                  break;
                }
                case 34: {
                  if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                    points_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint>();
                    mutable_bitField0_ |= 0x00000008;
                  }
                  points_.add(
                      input.readMessage(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.PARSER, extensionRegistry));
                  break;
                }
                case 45: {
                  bitField0_ |= 0x00000008;
                  baseWidth_ = input.readFloat();
                  break;
                }
                case 53: {
                  bitField0_ |= 0x00000010;
                  baseHeight_ = input.readFloat();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000008) != 0)) {
              points_ = java.util.Collections.unmodifiableList(points_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_HandwritingAction_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_HandwritingAction_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction.Builder.class);
        }

        private int bitField0_;
        public static final int TYPE_FIELD_NUMBER = 1;
        private int type_;
        /**
         * <code>optional .KMProto.KMProject.DrawingType type = 1;</code>
         * @return Whether the type field is set.
         */
        @java.lang.Override public boolean hasType() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.DrawingType type = 1;</code>
         * @return The type.
         */
        @java.lang.Override public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingType getType() {
          @SuppressWarnings("deprecation")
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingType result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingType.valueOf(type_);
          return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingType.BRUSH_ERASER_ALL : result;
        }

        public static final int COLOR_FIELD_NUMBER = 2;
        private int color_;
        /**
         * <pre>
         * Format: AARRGGBB  Default: AAFF0000
         * </pre>
         *
         * <code>optional int32 color = 2;</code>
         * @return Whether the color field is set.
         */
        @java.lang.Override
        public boolean hasColor() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Format: AARRGGBB  Default: AAFF0000
         * </pre>
         *
         * <code>optional int32 color = 2;</code>
         * @return The color.
         */
        @java.lang.Override
        public int getColor() {
          return color_;
        }

        public static final int STROKE_SIZE_INDEX_FIELD_NUMBER = 3;
        private int strokeSizeIndex_;
        /**
         * <pre>
         * Range: 0~8, IOS(8, 12, 14, 16, 18, 20, 22, 26, 30), Android(3, 5, 7, 12, 17, 25, 38, 57, 86)
         * </pre>
         *
         * <code>optional int32 stroke_size_index = 3;</code>
         * @return Whether the strokeSizeIndex field is set.
         */
        @java.lang.Override
        public boolean hasStrokeSizeIndex() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Range: 0~8, IOS(8, 12, 14, 16, 18, 20, 22, 26, 30), Android(3, 5, 7, 12, 17, 25, 38, 57, 86)
         * </pre>
         *
         * <code>optional int32 stroke_size_index = 3;</code>
         * @return The strokeSizeIndex.
         */
        @java.lang.Override
        public int getStrokeSizeIndex() {
          return strokeSizeIndex_;
        }

        public static final int POINTS_FIELD_NUMBER = 4;
        private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint> points_;
        /**
         * <pre>
         * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
         */
        @java.lang.Override
        public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint> getPointsList() {
          return points_;
        }
        /**
         * <pre>
         * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
         */
        @java.lang.Override
        public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPointOrBuilder> 
            getPointsOrBuilderList() {
          return points_;
        }
        /**
         * <pre>
         * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
         */
        @java.lang.Override
        public int getPointsCount() {
          return points_.size();
        }
        /**
         * <pre>
         * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint getPoints(int index) {
          return points_.get(index);
        }
        /**
         * <pre>
         * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
         * </pre>
         *
         * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPointOrBuilder getPointsOrBuilder(
            int index) {
          return points_.get(index);
        }

        public static final int BASEWIDTH_FIELD_NUMBER = 5;
        private float baseWidth_;
        /**
         * <code>optional float baseWidth = 5;</code>
         * @return Whether the baseWidth field is set.
         */
        @java.lang.Override
        public boolean hasBaseWidth() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional float baseWidth = 5;</code>
         * @return The baseWidth.
         */
        @java.lang.Override
        public float getBaseWidth() {
          return baseWidth_;
        }

        public static final int BASEHEIGHT_FIELD_NUMBER = 6;
        private float baseHeight_;
        /**
         * <code>optional float baseHeight = 6;</code>
         * @return Whether the baseHeight field is set.
         */
        @java.lang.Override
        public boolean hasBaseHeight() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional float baseHeight = 6;</code>
         * @return The baseHeight.
         */
        @java.lang.Override
        public float getBaseHeight() {
          return baseHeight_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeEnum(1, type_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeInt32(2, color_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeInt32(3, strokeSizeIndex_);
          }
          for (int i = 0; i < points_.size(); i++) {
            output.writeMessage(4, points_.get(i));
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeFloat(5, baseWidth_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            output.writeFloat(6, baseHeight_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, type_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(2, color_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(3, strokeSizeIndex_);
          }
          for (int i = 0; i < points_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(4, points_.get(i));
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(5, baseWidth_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(6, baseHeight_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction) obj;

          if (hasType() != other.hasType()) return false;
          if (hasType()) {
            if (type_ != other.type_) return false;
          }
          if (hasColor() != other.hasColor()) return false;
          if (hasColor()) {
            if (getColor()
                != other.getColor()) return false;
          }
          if (hasStrokeSizeIndex() != other.hasStrokeSizeIndex()) return false;
          if (hasStrokeSizeIndex()) {
            if (getStrokeSizeIndex()
                != other.getStrokeSizeIndex()) return false;
          }
          if (!getPointsList()
              .equals(other.getPointsList())) return false;
          if (hasBaseWidth() != other.hasBaseWidth()) return false;
          if (hasBaseWidth()) {
            if (java.lang.Float.floatToIntBits(getBaseWidth())
                != java.lang.Float.floatToIntBits(
                    other.getBaseWidth())) return false;
          }
          if (hasBaseHeight() != other.hasBaseHeight()) return false;
          if (hasBaseHeight()) {
            if (java.lang.Float.floatToIntBits(getBaseHeight())
                != java.lang.Float.floatToIntBits(
                    other.getBaseHeight())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasType()) {
            hash = (37 * hash) + TYPE_FIELD_NUMBER;
            hash = (53 * hash) + type_;
          }
          if (hasColor()) {
            hash = (37 * hash) + COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getColor();
          }
          if (hasStrokeSizeIndex()) {
            hash = (37 * hash) + STROKE_SIZE_INDEX_FIELD_NUMBER;
            hash = (53 * hash) + getStrokeSizeIndex();
          }
          if (getPointsCount() > 0) {
            hash = (37 * hash) + POINTS_FIELD_NUMBER;
            hash = (53 * hash) + getPointsList().hashCode();
          }
          if (hasBaseWidth()) {
            hash = (37 * hash) + BASEWIDTH_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getBaseWidth());
          }
          if (hasBaseHeight()) {
            hash = (37 * hash) + BASEHEIGHT_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getBaseHeight());
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code KMProto.KMProject.HandwritingAction}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.HandwritingAction)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingActionOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_HandwritingAction_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_HandwritingAction_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
              getPointsFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            type_ = 1;
            bitField0_ = (bitField0_ & ~0x00000001);
            color_ = 0;
            bitField0_ = (bitField0_ & ~0x00000002);
            strokeSizeIndex_ = 0;
            bitField0_ = (bitField0_ & ~0x00000004);
            if (pointsBuilder_ == null) {
              points_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              pointsBuilder_.clear();
            }
            baseWidth_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000010);
            baseHeight_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000020);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_HandwritingAction_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              to_bitField0_ |= 0x00000001;
            }
            result.type_ = type_;
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.color_ = color_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.strokeSizeIndex_ = strokeSizeIndex_;
              to_bitField0_ |= 0x00000004;
            }
            if (pointsBuilder_ == null) {
              if (((bitField0_ & 0x00000008) != 0)) {
                points_ = java.util.Collections.unmodifiableList(points_);
                bitField0_ = (bitField0_ & ~0x00000008);
              }
              result.points_ = points_;
            } else {
              result.points_ = pointsBuilder_.build();
            }
            if (((from_bitField0_ & 0x00000010) != 0)) {
              result.baseWidth_ = baseWidth_;
              to_bitField0_ |= 0x00000008;
            }
            if (((from_bitField0_ & 0x00000020) != 0)) {
              result.baseHeight_ = baseHeight_;
              to_bitField0_ |= 0x00000010;
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction.getDefaultInstance()) return this;
            if (other.hasType()) {
              setType(other.getType());
            }
            if (other.hasColor()) {
              setColor(other.getColor());
            }
            if (other.hasStrokeSizeIndex()) {
              setStrokeSizeIndex(other.getStrokeSizeIndex());
            }
            if (pointsBuilder_ == null) {
              if (!other.points_.isEmpty()) {
                if (points_.isEmpty()) {
                  points_ = other.points_;
                  bitField0_ = (bitField0_ & ~0x00000008);
                } else {
                  ensurePointsIsMutable();
                  points_.addAll(other.points_);
                }
                onChanged();
              }
            } else {
              if (!other.points_.isEmpty()) {
                if (pointsBuilder_.isEmpty()) {
                  pointsBuilder_.dispose();
                  pointsBuilder_ = null;
                  points_ = other.points_;
                  bitField0_ = (bitField0_ & ~0x00000008);
                  pointsBuilder_ = 
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                       getPointsFieldBuilder() : null;
                } else {
                  pointsBuilder_.addAllMessages(other.points_);
                }
              }
            }
            if (other.hasBaseWidth()) {
              setBaseWidth(other.getBaseWidth());
            }
            if (other.hasBaseHeight()) {
              setBaseHeight(other.getBaseHeight());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int type_ = 1;
          /**
           * <code>optional .KMProto.KMProject.DrawingType type = 1;</code>
           * @return Whether the type field is set.
           */
          @java.lang.Override public boolean hasType() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional .KMProto.KMProject.DrawingType type = 1;</code>
           * @return The type.
           */
          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingType getType() {
            @SuppressWarnings("deprecation")
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingType result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingType.valueOf(type_);
            return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingType.BRUSH_ERASER_ALL : result;
          }
          /**
           * <code>optional .KMProto.KMProject.DrawingType type = 1;</code>
           * @param value The type to set.
           * @return This builder for chaining.
           */
          public Builder setType(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.DrawingType value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            type_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>optional .KMProto.KMProject.DrawingType type = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearType() {
            bitField0_ = (bitField0_ & ~0x00000001);
            type_ = 1;
            onChanged();
            return this;
          }

          private int color_ ;
          /**
           * <pre>
           * Format: AARRGGBB  Default: AAFF0000
           * </pre>
           *
           * <code>optional int32 color = 2;</code>
           * @return Whether the color field is set.
           */
          @java.lang.Override
          public boolean hasColor() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <pre>
           * Format: AARRGGBB  Default: AAFF0000
           * </pre>
           *
           * <code>optional int32 color = 2;</code>
           * @return The color.
           */
          @java.lang.Override
          public int getColor() {
            return color_;
          }
          /**
           * <pre>
           * Format: AARRGGBB  Default: AAFF0000
           * </pre>
           *
           * <code>optional int32 color = 2;</code>
           * @param value The color to set.
           * @return This builder for chaining.
           */
          public Builder setColor(int value) {
            bitField0_ |= 0x00000002;
            color_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Format: AARRGGBB  Default: AAFF0000
           * </pre>
           *
           * <code>optional int32 color = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearColor() {
            bitField0_ = (bitField0_ & ~0x00000002);
            color_ = 0;
            onChanged();
            return this;
          }

          private int strokeSizeIndex_ ;
          /**
           * <pre>
           * Range: 0~8, IOS(8, 12, 14, 16, 18, 20, 22, 26, 30), Android(3, 5, 7, 12, 17, 25, 38, 57, 86)
           * </pre>
           *
           * <code>optional int32 stroke_size_index = 3;</code>
           * @return Whether the strokeSizeIndex field is set.
           */
          @java.lang.Override
          public boolean hasStrokeSizeIndex() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           * Range: 0~8, IOS(8, 12, 14, 16, 18, 20, 22, 26, 30), Android(3, 5, 7, 12, 17, 25, 38, 57, 86)
           * </pre>
           *
           * <code>optional int32 stroke_size_index = 3;</code>
           * @return The strokeSizeIndex.
           */
          @java.lang.Override
          public int getStrokeSizeIndex() {
            return strokeSizeIndex_;
          }
          /**
           * <pre>
           * Range: 0~8, IOS(8, 12, 14, 16, 18, 20, 22, 26, 30), Android(3, 5, 7, 12, 17, 25, 38, 57, 86)
           * </pre>
           *
           * <code>optional int32 stroke_size_index = 3;</code>
           * @param value The strokeSizeIndex to set.
           * @return This builder for chaining.
           */
          public Builder setStrokeSizeIndex(int value) {
            bitField0_ |= 0x00000004;
            strokeSizeIndex_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Range: 0~8, IOS(8, 12, 14, 16, 18, 20, 22, 26, 30), Android(3, 5, 7, 12, 17, 25, 38, 57, 86)
           * </pre>
           *
           * <code>optional int32 stroke_size_index = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearStrokeSizeIndex() {
            bitField0_ = (bitField0_ & ~0x00000004);
            strokeSizeIndex_ = 0;
            onChanged();
            return this;
          }

          private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint> points_ =
            java.util.Collections.emptyList();
          private void ensurePointsIsMutable() {
            if (!((bitField0_ & 0x00000008) != 0)) {
              points_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint>(points_);
              bitField0_ |= 0x00000008;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPointOrBuilder> pointsBuilder_;

          /**
           * <pre>
           * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
           */
          public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint> getPointsList() {
            if (pointsBuilder_ == null) {
              return java.util.Collections.unmodifiableList(points_);
            } else {
              return pointsBuilder_.getMessageList();
            }
          }
          /**
           * <pre>
           * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
           */
          public int getPointsCount() {
            if (pointsBuilder_ == null) {
              return points_.size();
            } else {
              return pointsBuilder_.getCount();
            }
          }
          /**
           * <pre>
           * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint getPoints(int index) {
            if (pointsBuilder_ == null) {
              return points_.get(index);
            } else {
              return pointsBuilder_.getMessage(index);
            }
          }
          /**
           * <pre>
           * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
           */
          public Builder setPoints(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint value) {
            if (pointsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensurePointsIsMutable();
              points_.set(index, value);
              onChanged();
            } else {
              pointsBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <pre>
           * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
           */
          public Builder setPoints(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.Builder builderForValue) {
            if (pointsBuilder_ == null) {
              ensurePointsIsMutable();
              points_.set(index, builderForValue.build());
              onChanged();
            } else {
              pointsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
           */
          public Builder addPoints(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint value) {
            if (pointsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensurePointsIsMutable();
              points_.add(value);
              onChanged();
            } else {
              pointsBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <pre>
           * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
           */
          public Builder addPoints(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint value) {
            if (pointsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensurePointsIsMutable();
              points_.add(index, value);
              onChanged();
            } else {
              pointsBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <pre>
           * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
           */
          public Builder addPoints(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.Builder builderForValue) {
            if (pointsBuilder_ == null) {
              ensurePointsIsMutable();
              points_.add(builderForValue.build());
              onChanged();
            } else {
              pointsBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
           */
          public Builder addPoints(
              int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.Builder builderForValue) {
            if (pointsBuilder_ == null) {
              ensurePointsIsMutable();
              points_.add(index, builderForValue.build());
              onChanged();
            } else {
              pointsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
           */
          public Builder addAllPoints(
              java.lang.Iterable<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint> values) {
            if (pointsBuilder_ == null) {
              ensurePointsIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, points_);
              onChanged();
            } else {
              pointsBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <pre>
           * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
           */
          public Builder clearPoints() {
            if (pointsBuilder_ == null) {
              points_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000008);
              onChanged();
            } else {
              pointsBuilder_.clear();
            }
            return this;
          }
          /**
           * <pre>
           * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
           */
          public Builder removePoints(int index) {
            if (pointsBuilder_ == null) {
              ensurePointsIsMutable();
              points_.remove(index);
              onChanged();
            } else {
              pointsBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <pre>
           * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.Builder getPointsBuilder(
              int index) {
            return getPointsFieldBuilder().getBuilder(index);
          }
          /**
           * <pre>
           * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPointOrBuilder getPointsOrBuilder(
              int index) {
            if (pointsBuilder_ == null) {
              return points_.get(index);  } else {
              return pointsBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <pre>
           * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
           */
          public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPointOrBuilder> 
               getPointsOrBuilderList() {
            if (pointsBuilder_ != null) {
              return pointsBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(points_);
            }
          }
          /**
           * <pre>
           * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.Builder addPointsBuilder() {
            return getPointsFieldBuilder().addBuilder(
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.getDefaultInstance());
          }
          /**
           * <pre>
           * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
           */
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.Builder addPointsBuilder(
              int index) {
            return getPointsFieldBuilder().addBuilder(
                index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.getDefaultInstance());
          }
          /**
           * <pre>
           * X, Y Range : scaled 0 ~ 1, Shape(Brush_eraser, Brush_pen, Brush_brush외)인 경우 2개 값만 유효.
           * </pre>
           *
           * <code>repeated .KMProto.KMProject.WritingPoint points = 4;</code>
           */
          public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.Builder> 
               getPointsBuilderList() {
            return getPointsFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilderV3<
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPointOrBuilder> 
              getPointsFieldBuilder() {
            if (pointsBuilder_ == null) {
              pointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPoint.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.WritingPointOrBuilder>(
                      points_,
                      ((bitField0_ & 0x00000008) != 0),
                      getParentForChildren(),
                      isClean());
              points_ = null;
            }
            return pointsBuilder_;
          }

          private float baseWidth_ ;
          /**
           * <code>optional float baseWidth = 5;</code>
           * @return Whether the baseWidth field is set.
           */
          @java.lang.Override
          public boolean hasBaseWidth() {
            return ((bitField0_ & 0x00000010) != 0);
          }
          /**
           * <code>optional float baseWidth = 5;</code>
           * @return The baseWidth.
           */
          @java.lang.Override
          public float getBaseWidth() {
            return baseWidth_;
          }
          /**
           * <code>optional float baseWidth = 5;</code>
           * @param value The baseWidth to set.
           * @return This builder for chaining.
           */
          public Builder setBaseWidth(float value) {
            bitField0_ |= 0x00000010;
            baseWidth_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float baseWidth = 5;</code>
           * @return This builder for chaining.
           */
          public Builder clearBaseWidth() {
            bitField0_ = (bitField0_ & ~0x00000010);
            baseWidth_ = 0F;
            onChanged();
            return this;
          }

          private float baseHeight_ ;
          /**
           * <code>optional float baseHeight = 6;</code>
           * @return Whether the baseHeight field is set.
           */
          @java.lang.Override
          public boolean hasBaseHeight() {
            return ((bitField0_ & 0x00000020) != 0);
          }
          /**
           * <code>optional float baseHeight = 6;</code>
           * @return The baseHeight.
           */
          @java.lang.Override
          public float getBaseHeight() {
            return baseHeight_;
          }
          /**
           * <code>optional float baseHeight = 6;</code>
           * @param value The baseHeight to set.
           * @return This builder for chaining.
           */
          public Builder setBaseHeight(float value) {
            bitField0_ |= 0x00000020;
            baseHeight_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float baseHeight = 6;</code>
           * @return This builder for chaining.
           */
          public Builder clearBaseHeight() {
            bitField0_ = (bitField0_ & ~0x00000020);
            baseHeight_ = 0F;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.HandwritingAction)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.HandwritingAction)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<HandwritingAction>
            PARSER = new com.google.protobuf.AbstractParser<HandwritingAction>() {
          @java.lang.Override
          public HandwritingAction parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new HandwritingAction(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<HandwritingAction> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<HandwritingAction> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.HandwritingAction getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface ColorEffectOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.ColorEffect)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional float brightness = 1;</code>
         * @return Whether the brightness field is set.
         */
        boolean hasBrightness();
        /**
         * <code>optional float brightness = 1;</code>
         * @return The brightness.
         */
        float getBrightness();

        /**
         * <code>optional float contrast = 2;</code>
         * @return Whether the contrast field is set.
         */
        boolean hasContrast();
        /**
         * <code>optional float contrast = 2;</code>
         * @return The contrast.
         */
        float getContrast();

        /**
         * <code>optional float saturation = 3;</code>
         * @return Whether the saturation field is set.
         */
        boolean hasSaturation();
        /**
         * <code>optional float saturation = 3;</code>
         * @return The saturation.
         */
        float getSaturation();

        /**
         * <code>optional fixed32 tint_color = 4;</code>
         * @return Whether the tintColor field is set.
         */
        boolean hasTintColor();
        /**
         * <code>optional fixed32 tint_color = 4;</code>
         * @return The tintColor.
         */
        int getTintColor();

        /**
         * <code>optional string preset_name = 5;</code>
         * @return Whether the presetName field is set.
         */
        boolean hasPresetName();
        /**
         * <code>optional string preset_name = 5;</code>
         * @return The presetName.
         */
        java.lang.String getPresetName();
        /**
         * <code>optional string preset_name = 5;</code>
         * @return The bytes for presetName.
         */
        com.google.protobuf.ByteString
            getPresetNameBytes();
      }
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * Protobuf type {@code KMProto.KMProject.ColorEffect}
       */
      public static final class ColorEffect extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.ColorEffect)
          ColorEffectOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use ColorEffect.newBuilder() to construct.
        private ColorEffect(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private ColorEffect() {
          presetName_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new ColorEffect();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private ColorEffect(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 13: {
                  bitField0_ |= 0x00000001;
                  brightness_ = input.readFloat();
                  break;
                }
                case 21: {
                  bitField0_ |= 0x00000002;
                  contrast_ = input.readFloat();
                  break;
                }
                case 29: {
                  bitField0_ |= 0x00000004;
                  saturation_ = input.readFloat();
                  break;
                }
                case 37: {
                  bitField0_ |= 0x00000008;
                  tintColor_ = input.readFixed32();
                  break;
                }
                case 42: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000010;
                  presetName_ = bs;
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ColorEffect_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ColorEffect_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.Builder.class);
        }

        private int bitField0_;
        public static final int BRIGHTNESS_FIELD_NUMBER = 1;
        private float brightness_;
        /**
         * <code>optional float brightness = 1;</code>
         * @return Whether the brightness field is set.
         */
        @java.lang.Override
        public boolean hasBrightness() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional float brightness = 1;</code>
         * @return The brightness.
         */
        @java.lang.Override
        public float getBrightness() {
          return brightness_;
        }

        public static final int CONTRAST_FIELD_NUMBER = 2;
        private float contrast_;
        /**
         * <code>optional float contrast = 2;</code>
         * @return Whether the contrast field is set.
         */
        @java.lang.Override
        public boolean hasContrast() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional float contrast = 2;</code>
         * @return The contrast.
         */
        @java.lang.Override
        public float getContrast() {
          return contrast_;
        }

        public static final int SATURATION_FIELD_NUMBER = 3;
        private float saturation_;
        /**
         * <code>optional float saturation = 3;</code>
         * @return Whether the saturation field is set.
         */
        @java.lang.Override
        public boolean hasSaturation() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional float saturation = 3;</code>
         * @return The saturation.
         */
        @java.lang.Override
        public float getSaturation() {
          return saturation_;
        }

        public static final int TINT_COLOR_FIELD_NUMBER = 4;
        private int tintColor_;
        /**
         * <code>optional fixed32 tint_color = 4;</code>
         * @return Whether the tintColor field is set.
         */
        @java.lang.Override
        public boolean hasTintColor() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional fixed32 tint_color = 4;</code>
         * @return The tintColor.
         */
        @java.lang.Override
        public int getTintColor() {
          return tintColor_;
        }

        public static final int PRESET_NAME_FIELD_NUMBER = 5;
        private volatile java.lang.Object presetName_;
        /**
         * <code>optional string preset_name = 5;</code>
         * @return Whether the presetName field is set.
         */
        @java.lang.Override
        public boolean hasPresetName() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional string preset_name = 5;</code>
         * @return The presetName.
         */
        @java.lang.Override
        public java.lang.String getPresetName() {
          java.lang.Object ref = presetName_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              presetName_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string preset_name = 5;</code>
         * @return The bytes for presetName.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getPresetNameBytes() {
          java.lang.Object ref = presetName_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            presetName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeFloat(1, brightness_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeFloat(2, contrast_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeFloat(3, saturation_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeFixed32(4, tintColor_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 5, presetName_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(1, brightness_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(2, contrast_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(3, saturation_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFixed32Size(4, tintColor_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, presetName_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect) obj;

          if (hasBrightness() != other.hasBrightness()) return false;
          if (hasBrightness()) {
            if (java.lang.Float.floatToIntBits(getBrightness())
                != java.lang.Float.floatToIntBits(
                    other.getBrightness())) return false;
          }
          if (hasContrast() != other.hasContrast()) return false;
          if (hasContrast()) {
            if (java.lang.Float.floatToIntBits(getContrast())
                != java.lang.Float.floatToIntBits(
                    other.getContrast())) return false;
          }
          if (hasSaturation() != other.hasSaturation()) return false;
          if (hasSaturation()) {
            if (java.lang.Float.floatToIntBits(getSaturation())
                != java.lang.Float.floatToIntBits(
                    other.getSaturation())) return false;
          }
          if (hasTintColor() != other.hasTintColor()) return false;
          if (hasTintColor()) {
            if (getTintColor()
                != other.getTintColor()) return false;
          }
          if (hasPresetName() != other.hasPresetName()) return false;
          if (hasPresetName()) {
            if (!getPresetName()
                .equals(other.getPresetName())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasBrightness()) {
            hash = (37 * hash) + BRIGHTNESS_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getBrightness());
          }
          if (hasContrast()) {
            hash = (37 * hash) + CONTRAST_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getContrast());
          }
          if (hasSaturation()) {
            hash = (37 * hash) + SATURATION_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getSaturation());
          }
          if (hasTintColor()) {
            hash = (37 * hash) + TINT_COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getTintColor();
          }
          if (hasPresetName()) {
            hash = (37 * hash) + PRESET_NAME_FIELD_NUMBER;
            hash = (53 * hash) + getPresetName().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * Protobuf type {@code KMProto.KMProject.ColorEffect}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.ColorEffect)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffectOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ColorEffect_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ColorEffect_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            brightness_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000001);
            contrast_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000002);
            saturation_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000004);
            tintColor_ = 0;
            bitField0_ = (bitField0_ & ~0x00000008);
            presetName_ = "";
            bitField0_ = (bitField0_ & ~0x00000010);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ColorEffect_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.brightness_ = brightness_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.contrast_ = contrast_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.saturation_ = saturation_;
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.tintColor_ = tintColor_;
              to_bitField0_ |= 0x00000008;
            }
            if (((from_bitField0_ & 0x00000010) != 0)) {
              to_bitField0_ |= 0x00000010;
            }
            result.presetName_ = presetName_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect.getDefaultInstance()) return this;
            if (other.hasBrightness()) {
              setBrightness(other.getBrightness());
            }
            if (other.hasContrast()) {
              setContrast(other.getContrast());
            }
            if (other.hasSaturation()) {
              setSaturation(other.getSaturation());
            }
            if (other.hasTintColor()) {
              setTintColor(other.getTintColor());
            }
            if (other.hasPresetName()) {
              bitField0_ |= 0x00000010;
              presetName_ = other.presetName_;
              onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private float brightness_ ;
          /**
           * <code>optional float brightness = 1;</code>
           * @return Whether the brightness field is set.
           */
          @java.lang.Override
          public boolean hasBrightness() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional float brightness = 1;</code>
           * @return The brightness.
           */
          @java.lang.Override
          public float getBrightness() {
            return brightness_;
          }
          /**
           * <code>optional float brightness = 1;</code>
           * @param value The brightness to set.
           * @return This builder for chaining.
           */
          public Builder setBrightness(float value) {
            bitField0_ |= 0x00000001;
            brightness_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float brightness = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearBrightness() {
            bitField0_ = (bitField0_ & ~0x00000001);
            brightness_ = 0F;
            onChanged();
            return this;
          }

          private float contrast_ ;
          /**
           * <code>optional float contrast = 2;</code>
           * @return Whether the contrast field is set.
           */
          @java.lang.Override
          public boolean hasContrast() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional float contrast = 2;</code>
           * @return The contrast.
           */
          @java.lang.Override
          public float getContrast() {
            return contrast_;
          }
          /**
           * <code>optional float contrast = 2;</code>
           * @param value The contrast to set.
           * @return This builder for chaining.
           */
          public Builder setContrast(float value) {
            bitField0_ |= 0x00000002;
            contrast_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float contrast = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearContrast() {
            bitField0_ = (bitField0_ & ~0x00000002);
            contrast_ = 0F;
            onChanged();
            return this;
          }

          private float saturation_ ;
          /**
           * <code>optional float saturation = 3;</code>
           * @return Whether the saturation field is set.
           */
          @java.lang.Override
          public boolean hasSaturation() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <code>optional float saturation = 3;</code>
           * @return The saturation.
           */
          @java.lang.Override
          public float getSaturation() {
            return saturation_;
          }
          /**
           * <code>optional float saturation = 3;</code>
           * @param value The saturation to set.
           * @return This builder for chaining.
           */
          public Builder setSaturation(float value) {
            bitField0_ |= 0x00000004;
            saturation_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float saturation = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearSaturation() {
            bitField0_ = (bitField0_ & ~0x00000004);
            saturation_ = 0F;
            onChanged();
            return this;
          }

          private int tintColor_ ;
          /**
           * <code>optional fixed32 tint_color = 4;</code>
           * @return Whether the tintColor field is set.
           */
          @java.lang.Override
          public boolean hasTintColor() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <code>optional fixed32 tint_color = 4;</code>
           * @return The tintColor.
           */
          @java.lang.Override
          public int getTintColor() {
            return tintColor_;
          }
          /**
           * <code>optional fixed32 tint_color = 4;</code>
           * @param value The tintColor to set.
           * @return This builder for chaining.
           */
          public Builder setTintColor(int value) {
            bitField0_ |= 0x00000008;
            tintColor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional fixed32 tint_color = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearTintColor() {
            bitField0_ = (bitField0_ & ~0x00000008);
            tintColor_ = 0;
            onChanged();
            return this;
          }

          private java.lang.Object presetName_ = "";
          /**
           * <code>optional string preset_name = 5;</code>
           * @return Whether the presetName field is set.
           */
          public boolean hasPresetName() {
            return ((bitField0_ & 0x00000010) != 0);
          }
          /**
           * <code>optional string preset_name = 5;</code>
           * @return The presetName.
           */
          public java.lang.String getPresetName() {
            java.lang.Object ref = presetName_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                presetName_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string preset_name = 5;</code>
           * @return The bytes for presetName.
           */
          public com.google.protobuf.ByteString
              getPresetNameBytes() {
            java.lang.Object ref = presetName_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              presetName_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string preset_name = 5;</code>
           * @param value The presetName to set.
           * @return This builder for chaining.
           */
          public Builder setPresetName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
            presetName_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string preset_name = 5;</code>
           * @return This builder for chaining.
           */
          public Builder clearPresetName() {
            bitField0_ = (bitField0_ & ~0x00000010);
            presetName_ = getDefaultInstance().getPresetName();
            onChanged();
            return this;
          }
          /**
           * <code>optional string preset_name = 5;</code>
           * @param value The bytes for presetName to set.
           * @return This builder for chaining.
           */
          public Builder setPresetNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
            presetName_ = value;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.ColorEffect)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.ColorEffect)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<ColorEffect>
            PARSER = new com.google.protobuf.AbstractParser<ColorEffect>() {
          @java.lang.Override
          public ColorEffect parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new ColorEffect(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<ColorEffect> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ColorEffect> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorEffect getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface ColorFilterOrBuilder extends
          // @@protoc_insertion_point(interface_extends:KMProto.KMProject.ColorFilter)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional string filter = 1;</code>
         * @return Whether the filter field is set.
         */
        boolean hasFilter();
        /**
         * <code>optional string filter = 1;</code>
         * @return The filter.
         */
        java.lang.String getFilter();
        /**
         * <code>optional string filter = 1;</code>
         * @return The bytes for filter.
         */
        com.google.protobuf.ByteString
            getFilterBytes();

        /**
         * <pre>
         * Range : 0.0f ~ 1.0f
         * Type: float
         * Default: 1.0f
         * </pre>
         *
         * <code>optional float strength = 2;</code>
         * @return Whether the strength field is set.
         */
        boolean hasStrength();
        /**
         * <pre>
         * Range : 0.0f ~ 1.0f
         * Type: float
         * Default: 1.0f
         * </pre>
         *
         * <code>optional float strength = 2;</code>
         * @return The strength.
         */
        float getStrength();
      }
      /**
       * Protobuf type {@code KMProto.KMProject.ColorFilter}
       */
      public static final class ColorFilter extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:KMProto.KMProject.ColorFilter)
          ColorFilterOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use ColorFilter.newBuilder() to construct.
        private ColorFilter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private ColorFilter() {
          filter_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new ColorFilter();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private ColorFilter(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000001;
                  filter_ = bs;
                  break;
                }
                case 21: {
                  bitField0_ |= 0x00000002;
                  strength_ = input.readFloat();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ColorFilter_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ColorFilter_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.Builder.class);
        }

        private int bitField0_;
        public static final int FILTER_FIELD_NUMBER = 1;
        private volatile java.lang.Object filter_;
        /**
         * <code>optional string filter = 1;</code>
         * @return Whether the filter field is set.
         */
        @java.lang.Override
        public boolean hasFilter() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional string filter = 1;</code>
         * @return The filter.
         */
        @java.lang.Override
        public java.lang.String getFilter() {
          java.lang.Object ref = filter_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              filter_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string filter = 1;</code>
         * @return The bytes for filter.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getFilterBytes() {
          java.lang.Object ref = filter_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            filter_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int STRENGTH_FIELD_NUMBER = 2;
        private float strength_;
        /**
         * <pre>
         * Range : 0.0f ~ 1.0f
         * Type: float
         * Default: 1.0f
         * </pre>
         *
         * <code>optional float strength = 2;</code>
         * @return Whether the strength field is set.
         */
        @java.lang.Override
        public boolean hasStrength() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Range : 0.0f ~ 1.0f
         * Type: float
         * Default: 1.0f
         * </pre>
         *
         * <code>optional float strength = 2;</code>
         * @return The strength.
         */
        @java.lang.Override
        public float getStrength() {
          return strength_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, filter_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeFloat(2, strength_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, filter_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(2, strength_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter)) {
            return super.equals(obj);
          }
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter) obj;

          if (hasFilter() != other.hasFilter()) return false;
          if (hasFilter()) {
            if (!getFilter()
                .equals(other.getFilter())) return false;
          }
          if (hasStrength() != other.hasStrength()) return false;
          if (hasStrength()) {
            if (java.lang.Float.floatToIntBits(getStrength())
                != java.lang.Float.floatToIntBits(
                    other.getStrength())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasFilter()) {
            hash = (37 * hash) + FILTER_FIELD_NUMBER;
            hash = (53 * hash) + getFilter().hashCode();
          }
          if (hasStrength()) {
            hash = (37 * hash) + STRENGTH_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getStrength());
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code KMProto.KMProject.ColorFilter}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:KMProto.KMProject.ColorFilter)
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilterOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ColorFilter_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ColorFilter_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.Builder.class);
          }

          // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            filter_ = "";
            bitField0_ = (bitField0_ & ~0x00000001);
            strength_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_ColorFilter_descriptor;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter getDefaultInstanceForType() {
            return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.getDefaultInstance();
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter build() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter buildPartial() {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              to_bitField0_ |= 0x00000001;
            }
            result.filter_ = filter_;
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.strength_ = strength_;
              to_bitField0_ |= 0x00000002;
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter) {
              return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter other) {
            if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter.getDefaultInstance()) return this;
            if (other.hasFilter()) {
              bitField0_ |= 0x00000001;
              filter_ = other.filter_;
              onChanged();
            }
            if (other.hasStrength()) {
              setStrength(other.getStrength());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object filter_ = "";
          /**
           * <code>optional string filter = 1;</code>
           * @return Whether the filter field is set.
           */
          public boolean hasFilter() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional string filter = 1;</code>
           * @return The filter.
           */
          public java.lang.String getFilter() {
            java.lang.Object ref = filter_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                filter_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string filter = 1;</code>
           * @return The bytes for filter.
           */
          public com.google.protobuf.ByteString
              getFilterBytes() {
            java.lang.Object ref = filter_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              filter_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string filter = 1;</code>
           * @param value The filter to set.
           * @return This builder for chaining.
           */
          public Builder setFilter(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            filter_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string filter = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearFilter() {
            bitField0_ = (bitField0_ & ~0x00000001);
            filter_ = getDefaultInstance().getFilter();
            onChanged();
            return this;
          }
          /**
           * <code>optional string filter = 1;</code>
           * @param value The bytes for filter to set.
           * @return This builder for chaining.
           */
          public Builder setFilterBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            filter_ = value;
            onChanged();
            return this;
          }

          private float strength_ ;
          /**
           * <pre>
           * Range : 0.0f ~ 1.0f
           * Type: float
           * Default: 1.0f
           * </pre>
           *
           * <code>optional float strength = 2;</code>
           * @return Whether the strength field is set.
           */
          @java.lang.Override
          public boolean hasStrength() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <pre>
           * Range : 0.0f ~ 1.0f
           * Type: float
           * Default: 1.0f
           * </pre>
           *
           * <code>optional float strength = 2;</code>
           * @return The strength.
           */
          @java.lang.Override
          public float getStrength() {
            return strength_;
          }
          /**
           * <pre>
           * Range : 0.0f ~ 1.0f
           * Type: float
           * Default: 1.0f
           * </pre>
           *
           * <code>optional float strength = 2;</code>
           * @param value The strength to set.
           * @return This builder for chaining.
           */
          public Builder setStrength(float value) {
            bitField0_ |= 0x00000002;
            strength_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Range : 0.0f ~ 1.0f
           * Type: float
           * Default: 1.0f
           * </pre>
           *
           * <code>optional float strength = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearStrength() {
            bitField0_ = (bitField0_ & ~0x00000002);
            strength_ = 0F;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:KMProto.KMProject.ColorFilter)
        }

        // @@protoc_insertion_point(class_scope:KMProto.KMProject.ColorFilter)
        private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter();
        }

        public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<ColorFilter>
            PARSER = new com.google.protobuf.AbstractParser<ColorFilter>() {
          @java.lang.Override
          public ColorFilter parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new ColorFilter(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<ColorFilter> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ColorFilter> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.ColorFilter getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int bitField0_;
      public static final int TIMELINE_FORMAT_VERSION_FIELD_NUMBER = 100;
      private int timelineFormatVersion_;
      /**
       * <code>optional int32 timeline_format_version = 100;</code>
       * @return Whether the timelineFormatVersion field is set.
       */
      @java.lang.Override
      public boolean hasTimelineFormatVersion() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 timeline_format_version = 100;</code>
       * @return The timelineFormatVersion.
       */
      @java.lang.Override
      public int getTimelineFormatVersion() {
        return timelineFormatVersion_;
      }

      public static final int PRIMARY_ITEMS_FIELD_NUMBER = 1;
      private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem> primaryItems_;
      /**
       * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
       */
      @java.lang.Override
      public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem> getPrimaryItemsList() {
        return primaryItems_;
      }
      /**
       * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
       */
      @java.lang.Override
      public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder> 
          getPrimaryItemsOrBuilderList() {
        return primaryItems_;
      }
      /**
       * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
       */
      @java.lang.Override
      public int getPrimaryItemsCount() {
        return primaryItems_.size();
      }
      /**
       * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
       */
      @java.lang.Override
      public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem getPrimaryItems(int index) {
        return primaryItems_.get(index);
      }
      /**
       * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
       */
      @java.lang.Override
      public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder getPrimaryItemsOrBuilder(
          int index) {
        return primaryItems_.get(index);
      }

      public static final int SECONDARY_ITEMS_FIELD_NUMBER = 2;
      private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem> secondaryItems_;
      /**
       * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
       */
      @java.lang.Override
      public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem> getSecondaryItemsList() {
        return secondaryItems_;
      }
      /**
       * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
       */
      @java.lang.Override
      public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder> 
          getSecondaryItemsOrBuilderList() {
        return secondaryItems_;
      }
      /**
       * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
       */
      @java.lang.Override
      public int getSecondaryItemsCount() {
        return secondaryItems_.size();
      }
      /**
       * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
       */
      @java.lang.Override
      public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem getSecondaryItems(int index) {
        return secondaryItems_.get(index);
      }
      /**
       * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
       */
      @java.lang.Override
      public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder getSecondaryItemsOrBuilder(
          int index) {
        return secondaryItems_.get(index);
      }

      public static final int TRACKS_FIELD_NUMBER = 3;
      private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track> tracks_;
      /**
       * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
       */
      @java.lang.Override
      public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track> getTracksList() {
        return tracks_;
      }
      /**
       * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
       */
      @java.lang.Override
      public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TrackOrBuilder> 
          getTracksOrBuilderList() {
        return tracks_;
      }
      /**
       * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
       */
      @java.lang.Override
      public int getTracksCount() {
        return tracks_.size();
      }
      /**
       * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
       */
      @java.lang.Override
      public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track getTracks(int index) {
        return tracks_.get(index);
      }
      /**
       * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
       */
      @java.lang.Override
      public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TrackOrBuilder getTracksOrBuilder(
          int index) {
        return tracks_.get(index);
      }

      public static final int BOOKMARKS_FIELD_NUMBER = 103;
      private com.google.protobuf.Internal.IntList bookmarks_;
      /**
       * <code>repeated uint32 bookmarks = 103 [packed = true];</code>
       * @return A list containing the bookmarks.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getBookmarksList() {
        return bookmarks_;
      }
      /**
       * <code>repeated uint32 bookmarks = 103 [packed = true];</code>
       * @return The count of bookmarks.
       */
      public int getBookmarksCount() {
        return bookmarks_.size();
      }
      /**
       * <code>repeated uint32 bookmarks = 103 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The bookmarks at the given index.
       */
      public int getBookmarks(int index) {
        return bookmarks_.getInt(index);
      }
      private int bookmarksMemoizedSerializedSize = -1;

      public static final int RECENT_SCROLL_TIME_FIELD_NUMBER = 109;
      private int recentScrollTime_;
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional int32 recent_scroll_time = 109;</code>
       * @return Whether the recentScrollTime field is set.
       */
      @java.lang.Override
      public boolean hasRecentScrollTime() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional int32 recent_scroll_time = 109;</code>
       * @return The recentScrollTime.
       */
      @java.lang.Override
      public int getRecentScrollTime() {
        return recentScrollTime_;
      }

      public static final int PROJECT_RATIO_FIELD_NUMBER = 111;
      private int projectRatio_;
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional .KMProto.KMProject.AspectRatio project_ratio = 111;</code>
       * @return Whether the projectRatio field is set.
       */
      @java.lang.Override public boolean hasProjectRatio() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional .KMProto.KMProject.AspectRatio project_ratio = 111;</code>
       * @return The projectRatio.
       */
      @java.lang.Override public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AspectRatio getProjectRatio() {
        @SuppressWarnings("deprecation")
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AspectRatio result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AspectRatio.valueOf(projectRatio_);
        return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AspectRatio.ASPECT_R_16_9 : result;
      }

      public static final int PROJECT_AUDIO_FADE_IN_TIME_FIELD_NUMBER = 112;
      private float projectAudioFadeInTime_;
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional float project_audio_fade_in_time = 112;</code>
       * @return Whether the projectAudioFadeInTime field is set.
       */
      @java.lang.Override
      public boolean hasProjectAudioFadeInTime() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional float project_audio_fade_in_time = 112;</code>
       * @return The projectAudioFadeInTime.
       */
      @java.lang.Override
      public float getProjectAudioFadeInTime() {
        return projectAudioFadeInTime_;
      }

      public static final int PROJECT_AUDIO_FADE_OUT_TIME_FIELD_NUMBER = 113;
      private float projectAudioFadeOutTime_;
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional float project_audio_fade_out_time = 113;</code>
       * @return Whether the projectAudioFadeOutTime field is set.
       */
      @java.lang.Override
      public boolean hasProjectAudioFadeOutTime() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional float project_audio_fade_out_time = 113;</code>
       * @return The projectAudioFadeOutTime.
       */
      @java.lang.Override
      public float getProjectAudioFadeOutTime() {
        return projectAudioFadeOutTime_;
      }

      public static final int IS_PROJECT_AUDIO_FADE_IN_ON_FIELD_NUMBER = 114;
      private boolean isProjectAudioFadeInOn_;
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional bool is_project_audio_fade_in_on = 114;</code>
       * @return Whether the isProjectAudioFadeInOn field is set.
       */
      @java.lang.Override
      public boolean hasIsProjectAudioFadeInOn() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional bool is_project_audio_fade_in_on = 114;</code>
       * @return The isProjectAudioFadeInOn.
       */
      @java.lang.Override
      public boolean getIsProjectAudioFadeInOn() {
        return isProjectAudioFadeInOn_;
      }

      public static final int IS_PROJECT_AUDIO_FADE_OUT_ON_FIELD_NUMBER = 115;
      private boolean isProjectAudioFadeOutOn_;
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional bool is_project_audio_fade_out_on = 115;</code>
       * @return Whether the isProjectAudioFadeOutOn field is set.
       */
      @java.lang.Override
      public boolean hasIsProjectAudioFadeOutOn() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional bool is_project_audio_fade_out_on = 115;</code>
       * @return The isProjectAudioFadeOutOn.
       */
      @java.lang.Override
      public boolean getIsProjectAudioFadeOutOn() {
        return isProjectAudioFadeOutOn_;
      }

      public static final int PROJECT_VIDEO_FADE_IN_TIME_FIELD_NUMBER = 120;
      private float projectVideoFadeInTime_;
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional float project_video_fade_in_time = 120;</code>
       * @return Whether the projectVideoFadeInTime field is set.
       */
      @java.lang.Override
      public boolean hasProjectVideoFadeInTime() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional float project_video_fade_in_time = 120;</code>
       * @return The projectVideoFadeInTime.
       */
      @java.lang.Override
      public float getProjectVideoFadeInTime() {
        return projectVideoFadeInTime_;
      }

      public static final int PROJECT_VIDEO_FADE_OUT_TIME_FIELD_NUMBER = 121;
      private float projectVideoFadeOutTime_;
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional float project_video_fade_out_time = 121;</code>
       * @return Whether the projectVideoFadeOutTime field is set.
       */
      @java.lang.Override
      public boolean hasProjectVideoFadeOutTime() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional float project_video_fade_out_time = 121;</code>
       * @return The projectVideoFadeOutTime.
       */
      @java.lang.Override
      public float getProjectVideoFadeOutTime() {
        return projectVideoFadeOutTime_;
      }

      public static final int IS_PROJECT_VIDEO_FADE_IN_ON_FIELD_NUMBER = 122;
      private boolean isProjectVideoFadeInOn_;
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional bool is_project_video_fade_in_on = 122;</code>
       * @return Whether the isProjectVideoFadeInOn field is set.
       */
      @java.lang.Override
      public boolean hasIsProjectVideoFadeInOn() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional bool is_project_video_fade_in_on = 122;</code>
       * @return The isProjectVideoFadeInOn.
       */
      @java.lang.Override
      public boolean getIsProjectVideoFadeInOn() {
        return isProjectVideoFadeInOn_;
      }

      public static final int IS_PROJECT_VIDEO_FADE_OUT_ON_FIELD_NUMBER = 123;
      private boolean isProjectVideoFadeOutOn_;
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional bool is_project_video_fade_out_on = 123;</code>
       * @return Whether the isProjectVideoFadeOutOn field is set.
       */
      @java.lang.Override
      public boolean hasIsProjectVideoFadeOutOn() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional bool is_project_video_fade_out_on = 123;</code>
       * @return The isProjectVideoFadeOutOn.
       */
      @java.lang.Override
      public boolean getIsProjectVideoFadeOutOn() {
        return isProjectVideoFadeOutOn_;
      }

      public static final int PROJECT_DEFAULT_IMG_DURATION_FIELD_NUMBER = 124;
      private int projectDefaultImgDuration_;
      /**
       * <code>optional int32 project_default_img_duration = 124;</code>
       * @return Whether the projectDefaultImgDuration field is set.
       */
      @java.lang.Override
      public boolean hasProjectDefaultImgDuration() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <code>optional int32 project_default_img_duration = 124;</code>
       * @return The projectDefaultImgDuration.
       */
      @java.lang.Override
      public int getProjectDefaultImgDuration() {
        return projectDefaultImgDuration_;
      }

      public static final int PROJECT_DEFAULT_LAYER_DURATION_FIELD_NUMBER = 125;
      private int projectDefaultLayerDuration_;
      /**
       * <code>optional int32 project_default_layer_duration = 125;</code>
       * @return Whether the projectDefaultLayerDuration field is set.
       */
      @java.lang.Override
      public boolean hasProjectDefaultLayerDuration() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>optional int32 project_default_layer_duration = 125;</code>
       * @return The projectDefaultLayerDuration.
       */
      @java.lang.Override
      public int getProjectDefaultLayerDuration() {
        return projectDefaultLayerDuration_;
      }

      public static final int PROJECT_DEFAULT_IMG_CROP_MODE_FIELD_NUMBER = 126;
      private volatile java.lang.Object projectDefaultImgCropMode_;
      /**
       * <code>optional string project_default_img_crop_mode = 126;</code>
       * @return Whether the projectDefaultImgCropMode field is set.
       */
      @java.lang.Override
      public boolean hasProjectDefaultImgCropMode() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <code>optional string project_default_img_crop_mode = 126;</code>
       * @return The projectDefaultImgCropMode.
       */
      @java.lang.Override
      public java.lang.String getProjectDefaultImgCropMode() {
        java.lang.Object ref = projectDefaultImgCropMode_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            projectDefaultImgCropMode_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string project_default_img_crop_mode = 126;</code>
       * @return The bytes for projectDefaultImgCropMode.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getProjectDefaultImgCropModeBytes() {
        java.lang.Object ref = projectDefaultImgCropMode_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          projectDefaultImgCropMode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int PROJECT_AUTO_MASTER_FIELD_NUMBER = 127;
      private boolean projectAutoMaster_;
      /**
       * <code>optional bool project_auto_master = 127;</code>
       * @return Whether the projectAutoMaster field is set.
       */
      @java.lang.Override
      public boolean hasProjectAutoMaster() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <code>optional bool project_auto_master = 127;</code>
       * @return The projectAutoMaster.
       */
      @java.lang.Override
      public boolean getProjectAutoMaster() {
        return projectAutoMaster_;
      }

      public static final int PROJECT_MASTER_VOLUME_FIELD_NUMBER = 128;
      private int projectMasterVolume_;
      /**
       * <code>optional int32 project_master_volume = 128;</code>
       * @return Whether the projectMasterVolume field is set.
       */
      @java.lang.Override
      public boolean hasProjectMasterVolume() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <code>optional int32 project_master_volume = 128;</code>
       * @return The projectMasterVolume.
       */
      @java.lang.Override
      public int getProjectMasterVolume() {
        return projectMasterVolume_;
      }

      public static final int PROJECT_RESOLUTION_SETTING_FIELD_NUMBER = 129;
      private int projectResolutionSetting_;
      /**
       * <code>optional int32 project_resolution_setting = 129;</code>
       * @return Whether the projectResolutionSetting field is set.
       */
      @java.lang.Override
      public boolean hasProjectResolutionSetting() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <code>optional int32 project_resolution_setting = 129;</code>
       * @return The projectResolutionSetting.
       */
      @java.lang.Override
      public int getProjectResolutionSetting() {
        return projectResolutionSetting_;
      }

      public static final int PROJECT_FRAME_RATE_FIELD_NUMBER = 130;
      private int projectFrameRate_;
      /**
       * <code>optional int32 project_frame_rate = 130;</code>
       * @return Whether the projectFrameRate field is set.
       */
      @java.lang.Override
      public boolean hasProjectFrameRate() {
        return ((bitField0_ & 0x00020000) != 0);
      }
      /**
       * <code>optional int32 project_frame_rate = 130;</code>
       * @return The projectFrameRate.
       */
      @java.lang.Override
      public int getProjectFrameRate() {
        return projectFrameRate_;
      }

      public static final int PROJECT_DEFAULT_IMG_CROP_MODE_IOS_FIELD_NUMBER = 131;
      private int projectDefaultImgCropModeIos_;
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional int32 project_default_img_crop_mode_ios = 131;</code>
       * @return Whether the projectDefaultImgCropModeIos field is set.
       */
      @java.lang.Override
      public boolean hasProjectDefaultImgCropModeIos() {
        return ((bitField0_ & 0x00040000) != 0);
      }
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional int32 project_default_img_crop_mode_ios = 131;</code>
       * @return The projectDefaultImgCropModeIos.
       */
      @java.lang.Override
      public int getProjectDefaultImgCropModeIos() {
        return projectDefaultImgCropModeIos_;
      }

      public static final int PROJECT_CAPABILITY_MODE_FIELD_NUMBER = 132;
      private int projectCapabilityMode_;
      /**
       * <code>optional int32 project_capability_mode = 132;</code>
       * @return Whether the projectCapabilityMode field is set.
       */
      @java.lang.Override
      public boolean hasProjectCapabilityMode() {
        return ((bitField0_ & 0x00080000) != 0);
      }
      /**
       * <code>optional int32 project_capability_mode = 132;</code>
       * @return The projectCapabilityMode.
       */
      @java.lang.Override
      public int getProjectCapabilityMode() {
        return projectCapabilityMode_;
      }

      public static final int ASPECT_RATIO_WIDTH_FIELD_NUMBER = 133;
      private int aspectRatioWidth_;
      /**
       * <code>optional int32 aspect_ratio_width = 133;</code>
       * @return Whether the aspectRatioWidth field is set.
       */
      @java.lang.Override
      public boolean hasAspectRatioWidth() {
        return ((bitField0_ & 0x00100000) != 0);
      }
      /**
       * <code>optional int32 aspect_ratio_width = 133;</code>
       * @return The aspectRatioWidth.
       */
      @java.lang.Override
      public int getAspectRatioWidth() {
        return aspectRatioWidth_;
      }

      public static final int ASPECT_RATIO_HEIGHT_FIELD_NUMBER = 134;
      private int aspectRatioHeight_;
      /**
       * <code>optional int32 aspect_ratio_height = 134;</code>
       * @return Whether the aspectRatioHeight field is set.
       */
      @java.lang.Override
      public boolean hasAspectRatioHeight() {
        return ((bitField0_ & 0x00200000) != 0);
      }
      /**
       * <code>optional int32 aspect_ratio_height = 134;</code>
       * @return The aspectRatioHeight.
       */
      @java.lang.Override
      public int getAspectRatioHeight() {
        return aspectRatioHeight_;
      }

      public static final int AUDIO_FADE_FIELD_NUMBER = 135;
      private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade audioFade_;
      /**
       * <pre>
       * new for project share
       * </pre>
       *
       * <code>optional .KMProto.KMProject.Fade audio_fade = 135;</code>
       * @return Whether the audioFade field is set.
       */
      @java.lang.Override
      public boolean hasAudioFade() {
        return ((bitField0_ & 0x00400000) != 0);
      }
      /**
       * <pre>
       * new for project share
       * </pre>
       *
       * <code>optional .KMProto.KMProject.Fade audio_fade = 135;</code>
       * @return The audioFade.
       */
      @java.lang.Override
      public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade getAudioFade() {
        return audioFade_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.getDefaultInstance() : audioFade_;
      }
      /**
       * <pre>
       * new for project share
       * </pre>
       *
       * <code>optional .KMProto.KMProject.Fade audio_fade = 135;</code>
       */
      @java.lang.Override
      public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.FadeOrBuilder getAudioFadeOrBuilder() {
        return audioFade_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.getDefaultInstance() : audioFade_;
      }

      public static final int VIDEO_FADE_FIELD_NUMBER = 136;
      private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade videoFade_;
      /**
       * <code>optional .KMProto.KMProject.Fade video_fade = 136;</code>
       * @return Whether the videoFade field is set.
       */
      @java.lang.Override
      public boolean hasVideoFade() {
        return ((bitField0_ & 0x00800000) != 0);
      }
      /**
       * <code>optional .KMProto.KMProject.Fade video_fade = 136;</code>
       * @return The videoFade.
       */
      @java.lang.Override
      public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade getVideoFade() {
        return videoFade_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.getDefaultInstance() : videoFade_;
      }
      /**
       * <code>optional .KMProto.KMProject.Fade video_fade = 136;</code>
       */
      @java.lang.Override
      public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.FadeOrBuilder getVideoFadeOrBuilder() {
        return videoFade_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.getDefaultInstance() : videoFade_;
      }

      public static final int PROJECT_DEFAULT_TRANSITION_DURATION_FIELD_NUMBER = 137;
      private int projectDefaultTransitionDuration_;
      /**
       * <code>optional int32 project_default_transition_duration = 137;</code>
       * @return Whether the projectDefaultTransitionDuration field is set.
       */
      @java.lang.Override
      public boolean hasProjectDefaultTransitionDuration() {
        return ((bitField0_ & 0x01000000) != 0);
      }
      /**
       * <code>optional int32 project_default_transition_duration = 137;</code>
       * @return The projectDefaultTransitionDuration.
       */
      @java.lang.Override
      public int getProjectDefaultTransitionDuration() {
        return projectDefaultTransitionDuration_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < primaryItems_.size(); i++) {
          output.writeMessage(1, primaryItems_.get(i));
        }
        for (int i = 0; i < secondaryItems_.size(); i++) {
          output.writeMessage(2, secondaryItems_.get(i));
        }
        for (int i = 0; i < tracks_.size(); i++) {
          output.writeMessage(3, tracks_.get(i));
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt32(100, timelineFormatVersion_);
        }
        if (getBookmarksList().size() > 0) {
          output.writeUInt32NoTag(826);
          output.writeUInt32NoTag(bookmarksMemoizedSerializedSize);
        }
        for (int i = 0; i < bookmarks_.size(); i++) {
          output.writeUInt32NoTag(bookmarks_.getInt(i));
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeInt32(109, recentScrollTime_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeEnum(111, projectRatio_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeFloat(112, projectAudioFadeInTime_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeFloat(113, projectAudioFadeOutTime_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeBool(114, isProjectAudioFadeInOn_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeBool(115, isProjectAudioFadeOutOn_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          output.writeFloat(120, projectVideoFadeInTime_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          output.writeFloat(121, projectVideoFadeOutTime_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          output.writeBool(122, isProjectVideoFadeInOn_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          output.writeBool(123, isProjectVideoFadeOutOn_);
        }
        if (((bitField0_ & 0x00000800) != 0)) {
          output.writeInt32(124, projectDefaultImgDuration_);
        }
        if (((bitField0_ & 0x00001000) != 0)) {
          output.writeInt32(125, projectDefaultLayerDuration_);
        }
        if (((bitField0_ & 0x00002000) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 126, projectDefaultImgCropMode_);
        }
        if (((bitField0_ & 0x00004000) != 0)) {
          output.writeBool(127, projectAutoMaster_);
        }
        if (((bitField0_ & 0x00008000) != 0)) {
          output.writeInt32(128, projectMasterVolume_);
        }
        if (((bitField0_ & 0x00010000) != 0)) {
          output.writeInt32(129, projectResolutionSetting_);
        }
        if (((bitField0_ & 0x00020000) != 0)) {
          output.writeInt32(130, projectFrameRate_);
        }
        if (((bitField0_ & 0x00040000) != 0)) {
          output.writeInt32(131, projectDefaultImgCropModeIos_);
        }
        if (((bitField0_ & 0x00080000) != 0)) {
          output.writeInt32(132, projectCapabilityMode_);
        }
        if (((bitField0_ & 0x00100000) != 0)) {
          output.writeInt32(133, aspectRatioWidth_);
        }
        if (((bitField0_ & 0x00200000) != 0)) {
          output.writeInt32(134, aspectRatioHeight_);
        }
        if (((bitField0_ & 0x00400000) != 0)) {
          output.writeMessage(135, getAudioFade());
        }
        if (((bitField0_ & 0x00800000) != 0)) {
          output.writeMessage(136, getVideoFade());
        }
        if (((bitField0_ & 0x01000000) != 0)) {
          output.writeInt32(137, projectDefaultTransitionDuration_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < primaryItems_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, primaryItems_.get(i));
        }
        for (int i = 0; i < secondaryItems_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, secondaryItems_.get(i));
        }
        for (int i = 0; i < tracks_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, tracks_.get(i));
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(100, timelineFormatVersion_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < bookmarks_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(bookmarks_.getInt(i));
          }
          size += dataSize;
          if (!getBookmarksList().isEmpty()) {
            size += 2;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          bookmarksMemoizedSerializedSize = dataSize;
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(109, recentScrollTime_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(111, projectRatio_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(112, projectAudioFadeInTime_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(113, projectAudioFadeOutTime_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(114, isProjectAudioFadeInOn_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(115, isProjectAudioFadeOutOn_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(120, projectVideoFadeInTime_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(121, projectVideoFadeOutTime_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(122, isProjectVideoFadeInOn_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(123, isProjectVideoFadeOutOn_);
        }
        if (((bitField0_ & 0x00000800) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(124, projectDefaultImgDuration_);
        }
        if (((bitField0_ & 0x00001000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(125, projectDefaultLayerDuration_);
        }
        if (((bitField0_ & 0x00002000) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(126, projectDefaultImgCropMode_);
        }
        if (((bitField0_ & 0x00004000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(127, projectAutoMaster_);
        }
        if (((bitField0_ & 0x00008000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(128, projectMasterVolume_);
        }
        if (((bitField0_ & 0x00010000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(129, projectResolutionSetting_);
        }
        if (((bitField0_ & 0x00020000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(130, projectFrameRate_);
        }
        if (((bitField0_ & 0x00040000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(131, projectDefaultImgCropModeIos_);
        }
        if (((bitField0_ & 0x00080000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(132, projectCapabilityMode_);
        }
        if (((bitField0_ & 0x00100000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(133, aspectRatioWidth_);
        }
        if (((bitField0_ & 0x00200000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(134, aspectRatioHeight_);
        }
        if (((bitField0_ & 0x00400000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(135, getAudioFade());
        }
        if (((bitField0_ & 0x00800000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(136, getVideoFade());
        }
        if (((bitField0_ & 0x01000000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(137, projectDefaultTransitionDuration_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject)) {
          return super.equals(obj);
        }
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject) obj;

        if (hasTimelineFormatVersion() != other.hasTimelineFormatVersion()) return false;
        if (hasTimelineFormatVersion()) {
          if (getTimelineFormatVersion()
              != other.getTimelineFormatVersion()) return false;
        }
        if (!getPrimaryItemsList()
            .equals(other.getPrimaryItemsList())) return false;
        if (!getSecondaryItemsList()
            .equals(other.getSecondaryItemsList())) return false;
        if (!getTracksList()
            .equals(other.getTracksList())) return false;
        if (!getBookmarksList()
            .equals(other.getBookmarksList())) return false;
        if (hasRecentScrollTime() != other.hasRecentScrollTime()) return false;
        if (hasRecentScrollTime()) {
          if (getRecentScrollTime()
              != other.getRecentScrollTime()) return false;
        }
        if (hasProjectRatio() != other.hasProjectRatio()) return false;
        if (hasProjectRatio()) {
          if (projectRatio_ != other.projectRatio_) return false;
        }
        if (hasProjectAudioFadeInTime() != other.hasProjectAudioFadeInTime()) return false;
        if (hasProjectAudioFadeInTime()) {
          if (java.lang.Float.floatToIntBits(getProjectAudioFadeInTime())
              != java.lang.Float.floatToIntBits(
                  other.getProjectAudioFadeInTime())) return false;
        }
        if (hasProjectAudioFadeOutTime() != other.hasProjectAudioFadeOutTime()) return false;
        if (hasProjectAudioFadeOutTime()) {
          if (java.lang.Float.floatToIntBits(getProjectAudioFadeOutTime())
              != java.lang.Float.floatToIntBits(
                  other.getProjectAudioFadeOutTime())) return false;
        }
        if (hasIsProjectAudioFadeInOn() != other.hasIsProjectAudioFadeInOn()) return false;
        if (hasIsProjectAudioFadeInOn()) {
          if (getIsProjectAudioFadeInOn()
              != other.getIsProjectAudioFadeInOn()) return false;
        }
        if (hasIsProjectAudioFadeOutOn() != other.hasIsProjectAudioFadeOutOn()) return false;
        if (hasIsProjectAudioFadeOutOn()) {
          if (getIsProjectAudioFadeOutOn()
              != other.getIsProjectAudioFadeOutOn()) return false;
        }
        if (hasProjectVideoFadeInTime() != other.hasProjectVideoFadeInTime()) return false;
        if (hasProjectVideoFadeInTime()) {
          if (java.lang.Float.floatToIntBits(getProjectVideoFadeInTime())
              != java.lang.Float.floatToIntBits(
                  other.getProjectVideoFadeInTime())) return false;
        }
        if (hasProjectVideoFadeOutTime() != other.hasProjectVideoFadeOutTime()) return false;
        if (hasProjectVideoFadeOutTime()) {
          if (java.lang.Float.floatToIntBits(getProjectVideoFadeOutTime())
              != java.lang.Float.floatToIntBits(
                  other.getProjectVideoFadeOutTime())) return false;
        }
        if (hasIsProjectVideoFadeInOn() != other.hasIsProjectVideoFadeInOn()) return false;
        if (hasIsProjectVideoFadeInOn()) {
          if (getIsProjectVideoFadeInOn()
              != other.getIsProjectVideoFadeInOn()) return false;
        }
        if (hasIsProjectVideoFadeOutOn() != other.hasIsProjectVideoFadeOutOn()) return false;
        if (hasIsProjectVideoFadeOutOn()) {
          if (getIsProjectVideoFadeOutOn()
              != other.getIsProjectVideoFadeOutOn()) return false;
        }
        if (hasProjectDefaultImgDuration() != other.hasProjectDefaultImgDuration()) return false;
        if (hasProjectDefaultImgDuration()) {
          if (getProjectDefaultImgDuration()
              != other.getProjectDefaultImgDuration()) return false;
        }
        if (hasProjectDefaultLayerDuration() != other.hasProjectDefaultLayerDuration()) return false;
        if (hasProjectDefaultLayerDuration()) {
          if (getProjectDefaultLayerDuration()
              != other.getProjectDefaultLayerDuration()) return false;
        }
        if (hasProjectDefaultImgCropMode() != other.hasProjectDefaultImgCropMode()) return false;
        if (hasProjectDefaultImgCropMode()) {
          if (!getProjectDefaultImgCropMode()
              .equals(other.getProjectDefaultImgCropMode())) return false;
        }
        if (hasProjectAutoMaster() != other.hasProjectAutoMaster()) return false;
        if (hasProjectAutoMaster()) {
          if (getProjectAutoMaster()
              != other.getProjectAutoMaster()) return false;
        }
        if (hasProjectMasterVolume() != other.hasProjectMasterVolume()) return false;
        if (hasProjectMasterVolume()) {
          if (getProjectMasterVolume()
              != other.getProjectMasterVolume()) return false;
        }
        if (hasProjectResolutionSetting() != other.hasProjectResolutionSetting()) return false;
        if (hasProjectResolutionSetting()) {
          if (getProjectResolutionSetting()
              != other.getProjectResolutionSetting()) return false;
        }
        if (hasProjectFrameRate() != other.hasProjectFrameRate()) return false;
        if (hasProjectFrameRate()) {
          if (getProjectFrameRate()
              != other.getProjectFrameRate()) return false;
        }
        if (hasProjectDefaultImgCropModeIos() != other.hasProjectDefaultImgCropModeIos()) return false;
        if (hasProjectDefaultImgCropModeIos()) {
          if (getProjectDefaultImgCropModeIos()
              != other.getProjectDefaultImgCropModeIos()) return false;
        }
        if (hasProjectCapabilityMode() != other.hasProjectCapabilityMode()) return false;
        if (hasProjectCapabilityMode()) {
          if (getProjectCapabilityMode()
              != other.getProjectCapabilityMode()) return false;
        }
        if (hasAspectRatioWidth() != other.hasAspectRatioWidth()) return false;
        if (hasAspectRatioWidth()) {
          if (getAspectRatioWidth()
              != other.getAspectRatioWidth()) return false;
        }
        if (hasAspectRatioHeight() != other.hasAspectRatioHeight()) return false;
        if (hasAspectRatioHeight()) {
          if (getAspectRatioHeight()
              != other.getAspectRatioHeight()) return false;
        }
        if (hasAudioFade() != other.hasAudioFade()) return false;
        if (hasAudioFade()) {
          if (!getAudioFade()
              .equals(other.getAudioFade())) return false;
        }
        if (hasVideoFade() != other.hasVideoFade()) return false;
        if (hasVideoFade()) {
          if (!getVideoFade()
              .equals(other.getVideoFade())) return false;
        }
        if (hasProjectDefaultTransitionDuration() != other.hasProjectDefaultTransitionDuration()) return false;
        if (hasProjectDefaultTransitionDuration()) {
          if (getProjectDefaultTransitionDuration()
              != other.getProjectDefaultTransitionDuration()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTimelineFormatVersion()) {
          hash = (37 * hash) + TIMELINE_FORMAT_VERSION_FIELD_NUMBER;
          hash = (53 * hash) + getTimelineFormatVersion();
        }
        if (getPrimaryItemsCount() > 0) {
          hash = (37 * hash) + PRIMARY_ITEMS_FIELD_NUMBER;
          hash = (53 * hash) + getPrimaryItemsList().hashCode();
        }
        if (getSecondaryItemsCount() > 0) {
          hash = (37 * hash) + SECONDARY_ITEMS_FIELD_NUMBER;
          hash = (53 * hash) + getSecondaryItemsList().hashCode();
        }
        if (getTracksCount() > 0) {
          hash = (37 * hash) + TRACKS_FIELD_NUMBER;
          hash = (53 * hash) + getTracksList().hashCode();
        }
        if (getBookmarksCount() > 0) {
          hash = (37 * hash) + BOOKMARKS_FIELD_NUMBER;
          hash = (53 * hash) + getBookmarksList().hashCode();
        }
        if (hasRecentScrollTime()) {
          hash = (37 * hash) + RECENT_SCROLL_TIME_FIELD_NUMBER;
          hash = (53 * hash) + getRecentScrollTime();
        }
        if (hasProjectRatio()) {
          hash = (37 * hash) + PROJECT_RATIO_FIELD_NUMBER;
          hash = (53 * hash) + projectRatio_;
        }
        if (hasProjectAudioFadeInTime()) {
          hash = (37 * hash) + PROJECT_AUDIO_FADE_IN_TIME_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getProjectAudioFadeInTime());
        }
        if (hasProjectAudioFadeOutTime()) {
          hash = (37 * hash) + PROJECT_AUDIO_FADE_OUT_TIME_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getProjectAudioFadeOutTime());
        }
        if (hasIsProjectAudioFadeInOn()) {
          hash = (37 * hash) + IS_PROJECT_AUDIO_FADE_IN_ON_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getIsProjectAudioFadeInOn());
        }
        if (hasIsProjectAudioFadeOutOn()) {
          hash = (37 * hash) + IS_PROJECT_AUDIO_FADE_OUT_ON_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getIsProjectAudioFadeOutOn());
        }
        if (hasProjectVideoFadeInTime()) {
          hash = (37 * hash) + PROJECT_VIDEO_FADE_IN_TIME_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getProjectVideoFadeInTime());
        }
        if (hasProjectVideoFadeOutTime()) {
          hash = (37 * hash) + PROJECT_VIDEO_FADE_OUT_TIME_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getProjectVideoFadeOutTime());
        }
        if (hasIsProjectVideoFadeInOn()) {
          hash = (37 * hash) + IS_PROJECT_VIDEO_FADE_IN_ON_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getIsProjectVideoFadeInOn());
        }
        if (hasIsProjectVideoFadeOutOn()) {
          hash = (37 * hash) + IS_PROJECT_VIDEO_FADE_OUT_ON_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getIsProjectVideoFadeOutOn());
        }
        if (hasProjectDefaultImgDuration()) {
          hash = (37 * hash) + PROJECT_DEFAULT_IMG_DURATION_FIELD_NUMBER;
          hash = (53 * hash) + getProjectDefaultImgDuration();
        }
        if (hasProjectDefaultLayerDuration()) {
          hash = (37 * hash) + PROJECT_DEFAULT_LAYER_DURATION_FIELD_NUMBER;
          hash = (53 * hash) + getProjectDefaultLayerDuration();
        }
        if (hasProjectDefaultImgCropMode()) {
          hash = (37 * hash) + PROJECT_DEFAULT_IMG_CROP_MODE_FIELD_NUMBER;
          hash = (53 * hash) + getProjectDefaultImgCropMode().hashCode();
        }
        if (hasProjectAutoMaster()) {
          hash = (37 * hash) + PROJECT_AUTO_MASTER_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getProjectAutoMaster());
        }
        if (hasProjectMasterVolume()) {
          hash = (37 * hash) + PROJECT_MASTER_VOLUME_FIELD_NUMBER;
          hash = (53 * hash) + getProjectMasterVolume();
        }
        if (hasProjectResolutionSetting()) {
          hash = (37 * hash) + PROJECT_RESOLUTION_SETTING_FIELD_NUMBER;
          hash = (53 * hash) + getProjectResolutionSetting();
        }
        if (hasProjectFrameRate()) {
          hash = (37 * hash) + PROJECT_FRAME_RATE_FIELD_NUMBER;
          hash = (53 * hash) + getProjectFrameRate();
        }
        if (hasProjectDefaultImgCropModeIos()) {
          hash = (37 * hash) + PROJECT_DEFAULT_IMG_CROP_MODE_IOS_FIELD_NUMBER;
          hash = (53 * hash) + getProjectDefaultImgCropModeIos();
        }
        if (hasProjectCapabilityMode()) {
          hash = (37 * hash) + PROJECT_CAPABILITY_MODE_FIELD_NUMBER;
          hash = (53 * hash) + getProjectCapabilityMode();
        }
        if (hasAspectRatioWidth()) {
          hash = (37 * hash) + ASPECT_RATIO_WIDTH_FIELD_NUMBER;
          hash = (53 * hash) + getAspectRatioWidth();
        }
        if (hasAspectRatioHeight()) {
          hash = (37 * hash) + ASPECT_RATIO_HEIGHT_FIELD_NUMBER;
          hash = (53 * hash) + getAspectRatioHeight();
        }
        if (hasAudioFade()) {
          hash = (37 * hash) + AUDIO_FADE_FIELD_NUMBER;
          hash = (53 * hash) + getAudioFade().hashCode();
        }
        if (hasVideoFade()) {
          hash = (37 * hash) + VIDEO_FADE_FIELD_NUMBER;
          hash = (53 * hash) + getVideoFade().hashCode();
        }
        if (hasProjectDefaultTransitionDuration()) {
          hash = (37 * hash) + PROJECT_DEFAULT_TRANSITION_DURATION_FIELD_NUMBER;
          hash = (53 * hash) + getProjectDefaultTransitionDuration();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code KMProto.KMProject}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:KMProto.KMProject)
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Builder.class);
        }

        // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getPrimaryItemsFieldBuilder();
            getSecondaryItemsFieldBuilder();
            getTracksFieldBuilder();
            getAudioFadeFieldBuilder();
            getVideoFadeFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          timelineFormatVersion_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (primaryItemsBuilder_ == null) {
            primaryItems_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            primaryItemsBuilder_.clear();
          }
          if (secondaryItemsBuilder_ == null) {
            secondaryItems_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            secondaryItemsBuilder_.clear();
          }
          if (tracksBuilder_ == null) {
            tracks_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            tracksBuilder_.clear();
          }
          bookmarks_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000010);
          recentScrollTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          projectRatio_ = 1;
          bitField0_ = (bitField0_ & ~0x00000040);
          projectAudioFadeInTime_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000080);
          projectAudioFadeOutTime_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000100);
          isProjectAudioFadeInOn_ = false;
          bitField0_ = (bitField0_ & ~0x00000200);
          isProjectAudioFadeOutOn_ = false;
          bitField0_ = (bitField0_ & ~0x00000400);
          projectVideoFadeInTime_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000800);
          projectVideoFadeOutTime_ = 0F;
          bitField0_ = (bitField0_ & ~0x00001000);
          isProjectVideoFadeInOn_ = false;
          bitField0_ = (bitField0_ & ~0x00002000);
          isProjectVideoFadeOutOn_ = false;
          bitField0_ = (bitField0_ & ~0x00004000);
          projectDefaultImgDuration_ = 0;
          bitField0_ = (bitField0_ & ~0x00008000);
          projectDefaultLayerDuration_ = 0;
          bitField0_ = (bitField0_ & ~0x00010000);
          projectDefaultImgCropMode_ = "";
          bitField0_ = (bitField0_ & ~0x00020000);
          projectAutoMaster_ = false;
          bitField0_ = (bitField0_ & ~0x00040000);
          projectMasterVolume_ = 0;
          bitField0_ = (bitField0_ & ~0x00080000);
          projectResolutionSetting_ = 0;
          bitField0_ = (bitField0_ & ~0x00100000);
          projectFrameRate_ = 0;
          bitField0_ = (bitField0_ & ~0x00200000);
          projectDefaultImgCropModeIos_ = 0;
          bitField0_ = (bitField0_ & ~0x00400000);
          projectCapabilityMode_ = 0;
          bitField0_ = (bitField0_ & ~0x00800000);
          aspectRatioWidth_ = 0;
          bitField0_ = (bitField0_ & ~0x01000000);
          aspectRatioHeight_ = 0;
          bitField0_ = (bitField0_ & ~0x02000000);
          if (audioFadeBuilder_ == null) {
            audioFade_ = null;
          } else {
            audioFadeBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x04000000);
          if (videoFadeBuilder_ == null) {
            videoFade_ = null;
          } else {
            videoFadeBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x08000000);
          projectDefaultTransitionDuration_ = 0;
          bitField0_ = (bitField0_ & ~0x10000000);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProject_descriptor;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject getDefaultInstanceForType() {
          return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.getDefaultInstance();
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject build() {
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject buildPartial() {
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.timelineFormatVersion_ = timelineFormatVersion_;
            to_bitField0_ |= 0x00000001;
          }
          if (primaryItemsBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0)) {
              primaryItems_ = java.util.Collections.unmodifiableList(primaryItems_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.primaryItems_ = primaryItems_;
          } else {
            result.primaryItems_ = primaryItemsBuilder_.build();
          }
          if (secondaryItemsBuilder_ == null) {
            if (((bitField0_ & 0x00000004) != 0)) {
              secondaryItems_ = java.util.Collections.unmodifiableList(secondaryItems_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.secondaryItems_ = secondaryItems_;
          } else {
            result.secondaryItems_ = secondaryItemsBuilder_.build();
          }
          if (tracksBuilder_ == null) {
            if (((bitField0_ & 0x00000008) != 0)) {
              tracks_ = java.util.Collections.unmodifiableList(tracks_);
              bitField0_ = (bitField0_ & ~0x00000008);
            }
            result.tracks_ = tracks_;
          } else {
            result.tracks_ = tracksBuilder_.build();
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            bookmarks_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.bookmarks_ = bookmarks_;
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.recentScrollTime_ = recentScrollTime_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            to_bitField0_ |= 0x00000004;
          }
          result.projectRatio_ = projectRatio_;
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.projectAudioFadeInTime_ = projectAudioFadeInTime_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000100) != 0)) {
            result.projectAudioFadeOutTime_ = projectAudioFadeOutTime_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000200) != 0)) {
            result.isProjectAudioFadeInOn_ = isProjectAudioFadeInOn_;
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000400) != 0)) {
            result.isProjectAudioFadeOutOn_ = isProjectAudioFadeOutOn_;
            to_bitField0_ |= 0x00000040;
          }
          if (((from_bitField0_ & 0x00000800) != 0)) {
            result.projectVideoFadeInTime_ = projectVideoFadeInTime_;
            to_bitField0_ |= 0x00000080;
          }
          if (((from_bitField0_ & 0x00001000) != 0)) {
            result.projectVideoFadeOutTime_ = projectVideoFadeOutTime_;
            to_bitField0_ |= 0x00000100;
          }
          if (((from_bitField0_ & 0x00002000) != 0)) {
            result.isProjectVideoFadeInOn_ = isProjectVideoFadeInOn_;
            to_bitField0_ |= 0x00000200;
          }
          if (((from_bitField0_ & 0x00004000) != 0)) {
            result.isProjectVideoFadeOutOn_ = isProjectVideoFadeOutOn_;
            to_bitField0_ |= 0x00000400;
          }
          if (((from_bitField0_ & 0x00008000) != 0)) {
            result.projectDefaultImgDuration_ = projectDefaultImgDuration_;
            to_bitField0_ |= 0x00000800;
          }
          if (((from_bitField0_ & 0x00010000) != 0)) {
            result.projectDefaultLayerDuration_ = projectDefaultLayerDuration_;
            to_bitField0_ |= 0x00001000;
          }
          if (((from_bitField0_ & 0x00020000) != 0)) {
            to_bitField0_ |= 0x00002000;
          }
          result.projectDefaultImgCropMode_ = projectDefaultImgCropMode_;
          if (((from_bitField0_ & 0x00040000) != 0)) {
            result.projectAutoMaster_ = projectAutoMaster_;
            to_bitField0_ |= 0x00004000;
          }
          if (((from_bitField0_ & 0x00080000) != 0)) {
            result.projectMasterVolume_ = projectMasterVolume_;
            to_bitField0_ |= 0x00008000;
          }
          if (((from_bitField0_ & 0x00100000) != 0)) {
            result.projectResolutionSetting_ = projectResolutionSetting_;
            to_bitField0_ |= 0x00010000;
          }
          if (((from_bitField0_ & 0x00200000) != 0)) {
            result.projectFrameRate_ = projectFrameRate_;
            to_bitField0_ |= 0x00020000;
          }
          if (((from_bitField0_ & 0x00400000) != 0)) {
            result.projectDefaultImgCropModeIos_ = projectDefaultImgCropModeIos_;
            to_bitField0_ |= 0x00040000;
          }
          if (((from_bitField0_ & 0x00800000) != 0)) {
            result.projectCapabilityMode_ = projectCapabilityMode_;
            to_bitField0_ |= 0x00080000;
          }
          if (((from_bitField0_ & 0x01000000) != 0)) {
            result.aspectRatioWidth_ = aspectRatioWidth_;
            to_bitField0_ |= 0x00100000;
          }
          if (((from_bitField0_ & 0x02000000) != 0)) {
            result.aspectRatioHeight_ = aspectRatioHeight_;
            to_bitField0_ |= 0x00200000;
          }
          if (((from_bitField0_ & 0x04000000) != 0)) {
            if (audioFadeBuilder_ == null) {
              result.audioFade_ = audioFade_;
            } else {
              result.audioFade_ = audioFadeBuilder_.build();
            }
            to_bitField0_ |= 0x00400000;
          }
          if (((from_bitField0_ & 0x08000000) != 0)) {
            if (videoFadeBuilder_ == null) {
              result.videoFade_ = videoFade_;
            } else {
              result.videoFade_ = videoFadeBuilder_.build();
            }
            to_bitField0_ |= 0x00800000;
          }
          if (((from_bitField0_ & 0x10000000) != 0)) {
            result.projectDefaultTransitionDuration_ = projectDefaultTransitionDuration_;
            to_bitField0_ |= 0x01000000;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject) {
            return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject other) {
          if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.getDefaultInstance()) return this;
          if (other.hasTimelineFormatVersion()) {
            setTimelineFormatVersion(other.getTimelineFormatVersion());
          }
          if (primaryItemsBuilder_ == null) {
            if (!other.primaryItems_.isEmpty()) {
              if (primaryItems_.isEmpty()) {
                primaryItems_ = other.primaryItems_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensurePrimaryItemsIsMutable();
                primaryItems_.addAll(other.primaryItems_);
              }
              onChanged();
            }
          } else {
            if (!other.primaryItems_.isEmpty()) {
              if (primaryItemsBuilder_.isEmpty()) {
                primaryItemsBuilder_.dispose();
                primaryItemsBuilder_ = null;
                primaryItems_ = other.primaryItems_;
                bitField0_ = (bitField0_ & ~0x00000002);
                primaryItemsBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getPrimaryItemsFieldBuilder() : null;
              } else {
                primaryItemsBuilder_.addAllMessages(other.primaryItems_);
              }
            }
          }
          if (secondaryItemsBuilder_ == null) {
            if (!other.secondaryItems_.isEmpty()) {
              if (secondaryItems_.isEmpty()) {
                secondaryItems_ = other.secondaryItems_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureSecondaryItemsIsMutable();
                secondaryItems_.addAll(other.secondaryItems_);
              }
              onChanged();
            }
          } else {
            if (!other.secondaryItems_.isEmpty()) {
              if (secondaryItemsBuilder_.isEmpty()) {
                secondaryItemsBuilder_.dispose();
                secondaryItemsBuilder_ = null;
                secondaryItems_ = other.secondaryItems_;
                bitField0_ = (bitField0_ & ~0x00000004);
                secondaryItemsBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getSecondaryItemsFieldBuilder() : null;
              } else {
                secondaryItemsBuilder_.addAllMessages(other.secondaryItems_);
              }
            }
          }
          if (tracksBuilder_ == null) {
            if (!other.tracks_.isEmpty()) {
              if (tracks_.isEmpty()) {
                tracks_ = other.tracks_;
                bitField0_ = (bitField0_ & ~0x00000008);
              } else {
                ensureTracksIsMutable();
                tracks_.addAll(other.tracks_);
              }
              onChanged();
            }
          } else {
            if (!other.tracks_.isEmpty()) {
              if (tracksBuilder_.isEmpty()) {
                tracksBuilder_.dispose();
                tracksBuilder_ = null;
                tracks_ = other.tracks_;
                bitField0_ = (bitField0_ & ~0x00000008);
                tracksBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getTracksFieldBuilder() : null;
              } else {
                tracksBuilder_.addAllMessages(other.tracks_);
              }
            }
          }
          if (!other.bookmarks_.isEmpty()) {
            if (bookmarks_.isEmpty()) {
              bookmarks_ = other.bookmarks_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureBookmarksIsMutable();
              bookmarks_.addAll(other.bookmarks_);
            }
            onChanged();
          }
          if (other.hasRecentScrollTime()) {
            setRecentScrollTime(other.getRecentScrollTime());
          }
          if (other.hasProjectRatio()) {
            setProjectRatio(other.getProjectRatio());
          }
          if (other.hasProjectAudioFadeInTime()) {
            setProjectAudioFadeInTime(other.getProjectAudioFadeInTime());
          }
          if (other.hasProjectAudioFadeOutTime()) {
            setProjectAudioFadeOutTime(other.getProjectAudioFadeOutTime());
          }
          if (other.hasIsProjectAudioFadeInOn()) {
            setIsProjectAudioFadeInOn(other.getIsProjectAudioFadeInOn());
          }
          if (other.hasIsProjectAudioFadeOutOn()) {
            setIsProjectAudioFadeOutOn(other.getIsProjectAudioFadeOutOn());
          }
          if (other.hasProjectVideoFadeInTime()) {
            setProjectVideoFadeInTime(other.getProjectVideoFadeInTime());
          }
          if (other.hasProjectVideoFadeOutTime()) {
            setProjectVideoFadeOutTime(other.getProjectVideoFadeOutTime());
          }
          if (other.hasIsProjectVideoFadeInOn()) {
            setIsProjectVideoFadeInOn(other.getIsProjectVideoFadeInOn());
          }
          if (other.hasIsProjectVideoFadeOutOn()) {
            setIsProjectVideoFadeOutOn(other.getIsProjectVideoFadeOutOn());
          }
          if (other.hasProjectDefaultImgDuration()) {
            setProjectDefaultImgDuration(other.getProjectDefaultImgDuration());
          }
          if (other.hasProjectDefaultLayerDuration()) {
            setProjectDefaultLayerDuration(other.getProjectDefaultLayerDuration());
          }
          if (other.hasProjectDefaultImgCropMode()) {
            bitField0_ |= 0x00020000;
            projectDefaultImgCropMode_ = other.projectDefaultImgCropMode_;
            onChanged();
          }
          if (other.hasProjectAutoMaster()) {
            setProjectAutoMaster(other.getProjectAutoMaster());
          }
          if (other.hasProjectMasterVolume()) {
            setProjectMasterVolume(other.getProjectMasterVolume());
          }
          if (other.hasProjectResolutionSetting()) {
            setProjectResolutionSetting(other.getProjectResolutionSetting());
          }
          if (other.hasProjectFrameRate()) {
            setProjectFrameRate(other.getProjectFrameRate());
          }
          if (other.hasProjectDefaultImgCropModeIos()) {
            setProjectDefaultImgCropModeIos(other.getProjectDefaultImgCropModeIos());
          }
          if (other.hasProjectCapabilityMode()) {
            setProjectCapabilityMode(other.getProjectCapabilityMode());
          }
          if (other.hasAspectRatioWidth()) {
            setAspectRatioWidth(other.getAspectRatioWidth());
          }
          if (other.hasAspectRatioHeight()) {
            setAspectRatioHeight(other.getAspectRatioHeight());
          }
          if (other.hasAudioFade()) {
            mergeAudioFade(other.getAudioFade());
          }
          if (other.hasVideoFade()) {
            mergeVideoFade(other.getVideoFade());
          }
          if (other.hasProjectDefaultTransitionDuration()) {
            setProjectDefaultTransitionDuration(other.getProjectDefaultTransitionDuration());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int timelineFormatVersion_ ;
        /**
         * <code>optional int32 timeline_format_version = 100;</code>
         * @return Whether the timelineFormatVersion field is set.
         */
        @java.lang.Override
        public boolean hasTimelineFormatVersion() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional int32 timeline_format_version = 100;</code>
         * @return The timelineFormatVersion.
         */
        @java.lang.Override
        public int getTimelineFormatVersion() {
          return timelineFormatVersion_;
        }
        /**
         * <code>optional int32 timeline_format_version = 100;</code>
         * @param value The timelineFormatVersion to set.
         * @return This builder for chaining.
         */
        public Builder setTimelineFormatVersion(int value) {
          bitField0_ |= 0x00000001;
          timelineFormatVersion_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 timeline_format_version = 100;</code>
         * @return This builder for chaining.
         */
        public Builder clearTimelineFormatVersion() {
          bitField0_ = (bitField0_ & ~0x00000001);
          timelineFormatVersion_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem> primaryItems_ =
          java.util.Collections.emptyList();
        private void ensurePrimaryItemsIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            primaryItems_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem>(primaryItems_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder> primaryItemsBuilder_;

        /**
         * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
         */
        public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem> getPrimaryItemsList() {
          if (primaryItemsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(primaryItems_);
          } else {
            return primaryItemsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
         */
        public int getPrimaryItemsCount() {
          if (primaryItemsBuilder_ == null) {
            return primaryItems_.size();
          } else {
            return primaryItemsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
         */
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem getPrimaryItems(int index) {
          if (primaryItemsBuilder_ == null) {
            return primaryItems_.get(index);
          } else {
            return primaryItemsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
         */
        public Builder setPrimaryItems(
            int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem value) {
          if (primaryItemsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePrimaryItemsIsMutable();
            primaryItems_.set(index, value);
            onChanged();
          } else {
            primaryItemsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
         */
        public Builder setPrimaryItems(
            int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder builderForValue) {
          if (primaryItemsBuilder_ == null) {
            ensurePrimaryItemsIsMutable();
            primaryItems_.set(index, builderForValue.build());
            onChanged();
          } else {
            primaryItemsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
         */
        public Builder addPrimaryItems(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem value) {
          if (primaryItemsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePrimaryItemsIsMutable();
            primaryItems_.add(value);
            onChanged();
          } else {
            primaryItemsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
         */
        public Builder addPrimaryItems(
            int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem value) {
          if (primaryItemsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePrimaryItemsIsMutable();
            primaryItems_.add(index, value);
            onChanged();
          } else {
            primaryItemsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
         */
        public Builder addPrimaryItems(
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder builderForValue) {
          if (primaryItemsBuilder_ == null) {
            ensurePrimaryItemsIsMutable();
            primaryItems_.add(builderForValue.build());
            onChanged();
          } else {
            primaryItemsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
         */
        public Builder addPrimaryItems(
            int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder builderForValue) {
          if (primaryItemsBuilder_ == null) {
            ensurePrimaryItemsIsMutable();
            primaryItems_.add(index, builderForValue.build());
            onChanged();
          } else {
            primaryItemsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
         */
        public Builder addAllPrimaryItems(
            java.lang.Iterable<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem> values) {
          if (primaryItemsBuilder_ == null) {
            ensurePrimaryItemsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, primaryItems_);
            onChanged();
          } else {
            primaryItemsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
         */
        public Builder clearPrimaryItems() {
          if (primaryItemsBuilder_ == null) {
            primaryItems_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            primaryItemsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
         */
        public Builder removePrimaryItems(int index) {
          if (primaryItemsBuilder_ == null) {
            ensurePrimaryItemsIsMutable();
            primaryItems_.remove(index);
            onChanged();
          } else {
            primaryItemsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
         */
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder getPrimaryItemsBuilder(
            int index) {
          return getPrimaryItemsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
         */
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder getPrimaryItemsOrBuilder(
            int index) {
          if (primaryItemsBuilder_ == null) {
            return primaryItems_.get(index);  } else {
            return primaryItemsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
         */
        public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder> 
             getPrimaryItemsOrBuilderList() {
          if (primaryItemsBuilder_ != null) {
            return primaryItemsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(primaryItems_);
          }
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
         */
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder addPrimaryItemsBuilder() {
          return getPrimaryItemsFieldBuilder().addBuilder(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.getDefaultInstance());
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
         */
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder addPrimaryItemsBuilder(
            int index) {
          return getPrimaryItemsFieldBuilder().addBuilder(
              index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.getDefaultInstance());
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem primary_items = 1;</code>
         */
        public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder> 
             getPrimaryItemsBuilderList() {
          return getPrimaryItemsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder> 
            getPrimaryItemsFieldBuilder() {
          if (primaryItemsBuilder_ == null) {
            primaryItemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder>(
                    primaryItems_,
                    ((bitField0_ & 0x00000002) != 0),
                    getParentForChildren(),
                    isClean());
            primaryItems_ = null;
          }
          return primaryItemsBuilder_;
        }

        private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem> secondaryItems_ =
          java.util.Collections.emptyList();
        private void ensureSecondaryItemsIsMutable() {
          if (!((bitField0_ & 0x00000004) != 0)) {
            secondaryItems_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem>(secondaryItems_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder> secondaryItemsBuilder_;

        /**
         * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
         */
        public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem> getSecondaryItemsList() {
          if (secondaryItemsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(secondaryItems_);
          } else {
            return secondaryItemsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
         */
        public int getSecondaryItemsCount() {
          if (secondaryItemsBuilder_ == null) {
            return secondaryItems_.size();
          } else {
            return secondaryItemsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
         */
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem getSecondaryItems(int index) {
          if (secondaryItemsBuilder_ == null) {
            return secondaryItems_.get(index);
          } else {
            return secondaryItemsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
         */
        public Builder setSecondaryItems(
            int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem value) {
          if (secondaryItemsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSecondaryItemsIsMutable();
            secondaryItems_.set(index, value);
            onChanged();
          } else {
            secondaryItemsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
         */
        public Builder setSecondaryItems(
            int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder builderForValue) {
          if (secondaryItemsBuilder_ == null) {
            ensureSecondaryItemsIsMutable();
            secondaryItems_.set(index, builderForValue.build());
            onChanged();
          } else {
            secondaryItemsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
         */
        public Builder addSecondaryItems(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem value) {
          if (secondaryItemsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSecondaryItemsIsMutable();
            secondaryItems_.add(value);
            onChanged();
          } else {
            secondaryItemsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
         */
        public Builder addSecondaryItems(
            int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem value) {
          if (secondaryItemsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSecondaryItemsIsMutable();
            secondaryItems_.add(index, value);
            onChanged();
          } else {
            secondaryItemsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
         */
        public Builder addSecondaryItems(
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder builderForValue) {
          if (secondaryItemsBuilder_ == null) {
            ensureSecondaryItemsIsMutable();
            secondaryItems_.add(builderForValue.build());
            onChanged();
          } else {
            secondaryItemsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
         */
        public Builder addSecondaryItems(
            int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder builderForValue) {
          if (secondaryItemsBuilder_ == null) {
            ensureSecondaryItemsIsMutable();
            secondaryItems_.add(index, builderForValue.build());
            onChanged();
          } else {
            secondaryItemsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
         */
        public Builder addAllSecondaryItems(
            java.lang.Iterable<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem> values) {
          if (secondaryItemsBuilder_ == null) {
            ensureSecondaryItemsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, secondaryItems_);
            onChanged();
          } else {
            secondaryItemsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
         */
        public Builder clearSecondaryItems() {
          if (secondaryItemsBuilder_ == null) {
            secondaryItems_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            secondaryItemsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
         */
        public Builder removeSecondaryItems(int index) {
          if (secondaryItemsBuilder_ == null) {
            ensureSecondaryItemsIsMutable();
            secondaryItems_.remove(index);
            onChanged();
          } else {
            secondaryItemsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
         */
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder getSecondaryItemsBuilder(
            int index) {
          return getSecondaryItemsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
         */
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder getSecondaryItemsOrBuilder(
            int index) {
          if (secondaryItemsBuilder_ == null) {
            return secondaryItems_.get(index);  } else {
            return secondaryItemsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
         */
        public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder> 
             getSecondaryItemsOrBuilderList() {
          if (secondaryItemsBuilder_ != null) {
            return secondaryItemsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(secondaryItems_);
          }
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
         */
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder addSecondaryItemsBuilder() {
          return getSecondaryItemsFieldBuilder().addBuilder(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.getDefaultInstance());
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
         */
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder addSecondaryItemsBuilder(
            int index) {
          return getSecondaryItemsFieldBuilder().addBuilder(
              index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.getDefaultInstance());
        }
        /**
         * <code>repeated .KMProto.KMProject.TimelineItem secondary_items = 2;</code>
         */
        public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder> 
             getSecondaryItemsBuilderList() {
          return getSecondaryItemsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder> 
            getSecondaryItemsFieldBuilder() {
          if (secondaryItemsBuilder_ == null) {
            secondaryItemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItem.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TimelineItemOrBuilder>(
                    secondaryItems_,
                    ((bitField0_ & 0x00000004) != 0),
                    getParentForChildren(),
                    isClean());
            secondaryItems_ = null;
          }
          return secondaryItemsBuilder_;
        }

        private java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track> tracks_ =
          java.util.Collections.emptyList();
        private void ensureTracksIsMutable() {
          if (!((bitField0_ & 0x00000008) != 0)) {
            tracks_ = new java.util.ArrayList<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track>(tracks_);
            bitField0_ |= 0x00000008;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TrackOrBuilder> tracksBuilder_;

        /**
         * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
         */
        public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track> getTracksList() {
          if (tracksBuilder_ == null) {
            return java.util.Collections.unmodifiableList(tracks_);
          } else {
            return tracksBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
         */
        public int getTracksCount() {
          if (tracksBuilder_ == null) {
            return tracks_.size();
          } else {
            return tracksBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
         */
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track getTracks(int index) {
          if (tracksBuilder_ == null) {
            return tracks_.get(index);
          } else {
            return tracksBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
         */
        public Builder setTracks(
            int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track value) {
          if (tracksBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTracksIsMutable();
            tracks_.set(index, value);
            onChanged();
          } else {
            tracksBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
         */
        public Builder setTracks(
            int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track.Builder builderForValue) {
          if (tracksBuilder_ == null) {
            ensureTracksIsMutable();
            tracks_.set(index, builderForValue.build());
            onChanged();
          } else {
            tracksBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
         */
        public Builder addTracks(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track value) {
          if (tracksBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTracksIsMutable();
            tracks_.add(value);
            onChanged();
          } else {
            tracksBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
         */
        public Builder addTracks(
            int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track value) {
          if (tracksBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTracksIsMutable();
            tracks_.add(index, value);
            onChanged();
          } else {
            tracksBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
         */
        public Builder addTracks(
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track.Builder builderForValue) {
          if (tracksBuilder_ == null) {
            ensureTracksIsMutable();
            tracks_.add(builderForValue.build());
            onChanged();
          } else {
            tracksBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
         */
        public Builder addTracks(
            int index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track.Builder builderForValue) {
          if (tracksBuilder_ == null) {
            ensureTracksIsMutable();
            tracks_.add(index, builderForValue.build());
            onChanged();
          } else {
            tracksBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
         */
        public Builder addAllTracks(
            java.lang.Iterable<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track> values) {
          if (tracksBuilder_ == null) {
            ensureTracksIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, tracks_);
            onChanged();
          } else {
            tracksBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
         */
        public Builder clearTracks() {
          if (tracksBuilder_ == null) {
            tracks_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
            onChanged();
          } else {
            tracksBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
         */
        public Builder removeTracks(int index) {
          if (tracksBuilder_ == null) {
            ensureTracksIsMutable();
            tracks_.remove(index);
            onChanged();
          } else {
            tracksBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
         */
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track.Builder getTracksBuilder(
            int index) {
          return getTracksFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
         */
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TrackOrBuilder getTracksOrBuilder(
            int index) {
          if (tracksBuilder_ == null) {
            return tracks_.get(index);  } else {
            return tracksBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
         */
        public java.util.List<? extends decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TrackOrBuilder> 
             getTracksOrBuilderList() {
          if (tracksBuilder_ != null) {
            return tracksBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(tracks_);
          }
        }
        /**
         * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
         */
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track.Builder addTracksBuilder() {
          return getTracksFieldBuilder().addBuilder(
              decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track.getDefaultInstance());
        }
        /**
         * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
         */
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track.Builder addTracksBuilder(
            int index) {
          return getTracksFieldBuilder().addBuilder(
              index, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track.getDefaultInstance());
        }
        /**
         * <code>repeated .KMProto.KMProject.Track tracks = 3;</code>
         */
        public java.util.List<decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track.Builder> 
             getTracksBuilderList() {
          return getTracksFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TrackOrBuilder> 
            getTracksFieldBuilder() {
          if (tracksBuilder_ == null) {
            tracksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Track.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.TrackOrBuilder>(
                    tracks_,
                    ((bitField0_ & 0x00000008) != 0),
                    getParentForChildren(),
                    isClean());
            tracks_ = null;
          }
          return tracksBuilder_;
        }

        private com.google.protobuf.Internal.IntList bookmarks_ = emptyIntList();
        private void ensureBookmarksIsMutable() {
          if (!((bitField0_ & 0x00000010) != 0)) {
            bookmarks_ = mutableCopy(bookmarks_);
            bitField0_ |= 0x00000010;
           }
        }
        /**
         * <code>repeated uint32 bookmarks = 103 [packed = true];</code>
         * @return A list containing the bookmarks.
         */
        public java.util.List<java.lang.Integer>
            getBookmarksList() {
          return ((bitField0_ & 0x00000010) != 0) ?
                   java.util.Collections.unmodifiableList(bookmarks_) : bookmarks_;
        }
        /**
         * <code>repeated uint32 bookmarks = 103 [packed = true];</code>
         * @return The count of bookmarks.
         */
        public int getBookmarksCount() {
          return bookmarks_.size();
        }
        /**
         * <code>repeated uint32 bookmarks = 103 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The bookmarks at the given index.
         */
        public int getBookmarks(int index) {
          return bookmarks_.getInt(index);
        }
        /**
         * <code>repeated uint32 bookmarks = 103 [packed = true];</code>
         * @param index The index to set the value at.
         * @param value The bookmarks to set.
         * @return This builder for chaining.
         */
        public Builder setBookmarks(
            int index, int value) {
          ensureBookmarksIsMutable();
          bookmarks_.setInt(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 bookmarks = 103 [packed = true];</code>
         * @param value The bookmarks to add.
         * @return This builder for chaining.
         */
        public Builder addBookmarks(int value) {
          ensureBookmarksIsMutable();
          bookmarks_.addInt(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 bookmarks = 103 [packed = true];</code>
         * @param values The bookmarks to add.
         * @return This builder for chaining.
         */
        public Builder addAllBookmarks(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureBookmarksIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, bookmarks_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 bookmarks = 103 [packed = true];</code>
         * @return This builder for chaining.
         */
        public Builder clearBookmarks() {
          bookmarks_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }

        private int recentScrollTime_ ;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 recent_scroll_time = 109;</code>
         * @return Whether the recentScrollTime field is set.
         */
        @java.lang.Override
        public boolean hasRecentScrollTime() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 recent_scroll_time = 109;</code>
         * @return The recentScrollTime.
         */
        @java.lang.Override
        public int getRecentScrollTime() {
          return recentScrollTime_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 recent_scroll_time = 109;</code>
         * @param value The recentScrollTime to set.
         * @return This builder for chaining.
         */
        public Builder setRecentScrollTime(int value) {
          bitField0_ |= 0x00000020;
          recentScrollTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 recent_scroll_time = 109;</code>
         * @return This builder for chaining.
         */
        public Builder clearRecentScrollTime() {
          bitField0_ = (bitField0_ & ~0x00000020);
          recentScrollTime_ = 0;
          onChanged();
          return this;
        }

        private int projectRatio_ = 1;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.AspectRatio project_ratio = 111;</code>
         * @return Whether the projectRatio field is set.
         */
        @java.lang.Override public boolean hasProjectRatio() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.AspectRatio project_ratio = 111;</code>
         * @return The projectRatio.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AspectRatio getProjectRatio() {
          @SuppressWarnings("deprecation")
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AspectRatio result = decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AspectRatio.valueOf(projectRatio_);
          return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AspectRatio.ASPECT_R_16_9 : result;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.AspectRatio project_ratio = 111;</code>
         * @param value The projectRatio to set.
         * @return This builder for chaining.
         */
        public Builder setProjectRatio(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.AspectRatio value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000040;
          projectRatio_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional .KMProto.KMProject.AspectRatio project_ratio = 111;</code>
         * @return This builder for chaining.
         */
        public Builder clearProjectRatio() {
          bitField0_ = (bitField0_ & ~0x00000040);
          projectRatio_ = 1;
          onChanged();
          return this;
        }

        private float projectAudioFadeInTime_ ;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float project_audio_fade_in_time = 112;</code>
         * @return Whether the projectAudioFadeInTime field is set.
         */
        @java.lang.Override
        public boolean hasProjectAudioFadeInTime() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float project_audio_fade_in_time = 112;</code>
         * @return The projectAudioFadeInTime.
         */
        @java.lang.Override
        public float getProjectAudioFadeInTime() {
          return projectAudioFadeInTime_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float project_audio_fade_in_time = 112;</code>
         * @param value The projectAudioFadeInTime to set.
         * @return This builder for chaining.
         */
        public Builder setProjectAudioFadeInTime(float value) {
          bitField0_ |= 0x00000080;
          projectAudioFadeInTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float project_audio_fade_in_time = 112;</code>
         * @return This builder for chaining.
         */
        public Builder clearProjectAudioFadeInTime() {
          bitField0_ = (bitField0_ & ~0x00000080);
          projectAudioFadeInTime_ = 0F;
          onChanged();
          return this;
        }

        private float projectAudioFadeOutTime_ ;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float project_audio_fade_out_time = 113;</code>
         * @return Whether the projectAudioFadeOutTime field is set.
         */
        @java.lang.Override
        public boolean hasProjectAudioFadeOutTime() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float project_audio_fade_out_time = 113;</code>
         * @return The projectAudioFadeOutTime.
         */
        @java.lang.Override
        public float getProjectAudioFadeOutTime() {
          return projectAudioFadeOutTime_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float project_audio_fade_out_time = 113;</code>
         * @param value The projectAudioFadeOutTime to set.
         * @return This builder for chaining.
         */
        public Builder setProjectAudioFadeOutTime(float value) {
          bitField0_ |= 0x00000100;
          projectAudioFadeOutTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float project_audio_fade_out_time = 113;</code>
         * @return This builder for chaining.
         */
        public Builder clearProjectAudioFadeOutTime() {
          bitField0_ = (bitField0_ & ~0x00000100);
          projectAudioFadeOutTime_ = 0F;
          onChanged();
          return this;
        }

        private boolean isProjectAudioFadeInOn_ ;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool is_project_audio_fade_in_on = 114;</code>
         * @return Whether the isProjectAudioFadeInOn field is set.
         */
        @java.lang.Override
        public boolean hasIsProjectAudioFadeInOn() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool is_project_audio_fade_in_on = 114;</code>
         * @return The isProjectAudioFadeInOn.
         */
        @java.lang.Override
        public boolean getIsProjectAudioFadeInOn() {
          return isProjectAudioFadeInOn_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool is_project_audio_fade_in_on = 114;</code>
         * @param value The isProjectAudioFadeInOn to set.
         * @return This builder for chaining.
         */
        public Builder setIsProjectAudioFadeInOn(boolean value) {
          bitField0_ |= 0x00000200;
          isProjectAudioFadeInOn_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool is_project_audio_fade_in_on = 114;</code>
         * @return This builder for chaining.
         */
        public Builder clearIsProjectAudioFadeInOn() {
          bitField0_ = (bitField0_ & ~0x00000200);
          isProjectAudioFadeInOn_ = false;
          onChanged();
          return this;
        }

        private boolean isProjectAudioFadeOutOn_ ;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool is_project_audio_fade_out_on = 115;</code>
         * @return Whether the isProjectAudioFadeOutOn field is set.
         */
        @java.lang.Override
        public boolean hasIsProjectAudioFadeOutOn() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool is_project_audio_fade_out_on = 115;</code>
         * @return The isProjectAudioFadeOutOn.
         */
        @java.lang.Override
        public boolean getIsProjectAudioFadeOutOn() {
          return isProjectAudioFadeOutOn_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool is_project_audio_fade_out_on = 115;</code>
         * @param value The isProjectAudioFadeOutOn to set.
         * @return This builder for chaining.
         */
        public Builder setIsProjectAudioFadeOutOn(boolean value) {
          bitField0_ |= 0x00000400;
          isProjectAudioFadeOutOn_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool is_project_audio_fade_out_on = 115;</code>
         * @return This builder for chaining.
         */
        public Builder clearIsProjectAudioFadeOutOn() {
          bitField0_ = (bitField0_ & ~0x00000400);
          isProjectAudioFadeOutOn_ = false;
          onChanged();
          return this;
        }

        private float projectVideoFadeInTime_ ;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float project_video_fade_in_time = 120;</code>
         * @return Whether the projectVideoFadeInTime field is set.
         */
        @java.lang.Override
        public boolean hasProjectVideoFadeInTime() {
          return ((bitField0_ & 0x00000800) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float project_video_fade_in_time = 120;</code>
         * @return The projectVideoFadeInTime.
         */
        @java.lang.Override
        public float getProjectVideoFadeInTime() {
          return projectVideoFadeInTime_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float project_video_fade_in_time = 120;</code>
         * @param value The projectVideoFadeInTime to set.
         * @return This builder for chaining.
         */
        public Builder setProjectVideoFadeInTime(float value) {
          bitField0_ |= 0x00000800;
          projectVideoFadeInTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float project_video_fade_in_time = 120;</code>
         * @return This builder for chaining.
         */
        public Builder clearProjectVideoFadeInTime() {
          bitField0_ = (bitField0_ & ~0x00000800);
          projectVideoFadeInTime_ = 0F;
          onChanged();
          return this;
        }

        private float projectVideoFadeOutTime_ ;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float project_video_fade_out_time = 121;</code>
         * @return Whether the projectVideoFadeOutTime field is set.
         */
        @java.lang.Override
        public boolean hasProjectVideoFadeOutTime() {
          return ((bitField0_ & 0x00001000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float project_video_fade_out_time = 121;</code>
         * @return The projectVideoFadeOutTime.
         */
        @java.lang.Override
        public float getProjectVideoFadeOutTime() {
          return projectVideoFadeOutTime_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float project_video_fade_out_time = 121;</code>
         * @param value The projectVideoFadeOutTime to set.
         * @return This builder for chaining.
         */
        public Builder setProjectVideoFadeOutTime(float value) {
          bitField0_ |= 0x00001000;
          projectVideoFadeOutTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional float project_video_fade_out_time = 121;</code>
         * @return This builder for chaining.
         */
        public Builder clearProjectVideoFadeOutTime() {
          bitField0_ = (bitField0_ & ~0x00001000);
          projectVideoFadeOutTime_ = 0F;
          onChanged();
          return this;
        }

        private boolean isProjectVideoFadeInOn_ ;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool is_project_video_fade_in_on = 122;</code>
         * @return Whether the isProjectVideoFadeInOn field is set.
         */
        @java.lang.Override
        public boolean hasIsProjectVideoFadeInOn() {
          return ((bitField0_ & 0x00002000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool is_project_video_fade_in_on = 122;</code>
         * @return The isProjectVideoFadeInOn.
         */
        @java.lang.Override
        public boolean getIsProjectVideoFadeInOn() {
          return isProjectVideoFadeInOn_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool is_project_video_fade_in_on = 122;</code>
         * @param value The isProjectVideoFadeInOn to set.
         * @return This builder for chaining.
         */
        public Builder setIsProjectVideoFadeInOn(boolean value) {
          bitField0_ |= 0x00002000;
          isProjectVideoFadeInOn_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool is_project_video_fade_in_on = 122;</code>
         * @return This builder for chaining.
         */
        public Builder clearIsProjectVideoFadeInOn() {
          bitField0_ = (bitField0_ & ~0x00002000);
          isProjectVideoFadeInOn_ = false;
          onChanged();
          return this;
        }

        private boolean isProjectVideoFadeOutOn_ ;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool is_project_video_fade_out_on = 123;</code>
         * @return Whether the isProjectVideoFadeOutOn field is set.
         */
        @java.lang.Override
        public boolean hasIsProjectVideoFadeOutOn() {
          return ((bitField0_ & 0x00004000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool is_project_video_fade_out_on = 123;</code>
         * @return The isProjectVideoFadeOutOn.
         */
        @java.lang.Override
        public boolean getIsProjectVideoFadeOutOn() {
          return isProjectVideoFadeOutOn_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool is_project_video_fade_out_on = 123;</code>
         * @param value The isProjectVideoFadeOutOn to set.
         * @return This builder for chaining.
         */
        public Builder setIsProjectVideoFadeOutOn(boolean value) {
          bitField0_ |= 0x00004000;
          isProjectVideoFadeOutOn_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool is_project_video_fade_out_on = 123;</code>
         * @return This builder for chaining.
         */
        public Builder clearIsProjectVideoFadeOutOn() {
          bitField0_ = (bitField0_ & ~0x00004000);
          isProjectVideoFadeOutOn_ = false;
          onChanged();
          return this;
        }

        private int projectDefaultImgDuration_ ;
        /**
         * <code>optional int32 project_default_img_duration = 124;</code>
         * @return Whether the projectDefaultImgDuration field is set.
         */
        @java.lang.Override
        public boolean hasProjectDefaultImgDuration() {
          return ((bitField0_ & 0x00008000) != 0);
        }
        /**
         * <code>optional int32 project_default_img_duration = 124;</code>
         * @return The projectDefaultImgDuration.
         */
        @java.lang.Override
        public int getProjectDefaultImgDuration() {
          return projectDefaultImgDuration_;
        }
        /**
         * <code>optional int32 project_default_img_duration = 124;</code>
         * @param value The projectDefaultImgDuration to set.
         * @return This builder for chaining.
         */
        public Builder setProjectDefaultImgDuration(int value) {
          bitField0_ |= 0x00008000;
          projectDefaultImgDuration_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 project_default_img_duration = 124;</code>
         * @return This builder for chaining.
         */
        public Builder clearProjectDefaultImgDuration() {
          bitField0_ = (bitField0_ & ~0x00008000);
          projectDefaultImgDuration_ = 0;
          onChanged();
          return this;
        }

        private int projectDefaultLayerDuration_ ;
        /**
         * <code>optional int32 project_default_layer_duration = 125;</code>
         * @return Whether the projectDefaultLayerDuration field is set.
         */
        @java.lang.Override
        public boolean hasProjectDefaultLayerDuration() {
          return ((bitField0_ & 0x00010000) != 0);
        }
        /**
         * <code>optional int32 project_default_layer_duration = 125;</code>
         * @return The projectDefaultLayerDuration.
         */
        @java.lang.Override
        public int getProjectDefaultLayerDuration() {
          return projectDefaultLayerDuration_;
        }
        /**
         * <code>optional int32 project_default_layer_duration = 125;</code>
         * @param value The projectDefaultLayerDuration to set.
         * @return This builder for chaining.
         */
        public Builder setProjectDefaultLayerDuration(int value) {
          bitField0_ |= 0x00010000;
          projectDefaultLayerDuration_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 project_default_layer_duration = 125;</code>
         * @return This builder for chaining.
         */
        public Builder clearProjectDefaultLayerDuration() {
          bitField0_ = (bitField0_ & ~0x00010000);
          projectDefaultLayerDuration_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object projectDefaultImgCropMode_ = "";
        /**
         * <code>optional string project_default_img_crop_mode = 126;</code>
         * @return Whether the projectDefaultImgCropMode field is set.
         */
        public boolean hasProjectDefaultImgCropMode() {
          return ((bitField0_ & 0x00020000) != 0);
        }
        /**
         * <code>optional string project_default_img_crop_mode = 126;</code>
         * @return The projectDefaultImgCropMode.
         */
        public java.lang.String getProjectDefaultImgCropMode() {
          java.lang.Object ref = projectDefaultImgCropMode_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              projectDefaultImgCropMode_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string project_default_img_crop_mode = 126;</code>
         * @return The bytes for projectDefaultImgCropMode.
         */
        public com.google.protobuf.ByteString
            getProjectDefaultImgCropModeBytes() {
          java.lang.Object ref = projectDefaultImgCropMode_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            projectDefaultImgCropMode_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string project_default_img_crop_mode = 126;</code>
         * @param value The projectDefaultImgCropMode to set.
         * @return This builder for chaining.
         */
        public Builder setProjectDefaultImgCropMode(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
          projectDefaultImgCropMode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string project_default_img_crop_mode = 126;</code>
         * @return This builder for chaining.
         */
        public Builder clearProjectDefaultImgCropMode() {
          bitField0_ = (bitField0_ & ~0x00020000);
          projectDefaultImgCropMode_ = getDefaultInstance().getProjectDefaultImgCropMode();
          onChanged();
          return this;
        }
        /**
         * <code>optional string project_default_img_crop_mode = 126;</code>
         * @param value The bytes for projectDefaultImgCropMode to set.
         * @return This builder for chaining.
         */
        public Builder setProjectDefaultImgCropModeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
          projectDefaultImgCropMode_ = value;
          onChanged();
          return this;
        }

        private boolean projectAutoMaster_ ;
        /**
         * <code>optional bool project_auto_master = 127;</code>
         * @return Whether the projectAutoMaster field is set.
         */
        @java.lang.Override
        public boolean hasProjectAutoMaster() {
          return ((bitField0_ & 0x00040000) != 0);
        }
        /**
         * <code>optional bool project_auto_master = 127;</code>
         * @return The projectAutoMaster.
         */
        @java.lang.Override
        public boolean getProjectAutoMaster() {
          return projectAutoMaster_;
        }
        /**
         * <code>optional bool project_auto_master = 127;</code>
         * @param value The projectAutoMaster to set.
         * @return This builder for chaining.
         */
        public Builder setProjectAutoMaster(boolean value) {
          bitField0_ |= 0x00040000;
          projectAutoMaster_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool project_auto_master = 127;</code>
         * @return This builder for chaining.
         */
        public Builder clearProjectAutoMaster() {
          bitField0_ = (bitField0_ & ~0x00040000);
          projectAutoMaster_ = false;
          onChanged();
          return this;
        }

        private int projectMasterVolume_ ;
        /**
         * <code>optional int32 project_master_volume = 128;</code>
         * @return Whether the projectMasterVolume field is set.
         */
        @java.lang.Override
        public boolean hasProjectMasterVolume() {
          return ((bitField0_ & 0x00080000) != 0);
        }
        /**
         * <code>optional int32 project_master_volume = 128;</code>
         * @return The projectMasterVolume.
         */
        @java.lang.Override
        public int getProjectMasterVolume() {
          return projectMasterVolume_;
        }
        /**
         * <code>optional int32 project_master_volume = 128;</code>
         * @param value The projectMasterVolume to set.
         * @return This builder for chaining.
         */
        public Builder setProjectMasterVolume(int value) {
          bitField0_ |= 0x00080000;
          projectMasterVolume_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 project_master_volume = 128;</code>
         * @return This builder for chaining.
         */
        public Builder clearProjectMasterVolume() {
          bitField0_ = (bitField0_ & ~0x00080000);
          projectMasterVolume_ = 0;
          onChanged();
          return this;
        }

        private int projectResolutionSetting_ ;
        /**
         * <code>optional int32 project_resolution_setting = 129;</code>
         * @return Whether the projectResolutionSetting field is set.
         */
        @java.lang.Override
        public boolean hasProjectResolutionSetting() {
          return ((bitField0_ & 0x00100000) != 0);
        }
        /**
         * <code>optional int32 project_resolution_setting = 129;</code>
         * @return The projectResolutionSetting.
         */
        @java.lang.Override
        public int getProjectResolutionSetting() {
          return projectResolutionSetting_;
        }
        /**
         * <code>optional int32 project_resolution_setting = 129;</code>
         * @param value The projectResolutionSetting to set.
         * @return This builder for chaining.
         */
        public Builder setProjectResolutionSetting(int value) {
          bitField0_ |= 0x00100000;
          projectResolutionSetting_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 project_resolution_setting = 129;</code>
         * @return This builder for chaining.
         */
        public Builder clearProjectResolutionSetting() {
          bitField0_ = (bitField0_ & ~0x00100000);
          projectResolutionSetting_ = 0;
          onChanged();
          return this;
        }

        private int projectFrameRate_ ;
        /**
         * <code>optional int32 project_frame_rate = 130;</code>
         * @return Whether the projectFrameRate field is set.
         */
        @java.lang.Override
        public boolean hasProjectFrameRate() {
          return ((bitField0_ & 0x00200000) != 0);
        }
        /**
         * <code>optional int32 project_frame_rate = 130;</code>
         * @return The projectFrameRate.
         */
        @java.lang.Override
        public int getProjectFrameRate() {
          return projectFrameRate_;
        }
        /**
         * <code>optional int32 project_frame_rate = 130;</code>
         * @param value The projectFrameRate to set.
         * @return This builder for chaining.
         */
        public Builder setProjectFrameRate(int value) {
          bitField0_ |= 0x00200000;
          projectFrameRate_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 project_frame_rate = 130;</code>
         * @return This builder for chaining.
         */
        public Builder clearProjectFrameRate() {
          bitField0_ = (bitField0_ & ~0x00200000);
          projectFrameRate_ = 0;
          onChanged();
          return this;
        }

        private int projectDefaultImgCropModeIos_ ;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 project_default_img_crop_mode_ios = 131;</code>
         * @return Whether the projectDefaultImgCropModeIos field is set.
         */
        @java.lang.Override
        public boolean hasProjectDefaultImgCropModeIos() {
          return ((bitField0_ & 0x00400000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 project_default_img_crop_mode_ios = 131;</code>
         * @return The projectDefaultImgCropModeIos.
         */
        @java.lang.Override
        public int getProjectDefaultImgCropModeIos() {
          return projectDefaultImgCropModeIos_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 project_default_img_crop_mode_ios = 131;</code>
         * @param value The projectDefaultImgCropModeIos to set.
         * @return This builder for chaining.
         */
        public Builder setProjectDefaultImgCropModeIos(int value) {
          bitField0_ |= 0x00400000;
          projectDefaultImgCropModeIos_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional int32 project_default_img_crop_mode_ios = 131;</code>
         * @return This builder for chaining.
         */
        public Builder clearProjectDefaultImgCropModeIos() {
          bitField0_ = (bitField0_ & ~0x00400000);
          projectDefaultImgCropModeIos_ = 0;
          onChanged();
          return this;
        }

        private int projectCapabilityMode_ ;
        /**
         * <code>optional int32 project_capability_mode = 132;</code>
         * @return Whether the projectCapabilityMode field is set.
         */
        @java.lang.Override
        public boolean hasProjectCapabilityMode() {
          return ((bitField0_ & 0x00800000) != 0);
        }
        /**
         * <code>optional int32 project_capability_mode = 132;</code>
         * @return The projectCapabilityMode.
         */
        @java.lang.Override
        public int getProjectCapabilityMode() {
          return projectCapabilityMode_;
        }
        /**
         * <code>optional int32 project_capability_mode = 132;</code>
         * @param value The projectCapabilityMode to set.
         * @return This builder for chaining.
         */
        public Builder setProjectCapabilityMode(int value) {
          bitField0_ |= 0x00800000;
          projectCapabilityMode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 project_capability_mode = 132;</code>
         * @return This builder for chaining.
         */
        public Builder clearProjectCapabilityMode() {
          bitField0_ = (bitField0_ & ~0x00800000);
          projectCapabilityMode_ = 0;
          onChanged();
          return this;
        }

        private int aspectRatioWidth_ ;
        /**
         * <code>optional int32 aspect_ratio_width = 133;</code>
         * @return Whether the aspectRatioWidth field is set.
         */
        @java.lang.Override
        public boolean hasAspectRatioWidth() {
          return ((bitField0_ & 0x01000000) != 0);
        }
        /**
         * <code>optional int32 aspect_ratio_width = 133;</code>
         * @return The aspectRatioWidth.
         */
        @java.lang.Override
        public int getAspectRatioWidth() {
          return aspectRatioWidth_;
        }
        /**
         * <code>optional int32 aspect_ratio_width = 133;</code>
         * @param value The aspectRatioWidth to set.
         * @return This builder for chaining.
         */
        public Builder setAspectRatioWidth(int value) {
          bitField0_ |= 0x01000000;
          aspectRatioWidth_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 aspect_ratio_width = 133;</code>
         * @return This builder for chaining.
         */
        public Builder clearAspectRatioWidth() {
          bitField0_ = (bitField0_ & ~0x01000000);
          aspectRatioWidth_ = 0;
          onChanged();
          return this;
        }

        private int aspectRatioHeight_ ;
        /**
         * <code>optional int32 aspect_ratio_height = 134;</code>
         * @return Whether the aspectRatioHeight field is set.
         */
        @java.lang.Override
        public boolean hasAspectRatioHeight() {
          return ((bitField0_ & 0x02000000) != 0);
        }
        /**
         * <code>optional int32 aspect_ratio_height = 134;</code>
         * @return The aspectRatioHeight.
         */
        @java.lang.Override
        public int getAspectRatioHeight() {
          return aspectRatioHeight_;
        }
        /**
         * <code>optional int32 aspect_ratio_height = 134;</code>
         * @param value The aspectRatioHeight to set.
         * @return This builder for chaining.
         */
        public Builder setAspectRatioHeight(int value) {
          bitField0_ |= 0x02000000;
          aspectRatioHeight_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 aspect_ratio_height = 134;</code>
         * @return This builder for chaining.
         */
        public Builder clearAspectRatioHeight() {
          bitField0_ = (bitField0_ & ~0x02000000);
          aspectRatioHeight_ = 0;
          onChanged();
          return this;
        }

        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade audioFade_;
        private com.google.protobuf.SingleFieldBuilderV3<
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.FadeOrBuilder> audioFadeBuilder_;
        /**
         * <pre>
         * new for project share
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Fade audio_fade = 135;</code>
         * @return Whether the audioFade field is set.
         */
        public boolean hasAudioFade() {
          return ((bitField0_ & 0x04000000) != 0);
        }
        /**
         * <pre>
         * new for project share
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Fade audio_fade = 135;</code>
         * @return The audioFade.
         */
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade getAudioFade() {
          if (audioFadeBuilder_ == null) {
            return audioFade_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.getDefaultInstance() : audioFade_;
          } else {
            return audioFadeBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * new for project share
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Fade audio_fade = 135;</code>
         */
        public Builder setAudioFade(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade value) {
          if (audioFadeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            audioFade_ = value;
            onChanged();
          } else {
            audioFadeBuilder_.setMessage(value);
          }
          bitField0_ |= 0x04000000;
          return this;
        }
        /**
         * <pre>
         * new for project share
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Fade audio_fade = 135;</code>
         */
        public Builder setAudioFade(
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.Builder builderForValue) {
          if (audioFadeBuilder_ == null) {
            audioFade_ = builderForValue.build();
            onChanged();
          } else {
            audioFadeBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x04000000;
          return this;
        }
        /**
         * <pre>
         * new for project share
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Fade audio_fade = 135;</code>
         */
        public Builder mergeAudioFade(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade value) {
          if (audioFadeBuilder_ == null) {
            if (((bitField0_ & 0x04000000) != 0) &&
                audioFade_ != null &&
                audioFade_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.getDefaultInstance()) {
              audioFade_ =
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.newBuilder(audioFade_).mergeFrom(value).buildPartial();
            } else {
              audioFade_ = value;
            }
            onChanged();
          } else {
            audioFadeBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x04000000;
          return this;
        }
        /**
         * <pre>
         * new for project share
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Fade audio_fade = 135;</code>
         */
        public Builder clearAudioFade() {
          if (audioFadeBuilder_ == null) {
            audioFade_ = null;
            onChanged();
          } else {
            audioFadeBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x04000000);
          return this;
        }
        /**
         * <pre>
         * new for project share
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Fade audio_fade = 135;</code>
         */
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.Builder getAudioFadeBuilder() {
          bitField0_ |= 0x04000000;
          onChanged();
          return getAudioFadeFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * new for project share
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Fade audio_fade = 135;</code>
         */
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.FadeOrBuilder getAudioFadeOrBuilder() {
          if (audioFadeBuilder_ != null) {
            return audioFadeBuilder_.getMessageOrBuilder();
          } else {
            return audioFade_ == null ?
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.getDefaultInstance() : audioFade_;
          }
        }
        /**
         * <pre>
         * new for project share
         * </pre>
         *
         * <code>optional .KMProto.KMProject.Fade audio_fade = 135;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.FadeOrBuilder> 
            getAudioFadeFieldBuilder() {
          if (audioFadeBuilder_ == null) {
            audioFadeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.FadeOrBuilder>(
                    getAudioFade(),
                    getParentForChildren(),
                    isClean());
            audioFade_ = null;
          }
          return audioFadeBuilder_;
        }

        private decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade videoFade_;
        private com.google.protobuf.SingleFieldBuilderV3<
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.FadeOrBuilder> videoFadeBuilder_;
        /**
         * <code>optional .KMProto.KMProject.Fade video_fade = 136;</code>
         * @return Whether the videoFade field is set.
         */
        public boolean hasVideoFade() {
          return ((bitField0_ & 0x08000000) != 0);
        }
        /**
         * <code>optional .KMProto.KMProject.Fade video_fade = 136;</code>
         * @return The videoFade.
         */
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade getVideoFade() {
          if (videoFadeBuilder_ == null) {
            return videoFade_ == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.getDefaultInstance() : videoFade_;
          } else {
            return videoFadeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .KMProto.KMProject.Fade video_fade = 136;</code>
         */
        public Builder setVideoFade(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade value) {
          if (videoFadeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            videoFade_ = value;
            onChanged();
          } else {
            videoFadeBuilder_.setMessage(value);
          }
          bitField0_ |= 0x08000000;
          return this;
        }
        /**
         * <code>optional .KMProto.KMProject.Fade video_fade = 136;</code>
         */
        public Builder setVideoFade(
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.Builder builderForValue) {
          if (videoFadeBuilder_ == null) {
            videoFade_ = builderForValue.build();
            onChanged();
          } else {
            videoFadeBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x08000000;
          return this;
        }
        /**
         * <code>optional .KMProto.KMProject.Fade video_fade = 136;</code>
         */
        public Builder mergeVideoFade(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade value) {
          if (videoFadeBuilder_ == null) {
            if (((bitField0_ & 0x08000000) != 0) &&
                videoFade_ != null &&
                videoFade_ != decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.getDefaultInstance()) {
              videoFade_ =
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.newBuilder(videoFade_).mergeFrom(value).buildPartial();
            } else {
              videoFade_ = value;
            }
            onChanged();
          } else {
            videoFadeBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x08000000;
          return this;
        }
        /**
         * <code>optional .KMProto.KMProject.Fade video_fade = 136;</code>
         */
        public Builder clearVideoFade() {
          if (videoFadeBuilder_ == null) {
            videoFade_ = null;
            onChanged();
          } else {
            videoFadeBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x08000000);
          return this;
        }
        /**
         * <code>optional .KMProto.KMProject.Fade video_fade = 136;</code>
         */
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.Builder getVideoFadeBuilder() {
          bitField0_ |= 0x08000000;
          onChanged();
          return getVideoFadeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .KMProto.KMProject.Fade video_fade = 136;</code>
         */
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.FadeOrBuilder getVideoFadeOrBuilder() {
          if (videoFadeBuilder_ != null) {
            return videoFadeBuilder_.getMessageOrBuilder();
          } else {
            return videoFade_ == null ?
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.getDefaultInstance() : videoFade_;
          }
        }
        /**
         * <code>optional .KMProto.KMProject.Fade video_fade = 136;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.FadeOrBuilder> 
            getVideoFadeFieldBuilder() {
          if (videoFadeBuilder_ == null) {
            videoFadeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.Fade.Builder, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject.FadeOrBuilder>(
                    getVideoFade(),
                    getParentForChildren(),
                    isClean());
            videoFade_ = null;
          }
          return videoFadeBuilder_;
        }

        private int projectDefaultTransitionDuration_ ;
        /**
         * <code>optional int32 project_default_transition_duration = 137;</code>
         * @return Whether the projectDefaultTransitionDuration field is set.
         */
        @java.lang.Override
        public boolean hasProjectDefaultTransitionDuration() {
          return ((bitField0_ & 0x10000000) != 0);
        }
        /**
         * <code>optional int32 project_default_transition_duration = 137;</code>
         * @return The projectDefaultTransitionDuration.
         */
        @java.lang.Override
        public int getProjectDefaultTransitionDuration() {
          return projectDefaultTransitionDuration_;
        }
        /**
         * <code>optional int32 project_default_transition_duration = 137;</code>
         * @param value The projectDefaultTransitionDuration to set.
         * @return This builder for chaining.
         */
        public Builder setProjectDefaultTransitionDuration(int value) {
          bitField0_ |= 0x10000000;
          projectDefaultTransitionDuration_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 project_default_transition_duration = 137;</code>
         * @return This builder for chaining.
         */
        public Builder clearProjectDefaultTransitionDuration() {
          bitField0_ = (bitField0_ & ~0x10000000);
          projectDefaultTransitionDuration_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:KMProto.KMProject)
      }

      // @@protoc_insertion_point(class_scope:KMProto.KMProject)
      private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject();
      }

      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<KMProject>
          PARSER = new com.google.protobuf.AbstractParser<KMProject>() {
        @java.lang.Override
        public KMProject parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new KMProject(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<KMProject> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<KMProject> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProject getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface KMProjectHeaderOrBuilder extends
        // @@protoc_insertion_point(interface_extends:KMProto.KMProjectHeader)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Description: Project version number.
       * Type: Integer
       * </pre>
       *
       * <code>optional uint32 project_version = 1;</code>
       * @return Whether the projectVersion field is set.
       */
      boolean hasProjectVersion();
      /**
       * <pre>
       * Description: Project version number.
       * Type: Integer
       * </pre>
       *
       * <code>optional uint32 project_version = 1;</code>
       * @return The projectVersion.
       */
      int getProjectVersion();

      /**
       * <pre>
       * Description: Version code.
       * Type: Integer
       * </pre>
       *
       * <code>optional uint32 saved_with_km_version = 2;</code>
       * @return Whether the savedWithKmVersion field is set.
       */
      boolean hasSavedWithKmVersion();
      /**
       * <pre>
       * Description: Version code.
       * Type: Integer
       * </pre>
       *
       * <code>optional uint32 saved_with_km_version = 2;</code>
       * @return The savedWithKmVersion.
       */
      int getSavedWithKmVersion();

      /**
       * <pre>
       * Description: The number of milliseconds since January 1, 1970, 00:00:00 GMT represented by this date.
       * Type: uint64
       * </pre>
       *
       * <code>optional uint64 creation_time = 3;</code>
       * @return Whether the creationTime field is set.
       */
      boolean hasCreationTime();
      /**
       * <pre>
       * Description: The number of milliseconds since January 1, 1970, 00:00:00 GMT represented by this date.
       * Type: uint64
       * </pre>
       *
       * <code>optional uint64 creation_time = 3;</code>
       * @return The creationTime.
       */
      long getCreationTime();

      /**
       * <code>optional uint64 last_edit_time = 4;</code>
       * @return Whether the lastEditTime field is set.
       */
      boolean hasLastEditTime();
      /**
       * <code>optional uint64 last_edit_time = 4;</code>
       * @return The lastEditTime.
       */
      long getLastEditTime();

      /**
       * <pre>
       * Description: Project thumbnail(JPEG).
       * Type: byte array
       * </pre>
       *
       * <code>optional bytes jpeg_thumbnail = 5;</code>
       * @return Whether the jpegThumbnail field is set.
       */
      boolean hasJpegThumbnail();
      /**
       * <pre>
       * Description: Project thumbnail(JPEG).
       * Type: byte array
       * </pre>
       *
       * <code>optional bytes jpeg_thumbnail = 5;</code>
       * @return The jpegThumbnail.
       */
      com.google.protobuf.ByteString getJpegThumbnail();

      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional bool need_update_large_thumbnail = 100;</code>
       * @return Whether the needUpdateLargeThumbnail field is set.
       */
      boolean hasNeedUpdateLargeThumbnail();
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional bool need_update_large_thumbnail = 100;</code>
       * @return The needUpdateLargeThumbnail.
       */
      boolean getNeedUpdateLargeThumbnail();

      /**
       * <code>optional uint64 project_uuid_lsb = 6;</code>
       * @return Whether the projectUuidLsb field is set.
       */
      boolean hasProjectUuidLsb();
      /**
       * <code>optional uint64 project_uuid_lsb = 6;</code>
       * @return The projectUuidLsb.
       */
      long getProjectUuidLsb();

      /**
       * <code>optional uint64 project_uuid_msb = 7;</code>
       * @return Whether the projectUuidMsb field is set.
       */
      boolean hasProjectUuidMsb();
      /**
       * <code>optional uint64 project_uuid_msb = 7;</code>
       * @return The projectUuidMsb.
       */
      long getProjectUuidMsb();

      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional string theme_id = 101;</code>
       * @return Whether the themeId field is set.
       */
      boolean hasThemeId();
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional string theme_id = 101;</code>
       * @return The themeId.
       */
      java.lang.String getThemeId();
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional string theme_id = 101;</code>
       * @return The bytes for themeId.
       */
      com.google.protobuf.ByteString
          getThemeIdBytes();

      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional string bgm_theme_id = 102;</code>
       * @return Whether the bgmThemeId field is set.
       */
      boolean hasBgmThemeId();
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional string bgm_theme_id = 102;</code>
       * @return The bgmThemeId.
       */
      java.lang.String getBgmThemeId();
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional string bgm_theme_id = 102;</code>
       * @return The bytes for bgmThemeId.
       */
      com.google.protobuf.ByteString
          getBgmThemeIdBytes();

      /**
       * <code>optional uint32 total_play_time = 8;</code>
       * @return Whether the totalPlayTime field is set.
       */
      boolean hasTotalPlayTime();
      /**
       * <code>optional uint32 total_play_time = 8;</code>
       * @return The totalPlayTime.
       */
      int getTotalPlayTime();

      /**
       * <pre>
       * Description: Kinemaster version.
       * Type: String
       * Ex: 4.13.3.15838.android
       * </pre>
       *
       * <code>optional string saved_with_km_ver_name = 103;</code>
       * @return Whether the savedWithKmVerName field is set.
       */
      boolean hasSavedWithKmVerName();
      /**
       * <pre>
       * Description: Kinemaster version.
       * Type: String
       * Ex: 4.13.3.15838.android
       * </pre>
       *
       * <code>optional string saved_with_km_ver_name = 103;</code>
       * @return The savedWithKmVerName.
       */
      java.lang.String getSavedWithKmVerName();
      /**
       * <pre>
       * Description: Kinemaster version.
       * Type: String
       * Ex: 4.13.3.15838.android
       * </pre>
       *
       * <code>optional string saved_with_km_ver_name = 103;</code>
       * @return The bytes for savedWithKmVerName.
       */
      com.google.protobuf.ByteString
          getSavedWithKmVerNameBytes();

      /**
       * <code>optional .KMProto.Platform saved_on_platform = 104;</code>
       * @return Whether the savedOnPlatform field is set.
       */
      boolean hasSavedOnPlatform();
      /**
       * <code>optional .KMProto.Platform saved_on_platform = 104;</code>
       * @return The savedOnPlatform.
       */
      decoder.protobuffer.KinemasterProjectWire.KMProto.Platform getSavedOnPlatform();

      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional bool using_icloud_for_ios_only = 105;</code>
       * @return Whether the usingIcloudForIosOnly field is set.
       */
      boolean hasUsingIcloudForIosOnly();
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional bool using_icloud_for_ios_only = 105;</code>
       * @return The usingIcloudForIosOnly.
       */
      boolean getUsingIcloudForIosOnly();

      /**
       * <pre>
       * in version 8 : Must use project_aspect_ratio_width, project_aspect_ratio_width and timeline_format_version of header 
       * </pre>
       *
       * <code>optional int32 projectAspectWidth = 106;</code>
       * @return Whether the projectAspectWidth field is set.
       */
      boolean hasProjectAspectWidth();
      /**
       * <pre>
       * in version 8 : Must use project_aspect_ratio_width, project_aspect_ratio_width and timeline_format_version of header 
       * </pre>
       *
       * <code>optional int32 projectAspectWidth = 106;</code>
       * @return The projectAspectWidth.
       */
      int getProjectAspectWidth();

      /**
       * <code>optional int32 projectAspectHeight = 107;</code>
       * @return Whether the projectAspectHeight field is set.
       */
      boolean hasProjectAspectHeight();
      /**
       * <code>optional int32 projectAspectHeight = 107;</code>
       * @return The projectAspectHeight.
       */
      int getProjectAspectHeight();

      /**
       * <code>optional int32 timelineFormatVersion = 108;</code>
       * @return Whether the timelineFormatVersion field is set.
       */
      boolean hasTimelineFormatVersion();
      /**
       * <code>optional int32 timelineFormatVersion = 108;</code>
       * @return The timelineFormatVersion.
       */
      int getTimelineFormatVersion();

      /**
       * <code>optional string projectTitle = 109;</code>
       * @return Whether the projectTitle field is set.
       */
      boolean hasProjectTitle();
      /**
       * <code>optional string projectTitle = 109;</code>
       * @return The projectTitle.
       */
      java.lang.String getProjectTitle();
      /**
       * <code>optional string projectTitle = 109;</code>
       * @return The bytes for projectTitle.
       */
      com.google.protobuf.ByteString
          getProjectTitleBytes();
    }
    /**
     * Protobuf type {@code KMProto.KMProjectHeader}
     */
    public static final class KMProjectHeader extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:KMProto.KMProjectHeader)
        KMProjectHeaderOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use KMProjectHeader.newBuilder() to construct.
      private KMProjectHeader(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private KMProjectHeader() {
        jpegThumbnail_ = com.google.protobuf.ByteString.EMPTY;
        themeId_ = "";
        bgmThemeId_ = "";
        savedWithKmVerName_ = "";
        savedOnPlatform_ = 1;
        projectTitle_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new KMProjectHeader();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private KMProjectHeader(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                projectVersion_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                savedWithKmVersion_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                creationTime_ = input.readUInt64();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                lastEditTime_ = input.readUInt64();
                break;
              }
              case 42: {
                bitField0_ |= 0x00000010;
                jpegThumbnail_ = input.readBytes();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000040;
                projectUuidLsb_ = input.readUInt64();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000080;
                projectUuidMsb_ = input.readUInt64();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000400;
                totalPlayTime_ = input.readUInt32();
                break;
              }
              case 800: {
                bitField0_ |= 0x00000020;
                needUpdateLargeThumbnail_ = input.readBool();
                break;
              }
              case 810: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000100;
                themeId_ = bs;
                break;
              }
              case 818: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000200;
                bgmThemeId_ = bs;
                break;
              }
              case 826: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000800;
                savedWithKmVerName_ = bs;
                break;
              }
              case 832: {
                int rawValue = input.readEnum();
                  @SuppressWarnings("deprecation")
                decoder.protobuffer.KinemasterProjectWire.KMProto.Platform value = decoder.protobuffer.KinemasterProjectWire.KMProto.Platform.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(104, rawValue);
                } else {
                  bitField0_ |= 0x00001000;
                  savedOnPlatform_ = rawValue;
                }
                break;
              }
              case 840: {
                bitField0_ |= 0x00002000;
                usingIcloudForIosOnly_ = input.readBool();
                break;
              }
              case 848: {
                bitField0_ |= 0x00004000;
                projectAspectWidth_ = input.readInt32();
                break;
              }
              case 856: {
                bitField0_ |= 0x00008000;
                projectAspectHeight_ = input.readInt32();
                break;
              }
              case 864: {
                bitField0_ |= 0x00010000;
                timelineFormatVersion_ = input.readInt32();
                break;
              }
              case 874: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00020000;
                projectTitle_ = bs;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProjectHeader_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProjectHeader_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader.Builder.class);
      }

      private int bitField0_;
      public static final int PROJECT_VERSION_FIELD_NUMBER = 1;
      private int projectVersion_;
      /**
       * <pre>
       * Description: Project version number.
       * Type: Integer
       * </pre>
       *
       * <code>optional uint32 project_version = 1;</code>
       * @return Whether the projectVersion field is set.
       */
      @java.lang.Override
      public boolean hasProjectVersion() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Description: Project version number.
       * Type: Integer
       * </pre>
       *
       * <code>optional uint32 project_version = 1;</code>
       * @return The projectVersion.
       */
      @java.lang.Override
      public int getProjectVersion() {
        return projectVersion_;
      }

      public static final int SAVED_WITH_KM_VERSION_FIELD_NUMBER = 2;
      private int savedWithKmVersion_;
      /**
       * <pre>
       * Description: Version code.
       * Type: Integer
       * </pre>
       *
       * <code>optional uint32 saved_with_km_version = 2;</code>
       * @return Whether the savedWithKmVersion field is set.
       */
      @java.lang.Override
      public boolean hasSavedWithKmVersion() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Description: Version code.
       * Type: Integer
       * </pre>
       *
       * <code>optional uint32 saved_with_km_version = 2;</code>
       * @return The savedWithKmVersion.
       */
      @java.lang.Override
      public int getSavedWithKmVersion() {
        return savedWithKmVersion_;
      }

      public static final int CREATION_TIME_FIELD_NUMBER = 3;
      private long creationTime_;
      /**
       * <pre>
       * Description: The number of milliseconds since January 1, 1970, 00:00:00 GMT represented by this date.
       * Type: uint64
       * </pre>
       *
       * <code>optional uint64 creation_time = 3;</code>
       * @return Whether the creationTime field is set.
       */
      @java.lang.Override
      public boolean hasCreationTime() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Description: The number of milliseconds since January 1, 1970, 00:00:00 GMT represented by this date.
       * Type: uint64
       * </pre>
       *
       * <code>optional uint64 creation_time = 3;</code>
       * @return The creationTime.
       */
      @java.lang.Override
      public long getCreationTime() {
        return creationTime_;
      }

      public static final int LAST_EDIT_TIME_FIELD_NUMBER = 4;
      private long lastEditTime_;
      /**
       * <code>optional uint64 last_edit_time = 4;</code>
       * @return Whether the lastEditTime field is set.
       */
      @java.lang.Override
      public boolean hasLastEditTime() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint64 last_edit_time = 4;</code>
       * @return The lastEditTime.
       */
      @java.lang.Override
      public long getLastEditTime() {
        return lastEditTime_;
      }

      public static final int JPEG_THUMBNAIL_FIELD_NUMBER = 5;
      private com.google.protobuf.ByteString jpegThumbnail_;
      /**
       * <pre>
       * Description: Project thumbnail(JPEG).
       * Type: byte array
       * </pre>
       *
       * <code>optional bytes jpeg_thumbnail = 5;</code>
       * @return Whether the jpegThumbnail field is set.
       */
      @java.lang.Override
      public boolean hasJpegThumbnail() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Description: Project thumbnail(JPEG).
       * Type: byte array
       * </pre>
       *
       * <code>optional bytes jpeg_thumbnail = 5;</code>
       * @return The jpegThumbnail.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getJpegThumbnail() {
        return jpegThumbnail_;
      }

      public static final int NEED_UPDATE_LARGE_THUMBNAIL_FIELD_NUMBER = 100;
      private boolean needUpdateLargeThumbnail_;
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional bool need_update_large_thumbnail = 100;</code>
       * @return Whether the needUpdateLargeThumbnail field is set.
       */
      @java.lang.Override
      public boolean hasNeedUpdateLargeThumbnail() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional bool need_update_large_thumbnail = 100;</code>
       * @return The needUpdateLargeThumbnail.
       */
      @java.lang.Override
      public boolean getNeedUpdateLargeThumbnail() {
        return needUpdateLargeThumbnail_;
      }

      public static final int PROJECT_UUID_LSB_FIELD_NUMBER = 6;
      private long projectUuidLsb_;
      /**
       * <code>optional uint64 project_uuid_lsb = 6;</code>
       * @return Whether the projectUuidLsb field is set.
       */
      @java.lang.Override
      public boolean hasProjectUuidLsb() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional uint64 project_uuid_lsb = 6;</code>
       * @return The projectUuidLsb.
       */
      @java.lang.Override
      public long getProjectUuidLsb() {
        return projectUuidLsb_;
      }

      public static final int PROJECT_UUID_MSB_FIELD_NUMBER = 7;
      private long projectUuidMsb_;
      /**
       * <code>optional uint64 project_uuid_msb = 7;</code>
       * @return Whether the projectUuidMsb field is set.
       */
      @java.lang.Override
      public boolean hasProjectUuidMsb() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional uint64 project_uuid_msb = 7;</code>
       * @return The projectUuidMsb.
       */
      @java.lang.Override
      public long getProjectUuidMsb() {
        return projectUuidMsb_;
      }

      public static final int THEME_ID_FIELD_NUMBER = 101;
      private volatile java.lang.Object themeId_;
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional string theme_id = 101;</code>
       * @return Whether the themeId field is set.
       */
      @java.lang.Override
      public boolean hasThemeId() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional string theme_id = 101;</code>
       * @return The themeId.
       */
      @java.lang.Override
      public java.lang.String getThemeId() {
        java.lang.Object ref = themeId_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            themeId_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional string theme_id = 101;</code>
       * @return The bytes for themeId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getThemeIdBytes() {
        java.lang.Object ref = themeId_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          themeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int BGM_THEME_ID_FIELD_NUMBER = 102;
      private volatile java.lang.Object bgmThemeId_;
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional string bgm_theme_id = 102;</code>
       * @return Whether the bgmThemeId field is set.
       */
      @java.lang.Override
      public boolean hasBgmThemeId() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional string bgm_theme_id = 102;</code>
       * @return The bgmThemeId.
       */
      @java.lang.Override
      public java.lang.String getBgmThemeId() {
        java.lang.Object ref = bgmThemeId_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            bgmThemeId_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional string bgm_theme_id = 102;</code>
       * @return The bytes for bgmThemeId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getBgmThemeIdBytes() {
        java.lang.Object ref = bgmThemeId_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bgmThemeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TOTAL_PLAY_TIME_FIELD_NUMBER = 8;
      private int totalPlayTime_;
      /**
       * <code>optional uint32 total_play_time = 8;</code>
       * @return Whether the totalPlayTime field is set.
       */
      @java.lang.Override
      public boolean hasTotalPlayTime() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional uint32 total_play_time = 8;</code>
       * @return The totalPlayTime.
       */
      @java.lang.Override
      public int getTotalPlayTime() {
        return totalPlayTime_;
      }

      public static final int SAVED_WITH_KM_VER_NAME_FIELD_NUMBER = 103;
      private volatile java.lang.Object savedWithKmVerName_;
      /**
       * <pre>
       * Description: Kinemaster version.
       * Type: String
       * Ex: 4.13.3.15838.android
       * </pre>
       *
       * <code>optional string saved_with_km_ver_name = 103;</code>
       * @return Whether the savedWithKmVerName field is set.
       */
      @java.lang.Override
      public boolean hasSavedWithKmVerName() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       * Description: Kinemaster version.
       * Type: String
       * Ex: 4.13.3.15838.android
       * </pre>
       *
       * <code>optional string saved_with_km_ver_name = 103;</code>
       * @return The savedWithKmVerName.
       */
      @java.lang.Override
      public java.lang.String getSavedWithKmVerName() {
        java.lang.Object ref = savedWithKmVerName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            savedWithKmVerName_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Description: Kinemaster version.
       * Type: String
       * Ex: 4.13.3.15838.android
       * </pre>
       *
       * <code>optional string saved_with_km_ver_name = 103;</code>
       * @return The bytes for savedWithKmVerName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSavedWithKmVerNameBytes() {
        java.lang.Object ref = savedWithKmVerName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          savedWithKmVerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SAVED_ON_PLATFORM_FIELD_NUMBER = 104;
      private int savedOnPlatform_;
      /**
       * <code>optional .KMProto.Platform saved_on_platform = 104;</code>
       * @return Whether the savedOnPlatform field is set.
       */
      @java.lang.Override public boolean hasSavedOnPlatform() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>optional .KMProto.Platform saved_on_platform = 104;</code>
       * @return The savedOnPlatform.
       */
      @java.lang.Override public decoder.protobuffer.KinemasterProjectWire.KMProto.Platform getSavedOnPlatform() {
        @SuppressWarnings("deprecation")
        decoder.protobuffer.KinemasterProjectWire.KMProto.Platform result = decoder.protobuffer.KinemasterProjectWire.KMProto.Platform.valueOf(savedOnPlatform_);
        return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.Platform.PLATFORM_IOS : result;
      }

      public static final int USING_ICLOUD_FOR_IOS_ONLY_FIELD_NUMBER = 105;
      private boolean usingIcloudForIosOnly_;
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional bool using_icloud_for_ios_only = 105;</code>
       * @return Whether the usingIcloudForIosOnly field is set.
       */
      @java.lang.Override
      public boolean hasUsingIcloudForIosOnly() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <pre>
       * Deprecated 
       * </pre>
       *
       * <code>optional bool using_icloud_for_ios_only = 105;</code>
       * @return The usingIcloudForIosOnly.
       */
      @java.lang.Override
      public boolean getUsingIcloudForIosOnly() {
        return usingIcloudForIosOnly_;
      }

      public static final int PROJECTASPECTWIDTH_FIELD_NUMBER = 106;
      private int projectAspectWidth_;
      /**
       * <pre>
       * in version 8 : Must use project_aspect_ratio_width, project_aspect_ratio_width and timeline_format_version of header 
       * </pre>
       *
       * <code>optional int32 projectAspectWidth = 106;</code>
       * @return Whether the projectAspectWidth field is set.
       */
      @java.lang.Override
      public boolean hasProjectAspectWidth() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <pre>
       * in version 8 : Must use project_aspect_ratio_width, project_aspect_ratio_width and timeline_format_version of header 
       * </pre>
       *
       * <code>optional int32 projectAspectWidth = 106;</code>
       * @return The projectAspectWidth.
       */
      @java.lang.Override
      public int getProjectAspectWidth() {
        return projectAspectWidth_;
      }

      public static final int PROJECTASPECTHEIGHT_FIELD_NUMBER = 107;
      private int projectAspectHeight_;
      /**
       * <code>optional int32 projectAspectHeight = 107;</code>
       * @return Whether the projectAspectHeight field is set.
       */
      @java.lang.Override
      public boolean hasProjectAspectHeight() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <code>optional int32 projectAspectHeight = 107;</code>
       * @return The projectAspectHeight.
       */
      @java.lang.Override
      public int getProjectAspectHeight() {
        return projectAspectHeight_;
      }

      public static final int TIMELINEFORMATVERSION_FIELD_NUMBER = 108;
      private int timelineFormatVersion_;
      /**
       * <code>optional int32 timelineFormatVersion = 108;</code>
       * @return Whether the timelineFormatVersion field is set.
       */
      @java.lang.Override
      public boolean hasTimelineFormatVersion() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <code>optional int32 timelineFormatVersion = 108;</code>
       * @return The timelineFormatVersion.
       */
      @java.lang.Override
      public int getTimelineFormatVersion() {
        return timelineFormatVersion_;
      }

      public static final int PROJECTTITLE_FIELD_NUMBER = 109;
      private volatile java.lang.Object projectTitle_;
      /**
       * <code>optional string projectTitle = 109;</code>
       * @return Whether the projectTitle field is set.
       */
      @java.lang.Override
      public boolean hasProjectTitle() {
        return ((bitField0_ & 0x00020000) != 0);
      }
      /**
       * <code>optional string projectTitle = 109;</code>
       * @return The projectTitle.
       */
      @java.lang.Override
      public java.lang.String getProjectTitle() {
        java.lang.Object ref = projectTitle_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            projectTitle_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string projectTitle = 109;</code>
       * @return The bytes for projectTitle.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getProjectTitleBytes() {
        java.lang.Object ref = projectTitle_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          projectTitle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, projectVersion_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, savedWithKmVersion_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt64(3, creationTime_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeUInt64(4, lastEditTime_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeBytes(5, jpegThumbnail_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeUInt64(6, projectUuidLsb_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          output.writeUInt64(7, projectUuidMsb_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          output.writeUInt32(8, totalPlayTime_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeBool(100, needUpdateLargeThumbnail_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 101, themeId_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 102, bgmThemeId_);
        }
        if (((bitField0_ & 0x00000800) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 103, savedWithKmVerName_);
        }
        if (((bitField0_ & 0x00001000) != 0)) {
          output.writeEnum(104, savedOnPlatform_);
        }
        if (((bitField0_ & 0x00002000) != 0)) {
          output.writeBool(105, usingIcloudForIosOnly_);
        }
        if (((bitField0_ & 0x00004000) != 0)) {
          output.writeInt32(106, projectAspectWidth_);
        }
        if (((bitField0_ & 0x00008000) != 0)) {
          output.writeInt32(107, projectAspectHeight_);
        }
        if (((bitField0_ & 0x00010000) != 0)) {
          output.writeInt32(108, timelineFormatVersion_);
        }
        if (((bitField0_ & 0x00020000) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 109, projectTitle_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, projectVersion_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, savedWithKmVersion_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(3, creationTime_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(4, lastEditTime_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(5, jpegThumbnail_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(6, projectUuidLsb_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(7, projectUuidMsb_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(8, totalPlayTime_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(100, needUpdateLargeThumbnail_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(101, themeId_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(102, bgmThemeId_);
        }
        if (((bitField0_ & 0x00000800) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(103, savedWithKmVerName_);
        }
        if (((bitField0_ & 0x00001000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(104, savedOnPlatform_);
        }
        if (((bitField0_ & 0x00002000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(105, usingIcloudForIosOnly_);
        }
        if (((bitField0_ & 0x00004000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(106, projectAspectWidth_);
        }
        if (((bitField0_ & 0x00008000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(107, projectAspectHeight_);
        }
        if (((bitField0_ & 0x00010000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(108, timelineFormatVersion_);
        }
        if (((bitField0_ & 0x00020000) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(109, projectTitle_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader)) {
          return super.equals(obj);
        }
        decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader other = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader) obj;

        if (hasProjectVersion() != other.hasProjectVersion()) return false;
        if (hasProjectVersion()) {
          if (getProjectVersion()
              != other.getProjectVersion()) return false;
        }
        if (hasSavedWithKmVersion() != other.hasSavedWithKmVersion()) return false;
        if (hasSavedWithKmVersion()) {
          if (getSavedWithKmVersion()
              != other.getSavedWithKmVersion()) return false;
        }
        if (hasCreationTime() != other.hasCreationTime()) return false;
        if (hasCreationTime()) {
          if (getCreationTime()
              != other.getCreationTime()) return false;
        }
        if (hasLastEditTime() != other.hasLastEditTime()) return false;
        if (hasLastEditTime()) {
          if (getLastEditTime()
              != other.getLastEditTime()) return false;
        }
        if (hasJpegThumbnail() != other.hasJpegThumbnail()) return false;
        if (hasJpegThumbnail()) {
          if (!getJpegThumbnail()
              .equals(other.getJpegThumbnail())) return false;
        }
        if (hasNeedUpdateLargeThumbnail() != other.hasNeedUpdateLargeThumbnail()) return false;
        if (hasNeedUpdateLargeThumbnail()) {
          if (getNeedUpdateLargeThumbnail()
              != other.getNeedUpdateLargeThumbnail()) return false;
        }
        if (hasProjectUuidLsb() != other.hasProjectUuidLsb()) return false;
        if (hasProjectUuidLsb()) {
          if (getProjectUuidLsb()
              != other.getProjectUuidLsb()) return false;
        }
        if (hasProjectUuidMsb() != other.hasProjectUuidMsb()) return false;
        if (hasProjectUuidMsb()) {
          if (getProjectUuidMsb()
              != other.getProjectUuidMsb()) return false;
        }
        if (hasThemeId() != other.hasThemeId()) return false;
        if (hasThemeId()) {
          if (!getThemeId()
              .equals(other.getThemeId())) return false;
        }
        if (hasBgmThemeId() != other.hasBgmThemeId()) return false;
        if (hasBgmThemeId()) {
          if (!getBgmThemeId()
              .equals(other.getBgmThemeId())) return false;
        }
        if (hasTotalPlayTime() != other.hasTotalPlayTime()) return false;
        if (hasTotalPlayTime()) {
          if (getTotalPlayTime()
              != other.getTotalPlayTime()) return false;
        }
        if (hasSavedWithKmVerName() != other.hasSavedWithKmVerName()) return false;
        if (hasSavedWithKmVerName()) {
          if (!getSavedWithKmVerName()
              .equals(other.getSavedWithKmVerName())) return false;
        }
        if (hasSavedOnPlatform() != other.hasSavedOnPlatform()) return false;
        if (hasSavedOnPlatform()) {
          if (savedOnPlatform_ != other.savedOnPlatform_) return false;
        }
        if (hasUsingIcloudForIosOnly() != other.hasUsingIcloudForIosOnly()) return false;
        if (hasUsingIcloudForIosOnly()) {
          if (getUsingIcloudForIosOnly()
              != other.getUsingIcloudForIosOnly()) return false;
        }
        if (hasProjectAspectWidth() != other.hasProjectAspectWidth()) return false;
        if (hasProjectAspectWidth()) {
          if (getProjectAspectWidth()
              != other.getProjectAspectWidth()) return false;
        }
        if (hasProjectAspectHeight() != other.hasProjectAspectHeight()) return false;
        if (hasProjectAspectHeight()) {
          if (getProjectAspectHeight()
              != other.getProjectAspectHeight()) return false;
        }
        if (hasTimelineFormatVersion() != other.hasTimelineFormatVersion()) return false;
        if (hasTimelineFormatVersion()) {
          if (getTimelineFormatVersion()
              != other.getTimelineFormatVersion()) return false;
        }
        if (hasProjectTitle() != other.hasProjectTitle()) return false;
        if (hasProjectTitle()) {
          if (!getProjectTitle()
              .equals(other.getProjectTitle())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasProjectVersion()) {
          hash = (37 * hash) + PROJECT_VERSION_FIELD_NUMBER;
          hash = (53 * hash) + getProjectVersion();
        }
        if (hasSavedWithKmVersion()) {
          hash = (37 * hash) + SAVED_WITH_KM_VERSION_FIELD_NUMBER;
          hash = (53 * hash) + getSavedWithKmVersion();
        }
        if (hasCreationTime()) {
          hash = (37 * hash) + CREATION_TIME_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getCreationTime());
        }
        if (hasLastEditTime()) {
          hash = (37 * hash) + LAST_EDIT_TIME_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getLastEditTime());
        }
        if (hasJpegThumbnail()) {
          hash = (37 * hash) + JPEG_THUMBNAIL_FIELD_NUMBER;
          hash = (53 * hash) + getJpegThumbnail().hashCode();
        }
        if (hasNeedUpdateLargeThumbnail()) {
          hash = (37 * hash) + NEED_UPDATE_LARGE_THUMBNAIL_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getNeedUpdateLargeThumbnail());
        }
        if (hasProjectUuidLsb()) {
          hash = (37 * hash) + PROJECT_UUID_LSB_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getProjectUuidLsb());
        }
        if (hasProjectUuidMsb()) {
          hash = (37 * hash) + PROJECT_UUID_MSB_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getProjectUuidMsb());
        }
        if (hasThemeId()) {
          hash = (37 * hash) + THEME_ID_FIELD_NUMBER;
          hash = (53 * hash) + getThemeId().hashCode();
        }
        if (hasBgmThemeId()) {
          hash = (37 * hash) + BGM_THEME_ID_FIELD_NUMBER;
          hash = (53 * hash) + getBgmThemeId().hashCode();
        }
        if (hasTotalPlayTime()) {
          hash = (37 * hash) + TOTAL_PLAY_TIME_FIELD_NUMBER;
          hash = (53 * hash) + getTotalPlayTime();
        }
        if (hasSavedWithKmVerName()) {
          hash = (37 * hash) + SAVED_WITH_KM_VER_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getSavedWithKmVerName().hashCode();
        }
        if (hasSavedOnPlatform()) {
          hash = (37 * hash) + SAVED_ON_PLATFORM_FIELD_NUMBER;
          hash = (53 * hash) + savedOnPlatform_;
        }
        if (hasUsingIcloudForIosOnly()) {
          hash = (37 * hash) + USING_ICLOUD_FOR_IOS_ONLY_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getUsingIcloudForIosOnly());
        }
        if (hasProjectAspectWidth()) {
          hash = (37 * hash) + PROJECTASPECTWIDTH_FIELD_NUMBER;
          hash = (53 * hash) + getProjectAspectWidth();
        }
        if (hasProjectAspectHeight()) {
          hash = (37 * hash) + PROJECTASPECTHEIGHT_FIELD_NUMBER;
          hash = (53 * hash) + getProjectAspectHeight();
        }
        if (hasTimelineFormatVersion()) {
          hash = (37 * hash) + TIMELINEFORMATVERSION_FIELD_NUMBER;
          hash = (53 * hash) + getTimelineFormatVersion();
        }
        if (hasProjectTitle()) {
          hash = (37 * hash) + PROJECTTITLE_FIELD_NUMBER;
          hash = (53 * hash) + getProjectTitle().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code KMProto.KMProjectHeader}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:KMProto.KMProjectHeader)
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeaderOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProjectHeader_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProjectHeader_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader.class, decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader.Builder.class);
        }

        // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          projectVersion_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          savedWithKmVersion_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          creationTime_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000004);
          lastEditTime_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000008);
          jpegThumbnail_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000010);
          needUpdateLargeThumbnail_ = false;
          bitField0_ = (bitField0_ & ~0x00000020);
          projectUuidLsb_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000040);
          projectUuidMsb_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000080);
          themeId_ = "";
          bitField0_ = (bitField0_ & ~0x00000100);
          bgmThemeId_ = "";
          bitField0_ = (bitField0_ & ~0x00000200);
          totalPlayTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000400);
          savedWithKmVerName_ = "";
          bitField0_ = (bitField0_ & ~0x00000800);
          savedOnPlatform_ = 1;
          bitField0_ = (bitField0_ & ~0x00001000);
          usingIcloudForIosOnly_ = false;
          bitField0_ = (bitField0_ & ~0x00002000);
          projectAspectWidth_ = 0;
          bitField0_ = (bitField0_ & ~0x00004000);
          projectAspectHeight_ = 0;
          bitField0_ = (bitField0_ & ~0x00008000);
          timelineFormatVersion_ = 0;
          bitField0_ = (bitField0_ & ~0x00010000);
          projectTitle_ = "";
          bitField0_ = (bitField0_ & ~0x00020000);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_KMProjectHeader_descriptor;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader getDefaultInstanceForType() {
          return decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader.getDefaultInstance();
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader build() {
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader buildPartial() {
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader result = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.projectVersion_ = projectVersion_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.savedWithKmVersion_ = savedWithKmVersion_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.creationTime_ = creationTime_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.lastEditTime_ = lastEditTime_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            to_bitField0_ |= 0x00000010;
          }
          result.jpegThumbnail_ = jpegThumbnail_;
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.needUpdateLargeThumbnail_ = needUpdateLargeThumbnail_;
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.projectUuidLsb_ = projectUuidLsb_;
            to_bitField0_ |= 0x00000040;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.projectUuidMsb_ = projectUuidMsb_;
            to_bitField0_ |= 0x00000080;
          }
          if (((from_bitField0_ & 0x00000100) != 0)) {
            to_bitField0_ |= 0x00000100;
          }
          result.themeId_ = themeId_;
          if (((from_bitField0_ & 0x00000200) != 0)) {
            to_bitField0_ |= 0x00000200;
          }
          result.bgmThemeId_ = bgmThemeId_;
          if (((from_bitField0_ & 0x00000400) != 0)) {
            result.totalPlayTime_ = totalPlayTime_;
            to_bitField0_ |= 0x00000400;
          }
          if (((from_bitField0_ & 0x00000800) != 0)) {
            to_bitField0_ |= 0x00000800;
          }
          result.savedWithKmVerName_ = savedWithKmVerName_;
          if (((from_bitField0_ & 0x00001000) != 0)) {
            to_bitField0_ |= 0x00001000;
          }
          result.savedOnPlatform_ = savedOnPlatform_;
          if (((from_bitField0_ & 0x00002000) != 0)) {
            result.usingIcloudForIosOnly_ = usingIcloudForIosOnly_;
            to_bitField0_ |= 0x00002000;
          }
          if (((from_bitField0_ & 0x00004000) != 0)) {
            result.projectAspectWidth_ = projectAspectWidth_;
            to_bitField0_ |= 0x00004000;
          }
          if (((from_bitField0_ & 0x00008000) != 0)) {
            result.projectAspectHeight_ = projectAspectHeight_;
            to_bitField0_ |= 0x00008000;
          }
          if (((from_bitField0_ & 0x00010000) != 0)) {
            result.timelineFormatVersion_ = timelineFormatVersion_;
            to_bitField0_ |= 0x00010000;
          }
          if (((from_bitField0_ & 0x00020000) != 0)) {
            to_bitField0_ |= 0x00020000;
          }
          result.projectTitle_ = projectTitle_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader) {
            return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader other) {
          if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader.getDefaultInstance()) return this;
          if (other.hasProjectVersion()) {
            setProjectVersion(other.getProjectVersion());
          }
          if (other.hasSavedWithKmVersion()) {
            setSavedWithKmVersion(other.getSavedWithKmVersion());
          }
          if (other.hasCreationTime()) {
            setCreationTime(other.getCreationTime());
          }
          if (other.hasLastEditTime()) {
            setLastEditTime(other.getLastEditTime());
          }
          if (other.hasJpegThumbnail()) {
            setJpegThumbnail(other.getJpegThumbnail());
          }
          if (other.hasNeedUpdateLargeThumbnail()) {
            setNeedUpdateLargeThumbnail(other.getNeedUpdateLargeThumbnail());
          }
          if (other.hasProjectUuidLsb()) {
            setProjectUuidLsb(other.getProjectUuidLsb());
          }
          if (other.hasProjectUuidMsb()) {
            setProjectUuidMsb(other.getProjectUuidMsb());
          }
          if (other.hasThemeId()) {
            bitField0_ |= 0x00000100;
            themeId_ = other.themeId_;
            onChanged();
          }
          if (other.hasBgmThemeId()) {
            bitField0_ |= 0x00000200;
            bgmThemeId_ = other.bgmThemeId_;
            onChanged();
          }
          if (other.hasTotalPlayTime()) {
            setTotalPlayTime(other.getTotalPlayTime());
          }
          if (other.hasSavedWithKmVerName()) {
            bitField0_ |= 0x00000800;
            savedWithKmVerName_ = other.savedWithKmVerName_;
            onChanged();
          }
          if (other.hasSavedOnPlatform()) {
            setSavedOnPlatform(other.getSavedOnPlatform());
          }
          if (other.hasUsingIcloudForIosOnly()) {
            setUsingIcloudForIosOnly(other.getUsingIcloudForIosOnly());
          }
          if (other.hasProjectAspectWidth()) {
            setProjectAspectWidth(other.getProjectAspectWidth());
          }
          if (other.hasProjectAspectHeight()) {
            setProjectAspectHeight(other.getProjectAspectHeight());
          }
          if (other.hasTimelineFormatVersion()) {
            setTimelineFormatVersion(other.getTimelineFormatVersion());
          }
          if (other.hasProjectTitle()) {
            bitField0_ |= 0x00020000;
            projectTitle_ = other.projectTitle_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int projectVersion_ ;
        /**
         * <pre>
         * Description: Project version number.
         * Type: Integer
         * </pre>
         *
         * <code>optional uint32 project_version = 1;</code>
         * @return Whether the projectVersion field is set.
         */
        @java.lang.Override
        public boolean hasProjectVersion() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Description: Project version number.
         * Type: Integer
         * </pre>
         *
         * <code>optional uint32 project_version = 1;</code>
         * @return The projectVersion.
         */
        @java.lang.Override
        public int getProjectVersion() {
          return projectVersion_;
        }
        /**
         * <pre>
         * Description: Project version number.
         * Type: Integer
         * </pre>
         *
         * <code>optional uint32 project_version = 1;</code>
         * @param value The projectVersion to set.
         * @return This builder for chaining.
         */
        public Builder setProjectVersion(int value) {
          bitField0_ |= 0x00000001;
          projectVersion_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Description: Project version number.
         * Type: Integer
         * </pre>
         *
         * <code>optional uint32 project_version = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearProjectVersion() {
          bitField0_ = (bitField0_ & ~0x00000001);
          projectVersion_ = 0;
          onChanged();
          return this;
        }

        private int savedWithKmVersion_ ;
        /**
         * <pre>
         * Description: Version code.
         * Type: Integer
         * </pre>
         *
         * <code>optional uint32 saved_with_km_version = 2;</code>
         * @return Whether the savedWithKmVersion field is set.
         */
        @java.lang.Override
        public boolean hasSavedWithKmVersion() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Description: Version code.
         * Type: Integer
         * </pre>
         *
         * <code>optional uint32 saved_with_km_version = 2;</code>
         * @return The savedWithKmVersion.
         */
        @java.lang.Override
        public int getSavedWithKmVersion() {
          return savedWithKmVersion_;
        }
        /**
         * <pre>
         * Description: Version code.
         * Type: Integer
         * </pre>
         *
         * <code>optional uint32 saved_with_km_version = 2;</code>
         * @param value The savedWithKmVersion to set.
         * @return This builder for chaining.
         */
        public Builder setSavedWithKmVersion(int value) {
          bitField0_ |= 0x00000002;
          savedWithKmVersion_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Description: Version code.
         * Type: Integer
         * </pre>
         *
         * <code>optional uint32 saved_with_km_version = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearSavedWithKmVersion() {
          bitField0_ = (bitField0_ & ~0x00000002);
          savedWithKmVersion_ = 0;
          onChanged();
          return this;
        }

        private long creationTime_ ;
        /**
         * <pre>
         * Description: The number of milliseconds since January 1, 1970, 00:00:00 GMT represented by this date.
         * Type: uint64
         * </pre>
         *
         * <code>optional uint64 creation_time = 3;</code>
         * @return Whether the creationTime field is set.
         */
        @java.lang.Override
        public boolean hasCreationTime() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Description: The number of milliseconds since January 1, 1970, 00:00:00 GMT represented by this date.
         * Type: uint64
         * </pre>
         *
         * <code>optional uint64 creation_time = 3;</code>
         * @return The creationTime.
         */
        @java.lang.Override
        public long getCreationTime() {
          return creationTime_;
        }
        /**
         * <pre>
         * Description: The number of milliseconds since January 1, 1970, 00:00:00 GMT represented by this date.
         * Type: uint64
         * </pre>
         *
         * <code>optional uint64 creation_time = 3;</code>
         * @param value The creationTime to set.
         * @return This builder for chaining.
         */
        public Builder setCreationTime(long value) {
          bitField0_ |= 0x00000004;
          creationTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Description: The number of milliseconds since January 1, 1970, 00:00:00 GMT represented by this date.
         * Type: uint64
         * </pre>
         *
         * <code>optional uint64 creation_time = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearCreationTime() {
          bitField0_ = (bitField0_ & ~0x00000004);
          creationTime_ = 0L;
          onChanged();
          return this;
        }

        private long lastEditTime_ ;
        /**
         * <code>optional uint64 last_edit_time = 4;</code>
         * @return Whether the lastEditTime field is set.
         */
        @java.lang.Override
        public boolean hasLastEditTime() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional uint64 last_edit_time = 4;</code>
         * @return The lastEditTime.
         */
        @java.lang.Override
        public long getLastEditTime() {
          return lastEditTime_;
        }
        /**
         * <code>optional uint64 last_edit_time = 4;</code>
         * @param value The lastEditTime to set.
         * @return This builder for chaining.
         */
        public Builder setLastEditTime(long value) {
          bitField0_ |= 0x00000008;
          lastEditTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 last_edit_time = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearLastEditTime() {
          bitField0_ = (bitField0_ & ~0x00000008);
          lastEditTime_ = 0L;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString jpegThumbnail_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         * Description: Project thumbnail(JPEG).
         * Type: byte array
         * </pre>
         *
         * <code>optional bytes jpeg_thumbnail = 5;</code>
         * @return Whether the jpegThumbnail field is set.
         */
        @java.lang.Override
        public boolean hasJpegThumbnail() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * Description: Project thumbnail(JPEG).
         * Type: byte array
         * </pre>
         *
         * <code>optional bytes jpeg_thumbnail = 5;</code>
         * @return The jpegThumbnail.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getJpegThumbnail() {
          return jpegThumbnail_;
        }
        /**
         * <pre>
         * Description: Project thumbnail(JPEG).
         * Type: byte array
         * </pre>
         *
         * <code>optional bytes jpeg_thumbnail = 5;</code>
         * @param value The jpegThumbnail to set.
         * @return This builder for chaining.
         */
        public Builder setJpegThumbnail(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          jpegThumbnail_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Description: Project thumbnail(JPEG).
         * Type: byte array
         * </pre>
         *
         * <code>optional bytes jpeg_thumbnail = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearJpegThumbnail() {
          bitField0_ = (bitField0_ & ~0x00000010);
          jpegThumbnail_ = getDefaultInstance().getJpegThumbnail();
          onChanged();
          return this;
        }

        private boolean needUpdateLargeThumbnail_ ;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool need_update_large_thumbnail = 100;</code>
         * @return Whether the needUpdateLargeThumbnail field is set.
         */
        @java.lang.Override
        public boolean hasNeedUpdateLargeThumbnail() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool need_update_large_thumbnail = 100;</code>
         * @return The needUpdateLargeThumbnail.
         */
        @java.lang.Override
        public boolean getNeedUpdateLargeThumbnail() {
          return needUpdateLargeThumbnail_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool need_update_large_thumbnail = 100;</code>
         * @param value The needUpdateLargeThumbnail to set.
         * @return This builder for chaining.
         */
        public Builder setNeedUpdateLargeThumbnail(boolean value) {
          bitField0_ |= 0x00000020;
          needUpdateLargeThumbnail_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool need_update_large_thumbnail = 100;</code>
         * @return This builder for chaining.
         */
        public Builder clearNeedUpdateLargeThumbnail() {
          bitField0_ = (bitField0_ & ~0x00000020);
          needUpdateLargeThumbnail_ = false;
          onChanged();
          return this;
        }

        private long projectUuidLsb_ ;
        /**
         * <code>optional uint64 project_uuid_lsb = 6;</code>
         * @return Whether the projectUuidLsb field is set.
         */
        @java.lang.Override
        public boolean hasProjectUuidLsb() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <code>optional uint64 project_uuid_lsb = 6;</code>
         * @return The projectUuidLsb.
         */
        @java.lang.Override
        public long getProjectUuidLsb() {
          return projectUuidLsb_;
        }
        /**
         * <code>optional uint64 project_uuid_lsb = 6;</code>
         * @param value The projectUuidLsb to set.
         * @return This builder for chaining.
         */
        public Builder setProjectUuidLsb(long value) {
          bitField0_ |= 0x00000040;
          projectUuidLsb_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 project_uuid_lsb = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearProjectUuidLsb() {
          bitField0_ = (bitField0_ & ~0x00000040);
          projectUuidLsb_ = 0L;
          onChanged();
          return this;
        }

        private long projectUuidMsb_ ;
        /**
         * <code>optional uint64 project_uuid_msb = 7;</code>
         * @return Whether the projectUuidMsb field is set.
         */
        @java.lang.Override
        public boolean hasProjectUuidMsb() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <code>optional uint64 project_uuid_msb = 7;</code>
         * @return The projectUuidMsb.
         */
        @java.lang.Override
        public long getProjectUuidMsb() {
          return projectUuidMsb_;
        }
        /**
         * <code>optional uint64 project_uuid_msb = 7;</code>
         * @param value The projectUuidMsb to set.
         * @return This builder for chaining.
         */
        public Builder setProjectUuidMsb(long value) {
          bitField0_ |= 0x00000080;
          projectUuidMsb_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 project_uuid_msb = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearProjectUuidMsb() {
          bitField0_ = (bitField0_ & ~0x00000080);
          projectUuidMsb_ = 0L;
          onChanged();
          return this;
        }

        private java.lang.Object themeId_ = "";
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string theme_id = 101;</code>
         * @return Whether the themeId field is set.
         */
        public boolean hasThemeId() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string theme_id = 101;</code>
         * @return The themeId.
         */
        public java.lang.String getThemeId() {
          java.lang.Object ref = themeId_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              themeId_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string theme_id = 101;</code>
         * @return The bytes for themeId.
         */
        public com.google.protobuf.ByteString
            getThemeIdBytes() {
          java.lang.Object ref = themeId_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            themeId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string theme_id = 101;</code>
         * @param value The themeId to set.
         * @return This builder for chaining.
         */
        public Builder setThemeId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
          themeId_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string theme_id = 101;</code>
         * @return This builder for chaining.
         */
        public Builder clearThemeId() {
          bitField0_ = (bitField0_ & ~0x00000100);
          themeId_ = getDefaultInstance().getThemeId();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string theme_id = 101;</code>
         * @param value The bytes for themeId to set.
         * @return This builder for chaining.
         */
        public Builder setThemeIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
          themeId_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object bgmThemeId_ = "";
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string bgm_theme_id = 102;</code>
         * @return Whether the bgmThemeId field is set.
         */
        public boolean hasBgmThemeId() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string bgm_theme_id = 102;</code>
         * @return The bgmThemeId.
         */
        public java.lang.String getBgmThemeId() {
          java.lang.Object ref = bgmThemeId_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              bgmThemeId_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string bgm_theme_id = 102;</code>
         * @return The bytes for bgmThemeId.
         */
        public com.google.protobuf.ByteString
            getBgmThemeIdBytes() {
          java.lang.Object ref = bgmThemeId_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            bgmThemeId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string bgm_theme_id = 102;</code>
         * @param value The bgmThemeId to set.
         * @return This builder for chaining.
         */
        public Builder setBgmThemeId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
          bgmThemeId_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string bgm_theme_id = 102;</code>
         * @return This builder for chaining.
         */
        public Builder clearBgmThemeId() {
          bitField0_ = (bitField0_ & ~0x00000200);
          bgmThemeId_ = getDefaultInstance().getBgmThemeId();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional string bgm_theme_id = 102;</code>
         * @param value The bytes for bgmThemeId to set.
         * @return This builder for chaining.
         */
        public Builder setBgmThemeIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
          bgmThemeId_ = value;
          onChanged();
          return this;
        }

        private int totalPlayTime_ ;
        /**
         * <code>optional uint32 total_play_time = 8;</code>
         * @return Whether the totalPlayTime field is set.
         */
        @java.lang.Override
        public boolean hasTotalPlayTime() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <code>optional uint32 total_play_time = 8;</code>
         * @return The totalPlayTime.
         */
        @java.lang.Override
        public int getTotalPlayTime() {
          return totalPlayTime_;
        }
        /**
         * <code>optional uint32 total_play_time = 8;</code>
         * @param value The totalPlayTime to set.
         * @return This builder for chaining.
         */
        public Builder setTotalPlayTime(int value) {
          bitField0_ |= 0x00000400;
          totalPlayTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 total_play_time = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearTotalPlayTime() {
          bitField0_ = (bitField0_ & ~0x00000400);
          totalPlayTime_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object savedWithKmVerName_ = "";
        /**
         * <pre>
         * Description: Kinemaster version.
         * Type: String
         * Ex: 4.13.3.15838.android
         * </pre>
         *
         * <code>optional string saved_with_km_ver_name = 103;</code>
         * @return Whether the savedWithKmVerName field is set.
         */
        public boolean hasSavedWithKmVerName() {
          return ((bitField0_ & 0x00000800) != 0);
        }
        /**
         * <pre>
         * Description: Kinemaster version.
         * Type: String
         * Ex: 4.13.3.15838.android
         * </pre>
         *
         * <code>optional string saved_with_km_ver_name = 103;</code>
         * @return The savedWithKmVerName.
         */
        public java.lang.String getSavedWithKmVerName() {
          java.lang.Object ref = savedWithKmVerName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              savedWithKmVerName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Description: Kinemaster version.
         * Type: String
         * Ex: 4.13.3.15838.android
         * </pre>
         *
         * <code>optional string saved_with_km_ver_name = 103;</code>
         * @return The bytes for savedWithKmVerName.
         */
        public com.google.protobuf.ByteString
            getSavedWithKmVerNameBytes() {
          java.lang.Object ref = savedWithKmVerName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            savedWithKmVerName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Description: Kinemaster version.
         * Type: String
         * Ex: 4.13.3.15838.android
         * </pre>
         *
         * <code>optional string saved_with_km_ver_name = 103;</code>
         * @param value The savedWithKmVerName to set.
         * @return This builder for chaining.
         */
        public Builder setSavedWithKmVerName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
          savedWithKmVerName_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Description: Kinemaster version.
         * Type: String
         * Ex: 4.13.3.15838.android
         * </pre>
         *
         * <code>optional string saved_with_km_ver_name = 103;</code>
         * @return This builder for chaining.
         */
        public Builder clearSavedWithKmVerName() {
          bitField0_ = (bitField0_ & ~0x00000800);
          savedWithKmVerName_ = getDefaultInstance().getSavedWithKmVerName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Description: Kinemaster version.
         * Type: String
         * Ex: 4.13.3.15838.android
         * </pre>
         *
         * <code>optional string saved_with_km_ver_name = 103;</code>
         * @param value The bytes for savedWithKmVerName to set.
         * @return This builder for chaining.
         */
        public Builder setSavedWithKmVerNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
          savedWithKmVerName_ = value;
          onChanged();
          return this;
        }

        private int savedOnPlatform_ = 1;
        /**
         * <code>optional .KMProto.Platform saved_on_platform = 104;</code>
         * @return Whether the savedOnPlatform field is set.
         */
        @java.lang.Override public boolean hasSavedOnPlatform() {
          return ((bitField0_ & 0x00001000) != 0);
        }
        /**
         * <code>optional .KMProto.Platform saved_on_platform = 104;</code>
         * @return The savedOnPlatform.
         */
        @java.lang.Override
        public decoder.protobuffer.KinemasterProjectWire.KMProto.Platform getSavedOnPlatform() {
          @SuppressWarnings("deprecation")
          decoder.protobuffer.KinemasterProjectWire.KMProto.Platform result = decoder.protobuffer.KinemasterProjectWire.KMProto.Platform.valueOf(savedOnPlatform_);
          return result == null ? decoder.protobuffer.KinemasterProjectWire.KMProto.Platform.PLATFORM_IOS : result;
        }
        /**
         * <code>optional .KMProto.Platform saved_on_platform = 104;</code>
         * @param value The savedOnPlatform to set.
         * @return This builder for chaining.
         */
        public Builder setSavedOnPlatform(decoder.protobuffer.KinemasterProjectWire.KMProto.Platform value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00001000;
          savedOnPlatform_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .KMProto.Platform saved_on_platform = 104;</code>
         * @return This builder for chaining.
         */
        public Builder clearSavedOnPlatform() {
          bitField0_ = (bitField0_ & ~0x00001000);
          savedOnPlatform_ = 1;
          onChanged();
          return this;
        }

        private boolean usingIcloudForIosOnly_ ;
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool using_icloud_for_ios_only = 105;</code>
         * @return Whether the usingIcloudForIosOnly field is set.
         */
        @java.lang.Override
        public boolean hasUsingIcloudForIosOnly() {
          return ((bitField0_ & 0x00002000) != 0);
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool using_icloud_for_ios_only = 105;</code>
         * @return The usingIcloudForIosOnly.
         */
        @java.lang.Override
        public boolean getUsingIcloudForIosOnly() {
          return usingIcloudForIosOnly_;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool using_icloud_for_ios_only = 105;</code>
         * @param value The usingIcloudForIosOnly to set.
         * @return This builder for chaining.
         */
        public Builder setUsingIcloudForIosOnly(boolean value) {
          bitField0_ |= 0x00002000;
          usingIcloudForIosOnly_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Deprecated 
         * </pre>
         *
         * <code>optional bool using_icloud_for_ios_only = 105;</code>
         * @return This builder for chaining.
         */
        public Builder clearUsingIcloudForIosOnly() {
          bitField0_ = (bitField0_ & ~0x00002000);
          usingIcloudForIosOnly_ = false;
          onChanged();
          return this;
        }

        private int projectAspectWidth_ ;
        /**
         * <pre>
         * in version 8 : Must use project_aspect_ratio_width, project_aspect_ratio_width and timeline_format_version of header 
         * </pre>
         *
         * <code>optional int32 projectAspectWidth = 106;</code>
         * @return Whether the projectAspectWidth field is set.
         */
        @java.lang.Override
        public boolean hasProjectAspectWidth() {
          return ((bitField0_ & 0x00004000) != 0);
        }
        /**
         * <pre>
         * in version 8 : Must use project_aspect_ratio_width, project_aspect_ratio_width and timeline_format_version of header 
         * </pre>
         *
         * <code>optional int32 projectAspectWidth = 106;</code>
         * @return The projectAspectWidth.
         */
        @java.lang.Override
        public int getProjectAspectWidth() {
          return projectAspectWidth_;
        }
        /**
         * <pre>
         * in version 8 : Must use project_aspect_ratio_width, project_aspect_ratio_width and timeline_format_version of header 
         * </pre>
         *
         * <code>optional int32 projectAspectWidth = 106;</code>
         * @param value The projectAspectWidth to set.
         * @return This builder for chaining.
         */
        public Builder setProjectAspectWidth(int value) {
          bitField0_ |= 0x00004000;
          projectAspectWidth_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * in version 8 : Must use project_aspect_ratio_width, project_aspect_ratio_width and timeline_format_version of header 
         * </pre>
         *
         * <code>optional int32 projectAspectWidth = 106;</code>
         * @return This builder for chaining.
         */
        public Builder clearProjectAspectWidth() {
          bitField0_ = (bitField0_ & ~0x00004000);
          projectAspectWidth_ = 0;
          onChanged();
          return this;
        }

        private int projectAspectHeight_ ;
        /**
         * <code>optional int32 projectAspectHeight = 107;</code>
         * @return Whether the projectAspectHeight field is set.
         */
        @java.lang.Override
        public boolean hasProjectAspectHeight() {
          return ((bitField0_ & 0x00008000) != 0);
        }
        /**
         * <code>optional int32 projectAspectHeight = 107;</code>
         * @return The projectAspectHeight.
         */
        @java.lang.Override
        public int getProjectAspectHeight() {
          return projectAspectHeight_;
        }
        /**
         * <code>optional int32 projectAspectHeight = 107;</code>
         * @param value The projectAspectHeight to set.
         * @return This builder for chaining.
         */
        public Builder setProjectAspectHeight(int value) {
          bitField0_ |= 0x00008000;
          projectAspectHeight_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 projectAspectHeight = 107;</code>
         * @return This builder for chaining.
         */
        public Builder clearProjectAspectHeight() {
          bitField0_ = (bitField0_ & ~0x00008000);
          projectAspectHeight_ = 0;
          onChanged();
          return this;
        }

        private int timelineFormatVersion_ ;
        /**
         * <code>optional int32 timelineFormatVersion = 108;</code>
         * @return Whether the timelineFormatVersion field is set.
         */
        @java.lang.Override
        public boolean hasTimelineFormatVersion() {
          return ((bitField0_ & 0x00010000) != 0);
        }
        /**
         * <code>optional int32 timelineFormatVersion = 108;</code>
         * @return The timelineFormatVersion.
         */
        @java.lang.Override
        public int getTimelineFormatVersion() {
          return timelineFormatVersion_;
        }
        /**
         * <code>optional int32 timelineFormatVersion = 108;</code>
         * @param value The timelineFormatVersion to set.
         * @return This builder for chaining.
         */
        public Builder setTimelineFormatVersion(int value) {
          bitField0_ |= 0x00010000;
          timelineFormatVersion_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 timelineFormatVersion = 108;</code>
         * @return This builder for chaining.
         */
        public Builder clearTimelineFormatVersion() {
          bitField0_ = (bitField0_ & ~0x00010000);
          timelineFormatVersion_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object projectTitle_ = "";
        /**
         * <code>optional string projectTitle = 109;</code>
         * @return Whether the projectTitle field is set.
         */
        public boolean hasProjectTitle() {
          return ((bitField0_ & 0x00020000) != 0);
        }
        /**
         * <code>optional string projectTitle = 109;</code>
         * @return The projectTitle.
         */
        public java.lang.String getProjectTitle() {
          java.lang.Object ref = projectTitle_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              projectTitle_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string projectTitle = 109;</code>
         * @return The bytes for projectTitle.
         */
        public com.google.protobuf.ByteString
            getProjectTitleBytes() {
          java.lang.Object ref = projectTitle_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            projectTitle_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string projectTitle = 109;</code>
         * @param value The projectTitle to set.
         * @return This builder for chaining.
         */
        public Builder setProjectTitle(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
          projectTitle_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string projectTitle = 109;</code>
         * @return This builder for chaining.
         */
        public Builder clearProjectTitle() {
          bitField0_ = (bitField0_ & ~0x00020000);
          projectTitle_ = getDefaultInstance().getProjectTitle();
          onChanged();
          return this;
        }
        /**
         * <code>optional string projectTitle = 109;</code>
         * @param value The bytes for projectTitle to set.
         * @return This builder for chaining.
         */
        public Builder setProjectTitleBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
          projectTitle_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:KMProto.KMProjectHeader)
      }

      // @@protoc_insertion_point(class_scope:KMProto.KMProjectHeader)
      private static final decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader();
      }

      public static decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<KMProjectHeader>
          PARSER = new com.google.protobuf.AbstractParser<KMProjectHeader>() {
        @java.lang.Override
        public KMProjectHeader parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new KMProjectHeader(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<KMProjectHeader> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<KMProjectHeader> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public decoder.protobuffer.KinemasterProjectWire.KMProto.KMProjectHeader getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof decoder.protobuffer.KinemasterProjectWire.KMProto)) {
        return super.equals(obj);
      }
      decoder.protobuffer.KinemasterProjectWire.KMProto other = (decoder.protobuffer.KinemasterProjectWire.KMProto) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static decoder.protobuffer.KinemasterProjectWire.KMProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static decoder.protobuffer.KinemasterProjectWire.KMProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static decoder.protobuffer.KinemasterProjectWire.KMProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static decoder.protobuffer.KinemasterProjectWire.KMProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static decoder.protobuffer.KinemasterProjectWire.KMProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static decoder.protobuffer.KinemasterProjectWire.KMProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static decoder.protobuffer.KinemasterProjectWire.KMProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static decoder.protobuffer.KinemasterProjectWire.KMProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static decoder.protobuffer.KinemasterProjectWire.KMProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static decoder.protobuffer.KinemasterProjectWire.KMProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static decoder.protobuffer.KinemasterProjectWire.KMProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static decoder.protobuffer.KinemasterProjectWire.KMProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(decoder.protobuffer.KinemasterProjectWire.KMProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code KMProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:KMProto)
        decoder.protobuffer.KinemasterProjectWire.KMProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                decoder.protobuffer.KinemasterProjectWire.KMProto.class, decoder.protobuffer.KinemasterProjectWire.KMProto.Builder.class);
      }

      // Construct using decoder.protobuffer.KinemasterProjectWire.KMProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return decoder.protobuffer.KinemasterProjectWire.internal_static_KMProto_descriptor;
      }

      @java.lang.Override
      public decoder.protobuffer.KinemasterProjectWire.KMProto getDefaultInstanceForType() {
        return decoder.protobuffer.KinemasterProjectWire.KMProto.getDefaultInstance();
      }

      @java.lang.Override
      public decoder.protobuffer.KinemasterProjectWire.KMProto build() {
        decoder.protobuffer.KinemasterProjectWire.KMProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public decoder.protobuffer.KinemasterProjectWire.KMProto buildPartial() {
        decoder.protobuffer.KinemasterProjectWire.KMProto result = new decoder.protobuffer.KinemasterProjectWire.KMProto(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof decoder.protobuffer.KinemasterProjectWire.KMProto) {
          return mergeFrom((decoder.protobuffer.KinemasterProjectWire.KMProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(decoder.protobuffer.KinemasterProjectWire.KMProto other) {
        if (other == decoder.protobuffer.KinemasterProjectWire.KMProto.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        decoder.protobuffer.KinemasterProjectWire.KMProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (decoder.protobuffer.KinemasterProjectWire.KMProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:KMProto)
    }

    // @@protoc_insertion_point(class_scope:KMProto)
    private static final decoder.protobuffer.KinemasterProjectWire.KMProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new decoder.protobuffer.KinemasterProjectWire.KMProto();
    }

    public static decoder.protobuffer.KinemasterProjectWire.KMProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<KMProto>
        PARSER = new com.google.protobuf.AbstractParser<KMProto>() {
      @java.lang.Override
      public KMProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KMProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KMProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KMProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public decoder.protobuffer.KinemasterProjectWire.KMProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_Fade_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_Fade_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_Track_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_Track_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_TimelineItem_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_TimelineItem_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_VisualClip_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_VisualClip_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_ClipRange_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_ClipRange_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_EffectOptionItem_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_EffectOptionItem_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_StringHashMap_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_StringHashMap_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_StringHashMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_StringHashMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_Matrix_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_Matrix_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_Transition_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_Transition_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_AudioClip_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_AudioClip_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_LayerCommon_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_LayerCommon_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_KeyFrame_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_KeyFrame_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_TextLayer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_TextLayer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_HandwritingLayer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_HandwritingLayer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_StickerLayer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_StickerLayer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_AssetLayer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_AssetLayer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_EffectLayer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_EffectLayer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_ImageLayer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_ImageLayer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_VideoLayer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_VideoLayer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_ColorAdjustment_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_ColorAdjustment_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_GroupLayer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_GroupLayer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_DrawingAction_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_DrawingAction_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_WritingPoint_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_WritingPoint_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_HandwritingAction_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_HandwritingAction_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_ColorEffect_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_ColorEffect_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProject_ColorFilter_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProject_ColorFilter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KMProto_KMProjectHeader_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KMProto_KMProjectHeader_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035kinemaster_project_wire.proto\"\246}\n\007KMPr" +
      "oto\032\332x\n\tKMProject\022\037\n\027timeline_format_ver" +
      "sion\030d \001(\005\0226\n\rprimary_items\030\001 \003(\0132\037.KMPr" +
      "oto.KMProject.TimelineItem\0228\n\017secondary_" +
      "items\030\002 \003(\0132\037.KMProto.KMProject.Timeline" +
      "Item\022(\n\006tracks\030\003 \003(\0132\030.KMProto.KMProject" +
      ".Track\022\025\n\tbookmarks\030g \003(\rB\002\020\001\022\032\n\022recent_" +
      "scroll_time\030m \001(\005\0225\n\rproject_ratio\030o \001(\016" +
      "2\036.KMProto.KMProject.AspectRatio\022\"\n\032proj" +
      "ect_audio_fade_in_time\030p \001(\002\022#\n\033project_" +
      "audio_fade_out_time\030q \001(\002\022#\n\033is_project_" +
      "audio_fade_in_on\030r \001(\010\022$\n\034is_project_aud" +
      "io_fade_out_on\030s \001(\010\022\"\n\032project_video_fa" +
      "de_in_time\030x \001(\002\022#\n\033project_video_fade_o" +
      "ut_time\030y \001(\002\022#\n\033is_project_video_fade_i" +
      "n_on\030z \001(\010\022$\n\034is_project_video_fade_out_" +
      "on\030{ \001(\010\022$\n\034project_default_img_duration" +
      "\030| \001(\005\022&\n\036project_default_layer_duration" +
      "\030} \001(\005\022%\n\035project_default_img_crop_mode\030" +
      "~ \001(\t\022\033\n\023project_auto_master\030\177 \001(\010\022\036\n\025pr" +
      "oject_master_volume\030\200\001 \001(\005\022#\n\032project_re" +
      "solution_setting\030\201\001 \001(\005\022\033\n\022project_frame" +
      "_rate\030\202\001 \001(\005\022*\n!project_default_img_crop" +
      "_mode_ios\030\203\001 \001(\005\022 \n\027project_capability_m" +
      "ode\030\204\001 \001(\005\022\033\n\022aspect_ratio_width\030\205\001 \001(\005\022" +
      "\034\n\023aspect_ratio_height\030\206\001 \001(\005\022,\n\naudio_f" +
      "ade\030\207\001 \001(\0132\027.KMProto.KMProject.Fade\022,\n\nv" +
      "ideo_fade\030\210\001 \001(\0132\027.KMProto.KMProject.Fad" +
      "e\022,\n#project_default_transition_duration" +
      "\030\211\001 \001(\005\032N\n\004Fade\022\r\n\005in_on\030\001 \001(\010\022\022\n\nin_sec" +
      "onds\030\002 \001(\002\022\016\n\006out_on\030\003 \001(\010\022\023\n\013out_second" +
      "s\030\004 \001(\002\032\216\003\n\005Track\022\020\n\010track_id\030\001 \001(\005\022\017\n\007v" +
      "isible\030d \001(\010\022\022\n\nmute_audio\030e \001(\010\022\023\n\013clip" +
      "_volume\030f \001(\005\022\022\n\ncompressor\030g \001(\005\022\020\n\010pan" +
      "_left\030h \001(\005\022\021\n\tpan_right\030i \001(\005\022\024\n\014pitch_" +
      "factor\030j \001(\005\022\025\n\roverall_alpha\030k \001(\005\022\033\n\023o" +
      "verride_text_style\030n \001(\010\022\024\n\014text_font_id" +
      "\030o \001(\t\022\022\n\ntext_color\030p \001(\005\022\023\n\013text_shado" +
      "w\030q \001(\010\022\031\n\021text_shadow_color\030r \001(\005\022\021\n\tte" +
      "xt_glow\030s \001(\010\022\027\n\017text_glow_color\030t \001(\005\022\024" +
      "\n\014text_outline\030u \001(\010\022\032\n\022text_outline_col" +
      "or\030v \001(\005\032\307\005\n\014TimelineItem\022\025\n\runique_id_l" +
      "sb\030\001 \001(\004\022\025\n\runique_id_msb\030\002 \001(\004\022.\n\tclip_" +
      "type\030\003 \001(\0162\033.KMProto.KMProject.ClipType\022" +
      "\020\n\010track_id\030\016 \001(\005\0222\n\013visual_clip\030\004 \001(\0132\035" +
      ".KMProto.KMProject.VisualClip\0221\n\ntransit" +
      "ion\030\005 \001(\0132\035.KMProto.KMProject.Transition" +
      "\0220\n\naudio_clip\030\006 \001(\0132\034.KMProto.KMProject" +
      ".AudioClip\0220\n\ntext_layer\030\007 \001(\0132\034.KMProto" +
      ".KMProject.TextLayer\0226\n\rsticker_layer\030\010 " +
      "\001(\0132\037.KMProto.KMProject.StickerLayer\0222\n\013" +
      "image_layer\030\t \001(\0132\035.KMProto.KMProject.Im" +
      "ageLayer\022>\n\021handwriting_layer\030\n \001(\0132#.KM" +
      "Proto.KMProject.HandwritingLayer\0222\n\013vide" +
      "o_layer\030\013 \001(\0132\035.KMProto.KMProject.VideoL" +
      "ayer\0224\n\014effect_layer\030\014 \001(\0132\036.KMProto.KMP" +
      "roject.EffectLayer\0222\n\013asset_layer\030\r \001(\0132" +
      "\035.KMProto.KMProject.AssetLayer\0222\n\013group_" +
      "layer\030\017 \001(\0132\035.KMProto.KMProject.GroupLay" +
      "er\032\372\025\n\nVisualClip\022\023\n\nmedia_path\030\231\001 \001(\t\022\030" +
      "\n\020face_bounds_left\030d \001(\002\022\027\n\017face_bounds_" +
      "top\030e \001(\002\022\031\n\021face_bounds_right\030f \001(\002\022\032\n\022" +
      "face_bounds_bottom\030g \001(\002\022\027\n\017face_bounds_" +
      "set\030h \001(\010\022\030\n\020capture_filename\030i \001(\t\022\026\n\016e" +
      "ngine_clip_id\030j \001(\005\022\025\n\rabstract_crop\030k \001" +
      "(\010\022\033\n\023start_position_left\030l \001(\005\022\035\n\025start" +
      "_position_bottom\030m \001(\005\022\034\n\024start_position" +
      "_right\030n \001(\005\022\032\n\022start_position_top\030o \001(\005" +
      "\022\031\n\021end_position_left\030p \001(\005\022\033\n\023end_posit" +
      "ion_bottom\030q \001(\005\022\032\n\022end_position_right\030r" +
      " \001(\005\022\030\n\020end_position_top\030s \001(\005\022#\n\033rotate" +
      "d_start_position_left\030t \001(\005\022%\n\035rotated_s" +
      "tart_position_bottom\030u \001(\005\022$\n\034rotated_st" +
      "art_position_right\030v \001(\005\022\"\n\032rotated_star" +
      "t_position_top\030w \001(\005\022!\n\031rotated_end_posi" +
      "tion_left\030x \001(\005\022#\n\033rotated_end_position_" +
      "bottom\030y \001(\005\022\"\n\032rotated_end_position_rig" +
      "ht\030z \001(\005\022 \n\030rotated_end_position_top\030{ \001" +
      "(\005\022\020\n\010rotation\030| \001(\005\022\r\n\005fliph\030} \001(\010\022\r\n\005f" +
      "lipv\030~ \001(\010\022\030\n\020diff_av_duration\030\177 \001(\005\022\030\n\017" +
      "trim_time_start\030\200\001 \001(\005\022\026\n\rtrim_time_end\030" +
      "\201\001 \001(\005\022\031\n\020trimmed_duration\030\202\001 \001(\005\022\035\n\024pre" +
      "_trimmed_duration\030\203\001 \001(\005\022\030\n\017title_effect" +
      "_id\030\204\001 \001(\t\022\031\n\020title_start_time\030\205\001 \001(\005\022\027\n" +
      "\016title_end_time\030\206\001 \001(\005\022\021\n\010duration\030\207\001 \001(" +
      "\005\022\027\n\016audio_duration\030\210\001 \001(\005\022\027\n\016video_dura" +
      "tion\030\211\001 \001(\005\022\026\n\rstart_overlap\030\212\001 \001(\005\022\024\n\013e" +
      "nd_overlap\030\213\001 \001(\005\022\016\n\005width\030\214\001 \001(\005\022\017\n\006hei" +
      "ght\030\215\001 \001(\005\022\027\n\016original_width\030\216\001 \001(\005\022\030\n\017o" +
      "riginal_height\030\217\001 \001(\005\022\024\n\013clip_volume\030\220\001 " +
      "\001(\005\022\025\n\014music_volume\030\221\001 \001(\005\0223\n\013title_styl" +
      "e\030\222\001 \001(\0162\035.KMProto.KMProject.TitleStyle\022" +
      "\021\n\010is_image\030\223\001 \001(\010\022\023\n\nmute_audio\030\224\001 \001(\010\022" +
      "\023\n\nmute_music\030\225\001 \001(\010\022\022\n\thas_audio\030\226\001 \001(\010" +
      "\022\022\n\thas_video\030\227\001 \001(\010\022\023\n\nthumb_path\030\230\001 \001(" +
      "\t\022!\n\030transition_item_uuid_lsb\030\232\001 \001(\004\022!\n\030" +
      "transition_item_uuid_msb\030\233\001 \001(\004\022?\n\025unatt" +
      "ached_transition\030\253\001 \001(\0132\037.KMProto.KMProj" +
      "ect.TimelineItem\022\023\n\nbrightness\030\234\001 \001(\005\022\021\n" +
      "\010contrast\030\235\001 \001(\005\022\023\n\nsaturation\030\236\001 \001(\005\022\022\n" +
      "\ttintcolor\030\237\001 \001(\005\022\032\n\021effect_start_time\030\240" +
      "\001 \001(\005\022\030\n\017effect_end_time\030\241\001 \001(\005\0220\n\014start" +
      "_matrix\030\242\001 \001(\0132\031.KMProto.KMProject.Matri" +
      "x\022.\n\nend_matrix\030\243\001 \001(\0132\031.KMProto.KMProje" +
      "ct.Matrix\022>\n\021auto_theme_effect\030\244\001 \001(\0162\"." +
      "KMProto.KMProject.ThemeEffectType\022!\n\024vol" +
      "ume_envelope_time\030\245\001 \003(\005B\002\020\001\022\"\n\025volume_e" +
      "nvelope_level\030\246\001 \003(\005B\002\020\001\022\023\n\nclip_width\030\247" +
      "\001 \001(\002\022\027\n\016playback_speed\030\250\001 \001(\005\0225\n\014color_" +
      "effect\030\251\001 \001(\0132\036.KMProto.KMProject.ColorE" +
      "ffect\0229\n\016effect_options\030\252\001 \001(\0132 .KMProto" +
      ".KMProject.StringHashMap\022\033\n\022transcode_ap" +
      "proved\030\254\001 \001(\010\0221\n\nclip_state\030\255\001 \001(\0162\034.KMP" +
      "roto.KMProject.ClipState\022\023\n\nmedia_msid\030\256" +
      "\001 \001(\t\022\022\n\tcrop_link\030\257\001 \001(\010\022\023\n\nis_reverse\030" +
      "\261\001 \001(\010\022\026\n\rvoice_changer\030\262\001 \001(\005\022\021\n\010vignet" +
      "te\030\263\001 \001(\010\022\021\n\010pan_left\030\264\001 \001(\005\022\022\n\tpan_righ" +
      "t\030\265\001 \001(\005\022\023\n\ncompressor\030\266\001 \001(\005\022\025\n\014pitch_f" +
      "actor\030\267\001 \001(\005\022\022\n\tclip_name\030\270\001 \001(\t\022\033\n\022ios_" +
      "media_asset_id\030\271\001 \001(\t\022\022\n\tkeepPitch\030\272\001 \001(" +
      "\010\022\026\n\ruseIFrameOnly\030\273\001 \001(\010\022\034\n\023enhancedAud" +
      "ioFilter\030\274\001 \001(\t\022\022\n\tequalizer\030\275\001 \001(\t\0220\n\tc" +
      "lipRange\030\276\001 \001(\0132\034.KMProto.KMProject.Clip" +
      "Range\022\017\n\006reverb\030\277\001 \001(\t\022<\n\017colorAdjustmen" +
      "t\030\300\001 \001(\0132\".KMProto.KMProject.ColorAdjust" +
      "ment\0224\n\013colorFilter\030\301\001 \001(\0132\036.KMProto.KMP" +
      "roject.ColorFilter\022:\n\014effectOption\030\302\001 \003(" +
      "\0132#.KMProto.KMProject.EffectOptionItem\022\035" +
      "\n\024includedClipRotation\030\303\001 \001(\010\022\030\n\017upright" +
      "Rotation\030\304\001 \001(\005\032s\n\tClipRange\022\022\n\nsourcePa" +
      "th\030\001 \001(\t\022\027\n\017sourcePhAssetId\030\002 \001(\t\022\034\n\024sou" +
      "rceRagneStartTime\030\003 \001(\003\022\033\n\023sourceRagneDu" +
      "ration\030\004 \001(\003\032\177\n\020EffectOptionItem\0225\n\004type" +
      "\030\001 \001(\0162\'.KMProto.KMProject.EffectOptionI" +
      "temType\022\022\n\nfield_name\030\002 \001(\t\022\r\n\005value\030\003 \001" +
      "(\t\022\021\n\ttext_font\030\004 \001(\t\032G\n\rStringHashMap\0226" +
      "\n\007entries\030\001 \003(\0132%.KMProto.KMProject.Stri" +
      "ngHashMapEntry\0320\n\022StringHashMapEntry\022\013\n\003" +
      "key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\032\035\n\006Matrix\022\023\n\007el" +
      "ement\030\001 \003(\002B\002\020\001\032\364\003\n\nTransition\022\027\n\017captur" +
      "eFilename\030d \001(\t\022\034\n\024transition_effect_id\030" +
      "e \001(\t\022=\n\021auto_theme_effect\030f \001(\0162\".KMPro" +
      "to.KMProject.ThemeEffectType\022\033\n\023transiti" +
      "on_duration\030g \001(\005\022\"\n\032transition_engine_d" +
      "uration\030h \001(\005\022\"\n\032transition_overlap_perc" +
      "ent\030i \001(\005\022!\n\031transition_offset_percent\030j" +
      " \001(\005\022\020\n\010disabled\030k \001(\010\022\030\n\020minimum_durati" +
      "on\030l \001(\005\022\030\n\020maximum_duration\030m \001(\005\0228\n\016ef" +
      "fect_options\030n \001(\0132 .KMProto.KMProject.S" +
      "tringHashMap\022\026\n\016duration_limit\030o \001(\005\022\025\n\r" +
      "allow_overlap\030p \001(\010\0229\n\014effectOption\030q \003(" +
      "\0132#.KMProto.KMProject.EffectOptionItem\032\355" +
      "\007\n\tAudioClip\022!\n\031extra_relative_start_tim" +
      "e\030d \001(\005\022\033\n\023relative_start_time\030e \001(\005\022\031\n\021" +
      "relative_end_time\030f \001(\005\022\037\n\027saved_relativ" +
      "e_end_time\030g \001(\005\022!\n\031saved_relative_start" +
      "_time\030h \001(\005\022\026\n\016engine_clip_id\030i \001(\005\022\020\n\010d" +
      "uration\030j \001(\005\022\027\n\017trim_time_start\030k \001(\005\022\025" +
      "\n\rtrim_time_end\030l \001(\005\022\035\n\025saved_trim_time" +
      "_start\030m \001(\005\022\033\n\023saved_trim_time_end\030n \001(" +
      "\005\022\023\n\013clip_volume\030o \001(\005\022\022\n\nmedia_path\030p \001" +
      "(\t\022\033\n\023original_media_path\030q \001(\t\022\023\n\013media" +
      "_title\030r \001(\t\022\022\n\nmute_audio\030s \001(\010\022\014\n\004loop" +
      "\030t \001(\010\022\032\n\022is_voice_recording\030u \001(\010\022\"\n\032is" +
      "_pending_voice_recording\030v \001(\010\022\030\n\020is_ext" +
      "ract_audio\030w \001(\010\022 \n\030video_clip_item_uuid" +
      "_lsb\030x \001(\004\022 \n\030video_clip_item_uuid_msb\030y" +
      " \001(\004\022\023\n\013is_bg_music\030z \001(\010\022 \n\024volume_enve" +
      "lope_time\030{ \003(\005B\002\020\001\022!\n\025volume_envelope_l" +
      "evel\030| \003(\005B\002\020\001\022\022\n\nclip_width\030} \001(\002\022\016\n\006pi" +
      "nned\030~ \001(\010\022\033\n\023saved_loop_duration\030\177 \001(\005\022" +
      "\026\n\rextend_to_end\030\200\001 \001(\010\022\026\n\rvoice_changer" +
      "\030\201\001 \001(\005\022\021\n\010pan_left\030\202\001 \001(\005\022\022\n\tpan_right\030" +
      "\203\001 \001(\005\022\023\n\ncompressor\030\204\001 \001(\005\022\025\n\014pitch_fac" +
      "tor\030\205\001 \001(\005\022\022\n\tclip_name\030\206\001 \001(\t\022\033\n\022audio_" +
      "asset_id_ios\030\207\001 \001(\t\022\034\n\023enhancedAudioFilt" +
      "er\030\210\001 \001(\t\022\022\n\tequalizer\030\211\001 \001(\t\022\017\n\006reverb\030" +
      "\212\001 \001(\t\032\264\t\n\013LayerCommon\022\022\n\nstart_time\030d \001" +
      "(\005\022\020\n\010end_time\030e \001(\005\022\016\n\006pinned\030f \001(\010\022\022\n\n" +
      "start_trim\030g \001(\005\022\020\n\010end_trim\030h \001(\005\022\017\n\007z_" +
      "order\030i \001(\003\022\030\n\020layer_expression\030j \001(\005\022!\n" +
      "\031layer_expression_duration\030k \001(\005\022\033\n\023laye" +
      "r_in_expression\030m \001(\005\022$\n\034layer_in_expres" +
      "sion_duration\030n \001(\005\022\034\n\024layer_out_express" +
      "ion\030o \001(\005\022%\n\035layer_out_expression_durati" +
      "on\030p \001(\005\022 \n\030layer_overall_expression\030q \001" +
      "(\005\022&\n\036layer_overall_expression_speed\030r \001" +
      "(\002\022=\n\021split_screen_type\030t \001(\0162\".KMProto." +
      "KMProject.SplitScreenType\022\027\n\017split_size_" +
      "left\030u \001(\005\022\030\n\020split_size_right\030v \001(\005\022\026\n\016" +
      "split_size_top\030w \001(\005\022\031\n\021split_size_botto" +
      "m\030x \001(\005\022\016\n\006flip_h\030z \001(\010\022\016\n\006flip_v\030{ \001(\010\022" +
      "3\n\016split_keyframe\030s \001(\0132\033.KMProto.KMProj" +
      "ect.KeyFrame\022.\n\tkeyframes\030l \003(\0132\033.KMProt" +
      "o.KMProject.KeyFrame\022\025\n\roverall_alpha\030y " +
      "\001(\005\022\031\n\021layermask_enabled\030| \001(\010\022\026\n\016layerm" +
      "ask_type\030} \001(\005\022\027\n\017layermask_index\030~ \001(\005\022" +
      "\022\n\nlayer_name\030\177 \001(\t\022\031\n\020crop_bounds_left\030" +
      "\200\001 \001(\002\022\030\n\017crop_bounds_top\030\201\001 \001(\002\022\032\n\021crop" +
      "_bounds_right\030\202\001 \001(\002\022\033\n\022crop_bounds_bott" +
      "om\030\203\001 \001(\002\022\032\n\021crop_bounds_shape\030\204\001 \001(\005\022\032\n" +
      "\021crop_mask_feather\030\205\001 \001(\002\022\034\n\023natural_ori" +
      "entation\030\206\001 \001(\005\022\026\n\ruse_crop_mask\030\207\001 \001(\010\022" +
      "N\n\nblend_mode\030\210\001 \001(\0162%.KMProto.KMProject" +
      ".LayerBlendModeType:\022LAYER_BLEND_NORMAL\022" +
      "\034\n\023render_size_scale_x\030\211\001 \001(\002\022\034\n\023render_" +
      "size_scale_y\030\212\001 \001(\002\022 \n\027videoUprightOrien" +
      "tation\030\213\001 \001(\005\032{\n\010KeyFrame\022\014\n\004time\030e \001(\002\022" +
      "\r\n\005scale\030f \001(\002\022\t\n\001x\030g \001(\002\022\t\n\001y\030h \001(\002\022\r\n\005" +
      "angle\030i \001(\002\022\r\n\005alpha\030j \001(\002\022\016\n\006scalex\030k \001" +
      "(\002\022\016\n\006scaley\030l \001(\002\032\310\006\n\tTextLayer\0224\n\014laye" +
      "r_common\030d \001(\0132\036.KMProto.KMProject.Layer" +
      "Common\022\022\n\nlayer_text\030e \001(\t\022\021\n\ttext_size\030" +
      "f \001(\002\022\017\n\007font_id\030g \001(\t\022\022\n\ntext_color\030h \001" +
      "(\r\022\025\n\renable_shadow\030i \001(\010\022\024\n\014shadow_colo" +
      "r\030j \001(\r\022\025\n\rshadow_radius\030k \001(\002\022\021\n\tshadow" +
      "_dx\030l \001(\002\022\021\n\tshadow_dy\030m \001(\002\022\023\n\013enable_g" +
      "low\030n \001(\010\022\022\n\nglow_color\030o \001(\r\022\023\n\013glow_ra" +
      "dius\030p \001(\002\022\021\n\tglow_type\030q \001(\005\022\026\n\016enable_" +
      "outline\030r \001(\010\022\025\n\routline_color\030s \001(\r\022\025\n\r" +
      "outline_width\030t \001(\002\022\027\n\017enable_gradient\030u" +
      " \001(\010\022\027\n\017gradient_colors\030v \003(\005\022\031\n\021enable_" +
      "background\030w \001(\010\022\030\n\020background_color\030x \001" +
      "(\r\022\031\n\021extend_background\030y \001(\010\022\022\n\ntext_al" +
      "ign\030z \001(\005\022\024\n\014shadow_angle\030{ \001(\002\022\027\n\017shado" +
      "w_distance\030| \001(\002\022\025\n\rshadow_spread\030} \001(\002\022" +
      "\023\n\013shadow_size\030~ \001(\002\022\023\n\013glow_spread\030\177 \001(" +
      "\002\022\022\n\tglow_size\030\200\001 \001(\002\022\027\n\016vertical_align\030" +
      "\201\001 \001(\005\022\022\n\tunderline\030\202\001 \001(\010\022!\n\030space_betw" +
      "een_characters\030\203\001 \001(\002\022\034\n\023space_between_l" +
      "ines\030\204\001 \001(\002\022\027\n\016strike_through\030\205\001 \001(\010\022\027\n\016" +
      "outline_weight\030\206\001 \001(\002\032\234\002\n\020HandwritingLay" +
      "er\0224\n\014layer_common\030d \001(\0132\036.KMProto.KMPro" +
      "ject.LayerCommon\022\017\n\007pivot_x\030e \001(\005\022\017\n\007piv" +
      "ot_y\030f \001(\005\022>\n\025handwriting_frame_ios\030g \003(" +
      "\0132\037.KMProto.KMProject.WritingPoint\0229\n\017dr" +
      "awing_actions\030\001 \003(\0132 .KMProto.KMProject." +
      "DrawingAction\0225\n\007actions\030h \003(\0132$.KMProto" +
      ".KMProject.HandwritingAction\032\212\001\n\014Sticker" +
      "Layer\0224\n\014layer_common\030d \001(\0132\036.KMProto.KM" +
      "Project.LayerCommon\022\030\n\020colorize_enabled\030" +
      "e \001(\010\022\026\n\016colorize_color\030f \001(\005\022\022\n\nsticker" +
      "_id\030g \001(\005\032\241\003\n\nAssetLayer\0224\n\014layer_common" +
      "\030d \001(\0132\036.KMProto.KMProject.LayerCommon\022\025" +
      "\n\rasset_item_id\030e \001(\t\0228\n\016effect_options\030" +
      "f \001(\0132 .KMProto.KMProject.StringHashMap\022" +
      "F\n\020asset_layer_type\030g \001(\0162,.KMProto.KMPr" +
      "oject.AssetLayer.AssetLayerType\022\037\n\027asset" +
      "_item_name_for_ios\030h \001(\t\022\032\n\022asset_name_f" +
      "or_ios\030i \001(\t\022\025\n\rsync_xy_scale\030j \001(\010\0229\n\014e" +
      "ffectOption\030k \003(\0132#.KMProto.KMProject.Ef" +
      "fectOptionItem\"5\n\016AssetLayerType\022\020\n\014EFFE" +
      "CT_LAYER\020\001\022\021\n\rOVERLAY_LAYER\020\002\032\211\001\n\013Effect" +
      "Layer\0224\n\014layer_common\030d \001(\0132\036.KMProto.KM" +
      "Project.LayerCommon\022\021\n\teffect_id\030e \001(\t\022\027" +
      "\n\017effect_strength\030f \001(\002\022\030\n\020effect_variat" +
      "ion\030g \001(\002\032\201\005\n\nImageLayer\0224\n\014layer_common" +
      "\030d \001(\0132\036.KMProto.KMProject.LayerCommon\022\022" +
      "\n\nimage_path\030e \001(\t\022\022\n\nimage_msid\030f \001(\t\022\022" +
      "\n\nbrightness\030g \001(\005\022\020\n\010contrast\030h \001(\005\022\022\n\n" +
      "saturation\030i \001(\005\0224\n\014color_effect\030j \001(\0132\036" +
      ".KMProto.KMProject.ColorEffect\0229\n\017drawin" +
      "g_actions\030k \003(\0132 .KMProto.KMProject.Draw" +
      "ingAction\022\030\n\020chroma_key_color\030l \001(\005\022\032\n\022c" +
      "hroma_key_enabled\030m \001(\010\022\032\n\022chroma_key_cl" +
      "ip_fg\030n \001(\002\022\032\n\022chroma_key_clip_bg\030o \001(\002\022" +
      "\033\n\023chroma_key_blend_x0\030p \001(\002\022\033\n\023chroma_k" +
      "ey_blend_y0\030q \001(\002\022\033\n\023chroma_key_blend_x1" +
      "\030r \001(\002\022\033\n\023chroma_key_blend_y1\030s \001(\002\022;\n\017c" +
      "olorAdjustment\030t \001(\0132\".KMProto.KMProject" +
      ".ColorAdjustment\0223\n\013colorFilter\030u \001(\0132\036." +
      "KMProto.KMProject.ColorFilter\022\026\n\016engine_" +
      "clip_id\030v \001(\005\032\326\t\n\nVideoLayer\0224\n\014layer_co" +
      "mmon\030d \001(\0132\036.KMProto.KMProject.LayerComm" +
      "on\022\022\n\nvideo_path\030e \001(\t\022\022\n\nvideo_msid\030f \001" +
      "(\t\022\022\n\nbrightness\030g \001(\005\022\020\n\010contrast\030h \001(\005" +
      "\022\022\n\nsaturation\030i \001(\005\0224\n\014color_effect\030j \001" +
      "(\0132\036.KMProto.KMProject.ColorEffect\022\026\n\016en" +
      "gine_clip_id\030k \001(\005\022\036\n\026original_clip_dura" +
      "tion\030l \001(\005\022\034\n\024original_video_width\030m \001(\005" +
      "\022\035\n\025original_video_height\030n \001(\005\022\021\n\thas_a" +
      "udio\030o \001(\010\022\021\n\thas_video\030p \001(\010\022\022\n\nmute_au" +
      "dio\030q \001(\010\022\023\n\013clip_volume\030r \001(\005\022\026\n\016playba" +
      "ck_speed\030s \001(\005\022 \n\024volume_envelope_time\030t" +
      " \003(\005B\002\020\001\022!\n\025volume_envelope_level\030u \003(\005B" +
      "\002\020\001\022 \n\024chroma_key_divisions\030\001 \003(\002B\002\020\001\022 \n" +
      "\024chroma_key_strengths\030\002 \003(\002B\002\020\001\022\030\n\020chrom" +
      "a_key_color\030v \001(\005\022\032\n\022chroma_key_enabled\030" +
      "w \001(\010\022\032\n\022chroma_key_clip_fg\030x \001(\002\022\032\n\022chr" +
      "oma_key_clip_bg\030y \001(\002\022\033\n\023chroma_key_blen" +
      "d_x0\030z \001(\002\022\033\n\023chroma_key_blend_y0\030{ \001(\002\022" +
      "\033\n\023chroma_key_blend_x1\030| \001(\002\022\033\n\023chroma_k" +
      "ey_blend_y1\030} \001(\002\022\025\n\rvoice_changer\030~ \001(\005" +
      "\022\020\n\010pan_left\030\177 \001(\005\022\022\n\tpan_right\030\200\001 \001(\005\022\023" +
      "\n\ncompressor\030\201\001 \001(\005\022\025\n\014pitch_factor\030\202\001 \001" +
      "(\005\022\033\n\022ios_media_asset_id\030\203\001 \001(\t\022\034\n\023enhan" +
      "cedAudioFilter\030\204\001 \001(\t\022\022\n\tequalizer\030\205\001 \001(" +
      "\t\0220\n\tclipRange\030\206\001 \001(\0132\034.KMProto.KMProjec" +
      "t.ClipRange\022\017\n\006reverb\030\207\001 \001(\t\022<\n\017colorAdj" +
      "ustment\030\210\001 \001(\0132\".KMProto.KMProject.Color" +
      "Adjustment\0224\n\013colorFilter\030\211\001 \001(\0132\036.KMPro" +
      "to.KMProject.ColorFilter\022\022\n\tkeepPitch\030\212\001" +
      " \001(\010\022\026\n\ruseIFrameOnly\030\213\001 \001(\010\022\030\n\017uprightR" +
      "otation\030\214\001 \001(\005\032\315\001\n\017ColorAdjustment\022\022\n\nbr" +
      "ightness\030\001 \001(\002\022\020\n\010contrast\030\002 \001(\002\022\022\n\nsatu" +
      "ration\030\003 \001(\002\022\020\n\010vibrance\030\004 \001(\002\022\023\n\013temper" +
      "ature\030\005 \001(\002\022\021\n\thighlight\030\006 \001(\002\022\016\n\006shadow" +
      "\030\007 \001(\002\022\014\n\004gain\030\010 \001(\002\022\r\n\005gamma\030\t \001(\002\022\014\n\004l" +
      "ift\030\n \001(\002\022\013\n\003hue\030\013 \001(\002\032x\n\nGroupLayer\0224\n\014" +
      "layer_common\030d \001(\0132\036.KMProto.KMProject.L" +
      "ayerCommon\0224\n\013child_items\030e \003(\0132\037.KMProt" +
      "o.KMProject.TimelineItem\032\347\002\n\rDrawingActi" +
      "on\022A\n\023drawing_action_type\030\001 \001(\0162$.KMProt" +
      "o.KMProject.DrawingActionType\022\016\n\006points\030" +
      "\002 \003(\002\022\r\n\005color\030\003 \001(\005\022\024\n\014stroke_width\030\004 \001" +
      "(\002\022\020\n\010hardness\030\005 \001(\002\022\021\n\tis_eraser\030\006 \001(\010\022" +
      "\025\n\rstraight_line\030\007 \001(\010\0220\n\npath_style\030\010 \001" +
      "(\0162\034.KMProto.KMProject.PathStyle\0228\n\tstar" +
      "t_cap\030\t \001(\0162%.KMProto.KMProject.CapDecor" +
      "ationStyle\0226\n\007end_cap\030\n \001(\0162%.KMProto.KM" +
      "Project.CapDecorationStyle\032.\n\014WritingPoi" +
      "nt\022\016\n\006pointx\030\001 \001(\002\022\016\n\006pointy\030\002 \001(\002\032\303\001\n\021H" +
      "andwritingAction\022,\n\004type\030\001 \001(\0162\036.KMProto" +
      ".KMProject.DrawingType\022\r\n\005color\030\002 \001(\005\022\031\n" +
      "\021stroke_size_index\030\003 \001(\005\022/\n\006points\030\004 \003(\013" +
      "2\037.KMProto.KMProject.WritingPoint\022\021\n\tbas" +
      "eWidth\030\005 \001(\002\022\022\n\nbaseHeight\030\006 \001(\002\032p\n\013Colo" +
      "rEffect\022\022\n\nbrightness\030\001 \001(\002\022\020\n\010contrast\030" +
      "\002 \001(\002\022\022\n\nsaturation\030\003 \001(\002\022\022\n\ntint_color\030" +
      "\004 \001(\007\022\023\n\013preset_name\030\005 \001(\t\032/\n\013ColorFilte" +
      "r\022\016\n\006filter\030\001 \001(\t\022\020\n\010strength\030\002 \001(\002\"F\n\013A" +
      "spectRatio\022\021\n\rASPECT_R_16_9\020\001\022\021\n\rASPECT_" +
      "SQUARE\020\002\022\021\n\rASPECT_R_9_16\020\003\"\313\001\n\010ClipType" +
      "\022\017\n\013VISUAL_CLIP\020\001\022\016\n\nTRANSITION\020\002\022\016\n\nAUD" +
      "IO_CLIP\020\003\022\016\n\nLAYER_TEXT\020\004\022\021\n\rLAYER_STICK" +
      "ER\020\005\022\025\n\021LAYER_HANDWRITING\020\006\022\017\n\013LAYER_IMA" +
      "GE\020\007\022\017\n\013LAYER_VIDEO\020\010\022\020\n\014LAYER_EFFECT\020\t\022" +
      "\017\n\013LAYER_ASSET\020\n\022\017\n\013LAYER_GROUP\020\013\"V\n\tCli" +
      "pState\022\010\n\004BUSY\020\001\022\025\n\021TEMPORARY_FAILURE\020\002\022" +
      "\025\n\021PERMANENT_FAILURE\020\003\022\021\n\rREADY_TO_PLAY\020" +
      "\004\"\210\002\n\024EffectOptionItemType\022\026\n\022EFFECT_OPT" +
      "ION_TEXT\020\000\022\025\n\021EFFECT_OPTION_RGB\020\001\022\026\n\022EFF" +
      "ECT_OPTION_RGBA\020\002\022\024\n\020EFFECT_OPTION_XY\020\003\022" +
      "\025\n\021EFFECT_OPTION_XYZ\020\004\022\026\n\022EFFECT_OPTION_" +
      "RECT\020\005\022\027\n\023EFFECT_OPTION_RANGE\020\006\022\030\n\024EFFEC" +
      "T_OPTION_CHOICE\020\007\022\027\n\023EFFECT_OPTION_IMAGE" +
      "\020\010\022\030\n\024EFFECT_OPTION_SWITCH\020\t\"N\n\017SplitScr" +
      "eenType\022\007\n\003OFF\020\000\022\010\n\004FULL\020\001\022\n\n\006BOTTOM\020\002\022\007" +
      "\n\003TOP\020\003\022\010\n\004LEFT\020\004\022\t\n\005RIGHT\020\005\"\353\001\n\013Drawing" +
      "Type\022\024\n\020BRUSH_ERASER_ALL\020\001\022\020\n\014BRUSH_ERAS" +
      "ER\020\002\022\r\n\tBRUSH_PEN\020\003\022\017\n\013BRUSH_BRUSH\020\004\022\016\n\n" +
      "SHAPE_RECT\020\005\022\017\n\013STROKE_RECT\020\006\022\020\n\014SHAPE_C" +
      "IRCLE\020\007\022\021\n\rSTROKE_CIRCLE\020\010\022\017\n\013SHAPE_CROS" +
      "S\020\t\022\017\n\013LINE_NORMAL\020\n\022\025\n\021LINE_SINGLE_ARRO" +
      "W\020\013\022\025\n\021LINE_DOUBLE_ARROW\020\014\"\213\001\n\tPathStyle" +
      "\022\n\n\006SMOOTH\020\001\022\t\n\005SHARP\020\002\022\010\n\004RECT\020\003\022\016\n\nROU" +
      "ND_RECT\020\004\022\013\n\007ELLIPSE\020\005\022\n\n\006XSHAPE\020\006\022\r\n\tFI" +
      "LL_RECT\020\007\022\023\n\017FILL_ROUND_RECT\020\010\022\020\n\014FILL_E" +
      "LLIPSE\020\t\"L\n\022CapDecorationStyle\022\010\n\004NONE\020\001" +
      "\022\t\n\005ROUND\020\002\022\017\n\013SOLID_ARROW\020\003\022\020\n\014HOLLOW_A" +
      "RROW\020\004\".\n\021DrawingActionType\022\n\n\006STROKE\020\001\022" +
      "\r\n\tERASE_ALL\020\002\"\206\001\n\nTitleStyle\022\024\n\020TITLE_S" +
      "TYLE_NONE\020\000\022\030\n\024TITLE_STYLE_HEADLINE\020\001\022\027\n" +
      "\023TITLE_STYLE_OPENING\020\002\022\027\n\023TITLE_STYLE_PL" +
      "AYING\020\003\022\026\n\022TITLE_STYLE_ENDING\020\004\"\310\001\n\017Them" +
      "eEffectType\022\035\n\031THEME_EFFECT_TYPE_OPENING" +
      "\020\001\022\034\n\030THEME_EFFECT_TYPE_MIDDLE\020\002\022\034\n\030THEM" +
      "E_EFFECT_TYPE_ENDING\020\003\022\034\n\030THEME_EFFECT_T" +
      "YPE_ACCENT\020\004\022 \n\034THEME_EFFECT_TYPE_TRANSI" +
      "TION\020\005\022\032\n\026THEME_EFFECT_TYPE_CLIP\020\006\"\273\005\n\022L" +
      "ayerBlendModeType\022\024\n\020LAYER_BLEND_NONE\020\000\022" +
      "\023\n\017LAYER_BLEND_ADD\020\001\022\027\n\023LAYER_BLEND_AVER" +
      "AGE\020\002\022\032\n\026LAYER_BLEND_COLOR_BURN\020\003\022\033\n\027LAY" +
      "ER_BLEND_COLOR_DODGE\020\004\022\026\n\022LAYER_BLEND_DA" +
      "RKEN\020\005\022\032\n\026LAYER_BLEND_DIFFERENCE\020\006\022\031\n\025LA" +
      "YER_BLEND_EXCLUSION\020\007\022\024\n\020LAYER_BLEND_GLO" +
      "W\020\010\022\032\n\026LAYER_BLEND_HARD_LIGHT\020\t\022\030\n\024LAYER" +
      "_BLEND_HARD_MIX\020\n\022\027\n\023LAYER_BLEND_LIGHTEN" +
      "\020\013\022\033\n\027LAYER_BLEND_LINEAR_BURN\020\014\022\034\n\030LAYER" +
      "_BLEND_LINEAR_DODGE\020\r\022\034\n\030LAYER_BLEND_LIN" +
      "EAR_LIGHT\020\016\022\030\n\024LAYER_BLEND_MULTIPLY\020\017\022\030\n" +
      "\024LAYER_BLEND_NEGATION\020\020\022\026\n\022LAYER_BLEND_N" +
      "ORMAL\020\021\022\027\n\023LAYER_BLEND_OVERLAY\020\022\022\027\n\023LAYE" +
      "R_BLEND_PHOENIX\020\023\022\031\n\025LAYER_BLEND_PIN_LIG" +
      "HT\020\024\022\027\n\023LAYER_BLEND_REFLECT\020\025\022\026\n\022LAYER_B" +
      "LEND_SCREEN\020\026\022\032\n\026LAYER_BLEND_SOFT_LIGHT\020" +
      "\027\022\030\n\024LAYER_BLEND_SUBTRACT\020\030\022\033\n\027LAYER_BLE" +
      "ND_VIVID_LIGHT\020\031\032\211\004\n\017KMProjectHeader\022\027\n\017" +
      "project_version\030\001 \001(\r\022\035\n\025saved_with_km_v" +
      "ersion\030\002 \001(\r\022\025\n\rcreation_time\030\003 \001(\004\022\026\n\016l" +
      "ast_edit_time\030\004 \001(\004\022\026\n\016jpeg_thumbnail\030\005 " +
      "\001(\014\022#\n\033need_update_large_thumbnail\030d \001(\010" +
      "\022\030\n\020project_uuid_lsb\030\006 \001(\004\022\030\n\020project_uu" +
      "id_msb\030\007 \001(\004\022\020\n\010theme_id\030e \001(\t\022\024\n\014bgm_th" +
      "eme_id\030f \001(\t\022\027\n\017total_play_time\030\010 \001(\r\022\036\n" +
      "\026saved_with_km_ver_name\030g \001(\t\022,\n\021saved_o" +
      "n_platform\030h \001(\0162\021.KMProto.Platform\022!\n\031u" +
      "sing_icloud_for_ios_only\030i \001(\010\022\032\n\022projec" +
      "tAspectWidth\030j \001(\005\022\033\n\023projectAspectHeigh" +
      "t\030k \001(\005\022\035\n\025timelineFormatVersion\030l \001(\005\022\024",
      "\n\014projectTitle\030m \001(\t\"2\n\010Platform\022\020\n\014PLAT" +
      "FORM_IOS\020\001\022\024\n\020PLATFORM_ANDROID\020\002B\025\n\023deco" +
      "der.protobuffer"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_KMProto_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_KMProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_descriptor,
        new java.lang.String[] { });
    internal_static_KMProto_KMProject_descriptor =
      internal_static_KMProto_descriptor.getNestedTypes().get(0);
    internal_static_KMProto_KMProject_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_descriptor,
        new java.lang.String[] { "TimelineFormatVersion", "PrimaryItems", "SecondaryItems", "Tracks", "Bookmarks", "RecentScrollTime", "ProjectRatio", "ProjectAudioFadeInTime", "ProjectAudioFadeOutTime", "IsProjectAudioFadeInOn", "IsProjectAudioFadeOutOn", "ProjectVideoFadeInTime", "ProjectVideoFadeOutTime", "IsProjectVideoFadeInOn", "IsProjectVideoFadeOutOn", "ProjectDefaultImgDuration", "ProjectDefaultLayerDuration", "ProjectDefaultImgCropMode", "ProjectAutoMaster", "ProjectMasterVolume", "ProjectResolutionSetting", "ProjectFrameRate", "ProjectDefaultImgCropModeIos", "ProjectCapabilityMode", "AspectRatioWidth", "AspectRatioHeight", "AudioFade", "VideoFade", "ProjectDefaultTransitionDuration", });
    internal_static_KMProto_KMProject_Fade_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(0);
    internal_static_KMProto_KMProject_Fade_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_Fade_descriptor,
        new java.lang.String[] { "InOn", "InSeconds", "OutOn", "OutSeconds", });
    internal_static_KMProto_KMProject_Track_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(1);
    internal_static_KMProto_KMProject_Track_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_Track_descriptor,
        new java.lang.String[] { "TrackId", "Visible", "MuteAudio", "ClipVolume", "Compressor", "PanLeft", "PanRight", "PitchFactor", "OverallAlpha", "OverrideTextStyle", "TextFontId", "TextColor", "TextShadow", "TextShadowColor", "TextGlow", "TextGlowColor", "TextOutline", "TextOutlineColor", });
    internal_static_KMProto_KMProject_TimelineItem_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(2);
    internal_static_KMProto_KMProject_TimelineItem_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_TimelineItem_descriptor,
        new java.lang.String[] { "UniqueIdLsb", "UniqueIdMsb", "ClipType", "TrackId", "VisualClip", "Transition", "AudioClip", "TextLayer", "StickerLayer", "ImageLayer", "HandwritingLayer", "VideoLayer", "EffectLayer", "AssetLayer", "GroupLayer", });
    internal_static_KMProto_KMProject_VisualClip_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(3);
    internal_static_KMProto_KMProject_VisualClip_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_VisualClip_descriptor,
        new java.lang.String[] { "MediaPath", "FaceBoundsLeft", "FaceBoundsTop", "FaceBoundsRight", "FaceBoundsBottom", "FaceBoundsSet", "CaptureFilename", "EngineClipId", "AbstractCrop", "StartPositionLeft", "StartPositionBottom", "StartPositionRight", "StartPositionTop", "EndPositionLeft", "EndPositionBottom", "EndPositionRight", "EndPositionTop", "RotatedStartPositionLeft", "RotatedStartPositionBottom", "RotatedStartPositionRight", "RotatedStartPositionTop", "RotatedEndPositionLeft", "RotatedEndPositionBottom", "RotatedEndPositionRight", "RotatedEndPositionTop", "Rotation", "Fliph", "Flipv", "DiffAvDuration", "TrimTimeStart", "TrimTimeEnd", "TrimmedDuration", "PreTrimmedDuration", "TitleEffectId", "TitleStartTime", "TitleEndTime", "Duration", "AudioDuration", "VideoDuration", "StartOverlap", "EndOverlap", "Width", "Height", "OriginalWidth", "OriginalHeight", "ClipVolume", "MusicVolume", "TitleStyle", "IsImage", "MuteAudio", "MuteMusic", "HasAudio", "HasVideo", "ThumbPath", "TransitionItemUuidLsb", "TransitionItemUuidMsb", "UnattachedTransition", "Brightness", "Contrast", "Saturation", "Tintcolor", "EffectStartTime", "EffectEndTime", "StartMatrix", "EndMatrix", "AutoThemeEffect", "VolumeEnvelopeTime", "VolumeEnvelopeLevel", "ClipWidth", "PlaybackSpeed", "ColorEffect", "EffectOptions", "TranscodeApproved", "ClipState", "MediaMsid", "CropLink", "IsReverse", "VoiceChanger", "Vignette", "PanLeft", "PanRight", "Compressor", "PitchFactor", "ClipName", "IosMediaAssetId", "KeepPitch", "UseIFrameOnly", "EnhancedAudioFilter", "Equalizer", "ClipRange", "Reverb", "ColorAdjustment", "ColorFilter", "EffectOption", "IncludedClipRotation", "UprightRotation", });
    internal_static_KMProto_KMProject_ClipRange_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(4);
    internal_static_KMProto_KMProject_ClipRange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_ClipRange_descriptor,
        new java.lang.String[] { "SourcePath", "SourcePhAssetId", "SourceRagneStartTime", "SourceRagneDuration", });
    internal_static_KMProto_KMProject_EffectOptionItem_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(5);
    internal_static_KMProto_KMProject_EffectOptionItem_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_EffectOptionItem_descriptor,
        new java.lang.String[] { "Type", "FieldName", "Value", "TextFont", });
    internal_static_KMProto_KMProject_StringHashMap_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(6);
    internal_static_KMProto_KMProject_StringHashMap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_StringHashMap_descriptor,
        new java.lang.String[] { "Entries", });
    internal_static_KMProto_KMProject_StringHashMapEntry_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(7);
    internal_static_KMProto_KMProject_StringHashMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_StringHashMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_KMProto_KMProject_Matrix_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(8);
    internal_static_KMProto_KMProject_Matrix_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_Matrix_descriptor,
        new java.lang.String[] { "Element", });
    internal_static_KMProto_KMProject_Transition_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(9);
    internal_static_KMProto_KMProject_Transition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_Transition_descriptor,
        new java.lang.String[] { "CaptureFilename", "TransitionEffectId", "AutoThemeEffect", "TransitionDuration", "TransitionEngineDuration", "TransitionOverlapPercent", "TransitionOffsetPercent", "Disabled", "MinimumDuration", "MaximumDuration", "EffectOptions", "DurationLimit", "AllowOverlap", "EffectOption", });
    internal_static_KMProto_KMProject_AudioClip_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(10);
    internal_static_KMProto_KMProject_AudioClip_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_AudioClip_descriptor,
        new java.lang.String[] { "ExtraRelativeStartTime", "RelativeStartTime", "RelativeEndTime", "SavedRelativeEndTime", "SavedRelativeStartTime", "EngineClipId", "Duration", "TrimTimeStart", "TrimTimeEnd", "SavedTrimTimeStart", "SavedTrimTimeEnd", "ClipVolume", "MediaPath", "OriginalMediaPath", "MediaTitle", "MuteAudio", "Loop", "IsVoiceRecording", "IsPendingVoiceRecording", "IsExtractAudio", "VideoClipItemUuidLsb", "VideoClipItemUuidMsb", "IsBgMusic", "VolumeEnvelopeTime", "VolumeEnvelopeLevel", "ClipWidth", "Pinned", "SavedLoopDuration", "ExtendToEnd", "VoiceChanger", "PanLeft", "PanRight", "Compressor", "PitchFactor", "ClipName", "AudioAssetIdIos", "EnhancedAudioFilter", "Equalizer", "Reverb", });
    internal_static_KMProto_KMProject_LayerCommon_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(11);
    internal_static_KMProto_KMProject_LayerCommon_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_LayerCommon_descriptor,
        new java.lang.String[] { "StartTime", "EndTime", "Pinned", "StartTrim", "EndTrim", "ZOrder", "LayerExpression", "LayerExpressionDuration", "LayerInExpression", "LayerInExpressionDuration", "LayerOutExpression", "LayerOutExpressionDuration", "LayerOverallExpression", "LayerOverallExpressionSpeed", "SplitScreenType", "SplitSizeLeft", "SplitSizeRight", "SplitSizeTop", "SplitSizeBottom", "FlipH", "FlipV", "SplitKeyframe", "Keyframes", "OverallAlpha", "LayermaskEnabled", "LayermaskType", "LayermaskIndex", "LayerName", "CropBoundsLeft", "CropBoundsTop", "CropBoundsRight", "CropBoundsBottom", "CropBoundsShape", "CropMaskFeather", "NaturalOrientation", "UseCropMask", "BlendMode", "RenderSizeScaleX", "RenderSizeScaleY", "VideoUprightOrientation", });
    internal_static_KMProto_KMProject_KeyFrame_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(12);
    internal_static_KMProto_KMProject_KeyFrame_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_KeyFrame_descriptor,
        new java.lang.String[] { "Time", "Scale", "X", "Y", "Angle", "Alpha", "Scalex", "Scaley", });
    internal_static_KMProto_KMProject_TextLayer_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(13);
    internal_static_KMProto_KMProject_TextLayer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_TextLayer_descriptor,
        new java.lang.String[] { "LayerCommon", "LayerText", "TextSize", "FontId", "TextColor", "EnableShadow", "ShadowColor", "ShadowRadius", "ShadowDx", "ShadowDy", "EnableGlow", "GlowColor", "GlowRadius", "GlowType", "EnableOutline", "OutlineColor", "OutlineWidth", "EnableGradient", "GradientColors", "EnableBackground", "BackgroundColor", "ExtendBackground", "TextAlign", "ShadowAngle", "ShadowDistance", "ShadowSpread", "ShadowSize", "GlowSpread", "GlowSize", "VerticalAlign", "Underline", "SpaceBetweenCharacters", "SpaceBetweenLines", "StrikeThrough", "OutlineWeight", });
    internal_static_KMProto_KMProject_HandwritingLayer_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(14);
    internal_static_KMProto_KMProject_HandwritingLayer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_HandwritingLayer_descriptor,
        new java.lang.String[] { "LayerCommon", "PivotX", "PivotY", "HandwritingFrameIos", "DrawingActions", "Actions", });
    internal_static_KMProto_KMProject_StickerLayer_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(15);
    internal_static_KMProto_KMProject_StickerLayer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_StickerLayer_descriptor,
        new java.lang.String[] { "LayerCommon", "ColorizeEnabled", "ColorizeColor", "StickerId", });
    internal_static_KMProto_KMProject_AssetLayer_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(16);
    internal_static_KMProto_KMProject_AssetLayer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_AssetLayer_descriptor,
        new java.lang.String[] { "LayerCommon", "AssetItemId", "EffectOptions", "AssetLayerType", "AssetItemNameForIos", "AssetNameForIos", "SyncXyScale", "EffectOption", });
    internal_static_KMProto_KMProject_EffectLayer_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(17);
    internal_static_KMProto_KMProject_EffectLayer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_EffectLayer_descriptor,
        new java.lang.String[] { "LayerCommon", "EffectId", "EffectStrength", "EffectVariation", });
    internal_static_KMProto_KMProject_ImageLayer_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(18);
    internal_static_KMProto_KMProject_ImageLayer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_ImageLayer_descriptor,
        new java.lang.String[] { "LayerCommon", "ImagePath", "ImageMsid", "Brightness", "Contrast", "Saturation", "ColorEffect", "DrawingActions", "ChromaKeyColor", "ChromaKeyEnabled", "ChromaKeyClipFg", "ChromaKeyClipBg", "ChromaKeyBlendX0", "ChromaKeyBlendY0", "ChromaKeyBlendX1", "ChromaKeyBlendY1", "ColorAdjustment", "ColorFilter", "EngineClipId", });
    internal_static_KMProto_KMProject_VideoLayer_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(19);
    internal_static_KMProto_KMProject_VideoLayer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_VideoLayer_descriptor,
        new java.lang.String[] { "LayerCommon", "VideoPath", "VideoMsid", "Brightness", "Contrast", "Saturation", "ColorEffect", "EngineClipId", "OriginalClipDuration", "OriginalVideoWidth", "OriginalVideoHeight", "HasAudio", "HasVideo", "MuteAudio", "ClipVolume", "PlaybackSpeed", "VolumeEnvelopeTime", "VolumeEnvelopeLevel", "ChromaKeyDivisions", "ChromaKeyStrengths", "ChromaKeyColor", "ChromaKeyEnabled", "ChromaKeyClipFg", "ChromaKeyClipBg", "ChromaKeyBlendX0", "ChromaKeyBlendY0", "ChromaKeyBlendX1", "ChromaKeyBlendY1", "VoiceChanger", "PanLeft", "PanRight", "Compressor", "PitchFactor", "IosMediaAssetId", "EnhancedAudioFilter", "Equalizer", "ClipRange", "Reverb", "ColorAdjustment", "ColorFilter", "KeepPitch", "UseIFrameOnly", "UprightRotation", });
    internal_static_KMProto_KMProject_ColorAdjustment_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(20);
    internal_static_KMProto_KMProject_ColorAdjustment_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_ColorAdjustment_descriptor,
        new java.lang.String[] { "Brightness", "Contrast", "Saturation", "Vibrance", "Temperature", "Highlight", "Shadow", "Gain", "Gamma", "Lift", "Hue", });
    internal_static_KMProto_KMProject_GroupLayer_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(21);
    internal_static_KMProto_KMProject_GroupLayer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_GroupLayer_descriptor,
        new java.lang.String[] { "LayerCommon", "ChildItems", });
    internal_static_KMProto_KMProject_DrawingAction_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(22);
    internal_static_KMProto_KMProject_DrawingAction_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_DrawingAction_descriptor,
        new java.lang.String[] { "DrawingActionType", "Points", "Color", "StrokeWidth", "Hardness", "IsEraser", "StraightLine", "PathStyle", "StartCap", "EndCap", });
    internal_static_KMProto_KMProject_WritingPoint_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(23);
    internal_static_KMProto_KMProject_WritingPoint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_WritingPoint_descriptor,
        new java.lang.String[] { "Pointx", "Pointy", });
    internal_static_KMProto_KMProject_HandwritingAction_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(24);
    internal_static_KMProto_KMProject_HandwritingAction_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_HandwritingAction_descriptor,
        new java.lang.String[] { "Type", "Color", "StrokeSizeIndex", "Points", "BaseWidth", "BaseHeight", });
    internal_static_KMProto_KMProject_ColorEffect_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(25);
    internal_static_KMProto_KMProject_ColorEffect_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_ColorEffect_descriptor,
        new java.lang.String[] { "Brightness", "Contrast", "Saturation", "TintColor", "PresetName", });
    internal_static_KMProto_KMProject_ColorFilter_descriptor =
      internal_static_KMProto_KMProject_descriptor.getNestedTypes().get(26);
    internal_static_KMProto_KMProject_ColorFilter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProject_ColorFilter_descriptor,
        new java.lang.String[] { "Filter", "Strength", });
    internal_static_KMProto_KMProjectHeader_descriptor =
      internal_static_KMProto_descriptor.getNestedTypes().get(1);
    internal_static_KMProto_KMProjectHeader_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KMProto_KMProjectHeader_descriptor,
        new java.lang.String[] { "ProjectVersion", "SavedWithKmVersion", "CreationTime", "LastEditTime", "JpegThumbnail", "NeedUpdateLargeThumbnail", "ProjectUuidLsb", "ProjectUuidMsb", "ThemeId", "BgmThemeId", "TotalPlayTime", "SavedWithKmVerName", "SavedOnPlatform", "UsingIcloudForIosOnly", "ProjectAspectWidth", "ProjectAspectHeight", "TimelineFormatVersion", "ProjectTitle", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
